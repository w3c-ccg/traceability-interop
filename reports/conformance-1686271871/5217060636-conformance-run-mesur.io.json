{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b7c84d44-1877-4ddc-a7a0-220da94ae758",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d0be058b-bf62-4b9b-aa27-43bf04e5a97e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e6fed85-fd2f-4d68-bb9a-240e3d7dce97",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "06e32892-85df-4e0a-8e99-af9a7d97e1eb"
                }
              }
            ]
          },
          {
            "id": "890dd779-926e-4753-9998-126d81b8d8eb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fdd80810-066c-408b-97c1-7f452ece0374",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "663e3017-a521-4447-9c9c-9e93f64b14d7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f59d6310-95b3-40f8-8880-7fb36f970441",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "071ed8ec-9cfc-48a7-95af-a2c65f7669af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ca7bd59-07a9-4427-9202-5034cfc069e5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2112f20-8ee2-48ba-a200-a8023f463163",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ec03de6-ecff-4290-b515-cd9952f32fbc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "926620eb-2142-4157-a15a-b97ad9eb0a48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ef54e09-95c3-4995-afde-d6d091520ba7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "06ae849a-90f4-462b-903b-2f981b082b43",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba5a9534-bebe-4cfd-9713-9955535afafe"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f354ddd-5302-4f3e-ae6b-5318f679e5bd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ec1a6746-b3e1-4528-8df3-5bd714fbf2cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac5c982e-2038-4286-9df6-821b3ee6d914",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d62b532b-28c9-414e-b785-82892f6891fe"
            }
          }
        ]
      },
      {
        "id": "b56e144c-e8b4-4e6e-a081-0f016d82d11b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "14ba0798-ceec-4d9a-a811-6040f0202656",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f1b0711-8480-4153-9e73-57f276c0635d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "34e2f400-9f1c-4753-bcc2-fe4848c48417",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5228961-0f73-441e-84a6-fdd10f944984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "324532d5-81df-4344-ab39-f36ae747e3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1a7642-2b65-4c48-978f-1af2b42564d3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0395c7f-9f8a-476d-ae16-0bdd52aa91b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9353cfd-55ac-44ab-beb7-e3c94f9b09d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1131bae5-7f45-4437-a6f9-d7b2128053fd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79648186-2244-4b34-bb0c-d33bb3b17059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "603f84a3-751a-441e-a993-03a31edefd53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "165a1976-ac43-4b74-93de-80e8421f0cba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7496f2f9-fd3b-4ddf-a313-73f63d939054",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d044bc8-9c87-4a58-8aca-7be2a5481f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b9cabf0-3431-48d6-8ee8-9245aee1b334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d2695c-2069-456d-9705-bd69031585e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f10532e-e130-4273-b396-02c1fe51415b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dceb093a-4183-4bb2-aa47-a2c85fce8385",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8ef5de8-0fad-476d-9ba5-f3d2afaaa7ca",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4af635c8-aa20-47b7-93bf-f74d60da2334",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0a610272-2711-46ee-9482-9b53bbd22f15"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7f9a085-9556-42c6-8c07-4a2558eb7b75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ce6f55da-56c7-4e2a-9615-6bd2dcbf410b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3c55a52-d4b6-47df-8df8-b0b89f8f9027",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e6e907b-6287-43b0-af0d-a5c2cddd2189"
            }
          }
        ]
      },
      {
        "id": "44717c80-f0fd-4749-a3b7-cf053f7211fa",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "dc7c50b5-915c-403f-a710-7b5349d7ef1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07e6f3f3-3791-4f9c-a20e-590745bce942",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f711b73e-cddf-4a6b-ab69-9aaf62f6d9c4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f2a722-a8fa-4848-bfec-f57f9bbaac14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7408c96-02c3-474a-9f97-b660710796bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be94dc9-0aec-42ab-8d49-5f627fb7bb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8763ee11-f1c8-4b34-a8f4-ec1beb526b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee688c63-4a21-44c1-8d3a-f4113decff2f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66509381-2fe5-4fc0-b7db-17dcf6902017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc05a8b6-2782-4d37-848d-d0621ed34531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701281ce-bd89-4d77-9e48-323812ce13c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "174be336-a748-4fb3-8b49-8b769442704d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdabb75e-2ef9-48b5-8037-946d0d7d1776",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf9f447-1b73-4791-9fb8-1368d07cf67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e76b446-e615-4c65-ba3c-bb46c35dc54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077302a5-bc1e-480a-8d9a-70318602f338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b267884b-4f6f-4813-99eb-ff6b434e9ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddeabbfc-e2a2-4554-b7f0-a5b52a09aacf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99c170a-e8e3-4900-9f91-8ca2b7e3e122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d84d97-1256-488e-9d22-4bbb1048e47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e276e06-6cba-4f7d-bfe1-321bc530cf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e7fb1c8-59a8-48fe-8496-5c54c5efe4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d442f3-cfb3-4383-a50f-7b8f47b45feb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1272f8c3-daab-417f-87c5-82ae09fbf1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7529867a-1cb1-4a5f-a243-1aaf02d12d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe2cdc7-0f11-4fc5-8f0d-8f0e9702c366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95f02360-e642-421e-9c0b-e4dc0dc29fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41b6f1f-fdc2-4457-9fba-b6fa3086f26e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2a3b38-32b2-4924-8079-b73ae99a386e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dfcaa8-6a31-4b38-87ec-3dc3a8bb75d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648ebb70-c191-4afb-8646-cc980e2a5f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73d62a95-5adc-413c-83af-13c4bb0163a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7de208-e51f-44e6-b0f6-26a44a7c9cb4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6a6b07-9a65-4c3c-aad8-a197761cae19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e214d74-633a-485d-b610-8f332bca0e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2acfa1-4d40-42bd-9c6d-424a1901f33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13b11e2d-b631-4815-8940-44eb927b0838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0be2b24-a2d7-4812-b5ea-405a0877a197",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2d2e39-82cf-4e34-81e7-37a49cd89e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2e2699-8a5e-4705-b0d5-8f9a08bbef9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e04a79b-c9d8-4e45-9f6b-3e92cc89af99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30974f01-05bd-40f4-8798-f79677a8a636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508efb4a-a30e-4f5f-8c02-7cae7f94142c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ab0ac5-ccf7-4700-92d3-f3001370f460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1212723e-2bb0-4a71-85ec-ec3d39606e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fbb598-6137-4459-8503-d498557a8d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9f414ce-5b59-41bf-9200-1370c9b8aa27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1024a9c1-b6fe-4ac0-a725-72c045e58010",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97dbd885-570d-460c-ab99-1e95a9d0849f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb14927e-32a7-4ee1-bca3-1c12a4d439cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a0c017-9112-4225-82ad-2fadcad1e2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e397663-e299-4b7b-8c2c-68d98595f272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1636cab7-8e6b-4fb6-9f9e-5f46824c03e3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9b8318-a851-4ac4-9f46-eef43d852a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb756ed-68f1-4e07-8de1-4579a1038ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea1c4bc-c61a-405f-99da-ae91e6f3557b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b78d674e-c64f-438d-b890-92be874115f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331fa92c-0e4a-4cb2-a89e-a59b8f31b6fe",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36e0359-e116-4d5d-9bf3-375bc3a47545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947d8600-aaac-45b2-b21a-422647262260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bc58df-718b-4ee3-a8be-246eba1a4038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60492035-0ed7-435d-98f4-c1be573cfdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8ea7dd-d1f3-4a01-99ae-bf029dd9745c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43abb2a-3118-4789-9509-cdfd47aa6a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4481ae-bc27-4d7c-af5b-9dd6287e65a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378c0505-1af7-4e03-bb55-40235ccdc30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c285c79d-07ad-4529-be35-51e693d9d20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7598fc1f-dad0-4d9d-be29-090a162bbca8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c6c0d8-46cc-4de2-b921-bb0025a88365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085fc3fd-058b-4dac-bada-8344a81cfc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af96cda-bb52-4260-a349-ad2411e85fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaad8c47-9897-4c3a-8e50-07bf8c0b6dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cf8a42-cd83-4058-835f-b60e5f461fe4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84e1eba-59d5-476a-94df-80f1eba211cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9536e6-cafe-4e43-aac4-0ae887398f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582dcf68-c31c-4b42-8c24-ae46f5fd14db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6f30996-3449-40d6-a6de-1ba8afc05f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf284b9b-ede6-40e9-bd90-b9566a37f8dc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3913f4e8-10c1-44ba-9f63-b0b6a0c03359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486986e1-d7a2-44bc-8f56-18f019781c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d04d966-0678-462e-9b05-e197f60a528c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "297a3a77-ef4f-41fa-9d60-6706cf97010b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a077ab9c-4127-43f8-a239-ded3a71da78f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef4ae81-3738-41de-9152-56798d44fa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5920022d-b94e-44e2-90e2-7a0ce1c308dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c578d0b7-71fe-40db-94ea-b67dc4270720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b62a6026-9717-4610-9f1e-b182ef13ad26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038031f4-f76f-4e00-a6f9-6479b279bae8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084428d6-7b00-4ade-afd3-63929cdfb6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553c13d2-45ef-479c-b570-1bef1426fb2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c0fd43-bfc2-4290-834e-4bc80581cde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a61449-99cd-45a5-9791-84172c96832b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f39ce1-dbf4-4ada-99fc-22fb757d000f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c10f2e-ec14-47cf-bbb8-5ff15d06fa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75b5e7a-e506-4229-a6fc-c749004a984c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f68d84-c5ed-40be-ab59-c0d456b2a20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c83fb0-f9e8-48c5-a39f-71eff860cc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e7aede-9a38-414b-b698-15bf10a7efc1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfa6c8d-7cdb-4c40-bc10-731bcf1d3386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eddb031-8a27-48e2-8dbb-1666d8b6f135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bc245a-819d-4a7e-ab48-149a2ebc34b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc517bd-08f6-4963-9862-906389f67c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46492ff0-6ac9-4e54-a36d-903bbe356a8d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8291a1f8-acdf-4599-ae3c-12a67f72f281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2414dbd8-93bb-41ec-98e5-be0d464b21af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5b2c68-8dc0-4d2e-b701-a9a5a53f1485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f17ec132-d55e-4b2e-a928-62c098c24402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0fe149-9276-44eb-a780-6c2fd46c9a2d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7121978d-4a10-492b-b0b7-30256c7509ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45c22fa-200b-48fb-bb2a-bab8118fca33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f0c303-3962-480c-a180-a10b60da69db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12857f30-b51d-4eb8-be84-f1bdddd8b196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3703d54a-b325-4964-8e71-b4e709392945",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a584064e-51f3-439e-865c-e290ebf93e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9868b4-2055-462a-bfb8-647336c1f511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab29c629-a088-49a7-bdd5-ffec7505623b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cff74a78-930b-4945-b749-9642f7bdf424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fac0e5-daf6-4aa6-bc08-de5287b765ee",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcd1525-c6d2-4a7e-8a62-e25f33d0b372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c22aef1-8e31-4b35-8012-94f381f35d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780c417e-de81-4769-8a01-fb0a242fd4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa41a1c-76ab-414e-8d5f-d4bc3dbf50db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc291931-5781-4f3b-baa2-845f2d6db286",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f556963-6f69-4d3c-9632-51a6d3c224b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c50b126-2298-4be0-b727-c00fa2323cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0ca3c4-4200-4704-a392-05efe1875809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80e1c4c6-dd6b-43a4-afcf-8f8a033248e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca94799b-0dfa-41e6-a5b0-d3a8ceee4a77",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fe8306-a659-4c12-86b6-b26b44032b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf7f5f6-fe2a-4649-a905-4cf4c3db9c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdc980e-1f5a-4b40-8efa-32568c2c0d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3593575a-6ce4-4146-8735-123752e2e079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611a059e-8f27-4303-acec-6450cd5d4dd2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb37c0e2-37c1-4386-a06b-48e8d4bfbf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493f2b23-3e80-4b8f-86ff-84ffb8d08874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8984ffc-c7cc-4aa6-8bbe-af0e223026ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab8d67a-bfcc-40e3-81d4-4e5238987d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee15d12-2d38-4ae4-8c81-56f6fe51ca79",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa4ec5c-b3a0-4e71-9f03-ba2734c2393f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f39395d-4cd6-471c-b1b5-11fb2729d1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976662dd-b030-4954-b83e-d17a540bf7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84092266-8749-4b95-9595-2c335c32fa78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094d1d77-9448-400c-9ddf-11b1ce6f64c1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5a7a0c-675c-4108-a85f-45fd154ed0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbca073c-f818-4001-aa7d-f1e0b2ec1e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2e4b24-a012-4024-9719-28194ab6f7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bd769b-6d6e-4d5e-84f6-48c4f7785b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d1e2a2-5075-4ecd-b138-55ee06db1a42",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5072c0ab-0cdb-4adf-86b4-063f3a41baa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f496f26-96f5-47ce-9e6e-04b25f140dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1546546-3daa-4afe-9ddc-c72120dc3280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "56aefa7e-606e-4151-97bb-07fdd6f898e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a15b6d-c870-49e6-9d48-cfde5063ed0e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2e37ba-3b60-4c9c-8520-28ad443ac638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d113d5-2851-41c4-a947-316eac37280f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc1b005-f97b-4797-909f-4d8e0d27d60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "928f88f2-002d-453d-82f5-1280754775cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd882ab-ef6f-4f1d-a495-17bfe72088cd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bca852d-ecf9-477c-b7f4-b498b8cabcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3b1e28-1e15-4559-8693-875b4ce86774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a300330f-f5fd-43ab-9630-2637be659ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "402b9cd6-a7e1-47b7-9b3d-3d68658aea57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f12540-4c41-4ebc-9017-03d057bfd4a1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26297cc9-e998-40d8-b1e3-d7402c8659dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa384fa-5464-4b4f-bc9f-6ce0eceaeed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56012471-0590-4dc8-9647-7353efd6f5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23657aca-4a93-4120-b8fc-12ac01b395fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca63f73-9979-448c-8a10-65b43f759f39",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b0faeb-e988-4877-b1f0-9132bd3c5fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eab40b3-aaac-4be0-8270-db5c5d9ce386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d17e8e-adce-4216-9bfd-0e7f48e4f45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01acd9e9-4c20-47d5-af21-1f5ee4e6ad86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e03ec2-8cd1-4dff-9d20-5b545657f693",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca393ea-d5be-4e68-90a1-68ecba86c399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c3b312-9984-4525-9be1-27a9ed20e960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63ee651-3664-48f6-b391-d9f928a3467b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "175e5a2a-6741-4b3b-8c19-62a5f02f6d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a0da1f-6814-48d3-b275-1e97ba55013d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bed63f-c508-44a2-b951-fb729efba71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df7d6431-6fad-48cf-8b6f-6c61d5fa24b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e479a263-910e-45b3-b498-709c7f7a0fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "223e5d62-2570-488d-b705-e69f330531fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08acdc0-c328-4421-a341-50e4b5e93fe2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342b5f1e-2012-490e-b644-00479156a904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53611698-beda-4f86-93ad-5f4872082201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5237cc2b-abf3-4f10-8abc-0baf6c70218c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7587a1-521b-421f-9fc6-c8cd653699e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf94b09-389e-46c9-ac87-1d2fd6bcbe1a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602646bd-b5c6-421d-a39f-56fe3a71eeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55182c8-1395-48a1-bf87-e37013af065c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab066d8-acd7-469c-9b2e-52823911a0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6bca29-a7e2-4fc9-b221-fff43ef9e60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5825c36d-d8ad-45e3-98f9-380182af7922",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d31103-daea-4d40-a690-76180c99ff54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900e1c35-e5e9-4cf9-a89c-b4f76c37bbba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5e2bae-cdac-4b9d-945a-b5b54c669d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "971e7c6e-c732-483b-8cbd-f7b1e3a10b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aec9d19-036c-4450-9090-c5e0e868c236",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17917920-04af-4aff-99e9-1747c58a2090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013bcf32-ca34-49fc-bafd-de6d903bb0e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5921e026-f203-4449-b242-9fb01819ee17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "78a5f518-ce9f-4246-87fa-538b77aaf5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e042937-b8eb-47c9-ae88-9940976e03f0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6eb2e1-ed8d-451d-805f-4330f66c0c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2eeb80-1d18-41dd-a935-2477e6cb6c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fc6033-e90c-448f-bed6-53dd63bfa027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0579f2-3776-4472-b2bb-74c3f7524ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11091064-e063-4819-a7f6-639cace4ce5d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a271450-54d2-44b6-a7fe-7daba50c80d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4da0bba-8e7c-4b07-b570-66b0096a2037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0c7369-e3a6-4bc9-9c0a-5c717c21c8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a92426b6-9f4e-4db6-bc3e-9f4d8c2f3eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c662a9-9535-4240-b125-3540a45e3477",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ba0a04-c112-47d8-808f-a830a9d1c489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa96e92d-a13c-486a-b1cd-db58f9760c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd74a5f-2658-4ad7-bdef-fac6c9e02113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9debf634-6ccb-4419-b528-fed61b8cec79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d4c0fa-9c4e-4f68-84ed-e5806d718dea",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d951205d-9ccd-4815-8692-4f1f724a2d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ba7d3a-c0d0-4f62-b2a1-d2e4a47093f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81f1867-9d87-4948-b6f3-f741634718fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b2e574-849f-402c-845c-670c03b3c8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da3888b-45bb-45ab-b12a-063cd300dd30",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4333ebd9-e262-400d-80c0-ecc7ba857b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5602a5-a85b-4009-acd0-60ee34dd484a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7674cc-6567-4ecb-8b4e-019307c212ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ded9f83-65a2-46ce-bddf-d8692f536744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60475e0-c483-43c0-a775-c16f7f05007e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2061b6-7fce-43ee-96e3-853db48e51be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db76ae6-83cd-41da-9ecb-cf11d670f154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111d9bed-78f0-4655-ba67-66a6bde1e318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac99139-c5ce-4aa6-9bdd-08a610dfc357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7c0ca0-9161-4fa7-923e-f646e16e5ed2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c703bb5c-2b01-47c8-9f11-bb71893e7ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dec581a-a981-4ede-a31b-9590c285a9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a89c3c-8ce5-42db-89be-1fe1e0c33d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8350892c-4fe9-4df0-a412-1f5b5dd12179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa134adf-f031-4cac-8b4e-901f99d9d83b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c190c6-ad30-4f3d-b6bc-8dc92a571d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e577a4-fb4f-4288-8a60-f998f6cdbf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9527b4-08f9-41fd-a381-86f804f4b056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8eae3fb-3b3c-4d69-8bbc-2d38a1a5665c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59285dd9-9858-4d18-baed-57c1daf3210e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2bc8ab-0125-4d62-a579-fc204374e951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc04378-9123-43d5-af7e-9e2ffe02bb3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5d63c2-a44d-4d3c-8d76-50eedd77a63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b94860a-52bf-40e1-a4a7-a192b8ce8817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06485ae-0a18-44b0-9177-460e110d76ef",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20168d61-4643-4eb5-92d5-98aa445704fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fbfa5ac-9d54-4fa0-9cfc-c111bd5a002b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579b8256-b539-4909-a744-245b8c6ec14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6dfc7329-1e59-4c26-8519-cfda42b64993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb80961-8907-4b4c-aa89-cf0e402c11be",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2ce51d-1700-4636-a564-46016a20f069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a544b4ac-3bb3-4cef-b369-a0a9f10636d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92fd5921-47d4-42f1-89aa-58507f1efd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9bcba8b-6056-4f35-bb0d-ac56d043d831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a7aac4-e97c-4d7c-935f-117c1fa53a66",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547746fb-659e-4656-a81a-ecabb56436cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5485f36-2742-4e28-9d3f-c39628d2bf31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef57829-747d-442a-abca-c434fdffad5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae9d607-bcda-412e-b762-aa03ff2f4b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c403de9-c4ac-49fa-afec-15a9b50d498e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0827c44d-e445-4a98-b2dd-2dfb7ee05786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de8cbbe-c986-4742-af7d-0a57d0b13157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0c93f3-eecc-4a73-b7f6-453811a9cb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fffe4e58-4c2f-4403-84e3-4e175c148d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a63dfa-3c6e-4e4b-9156-aebf66903aa7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14701e70-9343-400e-a63d-76236d4f16bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8c0a55-3cd1-4588-a6f1-47d47f157947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495a5d0e-6f06-452e-9544-172eada5176a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c90ea090-62ec-40a0-ac22-1fa1b0d043b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e59d380-a8d2-456c-be14-1f5573a9bc38",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69795fbe-bc41-4808-99b5-2bda2d2823f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d77b24-d265-43e2-8970-155f19935d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ece09e-5c6c-4fc4-b98f-9f9451730191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17cd365a-76fb-4f2c-9c1a-dff7acccd47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0271bf00-d3bb-43ff-8777-9546c5b0e68d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb019d56-70b1-4f87-94ce-1d626f7560d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51100e3f-b2b5-4ee9-86e1-b5af5f69445d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710fb97e-f68c-47e3-9d15-62f09cd70200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e11f6adb-8043-4a51-8996-855d058ed7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80639621-006f-421b-a8a2-09c2b0a46dbb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7c9246-52a4-4246-a402-188c69797a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72e4902-9c4c-4e5c-b85a-2e2c1ed80c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f810667-1eb1-43db-9f0b-efd6e6828576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5a6361-5132-46f1-8e63-c42e910a89c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b20e169-3904-4878-b13b-ac3d1e20c27f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06260e09-5a42-4f75-9eb7-553edf2cf6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee08df39-b6c0-4826-ba2a-3ea56983e6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe3e9a4-1078-47e9-8659-f9bdadad1c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a79eb0-491a-418c-9e91-c0cb7b1ef644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf5f2a8-4001-43bb-85f3-d9a68cf5c979",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ec14bd-132a-4dad-aa27-0dca15c9fe04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a964433-f56e-4d48-90e4-eb2b3a870a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a1258c-50b7-44ef-adeb-05ee8577cf72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6719fc52-2d74-4564-a7e0-ed83cd346260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bd9d98-f71e-4506-8a55-7439c80b9184",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8914c878-1256-4fe3-a6e8-1fdc90660814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a442fd8-0a4d-45cb-9633-bc97d95a92ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b6ea75-fa0e-43da-a196-27bbb4313e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e732ebbc-ba88-43d3-9b59-48b5ebed8d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ac57f2-a7a9-4bb7-8d0a-c36446bc6467",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb31091a-fec9-4646-a497-4c2ee4011383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d435afe-d9e2-4967-95e0-a34ce2696f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b72188-9cf5-4515-8f31-1f78f2b479eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8969a683-518d-49ed-abf5-c687a48365e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de806f52-ceec-4577-86c3-2856a3077f2f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7a2d17-1ef5-4694-99bb-4f708f135da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b88288f-034d-4b88-953a-2760007b6beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd45776-8288-4faf-8318-9becc75c99c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "28995b4f-a5b9-4acf-b2b6-f12e84523aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f208443-038b-44d7-9774-b6e61f50447d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f298dc7-dd3d-4648-8706-e276972bbb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87e20d4-504e-4f5e-9f38-e8ed66d5eb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b331057-2288-4a74-9b99-5548beb9d85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e36031e7-2fa3-4a5f-99b4-987b323415b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407ea7ef-b6f2-46e0-8953-deb9776f5213",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97348390-ae24-4b2c-b14b-1eb41c894bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c144092-64bd-44ee-a863-4c8c544618d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc4dde6-8d02-4ed4-bb28-ec07c007c603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8880e967-a71e-487c-a8a9-b954f338b8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be590aa-44e6-4c24-862c-31a41c07cd01",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6781f0-37b5-45e6-b992-5dd9d2da1685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f87cae5-58b3-4b9f-9d1d-f82d02ea1caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff5b320-f187-475a-95cf-bc692c46bf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "629a2103-bbb6-405d-a63b-4d4390ec2a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03c90e4-a77d-4745-ae92-e5306148cb49",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3167e8-3f21-4d58-945b-0dc34900aa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f7a1ff-2673-4bc7-85c5-28172d42f7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0d1176-f63c-4ff3-908a-21c362d49234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88d197a2-f0a8-44d7-8168-2610ee60d324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0e24c2-bf4f-4514-bbff-b6d4fd2dd000",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f973680-42f2-40ec-be9a-2c7457959824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c9cf68-0058-4cbc-b230-d3e182f70ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92d0497-f764-4d00-add9-f394d19dc96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcbd06e-5fc3-44d8-89c6-c4e9070ede48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8613829f-6fab-4879-86f0-53c457121167",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcd643d-5bcf-4f26-9dcc-3c975262607b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f455ca-7eb9-4246-a9d0-d03cab44ffba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67c9fe6-77aa-407d-8bae-8b55081542da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f465b4ab-e25e-4caa-80a7-9d9e61ee66fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08afcfd5-db91-47b2-81f3-b7a18d3415f5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a480c6ac-60e7-4195-93eb-68ead5509b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a431e346-6655-4369-affb-2a1b6b1811d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8612e163-881e-4838-b077-c6345cd06413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b03e83f-a86c-4269-8ddb-b1d2e10070ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3787a587-3b57-4122-9f55-f495ce242205",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f4f954-7f3a-4d22-b9b6-3bf68660c912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237ea763-57cb-431c-aa1f-fdbcee14cd87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15fd45a-2661-4261-912c-ba418a37707f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd27f23-fa43-4ebd-b1be-2144437d0919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dc4b40-060a-4b72-b35f-3f2b39101b78",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28f400c-2faf-42e8-ab5e-04c82992bd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f67cfa2-5542-4f37-a33f-d70e81f3c129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301f9f55-0d06-4a3c-a242-098e8b4c6f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfef45f5-15aa-43e5-84b1-33a4db9fed77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bb735c-a86c-4365-bb17-f8e1eaeffedc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bd3994-e806-4505-8b2a-de1b988c7d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1516a655-d5ed-45d3-a99b-151f3aabe947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1adced-1d85-48f3-9504-b214ca057e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b18cafb-f9d2-4265-9cd1-4a27e0004e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6155c8-96d5-45de-a169-10eec027a0e6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06397a8-8f15-407d-b9d2-5911e0191a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ff6f4c-ed56-4200-9a15-9513172ba86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802d7f58-ea84-4595-be5b-e8da7efc12e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64eb28f4-6b6e-48a1-9672-0ac61889c467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1653a460-0c4c-4531-b8ee-dfc2b58978f2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a756a458-5933-41a5-8583-cf00d3e685fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad07bb43-13f7-4c62-8048-0c3525e4984a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58209fd-89aa-424a-8a8b-4fa36535cf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a336c6-99be-43fa-a620-dc91a901cf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e2b48e-8b4f-46a5-bfc3-748e30c3ed0d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2efc5e1-091a-48e8-8368-00557feb4420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4543659e-3125-47fa-bd11-6ded017d639f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc31d43-3a42-47f0-b49e-ec2cdb7170ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8bf3a5-2eee-4bb2-a094-083ea906df11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15d6700-c447-483a-9762-76ee74f80f67",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05ac5a4-c626-46c1-bda0-57fee8f8959d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83277b31-edb1-4984-ab9a-60d77ca8217e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d05b17-cee6-4be2-b9be-05ccabad3b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12ba0208-1da5-4125-9127-818374c81b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3830b08-45d7-44f8-be79-5df8f5111cc9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68db6495-b683-492b-a373-659cf77e8db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22bce64c-2951-4219-8d38-28e7d95373a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ed900a-5d61-4ed3-94e0-d4c2b1b2e1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c50d45d3-993d-45de-a96d-09f54cb8d3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768bd7e9-4910-44f4-b2c5-fa0b926b2727",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7b292c-a2bc-4d0c-8634-ab7a9d3cf8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d05ce29e-8bfb-4916-93b6-0bf2d1aa3082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7e0f9b-3e9b-477a-8f3a-770ba155881b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5468e4d8-3ad6-4da5-9cc7-683fa3415325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fde931b-8e40-4234-83ad-73e174046d9c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb083fd-24f2-4261-af05-7cf3cc18e0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b74fcd-c29e-4ca9-8b52-bc06a7f04aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132fa701-7d80-47c7-a738-4eedbcc1ae8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "896d9790-afd9-49d6-b3a9-f53133d90776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f2ce98-47bc-4c78-96bd-b137535b320e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818c2fc1-11b2-436d-985a-8983601427f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f071f9-44bd-4041-a863-7ab9673dbb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d667c1e4-4352-4913-9181-32791c39aa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa8b6d6-ee1e-41f5-8eb6-49ac4c9114d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78741940-116b-49e4-9780-398c44d2307f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97318108-aed0-41e0-9031-7b46ed8505c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ba6637-108a-4cd3-96cb-fe00a274936c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de909f13-0870-47c3-b2cb-c67f9766c3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d122aea-b4d6-48b1-99f1-37ea1b47459f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9520e92-62c9-439a-b6d9-ac99c9eac0c7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c9842e-0763-4797-9ecd-14ae43f07e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a4d88e-887c-4988-8a5b-dcc78f80758b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916d9aa9-352b-40f1-9322-1cde028e07db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d845e2f-bf66-4c12-8932-7cf4120bd9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483d496f-60d7-4340-bcbc-918d0dd58c6e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4448d529-02a8-40fb-af9e-5fcf4458f39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35902f0d-5f69-4094-a5f9-9028d9863c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d160d37d-cd48-4b88-8002-0a9ade7485e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c003c4e-2682-4ff7-a943-bbb4915abc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e65c7a7-04a9-43ec-aa1d-ac9e264402f5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dd1f14-dae0-469e-99da-118fa6d16174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e139cb-e2a7-461e-903a-33fd5d7aee09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78899dc1-fedf-4747-b303-00a17000e7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "800787d0-8baf-49f4-8310-8d1a3c0e6c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d5d19a-71b1-48cc-baec-81b5f9a5f821",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d25fe9-bdd3-4398-a799-ed70bb50f231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201bccd1-6de0-41a3-89f4-12050e45c30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0b4914-8680-43e5-ab3f-b542d5ad0e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "570c0462-83e2-4a74-a9e4-9e7c5db802ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc65f8d-5abc-4e0f-9043-10499b5bddee",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0605eb-92bf-43c8-acf3-370a6bce7b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239c602f-2774-4455-abbc-6e99fd265bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a202b0ed-2a8f-4a5d-b6e1-8720d57765e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85217b32-40e0-44e9-9ad8-eb19d9393c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6b324e-cce5-4839-be1c-9e58f0ba250d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2df46e-e5b1-4b8c-91e0-be27e7e54578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5212d6d-f28a-4068-be47-4844287bdb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41026dc-5fe1-444e-9cb9-c8b5c6d3c8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "79e2b1c6-5c54-44c8-816f-aab557082287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56080b8-eae8-4cb0-8684-895a6da6f691",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac99ee9d-f460-43ad-b866-a70bbf4fe012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de83a56-1523-4b90-b141-7ec16a372a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd30835b-42df-4e8b-9d92-9bb12c83e595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d369b8b-a59b-4a6e-b147-5c1b7d5976e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10acc45f-f1f7-4924-8a3f-a768aaf4a556",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd0e4d7-0c5c-4859-ac6f-a2ac3fcf3879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e3c709-3b6b-452c-8bdb-106597b379cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0894aa95-d09c-43f4-a83c-8014ee597b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "94080511-bd10-4aab-a5a8-da82d2e1d382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46fd253-9f4b-4a16-87c2-3ffbdbe68911",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0faf16-49d0-4ced-ab99-71714f93854f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56ea058-8360-433c-ab4c-60fb28d7d4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973af251-d1bb-4d3d-8a68-58908ac756bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9160edd-1b32-40ab-aaab-9a6257c710e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00eed02c-deba-4abb-bf27-6e1be6a9535e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e34be8-dbae-4ff7-98cd-5053a2e5ffa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedd0de2-8e0f-44ec-b210-42594e3e75c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e67d74-6611-45e6-b746-7505936a7ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "32f9e76c-a9ed-4fef-babc-75f6a2254c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ded9d9e-0558-4358-ac50-3bb664110b0b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6becf10c-2f7a-4bb0-b518-85134d0d8908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "efa1278d-5c6d-4cce-b104-2dca995706ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8224c953-3443-49a1-acb6-00aefbd4b872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b194518-57ca-4810-8fd1-f6ba85ce9d3e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c0c3d070-c6cb-4a23-b462-3f15efdd57af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7cf2dbe-4487-4c08-b270-82bfcda39c5f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846c8eff-0956-4af4-ac19-1f85cb470185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "725cca4a-7108-4be9-a858-ca850c5720a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f584cbc5-1f66-41ca-a3d7-f95998617208",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b45639cc-b049-4bfb-8d06-9a1e58ebd9f7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b7d89bb-29d5-4ad4-b889-b24d8df388df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90485193-de5f-447d-9f8f-394e97e03901"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e515aecd-81e0-47e1-9719-79033089f484",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83aac3bf-9f43-42aa-aa48-aa60ba54a774"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79622ee7-d0c8-48da-8d42-f31ec93f8b45",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a8261706-7aaf-4f78-99af-7c899c55e7d2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd9c9385-21ea-4a35-9f0c-b9623a7fb50c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e17c0d83-b9e5-4b8d-be29-24c8e87cfbe0"
                }
              }
            ]
          },
          {
            "id": "b4399ee8-2853-42fa-9536-62c280e09448",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e267962-f87f-452d-ba16-56cdff8a222a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3d6e6df-759b-4b02-9c19-aa223c011837",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21e4f4d1-0cd9-4800-ac68-82fde1d12c64"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "084f06d5-8fbd-454e-9fe0-4bbab9365207",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7609a6b0-289a-48d1-844b-f8136fda7a93"
                    }
                  }
                ]
              },
              {
                "id": "9970d9e3-a20b-4e1a-a195-d8c38982a321",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df29d23a-4fa8-4424-8bef-832c8405a5f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc36089e-302f-4a41-a78b-9778641ccd53"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "670cb23f-8e26-47da-ad41-2733571c02e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "071580ee-aaed-4f46-a3b5-91a951dc9bb5"
                    }
                  }
                ]
              },
              {
                "id": "24110645-e819-4b58-bdeb-43896f46df8b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e62ad44b-5990-4bb2-b508-2974652a5e94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f044258d-d62e-461f-8540-112b64aba358"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5c2806f-25c6-4f99-b592-2879c9b80ed0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1716b18-9182-4b54-b312-3365c22359b2"
                    }
                  }
                ]
              },
              {
                "id": "5f69f09b-f025-4dd6-8ec7-fb708242aeff",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71f04308-1820-4033-8968-bb3081191350",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a2f2118-d923-40da-b8e7-ebcf0b07081e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6d16a3c-27db-41c9-9008-a08786e3eb9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6db35ba8-0f7e-40aa-b3d3-9526a4e86bfa"
                    }
                  }
                ]
              },
              {
                "id": "953f1b97-b57f-483a-a5b4-9bec2da1385a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7174f0e-5fcd-4023-b13c-fb84f17a142c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4cde0922-20e7-4332-8b04-29c2c6a7b878"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c598c56-9011-41e9-b4d1-1d83905b2ed0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "56c56776-598c-40c5-a188-eb1a63550e3a"
                    }
                  }
                ]
              },
              {
                "id": "6b344d9d-b675-4507-8575-25afddb9f831",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d75cda34-acd4-4e1e-adb3-ad3c197d366a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d487196c-1393-4639-a0db-47cdfe49b974"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d17dda9d-e710-4974-95a0-fcee9c8dec31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c3892839-c804-4a06-9e3e-d2c4765c8a0c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac5f7179-01ef-41b3-8b2b-e9a7a1d0254b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86e8648f-0125-4aec-8f27-dd11989945de"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "818e4700-4876-4863-8f1d-f1a93b2f7a20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0454301-3cd1-42f3-9893-182b563c5afb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "884d94b3-e6aa-4f74-8a8e-82098cee1092",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "69f85766-3a0c-4b30-87e3-0e49f776f15f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84514321-b7df-45df-899e-ed341b306825",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b3f1a77-71d5-4a6e-9f2e-c7ccc49bad94"
            }
          }
        ]
      },
      {
        "id": "638a063a-37c2-4175-b6cb-da4be0ffa838",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "eb973a54-c33a-44a1-ae2f-c13e369e698d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "deb7e067-b65b-4df4-ba9d-054f7c1bfea1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "96d2e18a-7b21-4148-84bd-baebd7138102",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e90593-536c-4a34-9f41-ff0cb5c713f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7eb2f8-8b9d-4353-8120-f0cd20053318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f19e6f-a686-4599-9509-096315402157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e71a18de-131e-4c7c-a526-37ed54da2b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12d81d3-50a3-487d-bb8c-79337feaf7a7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976d5ecf-818b-4fde-b1ca-da1b8320e1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de2bdd2-1b63-4e2a-8420-c76c997ae047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ac19a8-90c8-4157-859a-0c47e5f5c816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "798a05c0-1145-4d14-8a35-7968e281c38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e783bbd-3d05-40a7-82f0-c5065d3ac044",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95eae160-8d09-479a-8cb8-c74cb08cd367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01d13ea-9110-4c7b-8261-1fd6711b2310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d860d2-d3b2-4761-8c2f-ff02d0abdda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67c6e713-5a84-44e4-abcb-d027311823b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abbecff-974d-4e6c-9e08-bb7bcdabfe71",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048328cd-b09c-4187-b47f-546f08a4682e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638ffe0e-d6c8-4662-bf58-e1a7e20630c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9d9dbd-0851-417e-bab7-a6e8b8526b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb38b06-c259-4bfe-bdcf-3ae8dde950f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de39efd3-a393-4fae-955b-8f3fe72844a3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fa598a-3e0a-4e6e-be18-0e3a7d8dab98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf38717b-6005-49e8-b77f-fc7d44c78c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abe6bb8-6c56-42bd-bd71-e63107b24f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cc0c16-89c5-4a04-ab20-2a849e8a870c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c869dcaa-1af5-4dc9-ad95-c97448e54002",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9d6305-5636-4400-a579-13348901d765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83d32f9-904d-4994-95b0-e55c00372632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf04f4a-715f-415f-af91-f80e4a71a0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "191ee713-ce44-430a-a289-9b4910201798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29ab5ba-8127-460c-b9c4-b952ca681abb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c288e4f9-663f-4798-91b5-0fece0b49b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bf2ecf-43f8-4115-b955-d25ff2436c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94de81ed-f6ac-4361-9888-101606327b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a04371a-94d6-49bc-ad6f-72a9f6194cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd46c536-52d1-4ce5-916b-ea6f9124d07a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ef68ff-28f0-4b23-997a-fef7e3cea6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5810f30b-0b71-4d3a-8974-fe3ff987dc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac57ad5-fa6b-4bdd-8ba7-353773fa3e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f07e7d-f427-41b5-86fc-277d5eedb8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d083cb-e3a3-417e-a839-61d4c268fbec",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c490bae2-0cc6-478b-8625-5c51792166cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c5fbea-fef0-4fbd-8e34-be33479a2d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9657f2b0-d259-4d5c-9cf0-8fd0f9ba1704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98bcdbca-b7f4-49e7-8cab-b43eb61596a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422a3cfa-8d1d-4f7a-b629-96f438e3ffcf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5976bbf5-7743-4b51-b14e-04eac3ef34fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c45ed3-eb3b-4497-a5af-d16943a653ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d5ccab-db92-4bb3-b7b5-e136e62face8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4efd01b-e44b-40c7-be3a-65180b280afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4917226-0b39-40c5-a921-b931857855b8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2214660c-7b8d-4dd7-bc44-358009632c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc791dab-4424-46a6-a3cb-a3a56d070e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be43ca9-3b72-446c-81e7-7434c88612b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc5b3df-2cc0-4fb5-a3b5-858f808e0adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5102c0c8-3448-4689-8d63-eff9f1b8f15d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a813288-b028-4a83-92bc-cc3731a10122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9fbb007-ae9d-4a31-8eb1-471602928d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4221a405-03cb-4a1a-b81d-182307df9bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "430aea6c-f696-4ed0-b267-4dda51349af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc530b60-bf77-474f-8348-208395cd4b89",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea446e0-bafa-40b2-bce7-0a3c0429d384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3414e8d-a676-4d47-b98e-3f7f1b40da68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf7dc5a-3b5a-4071-a21a-736e60a2d99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7bf8a5-7735-4762-b1a5-d8bfbd42bc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387257e5-39a0-4df3-8bd4-30056fc86396",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62ace94-0f60-4cce-93fd-0f5d2c69f349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928636a8-8d61-4da2-a556-e9055bf9b1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f928e0d-d772-41f2-ac2e-4dd8d080a7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0f7f78-c934-41b3-b934-01075edddff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae49c77-9fff-4366-9258-fd2d6e80399a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a4765f-a4d8-4e63-904d-8911fd05ab71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c05228-c50e-4045-bb7a-9a938b68503e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155f3cac-384e-4ddd-825f-91b6955df2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "13d1cd49-0db8-4922-bde8-367a64b3083b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b890f8bf-ee8f-4f90-92b3-b09fddaf9329",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d305fc7-0a02-4635-a09c-e71e3c80a266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b315890-0676-487f-8740-e6bc2920b4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02094aa-0f6d-4610-9bf1-ebceeed42fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d653b2f-969a-4e45-a1fc-a4ccc09d58f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c33bf4-cccd-46e4-a535-c42650aa2438",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eed8e3f-e8fc-4bc9-9c36-c222e7107d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aecf58f-6cc4-4380-9747-207b56482c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb86faa7-da14-4233-87f9-1729bc98ee8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a45d9290-b049-4814-9acd-ae0a12735bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9df6a2-d3d2-4343-a294-5f270e574bfd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcb96b9-d680-4565-bf1b-88aaaecf3598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be3cf6b-6911-40a8-8b33-5e0af5c20db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41923ce6-5a37-4b57-a8f1-360c3a2437be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "afd6e4e7-c928-4aa8-bd40-86d0d8c45de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148ff268-f882-4f31-a007-fc10c529a765",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa54df4-b008-4070-8f0b-8c7c6332f51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cc550b-32dc-420f-9606-b3a92aba2b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a4ee28-30e2-4d7d-9f43-2b62df28dfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff085ad-7858-4e45-b9ff-5c3c6c104f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5359d1-6035-478e-a757-71e7c0e41444",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7910b573-32ce-4155-b0cc-77e2ebf5016b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c79f60-0c06-467c-ba48-823f28175fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126cbd1b-8ba6-47d0-b81c-3ecc83282ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aed3ccd-c0ff-40c2-a788-f1e7227da30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f63f9af-fe17-4e5c-a634-a37ef800d0f7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714fdbe6-55ba-4956-af30-2c46b5fdaec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dae96be-fbc8-4a0b-9fb2-1f279b17f6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9af1be6-23ad-4798-9bfb-83df371b7c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9e02174-b5dd-4ded-b310-5bb3fd4a2bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0f548d-9c04-46ff-9600-8f1b5ff15c9c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235ea4f0-beef-437d-b266-f5f761d0b530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f580a5b-bc8f-4a99-80ba-824362d14c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624aaafa-7813-46d0-a198-2f0ff5442e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c80ba804-d875-4eab-8e11-2638f590fe5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68483e5-a598-48c8-b08c-77cae643863c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd5066f-b64e-4167-912b-acebec4ec251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8f3612-7f18-4db4-9c91-00a783e1f1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34910e53-3252-4a9c-ae40-b25ced706465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ea40a4-f520-48e9-9b61-016ac6a27800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c79fe58-9b8f-4a05-bc04-7ce3ae329302",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b8d503-47b7-437e-9cd0-9939b5042f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7bb01d9-f41e-4d08-b9d4-c1446b53a448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f24f44c-703d-4518-8ed7-a2193b155e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849f0bb4-8325-46b3-acc3-8c82cc369c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd1bab1-698a-4ff8-befa-fe87e8439326",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d49adf1-48d3-4428-8db6-5d7988f53c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a79a69-7a42-41cb-a954-b682aa49b82f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e805b4c-bdd1-4e09-b1db-84ca7ad2ffaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "138dd1e7-d08d-42dc-b592-1d98b9427517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9ba046-34c1-40ce-880f-06fb6ebea68f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c6156b-ff1f-43ff-85fa-3a368c5a27b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db42f1d0-66f4-4397-8d26-a0a8949f6d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ace4bd-d2e8-4387-a979-1a1169d3db8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7523891-3a17-481c-9197-c27c57c9e12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e264289-b216-4b4b-bb1a-ca08d11ca4c4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a1f956-629a-4caa-bcbd-ecfdd75f7e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d876b49-b2e3-465d-9837-c1d59d616e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e16206e-c083-4d01-9644-bf6ed6dc7344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea99683-878f-43cb-b5d1-a49fbded99f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def499d7-4181-4021-8a67-db188958ff61",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c734ac-ceb4-4559-99ec-201453385f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b559e1-5c8f-4aaf-a550-e58e74078ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1472b661-e8db-42db-a00b-0132ae435ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f301824d-e801-4df4-9be0-f73059bb9ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0156481-0aab-4c23-905d-9839419656be",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240f36da-cea2-40c3-9711-5e722cf3f3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270a9d8d-8be5-417a-82b7-7f78863ed3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ff30d8-1dde-4ba3-bc27-908557a2b169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cce479db-543d-4dd7-a6e1-64f0c39579cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb50c38-b974-4a17-9038-568ac3849a55",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d890630b-2195-4aba-8716-d08747fcb987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab5e4c5-3568-418c-965a-fb6acf389e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505bf115-23b4-4e1b-8eec-635d1dd8abf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39f5bfb6-d90d-443c-aeb0-a8868efc506d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cf0b7a-8102-4e37-8296-2354ce33080a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833cc28e-ae38-4023-bfc4-e135383f214f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808b2ce4-048e-466c-bf6a-6b09322400a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72139773-ec67-4371-ac96-9e0ce9c18af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6766e402-9261-4b4c-835e-6fbab0a97b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c4f35c-009f-40af-a778-7ad628043901",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572913cf-168c-4699-8517-9813e7a28899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92db9e07-7b2a-4ee0-a6e0-333cdcbaa761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55622e68-7e99-42f2-bf19-4a24cb475484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55e9ddee-5db9-4fb3-8565-728fe0893c10"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c99699d-1648-410f-b883-558ee31204da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f24e202-3830-4d64-b3f4-d234f68c4896",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b79162d-57ba-4d87-b696-9961ff4a607e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb138d3-f6f1-4b21-9788-70de622cc1aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4a587f-2c23-400c-a187-3b26ddfbb1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b27b617b-553c-42d9-965e-2264c544afb9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bd52cb9-d6ba-4a02-8730-8bab1f484640",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c439bc69-0955-4560-8a4d-a55d349ca686"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8586bc4a-a05e-48f0-ae06-90192a51f18a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42605c91-77c8-4cdf-830a-89bb4bb5c507"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0dcddaa9-149d-4cba-b5a8-70a4777cfaf5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ca26e9c0-3e2d-4f35-b00d-9129b8b58027"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "193250d7-d9c4-49f6-80e4-535784fe8617",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc6d1860-5709-499e-bade-4be4773e98d2"
            }
          }
        ]
      },
      {
        "id": "52f375ab-ffbd-4dba-8b73-a445a836b25e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2279a37b-208f-4bab-8f27-8e88857da31e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3eed3081-54da-40ea-9972-42c18416ebd1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66c61d4e-1b8d-45a8-aa46-f2da510c47a4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11a86a2-52b2-423c-9d4b-99d169258a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128274b9-ada3-43ab-8b25-a8e9ffab3dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde79eae-c9a4-4e28-91df-4941bd900f0b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3183375-a175-4d35-9156-a4730d73e3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6423c1-b8aa-42ea-b752-504556784f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6205ce5a-029f-4b7d-9dff-480e99616c08",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a428bc07-8887-4f72-a3e6-4e1875e9d3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfc323f-f0ce-4d34-b54e-32c3946f738a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7df46f-2133-4a03-8c01-099fe4b76431",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db4ffb5-c54d-4340-8c16-a4752df3f739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1162fc3-6173-426c-ae93-7fb23eee209f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0debcf7f-0083-4fd2-82cd-e543bb1e850e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503c59f5-9510-4148-bf11-cf42e482a34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d8c42b-2dad-4e80-be06-5538c5e8ddb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d79fe2e-6f01-4eaa-8049-0853873de145",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15360479-afba-449a-9c33-eb706168f85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84930c8-cd85-4d07-960c-dca4566f6f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf612d5a-c85b-4437-82b3-cfe9d13b661b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4777ae50-2a0f-47e7-bbc9-1557b476761c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69343b47-b5cd-45d3-8b39-6d192ef8aa91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057fa791-4ab7-4952-a2ac-be53101585f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70200d5-48a7-48af-a936-405acb4d700b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6ef189-a0c4-4fc5-a272-c820dce39bbc",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a126da-c6a6-4d86-a961-3acc0f8edcb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b31bdf5b-24d0-46b4-9adc-a41d2f94665b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8438db5-b825-44d5-8ae4-d050c6fe19e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef808ee8-c3ba-4c3d-8268-4460073f8b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b1c956-61f4-486c-b0d8-0dfc12d56587",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dea1e66-c315-41c8-9498-474d12ff1abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb16596-7851-4a57-afc6-bc6db0ed3c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4131273-ba4c-48c6-bc0e-43613d3ed86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae685e48-b5d0-47e3-94f7-6a83fd07e62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f588c17-61be-4e74-b8b9-ec0dc9d10a8d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488390ae-93ab-48bd-8936-1f401b8d45be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46ddd182-5384-476c-93ff-6e1af9161906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63479afc-2214-4416-8637-2b09ba4765b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36694a27-a022-4835-9991-4e52229346cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecef639-1ce4-4c7d-b781-114f001a3dd1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f41d59-1d49-4936-a33a-b4e7c3e0011f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296004d1-ed44-4f06-a420-ef067028d13e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8f6011-6761-41d8-9190-89f65ee7a2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46cffe76-63ce-4fa9-b089-26de0faa5d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745efa67-7027-4e68-b282-8b97ea4790fd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3446b792-b2ef-408a-891b-401153c6b698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ace4582-f02a-4d35-ba53-3d896c018206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3cb418-a68e-46c9-816e-1b38b76d3a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef262a4f-2399-40f5-bdaf-dace3a16b7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b5308d-98b4-43a8-b969-66eb9f73d76c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbaadbcc-882f-416a-95be-e7591aabe756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86dff8d0-be89-44e0-b97b-3b59fdf2aeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d03c1e-8ae5-4813-8f94-d12a7bf02409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90f2ae1-f2c9-4870-86dd-be4979c5232a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ab4f94-9d7f-4eaa-bc9a-f8ca331ba806",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086a279f-ceef-4737-bca6-cdbd0f636cb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8d239aa-52e3-46bd-bfa6-8fcea7071562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee2450b-ed7f-4734-ad95-9a3bc0af7953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2b8ff5-ef1d-4d12-8ee5-17f80941b12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e10e0d-ded6-4313-89c7-d6073d088fd3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780e5ef3-8a6d-4a38-af3f-e3a0cd87e8c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c6d8c00-7064-4c49-9659-fb670fa3ef00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2e803a-111c-4a7f-a96f-b46ec0db7296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46014aa1-d61e-49ef-8c7d-5a03b1f6295b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8928e5ff-c615-4aa1-bf71-f2d170ee284d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40290716-28d2-4674-a697-528d4add84dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a4ea328-d64f-4131-94c5-cf46bba8f262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "303bd292-3605-401b-af6f-372e2700278b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad43d9f5-81ee-44c1-adf7-7d87437f8640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b36e41a-e768-4812-96b6-8eb7322b333a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87622807-4acc-4732-a40b-9fa1100834be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a3cc9c-b3bb-4004-a0f7-dd7e66be6cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be23acfe-022d-4100-8009-422612924820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46060a38-2066-47d9-916f-6fa7f00f50f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565196a9-96fa-4ebf-8927-8d5da7eb55b5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598399ef-2b14-4555-a397-ff3ab8048fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710af77b-3e30-4368-a188-d23df3fbfcf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aca8636-a74e-47f9-bdda-ed3755ac47ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2d4319-dac3-4516-a977-bba180173100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2217f57-c479-4953-957d-cd394360cdae",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7757b2e7-b180-4ded-9bf7-fda499f798bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "590b6a29-6bb1-4b75-8dc9-30fff76180a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99c13dc-4fa4-4c94-8ea3-9dedd102944d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b38fcd-23cd-4fe3-8bc3-7894201b6512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457339bd-30d6-4b2d-b538-5e59691d456c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7ac5c2-173a-402c-816e-077206bba49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdb1dc9-96f3-497d-b75b-626882d13f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9add7411-7320-42c0-8c21-ec07824a65a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf32968-9391-4ed7-9d05-ca568d19f5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fe2548-0213-4218-84fc-851d7cabea6e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496104e4-5f87-4b6d-9ecf-c6c2f48da756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1232002e-4bc4-44ea-aeed-1710b955d08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae94001-bc8b-45c3-a68b-a18984d79476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "105fc75e-d760-4244-9c67-11eeb05791e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9b2818-1cb3-46d9-8ec8-446b568e6a7a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4283e966-1b73-450d-a7f4-e5e5796f32f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36653458-500e-4d52-862f-fe19ff2e2176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca50701d-cdae-4c6d-95fe-8f9c899f3417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf847399-f338-4c9b-9fdd-6459a987f32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d356f0-21a6-423c-8110-c0e330144650",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76e4f59-2914-49b6-83e2-ba50b3619e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850709b5-12a2-4715-896b-3f95a9e692e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f719e3-4cd3-4ec9-8cd9-41e72f79116f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1dd36f-bee2-42de-815d-b29c40ac68b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a2b4da-442c-48df-939c-8869d8dc8a15",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f82482-821e-4161-b897-da5b1f125523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adb66a66-34a8-4f98-b34b-c9f9205bc1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef00d16f-9c36-4492-95e5-4edfa2f1f967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3210dd18-c86f-4b1d-b340-8f20d5392e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cdb31b-1229-4c10-8122-01015d1efeb0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4eb46eb-fb2e-4934-a72c-e84d44f32bc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "785204e7-2091-4480-90ef-af2daf6d9651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f341234-8115-4def-ba5d-75180bb0794b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c4ea17-1b0c-442b-ad1f-b50fe8875c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f9a08e-ea43-41cd-b93d-59fcff276ad2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7491ef-3b67-449b-ad4c-7e37ebcf687c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af0737e-e59e-415a-b79b-7b79bd8e3c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d18d3f8-e1a8-44b7-8447-c7179c09dfeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e01a1ea-d487-44c3-b24c-3d8778fdb702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a90f28-9b7f-490f-8bfc-cd7c9e13a842",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f72704-75cb-49c6-a60d-9f270d4477ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a4d06bf-d651-4bbc-b5ec-1d6fc343b338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c070c6c4-43ed-4421-aef9-350c87289f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e1efd5-a32f-4d72-9bab-4b7f3e77bd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8433bc06-a82e-4a8a-9507-700680722a80",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc9c21d-08c3-4633-ab5a-ce3098bd1be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae931f98-ee52-4fa9-9760-e1e263999199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5185d51-0f8e-4b81-8f3a-60cc2cde8b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae07378-792c-4121-a1d2-343ef552e541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16239b84-6bf1-4faf-8175-ed63df6fecea",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16159f6a-d349-4a54-879f-a8ac3d19f681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69da44d6-b49d-4304-9512-2418cd3c3f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5e3b41-524a-41e3-b8ea-9778add05c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1999005d-6672-45f8-8df7-ef66995f42d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d81cb26-b016-4df8-aa6e-cdb66a203ec0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca255105-8996-4d9d-bde3-90a0a7002914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e3b050f-d2ed-40d2-b7c9-e2d8a866f988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac4b6ec-f032-4a56-b513-79cc7f6478e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0dd5a6e-0b67-419c-bb97-eea08c5e083f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdd4502-9479-4de1-8193-c1ef4b7dea8a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3cfd3d-084c-4b34-852d-6aea861e8ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c460f660-a3fc-4e4c-8e17-eb7a6f29d001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a46c62-13d0-4c49-ac88-529fdf38ecae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08a43a2-57c1-4f79-8177-791288c1c170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134bc7ec-38d1-496a-a0d1-1005abb3e92c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bb694e-e638-4586-9176-685c0f7566fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "500f5e37-2a33-4e0c-a2e8-c276aa986618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e14dcf-c0db-4eaf-994e-c07ecba0a537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2908c4c-df40-4cf8-ab5d-548a805e1a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1839e1-094d-477e-9371-22192c59d6aa",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cc7b8b-c7ad-488e-8b8e-c7d05064117d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23d334b4-8e8f-4ed2-9447-fc0fcd2375fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3996de5a-1e3d-42d2-9cd1-30b2669f4f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b329d497-d564-4a46-afbd-615617ae1050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7785ca3-0528-45be-b06a-ef2ba01cb85a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f2587b-7773-49a8-8a24-ecd2cbf997b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d54495cf-d577-4251-972e-c1a8b6791c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b4a9da-7f67-48e8-b1da-3bf7e30ef6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10fd043-ce29-4040-8fbb-2f301b2d29d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4220c2-06d9-4016-aae7-798c3f1b2707",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c3cc6e-5bf2-415f-a397-598479db78cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a753131-fa39-4213-ba7c-93c49b17391b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d098f9-6dec-4e15-b36d-b2e7e96ccf2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cb835c-89e6-4578-bffd-b162a1291c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb8845b-ff48-4cc5-835e-e05fbc07de21",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6a462f-b54f-4e04-ba46-9532204840a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37fed0e1-6d53-49c2-9256-1639a6e7c561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cad1801-b6d9-44ff-a1fd-0fbc97270019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530dc1a0-41bb-41c7-88f6-0cedf754c648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de09aab-3707-47f9-8680-48a6b8869998",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47d08fe-0cab-451b-85cf-2add82900783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee1bf099-c9ce-4472-a2dd-688bc620a152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7104e9a4-a211-4d44-bd60-c75edf984bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cda62f-e016-4ae7-81ad-aaace0ba37d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c6009e-63fe-444c-ab5c-b80db0f00857",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29e0cf5-17dd-4e68-822a-4181c5fc7fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9716dc7c-7088-4f7f-b635-dd9eca31fda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1b84e1-a185-4970-a442-6e094bc24188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b2a6f7-c584-4990-9c02-1cbad6460c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea62c3e-8e13-4f83-93f5-d065ed490632",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbea9540-6f4d-4e96-88ff-bb7168b692d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdfc84c-7ad3-46d1-8051-da229534afa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98caf5d8-1e2e-4f42-9c37-3c8668de1240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c27f5a6-65cf-41bd-9d5d-9b6d3a295f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3e720d-8a8c-4f17-934d-15100f174b56",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8872a001-6a60-413e-a059-e3409001a8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fed605-e96c-47a0-9503-a83b082f8b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f0691a-e808-46a8-98be-b394c41431ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d8a6cf-5369-4f60-ade0-98a76dcb002c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f94af94-9ea2-42c6-8fb9-5833106de169",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91125136-10a4-4beb-a861-ca60d343e199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3c0e87-f9c9-44fc-8b52-1f3fba3d9b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c143e0-6415-482f-9eb8-52b25e0cc3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f746f38-d32f-4170-a406-225826014cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecc01b4-b78c-46f5-9d5c-afd609c85a52",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045c92e9-8275-4926-adb3-87678fbef20a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee5c776-76a2-4d69-af65-79eea87d2aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07faf744-1811-41f1-b559-1596d557c8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1f6559-0541-42e0-a17f-5340c3d70c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa760e4-7f06-4512-9285-04d96babb5cd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce8c6af-352b-44d1-93b5-4cabc4756947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ff2925-946c-4971-b955-da1f69fd57c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c887bfbd-d9b5-49ef-bb32-6c923f2d3eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2a3e0b-b050-4d2b-803e-7479f6a91ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3f19fe-ebaa-41fd-8ec4-456b4a157cad",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ab62dc-76f3-4082-8f35-05bfc02cc84d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72ce0c2-026f-469d-8921-ce43e763db31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a6460f-f0ee-4e58-ba17-5087656bbe28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9ebe09-b984-4214-84f1-504bafb75ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd74e93-c4c7-4c34-a5be-34c304c51a44",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517b0a43-5ff9-4973-95ed-3d8df8bd58f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ccdd1e2-e772-48a1-9124-df9844026a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a990a95-8440-4f08-b04c-36e193ac38e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f1585d-358a-49e4-9bc0-a32aa4fcd899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6799f1-951e-4838-a3a9-20b88eb1bcfa",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff9c266-41f6-4942-9c74-b60eb597e2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aeafdbb-82da-4b8b-b31d-b467eab101c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0ab3f4-5ef6-4011-92c9-849e842c3be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b01334d-2990-445f-8ae7-9048c1056d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97273bd1-defb-41ab-a9ae-ca7277067941",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf2154b-cb24-4fab-a5fd-303a919c2074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf658dc-0d61-407e-849f-cd6766a11f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3542c758-5058-4f93-809d-6dc855b6e344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9226f578-a055-4b6e-9b59-0fe073b7fdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4b4dd4-ffa0-4e34-af91-a19b607d5cb2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41996054-0eeb-49c7-a607-01ba0c054d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a431b90-2957-4cf5-a21d-4a8406255fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ef8d27-f442-4ead-8394-a729fee299ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10dc3ff9-c635-491c-bf7d-d3cc3e10bf0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92566c99-ed9a-4cd2-8c9e-d4867a6f7495",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f94386b-0702-4afd-9d74-cb49bdcd0ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12141a1-927e-465c-bda6-3f5f9ac67043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905b43ae-627e-4e3e-9236-a0d13bf7a0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165600e5-dd15-440f-9fa2-7f52b0e8adbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfd9e74-fc7c-4243-b6ae-c1605aa54359",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723759da-53fc-4143-a9a3-075a1d52a105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c7eb75-40ed-47c4-b5f8-034689f8d49e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c6870c-99b4-4eac-8087-cba88e352471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ecd107-3b66-43d1-b853-00ad6565bb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e909399b-df05-40e3-a16d-e88abdd6a706",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c614c02c-b87f-42de-8a73-e6dd1f7e56f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d055b258-8063-4d2b-b7fa-00c64699d527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07881f41-6c4f-4ac0-8b41-b2929c61088a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9dbf0e-bf19-49f6-819a-fd167977556e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764fbf3d-1fb7-4cce-9c94-dd459302b5ac",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b279ad-f344-49ce-8906-361e2187461a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4ebd58-c9e1-494f-ab67-34173467eef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafcc8ec-542f-49c9-8c62-8efb51bee8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1da1e23-b1f1-42c4-95e3-1dd819dbea39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9067f0ff-a785-44e3-ada5-13a3e61850f8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4693f1-91e7-43d7-8e24-f851c386f6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f178ec8-bc8d-4275-9b5b-609df93647c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0753ec94-0fcf-4446-8567-9694db2c39e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7eaaaf9-895d-4435-99c8-488752c2ba47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c35f55-c4d4-439c-a95b-fa1cfa0f8c4b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3640e35c-3c22-4593-b15e-b78d11d59f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76a8aa8-e33d-4ed4-aa67-c8789d102b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840a6560-6333-43cf-bb2c-ebe79c5faaf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d515aa-357b-40b3-a0a2-cd2b94f02823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa46183-515d-425e-8233-5736a55c9625",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0417b2e8-a3fd-46e8-b34f-99137751a420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db8cb84-e816-47e7-bdc6-cebf916a7fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5e18c4-77b8-4f34-a274-6a75a5ee485f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39eec122-ecf2-4ee9-90b4-74d3b9773755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ab44db-a83b-47e1-b77a-1bd3a6328743",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7c461e-822f-4db6-964b-f4d7a9ee24d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e05a97-8ac6-451b-8d38-aeb93ccd11bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70b7cf3-e5a8-4a3d-b0a5-8359e579ec3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d0a954-32f0-4007-8335-18aed7621007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfae27a-141b-48f0-b0e0-0c1e64a3c31e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc72f21-4d49-4889-8200-f255b6349b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bdc8039-994d-47c6-89df-62c74be16484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab628c7-f0de-470b-a11a-1f740c73dfac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4cdaaff-0d1d-4147-921f-64e950cde57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab55322-5eae-47fe-8180-3f169659ae38",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0c5505-d6b0-491b-a7ee-64def1310442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e9060a-fe3c-4d1a-aa7d-24b0c71b35f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4aeb19-f7d5-4877-a00d-c93d1f0bb7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9b1c6f-6102-44cd-b495-15ab2c9fcb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee6be87-c97f-4376-9e54-8db24e8da2ea",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56524c28-1be7-4085-8707-a5336178c76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2198c0-a544-456c-8fe9-fe98758f15f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5d6ba5-64ec-416b-83b9-e87b1ab8dc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7397277-60df-4b74-8a96-96b4681d5722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3e20fd-304a-4ca6-a5ff-b0385da71a8f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69762e07-11e6-49a9-aee0-b49e0fafdd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa8cc9d-6a4a-42a2-9934-387e1dded651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e4cf1e-d97b-4321-baf3-10ea2d5916a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a62576-9a04-42f9-9bf5-3beb1a6cdf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74723a6a-cb95-4572-bc38-0984eba44657",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac424993-074d-4c34-b11c-8862ecb1c701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76a8ae2-cd7d-4fce-908c-1257d5a3d592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f60a8e-da09-4de0-b819-2974af3e89ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017fb2a9-416a-4925-a112-59428c6837c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abc88a4-bd49-4f73-83ec-5d597632135f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d79bdd2-5d42-4e69-8fa2-d70309de01f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb0ba8f-9cad-4d9f-a672-d3f25d7076ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96798e51-cf3d-4167-b3b8-b51abbb6f3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d031e0-f4f3-4dc6-8222-0f9b18604c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38660f4-379e-4917-99ab-fa1b87c06565",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a072f43f-b956-4578-8c3c-aef41e22ae28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826770a0-f9f8-4cee-bd63-b47bb6738e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f90dc9a-75d1-45a9-8596-3f393dac1100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adce737-48fa-46b1-8a81-d963ff40b6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1029113-37f7-49db-a061-11598bb4c0ba",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297063db-89bb-4a2c-a748-de58f8e8ba09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bedee3e4-955b-485f-a2e6-40c00b7c9d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61680a29-b845-44bc-b132-65f565e7e220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea1705b-3006-4a8a-858a-4c1f2d85f748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d665aa-2c11-4d6f-9efd-bdb993f65af0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b80f25c-2207-4379-bdab-7a8095fc9861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36f1a7a4-943d-484b-b1b5-ce4646dbeda8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b5e032-66c2-4f88-9332-3e76d5f59890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2215b3cf-e1de-4a55-8442-ff446cda9d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c426e11-d0b8-44b3-b42f-5927809853e8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7ed6ea-0a09-4c62-804f-886b6eba7bd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86341999-8a3a-4be3-a32c-55ba45b9679c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e3f946-d50f-48c7-adad-1830aa24afb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c0a80f9-f9ff-4398-9105-0784931dfa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5382303e-b055-4e32-bae6-fce3e8063aa6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fe1447-fdd7-425f-ba2e-8231f89d4bae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aebae3f6-64a5-4158-8a64-d149385eb63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e750c1-edda-4b2e-af02-42e6fdb4c527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e86233-45c9-4068-8752-426fc1460a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6d7a31-1933-476d-95a4-d1598a5dc948",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d46d81-f446-4379-af67-2821c612b395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c0480c3-1609-43d4-98a3-5a75ba3554db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4a9568-aa34-491e-a4d9-0fa15988b0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5943b4b5-7dc4-43b6-b706-9221e35256f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bc0521-b2e9-4c05-9373-18c22e781c24",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29633a97-5e91-438c-b00c-4018975f7350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34b6efe7-8b75-4e78-86d3-96f8439d25d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf97a7f-4c18-43c1-96de-9d654c2d8dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc56f56-4d8c-4087-9909-71514ebf6bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074d9469-3303-48f7-acd5-acb7c049b7cb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c61ecf-2406-4126-b2fb-5a2afdf970e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a8a950-21a2-46e3-858d-55cfb0122584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f326bba-fb64-49fc-a284-6540a8934762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603bb11a-9fab-4ef1-8a80-e43096f33cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a996405e-2205-4b68-9a41-f7edb912ce97",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2bb639-0f68-4286-b09e-6e4fb8983b09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8975212-65e1-40f9-9250-b529f615909d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557365c3-de6a-4807-b742-b50600172918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3111b970-7ca9-4f6f-a427-fc29b528fcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c5bb42-73ed-4564-8399-d7ca11b5eac2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d628ecc-e788-44a2-9416-0889f7e85fc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0957df3a-0f26-4e55-a038-aa43a1e3dcac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9686058d-5f7e-43f0-8298-9e68fce0eee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2966bb27-a80e-492b-ac9f-c99cbcd90a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa227b3c-9ecb-4b37-8420-a9071150549f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3047dcc-53e3-44c8-bd5a-dd40e9086f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7b95691-13fe-4c32-9f65-84694b2128ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee2f6c1-ae44-4680-a859-18e86203cd4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ae1f12-70d1-493c-8cc3-a5685c2f01d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2720a186-c0bb-4587-8e28-13b16e9c9d5b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285aa699-3a26-4a5f-a5a3-19d580e52e58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ecdb400-b559-4113-9dfc-d3ed0d31b9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fc267f-0ee1-4da2-8206-d15010408d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa1139d-dd39-4caf-9581-6b24029fe7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49320ab-33ae-44dc-8466-3accd28dcb1e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2ec823-1b42-49e4-9e52-c84af53c7bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d773bca0-64ab-4b91-9536-c59022b7281e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905d4174-d850-4038-97c3-33f0254b3617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174a91d7-44ad-4165-9fd2-214f962ba273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baafc4fd-7a99-4b14-9f03-4911c71237c0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bb03a9-3519-4d0c-b6b0-4d63c7fa5180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbad37d8-1fa8-4df7-9cc6-a886ff38d5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1981f172-a12a-4c57-8ea2-e368e4ad5ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67220418-c26c-453f-a3db-8c58e4345c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595e01cc-45c8-4a92-b5e3-6d745a05d91b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0b815d-31b0-4cbd-93b9-ce422f34123f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c851e367-52a4-4521-b9fb-18f74c024536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a9500f-eff2-437c-9e12-94a25c5d2484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29dca096-096d-4494-802f-86c51e06795b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79163e2-432f-4f75-807e-cd94f89d8cd0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ceab17-8ca6-453d-bebd-81d4b1405007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7fcf26f-b933-4f69-9995-8b462e4afcfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a9b0c0-dc2c-4bde-bb55-cc315dfd9e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0551a670-0909-4aa8-b57d-e0d55c48c8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eff62fd-5150-421a-922c-fd536d52e0c1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583b30ff-286f-4086-ac05-02f5c19859f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e806bdd-8bc5-425b-b860-44832dac13e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9787741f-9a24-4e30-b0c0-13d7d571394d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53247849-4bc0-49d8-8ebc-6ea2efeb1acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f61c43c-c29f-4d3d-936b-557ce32c5092",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0d2b96-5d6c-46f2-8948-7a4197d573db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce33914f-b89f-4730-b542-28657b1e54dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4d7c31-b6cd-446a-943c-2855a8abd6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407b80b3-6e37-4624-8a19-b049974a450e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f847addc-1478-44f0-861f-d6a8ccb31f3b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fa6166-dadf-4f9c-9dd0-81217d2e2ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2b68769-42ba-49f9-b872-49d9a6951579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e99136b-9596-46fe-82fe-a85f3ed02c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55751363-522b-4515-9ebb-7109bf0ba23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499aac3d-9653-48f6-9317-b9b403c162ea",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fcd426-a32e-41d3-ae79-159b29d5693f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "543b0de3-5bb6-4cdf-b42e-cdb9ed52e544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3efe53-a5de-4e88-8973-24f2c7bd7176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4dc6d6-f635-4dc1-b803-4fec17fff868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac427d17-fcdb-436d-ae12-54184959f40b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546f22ed-a591-4b09-be3c-6543c1038ebe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b473d9ae-9b69-4637-943c-d2173970acb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4524322a-2491-4aad-828d-d077227c444c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e01dd4-6ec7-4212-a356-7455f246ebde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966220ea-73b0-4004-bb36-260d325ab1eb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e01d54-8810-4dfe-a3a0-b4aee8ca7650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f2b6afb-b750-4c87-aaa8-ca1475290096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "443fc9e4-0ea5-4200-abca-aa9df5fb5f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4300c807-1193-45e8-905a-efbfccdfcda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d011eae3-59f0-481b-820d-d62bcf752c2d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafdc780-742e-43ad-9fdc-0991dddcc3af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a34cc1-a468-4947-b58f-ff951cfa6650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af94f65-738a-48d7-a677-59066c7b56b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca65302-b9f8-45b6-9a3a-988c7de02ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526fd815-d462-4ae5-985b-a8ea1c5f109a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f51c3e-5496-47a6-a65c-b38faed83ef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7359e105-2f16-4e8e-acfa-03a6843ec856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a99cd02-8851-49fe-a43f-6d3b887fd511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eeee86d-5b8e-47b3-9d4b-41bc10a169d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ee0b77-60df-4447-a7fb-529820e5a10b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62218f6b-0af2-4762-a03f-d831e33f3ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1fd7dd-faa2-4b19-abe5-9ba629f91eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0c9793-88ad-4095-bd33-85aaef915cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d010c8fd-dcc5-4d21-a20c-619414b6b568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78629c0-ee36-4163-8ad5-75bb1d853bc7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2839a4-81f0-4d9d-8f81-59db5c3e8ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2c7fdff-96f4-40a1-93d7-461d11df575c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94437697-6f10-4f22-85cc-c4b648e34159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4493555-ce36-4386-9c61-febfa81e2498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a7145f-a7a4-484f-bebe-a3165a976546",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63daa94f-deb5-442a-97ee-16d71bb5f4bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbc38fef-985e-4239-b41b-7c3e277ad0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a596b5-e00a-439e-8e1c-6ff397111f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb84b96c-549c-45cc-bbbd-dd8de5180da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dea9689-7aab-4902-8695-2917d89b202a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35592f06-ae16-4362-a2c9-2529fb262064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55a4d8d2-93dd-47dd-a9ca-8776f1410e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfddc6b-df00-42b2-b892-e4493335a43a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e4da1e-7afb-48d2-9e59-3a721a7e8aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db87676c-3c6e-489c-b59c-0cb667403142",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72399e0a-27bb-4e8d-9299-faa6ec8440d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a088c1ee-fd98-46fe-b0e7-20203342542f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b408fb5d-5258-46fc-9093-e43d34928d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41fa0efc-b516-45ca-8a3a-0fc786d177c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cef71b-ec61-4119-b544-b583a3b4e463",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4d1521-ef9f-4e5a-a59e-62c67c0b9e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e44b6744-84b7-4561-8122-18b969349d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6771193-d4d9-449e-9421-6f23443959b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff6e731-3925-4463-af83-ee8a598f9de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424196e0-6a7f-4fe4-bebe-4ef41efdd13b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85d46b9-f218-440a-91a3-e22b286ae0a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f329c70-32a9-4c9e-8f47-1e104b8e8485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d3f23b-a7b4-4639-bb5d-b54b064e6980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a2e6df-3e62-4c51-908e-4ea4d7299e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da668f82-1603-490f-995e-b45686b619b7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f82342e-d991-422d-93b1-6987dd485015",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84afc7af-fc10-4850-94db-b6e4988af13e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7324d02-c9c0-43f9-80ac-1a896b8b42cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7125ae7-2fa2-4f70-a0dd-52beb3c597ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebf9779-999b-4617-81ce-121451000368",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283e2d60-a944-4a5d-ab1f-76e6c016d311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "151f4856-9b14-43fb-a503-50f452208758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce439e2-239a-471d-ac70-3b719d809992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6866d29-b245-48be-8ef8-d180d0212dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f57c24f-9c71-4104-a8ea-9f970ef993b2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4bcb3d-bb6a-40ad-b805-22e65a856787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08312cfd-ef7c-4610-af17-f0e744cea9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714fb7c5-331a-43ca-8cdb-6d627fd3a091",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61be7d03-af01-4970-b363-10ffd73dd83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e156abe8-b1da-459a-bbf0-1a84edf2e5b9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c1be0d-8cb6-41a8-a99e-2a04b8bf9056",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e774eeb-798e-4176-bad0-34d35aabd3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d4249a-3cc7-4ff0-9816-68df9558b145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fce189-63d5-473b-b00e-921ef8d07fa6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5b92fa3-3146-4aa6-9be8-f7cd81613e8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de9cd470-b9c6-4443-b072-948ba7c1b179"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95d56aa9-7817-4a5d-b98c-5d16a1a6c355",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f99a199-622d-4e95-a0b2-423c28b7bed2"
                    }
                  }
                ]
              },
              {
                "id": "627c67f8-e5b2-4799-9bc4-ebff25c895b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29450ec1-f1f7-44cc-9612-a7d4822f46d1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3d5e28-bbeb-477f-91bc-c8821895f36b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "38bd02eb-af2d-4118-8160-293203d704f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8656d0d2-bb29-4fde-829d-89fee0037f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "578a4c63-d9c7-4abb-bdc4-26e1304d329e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "095cfb3b-b318-41eb-8ef1-30f3559a4d4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6204b90e-e038-4826-be45-786f5fc098c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4b75663-8845-47ad-9841-f05eb65e438e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff9a6205-ae72-4efe-9b56-8019aadeb242"
                    }
                  }
                ]
              },
              {
                "id": "ec9e71f9-7a3a-4ab6-b8c9-296d911dad58",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "42021993-0078-4e0b-b79e-cc56e733b16c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7f03dc-0e8b-4026-ac9f-abdd8e8a0ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c01f16c4-1eef-40a7-8413-55482d066d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a2ff90-5318-4953-8479-ecd453050fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0464843b-3874-4723-9801-f02757b9e007"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8321e1a2-f957-44d1-bc76-41573bbc1e89",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9f4b0a53-7e24-42fe-9d7c-cfa352484787",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6a363ed-494c-47ce-b5ce-44ad8fb664a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e1463693-3cef-42ba-8fbd-8b1853672b6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a484c295-3cfe-43b9-b3d5-c071170815f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19b63d33-12ab-4a13-aa41-06b291715ae1"
                    }
                  }
                ]
              },
              {
                "id": "128b2030-077e-4958-b03d-08adb7668d2b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bfea371-ce63-469a-a8c8-2fab2a963965",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "172da423-c803-450d-99d2-f8712767cd17"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3e8f89c-dbb1-48a3-a5ec-ba11cb3d4d88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "994e4d10-1b11-47ce-b7bf-74d9b7e60e02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eac87dcd-8bc9-41a0-bd8e-cf1c69091422",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b50744af-93be-45b1-a1ac-767b66124155"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79f47ac0-dfd8-4280-baf7-3a23ea8e8051",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49ce05d7-1724-4353-8de2-8c68af7fca6b"
            }
          }
        ]
      },
      {
        "id": "bade1cfe-f9c8-409f-8a4c-a60bd9fa044b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5ce52952-a252-46f9-ab8f-391d11a4b2f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09f4732a-aa21-4d76-8900-ce026c7a3873",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb405b18-a04c-4335-8494-79deb4a9544e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a4bb8e-45fd-4d8c-b0c6-29e31ba02359",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dea55dcd-f414-4d1b-bc28-3e016b4cfa71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a092438b-0130-422c-aaf5-c8628c72b720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3654c10a-73e4-4c71-9d61-560a7ec58235"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17112276-fcf8-4434-b960-bc4204eef1a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15a56a9d-2840-4faa-91f9-fe8e66ac218a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33c805de-a3d1-40c1-9148-3b7ab3bb2245",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "634c18e9-d2ef-43b0-bf0d-e743376f1610"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d758f84e-9678-46be-8dfd-d9f57ec9113e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fa9920ba-0236-4d27-9d5a-561d4d916a51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51c68a1f-748f-453d-bf98-276890d816f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd6142d0-9bab-4352-9114-8eaea2c29711"
            }
          }
        ]
      },
      {
        "id": "c2da4612-3bc6-49db-abf0-0325ca1e5823",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1edbb994-f1bc-4785-a686-819e49f25972",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ba2756b-5194-4b6e-9aa8-17ee86303000",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "042519d7-5a04-4587-b093-a1b3ea2755c7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feaa403d-2360-4405-a96c-27868865c72f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f94710c7-d783-4d9e-a87f-0a2aa1fdaa86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43543781-231b-4ded-aacd-30227d4debeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9fab070-1b43-452a-9923-2639984a0bce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a2dfdb7-8f91-42b0-b6c7-02e2e5bf64dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5645fa72-51b0-4c85-9096-a33fa91dcb6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6958a79-708e-4703-aff4-7b7e8ad91231",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ea12b34-f247-41db-bf8c-f737ecf07656"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd2083a2-699f-4286-8775-4bd8ebec4211",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "78aa4e74-be70-40fa-bee4-c807b6bd1139"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e95de53-e7f8-4186-bb71-ddb35ec206e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c104aff-a1a7-4130-a4b5-4c212dd8ca95"
            }
          }
        ]
      },
      {
        "id": "ded59c1b-55a2-46fc-a6e4-d1dbab004c3a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5014bb97-d7f1-4819-9f63-45a823a86c1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c73e54e5-b66e-4d52-a985-3d67fe6e23ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9619836f-6da8-42c9-a957-4d4ab0107631",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a870e2-4c10-4f40-9cb5-1d4ce6e5d753",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d64fd5d-03bd-4a7d-87d3-f89ea564ccc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d866d14-cc18-4da3-827b-5ff2fae5e294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0aafc359-f490-418c-a763-a26708e842eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a69968e2-2d8a-4fb9-8ba7-66cfed211d67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "835fff43-c743-4f2f-b5fc-60caa34a8eb6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76eae159-8a5f-45f4-9aaa-e74c24e41d75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bfc8fab-9961-4219-97fb-7407a67771e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "554f9e69-953f-49c9-851f-7dd69fb35e2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ffce02c2-1b8a-420a-b186-20cb0a3a2b94"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5606288f-6df4-49fb-bb7d-9055b8d60119",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f28f3e92-7479-43fd-ae6e-286d24aadecf"
            }
          }
        ]
      },
      {
        "id": "a0846294-5fde-4e5c-8c1d-1e39e9b36bc5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "853914c3-3a84-4fe8-ab12-a55a726e8adb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f76b4d2-4b2f-4a5c-ac6d-0a4e2549b32e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f3177ed7-578f-4320-8442-c70668b6b1c9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98e5ff27-2686-4e5d-ad58-f0cccd7e2ad6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b07e84fc-fdc1-4b1d-bfa1-c36a2743e109",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 36.22357723577236,
      "responseMin": 15,
      "responseMax": 267,
      "responseSd": 21.281380775015265,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686271528888,
      "completed": 1686271550774
    },
    "executions": [
      {
        "id": "d0be058b-bf62-4b9b-aa27-43bf04e5a97e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "76af8eb6-5002-4cac-a122-ef8ab9261dc8",
          "httpRequestId": "c71851cb-d944-49dd-ba8f-7be734c70866"
        },
        "item": {
          "id": "d0be058b-bf62-4b9b-aa27-43bf04e5a97e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "66d1be36-ed3a-4771-b04f-99199c42c714",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 0
        }
      },
      {
        "id": "890dd779-926e-4753-9998-126d81b8d8eb",
        "cursor": {
          "ref": "d8558c85-06a8-4f41-8663-cac9587a8c3c",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1af6bafb-6405-4646-a840-d284bc086a3f"
        },
        "item": {
          "id": "890dd779-926e-4753-9998-126d81b8d8eb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "24ae5cf3-a834-4ed9-9c2f-47d0d8a98d42",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "9ca7bd59-07a9-4427-9202-5034cfc069e5",
        "cursor": {
          "ref": "c295dfd3-900d-428f-859c-2daafeb2be9f",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8d3bc66d-6f85-4850-9109-1ae4aabfc42a"
        },
        "item": {
          "id": "9ca7bd59-07a9-4427-9202-5034cfc069e5",
          "name": "did_json"
        },
        "response": {
          "id": "d35aae2f-47f9-4981-bd7d-14a40611ee5e",
          "status": "OK",
          "code": 200,
          "responseTime": 146,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e2f400-9f1c-4753-bcc2-fe4848c48417",
        "cursor": {
          "ref": "20428d20-5ec7-4b55-bfbd-17fc6e08a443",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e73b86ee-382d-43d2-bf4d-e6e5d6b1b98b"
        },
        "item": {
          "id": "34e2f400-9f1c-4753-bcc2-fe4848c48417",
          "name": "did:invalid"
        },
        "response": {
          "id": "9da59d09-cc1c-4037-8641-83f09f0ac14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e2f400-9f1c-4753-bcc2-fe4848c48417",
        "cursor": {
          "ref": "20428d20-5ec7-4b55-bfbd-17fc6e08a443",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e73b86ee-382d-43d2-bf4d-e6e5d6b1b98b"
        },
        "item": {
          "id": "34e2f400-9f1c-4753-bcc2-fe4848c48417",
          "name": "did:invalid"
        },
        "response": {
          "id": "9da59d09-cc1c-4037-8641-83f09f0ac14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1a7642-2b65-4c48-978f-1af2b42564d3",
        "cursor": {
          "ref": "b240a72a-e4ca-4363-9e0d-12486906cab1",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "34cd863f-1aa4-457f-a4e5-5173f8ca040d"
        },
        "item": {
          "id": "4a1a7642-2b65-4c48-978f-1af2b42564d3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3640d4f6-f374-4ee9-bb1d-12448d48a48d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 85,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1131bae5-7f45-4437-a6f9-d7b2128053fd",
        "cursor": {
          "ref": "19cb159e-5566-40d2-a888-5847ca7494f5",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b22faea0-755c-4766-b37c-4cb66c9f8c00"
        },
        "item": {
          "id": "1131bae5-7f45-4437-a6f9-d7b2128053fd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b763b400-8597-4de2-995d-ff048938eb62",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7496f2f9-fd3b-4ddf-a313-73f63d939054",
        "cursor": {
          "ref": "1cedae0e-6b7b-43ec-93b0-40b6584b2dd3",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2c8b5174-6d0a-4487-a8ba-504131764e83"
        },
        "item": {
          "id": "7496f2f9-fd3b-4ddf-a313-73f63d939054",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2a3cb0b3-047c-4e90-9a16-9b32408e1713",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ef5de8-0fad-476d-9ba5-f3d2afaaa7ca",
        "cursor": {
          "ref": "fe280d3d-3ee0-495a-a588-039da326b807",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "079009ac-75af-47d3-a5fd-9af6cab260fe"
        },
        "item": {
          "id": "b8ef5de8-0fad-476d-9ba5-f3d2afaaa7ca",
          "name": "identifiers"
        },
        "response": {
          "id": "6a9cb8f7-3d5a-42e1-a2f1-4259268ca075",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f711b73e-cddf-4a6b-ab69-9aaf62f6d9c4",
        "cursor": {
          "ref": "490b8ec0-89b5-4f1c-a5a9-ba9da13275be",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "60bd42e9-29d6-418d-b068-4d7797387a16"
        },
        "item": {
          "id": "f711b73e-cddf-4a6b-ab69-9aaf62f6d9c4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a3313fd9-d537-4ab3-ba18-b85d45d5db7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee688c63-4a21-44c1-8d3a-f4113decff2f",
        "cursor": {
          "ref": "9b390007-748b-4dab-ad5e-99e29c263f45",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e72bf80e-ebcc-45e7-b4ed-818fb8e183c5"
        },
        "item": {
          "id": "ee688c63-4a21-44c1-8d3a-f4113decff2f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6d0871c0-b131-400b-a12a-024a2bc4e143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdabb75e-2ef9-48b5-8037-946d0d7d1776",
        "cursor": {
          "ref": "69baec4b-a123-420b-9ba8-bd767586965d",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "74264e92-7dab-45e1-ba52-85dc02a61368"
        },
        "item": {
          "id": "cdabb75e-2ef9-48b5-8037-946d0d7d1776",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4284fee6-7dea-431c-b532-62d725a18ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddeabbfc-e2a2-4554-b7f0-a5b52a09aacf",
        "cursor": {
          "ref": "74521669-be98-4da0-be4a-7927d06c33de",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ec53c249-12a6-41a0-8ad4-75a9874aa7cb"
        },
        "item": {
          "id": "ddeabbfc-e2a2-4554-b7f0-a5b52a09aacf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cd52e8e0-2550-4451-abf6-062972c3a357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d442f3-cfb3-4383-a50f-7b8f47b45feb",
        "cursor": {
          "ref": "628354c0-77a4-46f7-bc91-fb42dd6686de",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d38e436c-5c19-44d2-91d7-5ad8e5480951"
        },
        "item": {
          "id": "82d442f3-cfb3-4383-a50f-7b8f47b45feb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c2cd9022-0a62-4a2a-88ef-eeade61db1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41b6f1f-fdc2-4457-9fba-b6fa3086f26e",
        "cursor": {
          "ref": "776c55ff-705d-4bed-9b2f-663da21bdfdd",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9e9e4bab-9372-4b7f-8256-1703d4bbfeb1"
        },
        "item": {
          "id": "b41b6f1f-fdc2-4457-9fba-b6fa3086f26e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "02749a0b-521a-4d8c-a52b-309335134195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7de208-e51f-44e6-b0f6-26a44a7c9cb4",
        "cursor": {
          "ref": "f3e8bb4b-9f0b-4829-b32d-8255b1142dea",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "83758748-0345-477f-82f9-fa636d118d66"
        },
        "item": {
          "id": "ab7de208-e51f-44e6-b0f6-26a44a7c9cb4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a234be12-4388-468f-b61e-bc723a15251d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0be2b24-a2d7-4812-b5ea-405a0877a197",
        "cursor": {
          "ref": "211361b7-1ff9-4a18-9949-58d4b400e460",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "082801a4-e20c-4035-9f3b-525ecb97a4a5"
        },
        "item": {
          "id": "d0be2b24-a2d7-4812-b5ea-405a0877a197",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5f4e2f0f-f72f-43b6-8eb4-fd415f5305c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508efb4a-a30e-4f5f-8c02-7cae7f94142c",
        "cursor": {
          "ref": "764b16b6-345c-4a26-ba59-33a922412e4c",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5c2d9dcc-55b7-4798-ac41-ae8dca096777"
        },
        "item": {
          "id": "508efb4a-a30e-4f5f-8c02-7cae7f94142c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "001326d7-763e-4671-a3ae-7ee88e179eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1024a9c1-b6fe-4ac0-a725-72c045e58010",
        "cursor": {
          "ref": "defe52c0-95cb-4d3e-98ff-7c0af097927e",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dbb7d0d6-3109-4a69-bf87-a90ac9c71dcc"
        },
        "item": {
          "id": "1024a9c1-b6fe-4ac0-a725-72c045e58010",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f8e48bff-2757-41c3-a2c7-9ffbb4aaa30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1636cab7-8e6b-4fb6-9f9e-5f46824c03e3",
        "cursor": {
          "ref": "5b7db72c-c41f-4a8e-bea7-9f34136b429b",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5d73acf6-cf0b-4ea2-b069-3f27fedc20a5"
        },
        "item": {
          "id": "1636cab7-8e6b-4fb6-9f9e-5f46824c03e3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b7367736-f120-400d-93fa-aa4b70d98326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331fa92c-0e4a-4cb2-a89e-a59b8f31b6fe",
        "cursor": {
          "ref": "0a71942f-16c0-45cd-b18e-deb9452e3a15",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e29ab067-23b0-4aa0-bf80-c57a919d51f1"
        },
        "item": {
          "id": "331fa92c-0e4a-4cb2-a89e-a59b8f31b6fe",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "366386b5-19b1-4d4a-8274-6ce4a62ebca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8ea7dd-d1f3-4a01-99ae-bf029dd9745c",
        "cursor": {
          "ref": "0753403b-43a8-47a6-ad2c-a0741c13f271",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d68ff9b0-d428-4c00-80bd-c39019bee59b"
        },
        "item": {
          "id": "9d8ea7dd-d1f3-4a01-99ae-bf029dd9745c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d620e240-b2f5-4748-b32e-2c2cc677e169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7598fc1f-dad0-4d9d-be29-090a162bbca8",
        "cursor": {
          "ref": "af49925e-7201-4cda-b985-a2597eec0f5b",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "851dbce5-59ad-40b1-aa35-27500ed77334"
        },
        "item": {
          "id": "7598fc1f-dad0-4d9d-be29-090a162bbca8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ac3dedbe-ebc1-4d62-a9ee-b52c6bcd399b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cf8a42-cd83-4058-835f-b60e5f461fe4",
        "cursor": {
          "ref": "c9cb492a-1beb-41f5-acfd-63dda42d09d6",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e4ac346a-63f6-4ae4-bfc1-87dc32c0b6f5"
        },
        "item": {
          "id": "a1cf8a42-cd83-4058-835f-b60e5f461fe4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b548477e-772a-43ca-bc03-ae36b253c947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf284b9b-ede6-40e9-bd90-b9566a37f8dc",
        "cursor": {
          "ref": "f84faee8-ee27-4f23-9b1b-22f32bffbbbf",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fe35ac60-f9dc-4100-ba55-7b407036843f"
        },
        "item": {
          "id": "cf284b9b-ede6-40e9-bd90-b9566a37f8dc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e476b9a8-9b1c-4db2-a263-b8bb21aa77fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a077ab9c-4127-43f8-a239-ded3a71da78f",
        "cursor": {
          "ref": "2af2917d-71e5-43e3-9059-9850e2cd5579",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c3710b50-2b11-42a0-a3f1-3f6610faaf31"
        },
        "item": {
          "id": "a077ab9c-4127-43f8-a239-ded3a71da78f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5114f6dd-5c9d-4aad-bc5d-04bb6d864467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038031f4-f76f-4e00-a6f9-6479b279bae8",
        "cursor": {
          "ref": "64b8c855-a40a-4d2a-82a4-8f624811ed9d",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7ee6516d-9f81-4dd2-ba4e-2993b32d6721"
        },
        "item": {
          "id": "038031f4-f76f-4e00-a6f9-6479b279bae8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d5678437-ff53-43cc-8e90-3e2c5566e012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f39ce1-dbf4-4ada-99fc-22fb757d000f",
        "cursor": {
          "ref": "01c17683-bc6f-476f-864f-440d42db34b4",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "16d73257-1ceb-44ee-b0d8-2d39097ea67a"
        },
        "item": {
          "id": "88f39ce1-dbf4-4ada-99fc-22fb757d000f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "98e77c29-b9ab-4348-a9d7-af6751042d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e7aede-9a38-414b-b698-15bf10a7efc1",
        "cursor": {
          "ref": "33a00f24-88f4-4c85-80d1-30cc6521d7ce",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4cf149b5-d3cb-4f94-8e23-cff6b1a719ad"
        },
        "item": {
          "id": "20e7aede-9a38-414b-b698-15bf10a7efc1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ade35c3e-ce53-4de2-8d35-87d3762513a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46492ff0-6ac9-4e54-a36d-903bbe356a8d",
        "cursor": {
          "ref": "0ae148dd-3b9c-4bf1-b459-6e8f28673c57",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1a121221-92ce-4c68-b8e8-00504a46591c"
        },
        "item": {
          "id": "46492ff0-6ac9-4e54-a36d-903bbe356a8d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2034d4b9-d426-4b1f-9b78-01bff5b754f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0fe149-9276-44eb-a780-6c2fd46c9a2d",
        "cursor": {
          "ref": "65b48e82-826b-4a79-82a5-392190a97981",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bab1babe-cadb-4e55-b75d-f6fe08bf4d93"
        },
        "item": {
          "id": "2b0fe149-9276-44eb-a780-6c2fd46c9a2d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4ac6f022-2aa9-45e6-b64a-54e98c47e9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3703d54a-b325-4964-8e71-b4e709392945",
        "cursor": {
          "ref": "cf366905-b237-4d48-b861-e0f54029ea92",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a03486d2-7908-4ac8-bfd8-cfb4a5a53502"
        },
        "item": {
          "id": "3703d54a-b325-4964-8e71-b4e709392945",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e9b7295c-a3de-4c95-a990-d73314b9fccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fac0e5-daf6-4aa6-bc08-de5287b765ee",
        "cursor": {
          "ref": "dc73ba87-7b37-4ec4-8c32-959e359c5fd5",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b6971a3a-47b6-49e6-9777-b6a3d97c70bd"
        },
        "item": {
          "id": "50fac0e5-daf6-4aa6-bc08-de5287b765ee",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3db963de-4e14-4944-bcc0-87f94863003b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc291931-5781-4f3b-baa2-845f2d6db286",
        "cursor": {
          "ref": "a8efd48c-94c9-4029-baf1-bc8e355c7510",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "68670940-c3c3-4afb-a232-4e27e1069b57"
        },
        "item": {
          "id": "bc291931-5781-4f3b-baa2-845f2d6db286",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "99a9f97a-a981-4620-805f-310ca8631b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca94799b-0dfa-41e6-a5b0-d3a8ceee4a77",
        "cursor": {
          "ref": "a3802b98-645b-4e18-8dd2-dbd9168071eb",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6f178d7a-1db5-42ea-b12d-e45eeee64bf7"
        },
        "item": {
          "id": "ca94799b-0dfa-41e6-a5b0-d3a8ceee4a77",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "05fa6f0a-77fe-486d-8253-16397ffef1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611a059e-8f27-4303-acec-6450cd5d4dd2",
        "cursor": {
          "ref": "5101ac9a-f4f1-433a-b19b-ba8c8979110a",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "031deebc-ddea-4144-8fc4-25a2c0627170"
        },
        "item": {
          "id": "611a059e-8f27-4303-acec-6450cd5d4dd2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "17a2041e-4c75-402c-9da6-ac24e5e82e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee15d12-2d38-4ae4-8c81-56f6fe51ca79",
        "cursor": {
          "ref": "27416ca4-5c92-4970-8f27-8566bce1c396",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "79a07838-26d3-4cb0-8e87-800473055da3"
        },
        "item": {
          "id": "fee15d12-2d38-4ae4-8c81-56f6fe51ca79",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "749ecb30-5a13-42b3-9d4f-2399523bf015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094d1d77-9448-400c-9ddf-11b1ce6f64c1",
        "cursor": {
          "ref": "0ead3b23-4ab1-4832-b192-f730c0369b44",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4e7a653b-d391-487e-a8a0-750ac7ea7316"
        },
        "item": {
          "id": "094d1d77-9448-400c-9ddf-11b1ce6f64c1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "38392aa2-80ff-44c7-95fc-4e25fa18f88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d1e2a2-5075-4ecd-b138-55ee06db1a42",
        "cursor": {
          "ref": "49b57874-ea54-4c53-bcb5-d7de42880caf",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3df1f22c-a691-4d5f-a9f8-5f7bd50bb05a"
        },
        "item": {
          "id": "94d1e2a2-5075-4ecd-b138-55ee06db1a42",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0ef05200-df20-4231-934d-da4deab0b8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a15b6d-c870-49e6-9d48-cfde5063ed0e",
        "cursor": {
          "ref": "530e3366-74bb-45c9-8b71-1283a5e05768",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "19e2cb5c-f977-40e0-b370-d0f66c9d889f"
        },
        "item": {
          "id": "06a15b6d-c870-49e6-9d48-cfde5063ed0e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "54738ec9-7b67-4c46-a372-04a57916b2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd882ab-ef6f-4f1d-a495-17bfe72088cd",
        "cursor": {
          "ref": "0e9f7d32-ee37-47d3-bc61-296fec347bf8",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6abfca03-2ad6-44a2-a110-10b2eedb0cef"
        },
        "item": {
          "id": "ffd882ab-ef6f-4f1d-a495-17bfe72088cd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "188abd5e-3ab0-4a4d-b76d-d26ef5cee467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f12540-4c41-4ebc-9017-03d057bfd4a1",
        "cursor": {
          "ref": "b3f1a5ed-696c-42d4-9f3f-2c13333e4da3",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "43dc68d7-aa37-4cde-a672-cea7444daa2a"
        },
        "item": {
          "id": "98f12540-4c41-4ebc-9017-03d057bfd4a1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ab291202-34d7-4ddd-bb83-a3274aa693a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca63f73-9979-448c-8a10-65b43f759f39",
        "cursor": {
          "ref": "8eabd6a0-8fa4-4d20-97c1-258b02672563",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b188e690-a6f8-4697-9977-ec32c4346bad"
        },
        "item": {
          "id": "5ca63f73-9979-448c-8a10-65b43f759f39",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7949bf3a-1c57-4b2a-a642-cf3453f74689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e03ec2-8cd1-4dff-9d20-5b545657f693",
        "cursor": {
          "ref": "b06d0509-f48c-4050-a8f8-421177a101ae",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4a8761bb-1b8f-4087-96c8-6fe84bffefc7"
        },
        "item": {
          "id": "70e03ec2-8cd1-4dff-9d20-5b545657f693",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f4110920-18fb-4203-bfda-aa317f214de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a0da1f-6814-48d3-b275-1e97ba55013d",
        "cursor": {
          "ref": "40d2e6e1-bfa5-4faf-8e90-0c39b6d6efe7",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "aa39dc58-7500-4f0b-99a7-9376daf1d15a"
        },
        "item": {
          "id": "00a0da1f-6814-48d3-b275-1e97ba55013d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9b0e80d3-e405-404d-aba8-8e72295db73d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08acdc0-c328-4421-a341-50e4b5e93fe2",
        "cursor": {
          "ref": "519a3e75-c2d1-4a6d-9755-56f8b17d9b5d",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "542f09cb-3032-455a-9106-ede569a72193"
        },
        "item": {
          "id": "b08acdc0-c328-4421-a341-50e4b5e93fe2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f78dfe32-52fa-4201-a5a8-e8be879a8831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf94b09-389e-46c9-ac87-1d2fd6bcbe1a",
        "cursor": {
          "ref": "673d2e04-290b-4092-a291-d925bf17a99b",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "84ba79d6-9a5b-4890-aa82-eb54872b76b4"
        },
        "item": {
          "id": "aaf94b09-389e-46c9-ac87-1d2fd6bcbe1a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0defa620-5371-47d3-bfd9-8425d8b73da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5825c36d-d8ad-45e3-98f9-380182af7922",
        "cursor": {
          "ref": "8581f718-137c-4e33-af89-80ef936f5a0f",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8d15e471-b317-4af7-a5f9-9ece1b506766"
        },
        "item": {
          "id": "5825c36d-d8ad-45e3-98f9-380182af7922",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "38fea225-0015-4f89-9382-d85f97e7d774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aec9d19-036c-4450-9090-c5e0e868c236",
        "cursor": {
          "ref": "12060880-d63d-4d3c-a3ca-0d601b9c6ad6",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1e37a8a0-77d5-41c3-b0ad-ea05cd35b4b1"
        },
        "item": {
          "id": "0aec9d19-036c-4450-9090-c5e0e868c236",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "63a7a78b-fa9a-45ba-822d-c5f22750f7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e042937-b8eb-47c9-ae88-9940976e03f0",
        "cursor": {
          "ref": "0cd16897-2e2e-439b-9bf9-5131349f5c17",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7c6bc942-8b37-464d-82a1-b01893143a27"
        },
        "item": {
          "id": "1e042937-b8eb-47c9-ae88-9940976e03f0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b5fca34c-91d0-4c03-a797-edf9b108910b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11091064-e063-4819-a7f6-639cace4ce5d",
        "cursor": {
          "ref": "2c3e52ad-e2c2-46da-8c35-788c42dbe52a",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6cb7f88c-c9cf-4ca9-9e40-170613bc89be"
        },
        "item": {
          "id": "11091064-e063-4819-a7f6-639cace4ce5d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3bc84d33-6037-4aef-917b-9ead364fb349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c662a9-9535-4240-b125-3540a45e3477",
        "cursor": {
          "ref": "d8a3d4cd-3be0-49a2-a007-552c66283748",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7e0c8e6d-f55c-4a57-86c4-ab1094482904"
        },
        "item": {
          "id": "46c662a9-9535-4240-b125-3540a45e3477",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6b337254-fdb2-4feb-93e2-088793507f94",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d4c0fa-9c4e-4f68-84ed-e5806d718dea",
        "cursor": {
          "ref": "f4cfb1cd-f32d-478d-88fd-ac3ee60019aa",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b1c30f27-bfb1-452f-8ee1-2591295ab51b"
        },
        "item": {
          "id": "74d4c0fa-9c4e-4f68-84ed-e5806d718dea",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1fa0bf06-20b0-4cbf-8487-8ac86df407d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da3888b-45bb-45ab-b12a-063cd300dd30",
        "cursor": {
          "ref": "879e0dbe-6f34-4a7b-b57b-8bd9ecc5caa5",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "961bf7cb-5d54-45a9-87b9-040146ca0af5"
        },
        "item": {
          "id": "4da3888b-45bb-45ab-b12a-063cd300dd30",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "00644711-9742-4f8e-b474-ae19c6433613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60475e0-c483-43c0-a775-c16f7f05007e",
        "cursor": {
          "ref": "2acb6a0d-1ecf-4e84-a18b-9a2eb0fcf11a",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c64dccc9-6c73-45a6-9f54-e0959c2f2c44"
        },
        "item": {
          "id": "a60475e0-c483-43c0-a775-c16f7f05007e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4ac410bb-043e-4f1f-a666-08553278c228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7c0ca0-9161-4fa7-923e-f646e16e5ed2",
        "cursor": {
          "ref": "fad27860-eb37-4f04-a606-f0496f8f8b95",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d4e48280-180c-4d4b-8818-af50a38d5f06"
        },
        "item": {
          "id": "6c7c0ca0-9161-4fa7-923e-f646e16e5ed2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "64fd6233-7c8b-4e17-8c2b-6cfbeb25a0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa134adf-f031-4cac-8b4e-901f99d9d83b",
        "cursor": {
          "ref": "61823d4d-12ce-4bd4-a152-bdd05fc5a26f",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "93c77096-3f54-4aff-b1ac-6bab94cf9f1b"
        },
        "item": {
          "id": "fa134adf-f031-4cac-8b4e-901f99d9d83b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "82868eb8-567b-44b2-a01e-71e95adae904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59285dd9-9858-4d18-baed-57c1daf3210e",
        "cursor": {
          "ref": "4a3edf73-dfa5-4d1c-b82a-176bf11dc32a",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7055ac85-d364-4621-9429-4eb132a2a04c"
        },
        "item": {
          "id": "59285dd9-9858-4d18-baed-57c1daf3210e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e3395d27-cd15-4a5f-a4d7-8f6a76ecc7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06485ae-0a18-44b0-9177-460e110d76ef",
        "cursor": {
          "ref": "3c407ef0-5b0d-4994-97b0-6ceb2b9e7dd0",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b984a4e2-8525-46d9-bfef-d0d4c0eaf286"
        },
        "item": {
          "id": "b06485ae-0a18-44b0-9177-460e110d76ef",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b24a0484-a2d8-4bf4-8bb2-9a3e6db343a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb80961-8907-4b4c-aa89-cf0e402c11be",
        "cursor": {
          "ref": "b80aebf4-afe7-4481-ac47-c48420919b12",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "85fcbf1e-9726-41f5-8d06-bdeac23b69bb"
        },
        "item": {
          "id": "8fb80961-8907-4b4c-aa89-cf0e402c11be",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b53fe16c-673e-444d-af3c-de46d7fe1cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a7aac4-e97c-4d7c-935f-117c1fa53a66",
        "cursor": {
          "ref": "98d63efc-69c4-4be0-85b1-f4321c3d640e",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "30869554-005f-4bbb-8346-8dc5d556280a"
        },
        "item": {
          "id": "35a7aac4-e97c-4d7c-935f-117c1fa53a66",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a22b66f9-a14a-49ea-b499-ad6dee5b96b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c403de9-c4ac-49fa-afec-15a9b50d498e",
        "cursor": {
          "ref": "96b54038-0a80-47d3-b548-74c549fe4aef",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7a9f5294-9258-40cb-bfe1-8202a1d84aa7"
        },
        "item": {
          "id": "5c403de9-c4ac-49fa-afec-15a9b50d498e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "37bfc1bc-80c8-4dcc-85b7-5df620f39fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a63dfa-3c6e-4e4b-9156-aebf66903aa7",
        "cursor": {
          "ref": "703bc213-4172-480f-a53e-1203c91f8552",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "442aaa32-784c-40a1-bc67-dd846625c97e"
        },
        "item": {
          "id": "d0a63dfa-3c6e-4e4b-9156-aebf66903aa7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8d57cc44-542c-4ea7-8f62-769ce81f2658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e59d380-a8d2-456c-be14-1f5573a9bc38",
        "cursor": {
          "ref": "294dcc09-9507-4bb6-b117-e7ce35589165",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e3c06e6a-b3f9-4ab3-861d-7ebf061d0279"
        },
        "item": {
          "id": "7e59d380-a8d2-456c-be14-1f5573a9bc38",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1edc7b50-76ba-4638-8b41-476836954aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0271bf00-d3bb-43ff-8777-9546c5b0e68d",
        "cursor": {
          "ref": "c3a9e158-3af7-4743-b721-5f10c8bef96f",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "453d1a19-9173-4d0e-9e10-c942b16ac603"
        },
        "item": {
          "id": "0271bf00-d3bb-43ff-8777-9546c5b0e68d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cfae986b-fb9a-40e6-9454-c5c28ce0cb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80639621-006f-421b-a8a2-09c2b0a46dbb",
        "cursor": {
          "ref": "081c0eb3-c282-4731-a777-bb4b53238394",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "587ff327-592e-475a-938a-ba20eafb8d2e"
        },
        "item": {
          "id": "80639621-006f-421b-a8a2-09c2b0a46dbb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7edfbf9a-493b-46b3-b12d-9521cc38390f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b20e169-3904-4878-b13b-ac3d1e20c27f",
        "cursor": {
          "ref": "8829622b-2e13-411e-9ed2-afee003c4af7",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2321c0a3-1cf9-4686-9998-f4acf0099829"
        },
        "item": {
          "id": "6b20e169-3904-4878-b13b-ac3d1e20c27f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "94ac516d-37ae-4ae0-9db7-8b4a594e73a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf5f2a8-4001-43bb-85f3-d9a68cf5c979",
        "cursor": {
          "ref": "665fe9c1-2bab-49d9-8f26-ac96b7729fdd",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2b30eff7-1b3f-4255-81fe-15f746f85bd0"
        },
        "item": {
          "id": "bbf5f2a8-4001-43bb-85f3-d9a68cf5c979",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ddc91f62-a32b-4097-9f63-1b58beb91aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bd9d98-f71e-4506-8a55-7439c80b9184",
        "cursor": {
          "ref": "fd7156a4-3ef9-427a-b317-4d01e1330987",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ee45e78d-3b06-49c0-910c-75d5923b33a9"
        },
        "item": {
          "id": "e2bd9d98-f71e-4506-8a55-7439c80b9184",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "71d76e5f-b81c-4a19-9682-da156092c988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ac57f2-a7a9-4bb7-8d0a-c36446bc6467",
        "cursor": {
          "ref": "fc4623f1-c1a8-487b-b768-e9f8d81ac2c8",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bc7fc8dc-9e84-4053-8e00-07d29591f0aa"
        },
        "item": {
          "id": "f5ac57f2-a7a9-4bb7-8d0a-c36446bc6467",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b979943b-b25c-434e-bfda-e11778c539f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de806f52-ceec-4577-86c3-2856a3077f2f",
        "cursor": {
          "ref": "da930080-5d00-4af6-b40a-cea3571ceb58",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3ec12dac-c75f-4442-92b7-05ec3f79e84f"
        },
        "item": {
          "id": "de806f52-ceec-4577-86c3-2856a3077f2f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3af54e10-52c5-4b57-af81-c2aa5b9b6aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f208443-038b-44d7-9774-b6e61f50447d",
        "cursor": {
          "ref": "22cc5c5b-8d94-4f6d-8cc5-6b814a95f7a4",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5e896281-695f-4953-b4c8-435ab0eadcaa"
        },
        "item": {
          "id": "6f208443-038b-44d7-9774-b6e61f50447d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "18d8382e-ff42-4100-ab84-5e886a7b2582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407ea7ef-b6f2-46e0-8953-deb9776f5213",
        "cursor": {
          "ref": "49d8e562-ec5f-495c-a26a-307ed96bbff6",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "bf8a96ec-e0e2-48b5-a3ba-b4bbafc3acc1"
        },
        "item": {
          "id": "407ea7ef-b6f2-46e0-8953-deb9776f5213",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b352c362-c7ae-411b-860f-60972724afc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be590aa-44e6-4c24-862c-31a41c07cd01",
        "cursor": {
          "ref": "5e953d0a-7f4d-45de-a53d-46d837a1acf2",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f4e23bea-4e89-4c59-86d6-47c93d3b34c8"
        },
        "item": {
          "id": "9be590aa-44e6-4c24-862c-31a41c07cd01",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "311054bc-6e5d-4dd0-907c-207a1df3e538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03c90e4-a77d-4745-ae92-e5306148cb49",
        "cursor": {
          "ref": "a3a95a70-5ce9-4a81-857f-3030fcf07682",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "53206bc0-28cd-4793-88a5-7d1403b86582"
        },
        "item": {
          "id": "f03c90e4-a77d-4745-ae92-e5306148cb49",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f886b2e6-e8df-4e4e-978b-35c5abf07d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0e24c2-bf4f-4514-bbff-b6d4fd2dd000",
        "cursor": {
          "ref": "b9a6aae2-5d5b-4094-a7a4-b272f038a8dc",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bd95ca8a-4adb-4c97-becf-6cc6006b23f7"
        },
        "item": {
          "id": "8d0e24c2-bf4f-4514-bbff-b6d4fd2dd000",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5bfe3e3f-6b0f-4cc0-bee6-2b628e2b03d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8613829f-6fab-4879-86f0-53c457121167",
        "cursor": {
          "ref": "47552bac-5f5f-4d30-92a4-7fba3952cc2a",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ee9c615d-608e-4aea-87b0-12b61ac2209a"
        },
        "item": {
          "id": "8613829f-6fab-4879-86f0-53c457121167",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cf0a1e80-a5ce-4ec4-8f24-c3f3f1997477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08afcfd5-db91-47b2-81f3-b7a18d3415f5",
        "cursor": {
          "ref": "7130fe8b-52e1-4e77-9489-ee5c00def03d",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "12767341-a260-4307-bcc4-f1ab87bbb37b"
        },
        "item": {
          "id": "08afcfd5-db91-47b2-81f3-b7a18d3415f5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7f0a9d61-d240-4510-bb42-37ad913ac8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3787a587-3b57-4122-9f55-f495ce242205",
        "cursor": {
          "ref": "5a025171-8e00-4c6b-9a5c-7d1965f0dde7",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "213a0495-e632-47d6-b9b8-396c78115971"
        },
        "item": {
          "id": "3787a587-3b57-4122-9f55-f495ce242205",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "59a352c6-7572-4ada-8999-f7a4f3e93988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dc4b40-060a-4b72-b35f-3f2b39101b78",
        "cursor": {
          "ref": "c06acc7b-9f59-475e-8885-2518837dc043",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7736955c-2c95-4c7a-a4f7-f76150748ced"
        },
        "item": {
          "id": "28dc4b40-060a-4b72-b35f-3f2b39101b78",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1729e26f-24f6-4a33-971d-b2eaab5689c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bb735c-a86c-4365-bb17-f8e1eaeffedc",
        "cursor": {
          "ref": "6ab92477-70fe-40b9-aa06-c92c2da7e40a",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8632b688-daf2-48f2-a0ac-afd5adb1d9b5"
        },
        "item": {
          "id": "24bb735c-a86c-4365-bb17-f8e1eaeffedc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7e41544b-7561-4069-bd2e-0376f4fb97a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6155c8-96d5-45de-a169-10eec027a0e6",
        "cursor": {
          "ref": "1d6ce433-022b-4fb0-8442-12acc5e733fd",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e17126a6-f07c-4e6e-a1e7-3ce5676cd89c"
        },
        "item": {
          "id": "0b6155c8-96d5-45de-a169-10eec027a0e6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d1cb829c-5154-401b-8619-0e98ff15c7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1653a460-0c4c-4531-b8ee-dfc2b58978f2",
        "cursor": {
          "ref": "59a78e46-a057-4f55-8296-b2f65d8693c2",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2e59233c-8fe6-4a42-8f6f-56a4d2ee6ed8"
        },
        "item": {
          "id": "1653a460-0c4c-4531-b8ee-dfc2b58978f2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c74ef4d4-f3dd-43ef-a36f-2d9a91054c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e2b48e-8b4f-46a5-bfc3-748e30c3ed0d",
        "cursor": {
          "ref": "1980e9eb-790a-4116-8fef-6d04de1a6ff9",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7bd1b375-04d9-4e63-8804-492bddec232d"
        },
        "item": {
          "id": "58e2b48e-8b4f-46a5-bfc3-748e30c3ed0d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "98c1bf4c-b3df-4bb3-b5eb-00a0fc21f365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15d6700-c447-483a-9762-76ee74f80f67",
        "cursor": {
          "ref": "6a942b6a-00b8-4e5b-a13a-f6801d9d36ca",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "40153e15-aa99-4a7a-9790-87ab7488dbd6"
        },
        "item": {
          "id": "c15d6700-c447-483a-9762-76ee74f80f67",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0d794687-c452-49f0-a450-706f15551cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3830b08-45d7-44f8-be79-5df8f5111cc9",
        "cursor": {
          "ref": "a1f6b5a6-f6e9-4e22-8856-c5786cef1884",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5762dcd6-fb58-4d1c-b275-7a24ff7821af"
        },
        "item": {
          "id": "e3830b08-45d7-44f8-be79-5df8f5111cc9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c74cb52f-8ef7-4d8d-8445-f01047a95ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768bd7e9-4910-44f4-b2c5-fa0b926b2727",
        "cursor": {
          "ref": "43c6d18b-5fba-40f7-984c-05eedc0e6d70",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bfb664e1-f9a0-4bd6-89e5-dbe4681ffed3"
        },
        "item": {
          "id": "768bd7e9-4910-44f4-b2c5-fa0b926b2727",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "abf4e9a1-bd55-4aac-b863-d5bb6256f85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fde931b-8e40-4234-83ad-73e174046d9c",
        "cursor": {
          "ref": "5f140585-a1ff-4295-8896-326d3f7d6153",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e8735bcf-8987-445c-a7fc-c2d7b226c132"
        },
        "item": {
          "id": "2fde931b-8e40-4234-83ad-73e174046d9c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7096e48b-bec4-4519-931a-415159a0e3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f2ce98-47bc-4c78-96bd-b137535b320e",
        "cursor": {
          "ref": "9acc8ad8-f654-4e3e-bba1-c08cb5b428cc",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d0521404-c1c9-46be-91e5-321999abfb6a"
        },
        "item": {
          "id": "37f2ce98-47bc-4c78-96bd-b137535b320e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "716cc594-ac00-4a82-b68c-b0af258f1291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78741940-116b-49e4-9780-398c44d2307f",
        "cursor": {
          "ref": "b208fbcc-5c50-4129-8486-d84c121ddd87",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5c8833cc-7e75-4ff6-ae5f-fc3a130d0189"
        },
        "item": {
          "id": "78741940-116b-49e4-9780-398c44d2307f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e6a9f22e-c2bc-41b1-9525-38772115e5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9520e92-62c9-439a-b6d9-ac99c9eac0c7",
        "cursor": {
          "ref": "7fe9aa79-24dc-47b5-8628-23d0cd4a7b6c",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ef8423b0-a450-40cc-beb3-2adefd3e4a65"
        },
        "item": {
          "id": "c9520e92-62c9-439a-b6d9-ac99c9eac0c7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e56fc46d-e5be-4519-80b3-d6eaf5a19dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483d496f-60d7-4340-bcbc-918d0dd58c6e",
        "cursor": {
          "ref": "4fee2ed1-d790-49ff-90b0-27de4ff49e99",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "70faca00-8151-4865-85d3-8ae5c702572d"
        },
        "item": {
          "id": "483d496f-60d7-4340-bcbc-918d0dd58c6e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b68ed824-9359-4322-8c6f-56d3cb49ea18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e65c7a7-04a9-43ec-aa1d-ac9e264402f5",
        "cursor": {
          "ref": "2de9a262-50b2-45e4-8db8-4274086e95b7",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ee6e582a-1325-4e55-a956-61fed59d2e43"
        },
        "item": {
          "id": "0e65c7a7-04a9-43ec-aa1d-ac9e264402f5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4b54d3f0-482a-4af6-91bb-afe17e2e802c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d5d19a-71b1-48cc-baec-81b5f9a5f821",
        "cursor": {
          "ref": "57a89953-a557-4c68-99d6-85a6dad6e897",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7c694464-23b8-43a0-acb7-201b853f4083"
        },
        "item": {
          "id": "38d5d19a-71b1-48cc-baec-81b5f9a5f821",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "125a604a-b933-4640-a63c-3094c8c7addd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc65f8d-5abc-4e0f-9043-10499b5bddee",
        "cursor": {
          "ref": "fe0baa2f-b9d6-4549-b353-f4af910ea07d",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ad1aaf96-975d-4127-a6d6-fad1dfd98285"
        },
        "item": {
          "id": "2cc65f8d-5abc-4e0f-9043-10499b5bddee",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a568ce5b-8559-4022-8177-275a6217c1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6b324e-cce5-4839-be1c-9e58f0ba250d",
        "cursor": {
          "ref": "77138da0-f964-4bc0-ba9b-8572d622535a",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "20f23b2b-3e18-4997-97a2-3566f095dec5"
        },
        "item": {
          "id": "bd6b324e-cce5-4839-be1c-9e58f0ba250d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d35f5b8c-bb68-4f13-9da1-147b96323f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56080b8-eae8-4cb0-8684-895a6da6f691",
        "cursor": {
          "ref": "7f570163-9909-4601-93c3-9acf9ea5ccd2",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "443845d4-9402-4f0d-b266-c2a73c9acaae"
        },
        "item": {
          "id": "e56080b8-eae8-4cb0-8684-895a6da6f691",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3dfd0d9d-5f16-47b8-a114-91a20afa2f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10acc45f-f1f7-4924-8a3f-a768aaf4a556",
        "cursor": {
          "ref": "75a799e2-1eca-4bb5-a204-c0e8dcaa88eb",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9342dbdb-8416-4469-b737-c46959a0423a"
        },
        "item": {
          "id": "10acc45f-f1f7-4924-8a3f-a768aaf4a556",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "68d5eb49-a179-4b28-9a9d-15b8d2906f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46fd253-9f4b-4a16-87c2-3ffbdbe68911",
        "cursor": {
          "ref": "2e34ecea-4559-46af-a4cc-1c380a0b174c",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f24ca8b2-c616-4dbc-a224-cbfe17d049b6"
        },
        "item": {
          "id": "b46fd253-9f4b-4a16-87c2-3ffbdbe68911",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9fd02183-4f40-4180-a2e1-2bdb965ccabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00eed02c-deba-4abb-bf27-6e1be6a9535e",
        "cursor": {
          "ref": "ebb5583e-3607-4155-966f-f1bb177a314c",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8424ba40-b253-4fb6-a6bf-6c2b6e70c94d"
        },
        "item": {
          "id": "00eed02c-deba-4abb-bf27-6e1be6a9535e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "092a1c4c-5699-4ad0-8d0a-e8e6e5b16b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ded9d9e-0558-4358-ac50-3bb664110b0b",
        "cursor": {
          "ref": "5b8973ed-dcd5-4c7c-baf1-3c03b9bed023",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e631993b-78b9-4c5c-ac01-72585a107d37"
        },
        "item": {
          "id": "2ded9d9e-0558-4358-ac50-3bb664110b0b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "299ea577-c58f-48c0-804d-5deec6a837be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cf2dbe-4487-4c08-b270-82bfcda39c5f",
        "cursor": {
          "ref": "d660ee73-ab46-46a2-891a-832cfe2e255a",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "649835e0-55ea-4366-a599-c629039f9146"
        },
        "item": {
          "id": "d7cf2dbe-4487-4c08-b270-82bfcda39c5f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0072fa26-3099-4a67-acab-16f5c247c6db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e267962-f87f-452d-ba16-56cdff8a222a",
        "cursor": {
          "ref": "aeceecfc-b8ba-41e4-a976-54b1cde8778c",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d94d3d1b-fdd6-4c61-9c4f-ae0c635fcd0b"
        },
        "item": {
          "id": "8e267962-f87f-452d-ba16-56cdff8a222a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0c2a1ef0-1bcd-475b-8425-0629e3ef85f5",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 902
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9970d9e3-a20b-4e1a-a195-d8c38982a321",
        "cursor": {
          "ref": "f38834e9-30ee-468d-87bd-1649fba934d7",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "39cccdc9-7545-497a-aae5-1057e0a90b86"
        },
        "item": {
          "id": "9970d9e3-a20b-4e1a-a195-d8c38982a321",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1213a40e-0326-485c-8452-d4dcd1cb402f",
          "status": "Created",
          "code": 201,
          "responseTime": 156,
          "responseSize": 901
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "24110645-e819-4b58-bdeb-43896f46df8b",
        "cursor": {
          "ref": "26d80a8d-df01-4e7f-abdf-e2963e622e32",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9004baba-aedb-44bb-af5b-69d890039ad5"
        },
        "item": {
          "id": "24110645-e819-4b58-bdeb-43896f46df8b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bf255755-2f63-4567-8433-78498cc81eb2",
          "status": "Created",
          "code": 201,
          "responseTime": 106,
          "responseSize": 902
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f69f09b-f025-4dd6-8ec7-fb708242aeff",
        "cursor": {
          "ref": "77fdd2a9-a64e-4107-b7b4-2e88fa0367e2",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "52e1440f-aa98-481d-a613-455f8219b24d"
        },
        "item": {
          "id": "5f69f09b-f025-4dd6-8ec7-fb708242aeff",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d05859f8-de9e-464e-b1b5-cebf2837401f",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 924
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "953f1b97-b57f-483a-a5b4-9bec2da1385a",
        "cursor": {
          "ref": "1dc59751-5512-47ff-8a5d-03f13c951784",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3ddd1801-ab57-45c3-8454-4f1569266a1d"
        },
        "item": {
          "id": "953f1b97-b57f-483a-a5b4-9bec2da1385a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b2b7e590-1fa6-4322-b10c-322546de3a70",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b344d9d-b675-4507-8575-25afddb9f831",
        "cursor": {
          "ref": "682c3b3f-43f3-4fa5-83eb-d2b2f8d2329c",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "297a1370-08e0-4121-b915-534c0e01cd8e"
        },
        "item": {
          "id": "6b344d9d-b675-4507-8575-25afddb9f831",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a521a250-adb6-42ea-8996-8302825ae360",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 902
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d2e18a-7b21-4148-84bd-baebd7138102",
        "cursor": {
          "ref": "498e3950-c6d4-4442-a4ef-437f61ee1cb7",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "884393af-53aa-4f6c-9530-269423edf790"
        },
        "item": {
          "id": "96d2e18a-7b21-4148-84bd-baebd7138102",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "826c7401-e224-4f2c-859c-dc9c95e1be01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12d81d3-50a3-487d-bb8c-79337feaf7a7",
        "cursor": {
          "ref": "68b9dd6a-7510-4ae1-b899-0183f9e4b677",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "183d8bc8-4c1d-4113-9825-6defa9bd05b9"
        },
        "item": {
          "id": "f12d81d3-50a3-487d-bb8c-79337feaf7a7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "79b60fd5-26d5-4eb5-9196-281387c2fed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e783bbd-3d05-40a7-82f0-c5065d3ac044",
        "cursor": {
          "ref": "99e23dfb-45a9-41f1-8275-e341485dabd4",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5c68e84c-060a-480c-ac57-a4fba4a8dad2"
        },
        "item": {
          "id": "8e783bbd-3d05-40a7-82f0-c5065d3ac044",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "43ab9789-576a-46f6-96d0-7a29e3353c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abbecff-974d-4e6c-9e08-bb7bcdabfe71",
        "cursor": {
          "ref": "e230c97b-265f-4f93-ab6f-3337423d7ded",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e28d2618-51ba-47bd-a624-41f4dc166f5e"
        },
        "item": {
          "id": "4abbecff-974d-4e6c-9e08-bb7bcdabfe71",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4a275bfa-6c7e-4135-b5b3-29aa182c8512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de39efd3-a393-4fae-955b-8f3fe72844a3",
        "cursor": {
          "ref": "44334c5d-e7bd-4af0-be44-cdf151d84a4e",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "42385966-e11b-443c-9093-7a7ebf38c5ec"
        },
        "item": {
          "id": "de39efd3-a393-4fae-955b-8f3fe72844a3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4030df25-46da-4f8b-959c-28c6446256a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c869dcaa-1af5-4dc9-ad95-c97448e54002",
        "cursor": {
          "ref": "0edf81fb-2d57-420a-9c59-bc958b4eff1e",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "38ba76c2-dfe5-456e-9aff-da9006692089"
        },
        "item": {
          "id": "c869dcaa-1af5-4dc9-ad95-c97448e54002",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4d7d7aeb-e9df-4a77-a48c-a87b3b462cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29ab5ba-8127-460c-b9c4-b952ca681abb",
        "cursor": {
          "ref": "94f722b2-fb6e-4b5a-a7b3-39ba2e2eac7a",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5316179e-fa17-4ef3-ab12-240795fcb911"
        },
        "item": {
          "id": "b29ab5ba-8127-460c-b9c4-b952ca681abb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ce7ce496-7757-47be-ad8d-2210ea77bf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd46c536-52d1-4ce5-916b-ea6f9124d07a",
        "cursor": {
          "ref": "f5e60c77-08e6-476d-a264-13bed02b094e",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "eee438ec-b1bd-4eda-8dba-ec3dec5f606d"
        },
        "item": {
          "id": "dd46c536-52d1-4ce5-916b-ea6f9124d07a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b37c8d75-b2f6-4fe1-8a06-e645fc74b055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d083cb-e3a3-417e-a839-61d4c268fbec",
        "cursor": {
          "ref": "6a18e51e-5a33-4dfc-ba11-259519cbd7e0",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bb95869c-8511-478a-9b0a-5f44af2604a6"
        },
        "item": {
          "id": "60d083cb-e3a3-417e-a839-61d4c268fbec",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5211c8cd-f4b1-499a-93bc-1f11cdf9ec7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422a3cfa-8d1d-4f7a-b629-96f438e3ffcf",
        "cursor": {
          "ref": "e1548048-7f9b-4f99-a1bd-c50f98a3bbe5",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "96c66bf4-bc26-490e-a4b1-eeaa33904d22"
        },
        "item": {
          "id": "422a3cfa-8d1d-4f7a-b629-96f438e3ffcf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "774f0671-e133-495f-aa27-8926a8326989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4917226-0b39-40c5-a921-b931857855b8",
        "cursor": {
          "ref": "39f7f93a-dc24-4716-9b99-1a0553c4b97d",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3b78144e-4223-40ba-a3df-7dfba92afc6a"
        },
        "item": {
          "id": "e4917226-0b39-40c5-a921-b931857855b8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "afd93087-f295-42aa-922a-84cdb595cac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5102c0c8-3448-4689-8d63-eff9f1b8f15d",
        "cursor": {
          "ref": "6626c9fd-98f1-481b-b0fc-98605f1c2280",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8e83aeae-f91b-42d5-b0db-8fbc6dfe7094"
        },
        "item": {
          "id": "5102c0c8-3448-4689-8d63-eff9f1b8f15d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "21196706-b749-4156-9f4f-4a33b64f99cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc530b60-bf77-474f-8348-208395cd4b89",
        "cursor": {
          "ref": "76ec2ec0-ac62-472e-b22d-6bb1356549dd",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fee89d57-8dc8-4337-bdaa-b93985f46715"
        },
        "item": {
          "id": "dc530b60-bf77-474f-8348-208395cd4b89",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3fa8dfe4-3888-46cf-8962-655cd13be990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387257e5-39a0-4df3-8bd4-30056fc86396",
        "cursor": {
          "ref": "4c1214a0-79c2-446f-8080-df4ed3ab7d41",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "721bb640-af12-4070-b1d8-7ed6ccfe3035"
        },
        "item": {
          "id": "387257e5-39a0-4df3-8bd4-30056fc86396",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4db479bd-82b7-4770-a2d0-333501b5573f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae49c77-9fff-4366-9258-fd2d6e80399a",
        "cursor": {
          "ref": "89a52b8f-bf93-4e51-ba48-178dcea60a98",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e04777e2-3dc9-4220-8d60-9e8a12dd1019"
        },
        "item": {
          "id": "dae49c77-9fff-4366-9258-fd2d6e80399a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2af45786-eba4-4684-9454-ff250efae179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b890f8bf-ee8f-4f90-92b3-b09fddaf9329",
        "cursor": {
          "ref": "27b44d87-fecd-4d5a-ac18-0cbe8a99cf0e",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c5a20c40-1c91-456b-8f34-3516ba004051"
        },
        "item": {
          "id": "b890f8bf-ee8f-4f90-92b3-b09fddaf9329",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "72d65085-6fb7-4bc1-91cc-e273f07c7a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c33bf4-cccd-46e4-a535-c42650aa2438",
        "cursor": {
          "ref": "08037d2a-275b-4021-8fef-54451be3478e",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "239a2425-9f0c-48d3-bfbd-1c9e93889788"
        },
        "item": {
          "id": "d1c33bf4-cccd-46e4-a535-c42650aa2438",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "045b9616-da7a-4675-aae9-4c43b9ce02f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9df6a2-d3d2-4343-a294-5f270e574bfd",
        "cursor": {
          "ref": "1d360d0b-0ea8-4c8a-a282-ee03e7782ff7",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "789faa46-7d1a-41e8-92bf-1f769dd4187b"
        },
        "item": {
          "id": "7f9df6a2-d3d2-4343-a294-5f270e574bfd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d9f6fe24-a855-4097-9399-ab52a57090b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148ff268-f882-4f31-a007-fc10c529a765",
        "cursor": {
          "ref": "08f6e3e6-f414-4822-a797-66f4c552a589",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f81ebed7-757e-4068-9edf-4683630bd9f1"
        },
        "item": {
          "id": "148ff268-f882-4f31-a007-fc10c529a765",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e9f7db5f-4653-419a-adff-314d7cab9906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5359d1-6035-478e-a757-71e7c0e41444",
        "cursor": {
          "ref": "2c58f35c-ae4d-4f17-9955-a597afcf37fe",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5e182cbc-b29e-4f24-af92-3c9258f690b5"
        },
        "item": {
          "id": "9c5359d1-6035-478e-a757-71e7c0e41444",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a244a5de-8b08-4b27-9c82-6a43cb07d87b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f63f9af-fe17-4e5c-a634-a37ef800d0f7",
        "cursor": {
          "ref": "99cc6b57-cc44-4e4d-b14d-447700ef0dac",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "36a36585-70c3-415b-94eb-46ce8eb041fe"
        },
        "item": {
          "id": "0f63f9af-fe17-4e5c-a634-a37ef800d0f7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b8b13f42-8eea-4898-8c6e-558858c1092e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0f548d-9c04-46ff-9600-8f1b5ff15c9c",
        "cursor": {
          "ref": "0d31ab41-6090-4fba-93cf-e22a19aac45b",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "391ac270-4da7-4867-a5fe-67a177d8a9d6"
        },
        "item": {
          "id": "7c0f548d-9c04-46ff-9600-8f1b5ff15c9c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ca9d385f-33fe-456e-9367-12239086ea7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68483e5-a598-48c8-b08c-77cae643863c",
        "cursor": {
          "ref": "631b2a51-8b12-48f9-86c4-674f2bbbfe39",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1ef60185-7a5a-4045-b8dc-8da90d5c8355"
        },
        "item": {
          "id": "a68483e5-a598-48c8-b08c-77cae643863c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "df2d1040-e358-45a8-94ea-25d87e236500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c79fe58-9b8f-4a05-bc04-7ce3ae329302",
        "cursor": {
          "ref": "d0d8c295-af3e-4ba4-a462-9704376d30e7",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2cd84e26-36e3-4581-8872-bdf79b007efa"
        },
        "item": {
          "id": "4c79fe58-9b8f-4a05-bc04-7ce3ae329302",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ccd8b7f2-f127-4e13-a405-91f9533729ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd1bab1-698a-4ff8-befa-fe87e8439326",
        "cursor": {
          "ref": "afaf0109-f011-4895-9198-ef0e29025a02",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "93fb383d-b8f8-4243-a54c-c4fe5cd87360"
        },
        "item": {
          "id": "6bd1bab1-698a-4ff8-befa-fe87e8439326",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3fefb4f8-a285-4f55-ab6c-4e6d414500a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9ba046-34c1-40ce-880f-06fb6ebea68f",
        "cursor": {
          "ref": "6be06ec0-8658-4a30-9544-1c6c82e7c31f",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "522835ed-f856-4cf4-ab5f-f84bd553148d"
        },
        "item": {
          "id": "ba9ba046-34c1-40ce-880f-06fb6ebea68f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6a8f0ded-8e8b-4917-85f4-6c33f6d179f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e264289-b216-4b4b-bb1a-ca08d11ca4c4",
        "cursor": {
          "ref": "7e5c3f7c-936c-4e16-b82a-832cebe4d88a",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "186ba318-708a-4b57-8ed4-98126bc1535f"
        },
        "item": {
          "id": "9e264289-b216-4b4b-bb1a-ca08d11ca4c4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f4b50520-e918-44d2-a418-4488fef71271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def499d7-4181-4021-8a67-db188958ff61",
        "cursor": {
          "ref": "fd414121-ffea-4d27-9871-1d70ca51a985",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e3ac84e1-1d61-4007-9197-b32dca479208"
        },
        "item": {
          "id": "def499d7-4181-4021-8a67-db188958ff61",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "39365400-2bd1-45f9-8656-125f33bdc323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0156481-0aab-4c23-905d-9839419656be",
        "cursor": {
          "ref": "ac2af040-32e8-4353-a582-61fd4d557487",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "365e973c-10a1-4b98-bbc4-16f98ac6530c"
        },
        "item": {
          "id": "c0156481-0aab-4c23-905d-9839419656be",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c7870a25-fd1e-4105-968a-eeb6f68e9c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb50c38-b974-4a17-9038-568ac3849a55",
        "cursor": {
          "ref": "6bcc4824-7b52-4a5b-8d3f-592ba270f256",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7d658bce-ea9c-4f07-8c5a-ab97a1b7c8f9"
        },
        "item": {
          "id": "ccb50c38-b974-4a17-9038-568ac3849a55",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "43f6858a-2ec6-4eed-bf0e-320356c13f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cf0b7a-8102-4e37-8296-2354ce33080a",
        "cursor": {
          "ref": "8f5a9449-15c7-44dd-815b-7848050d988c",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e89b1a5e-4790-411a-b016-f48f39591c0c"
        },
        "item": {
          "id": "63cf0b7a-8102-4e37-8296-2354ce33080a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "574eb7e7-b95b-444a-a941-a7f8ebec9930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c4f35c-009f-40af-a778-7ad628043901",
        "cursor": {
          "ref": "c9c46bca-3363-4c8e-85a8-fc93767ed3bf",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1e0d786c-7992-42a0-97e8-63368a244e6e"
        },
        "item": {
          "id": "b3c4f35c-009f-40af-a778-7ad628043901",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5bb64209-70b7-46a0-97cd-de420212e9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f24e202-3830-4d64-b3f4-d234f68c4896",
        "cursor": {
          "ref": "8ccdfdc5-415a-476e-87fd-92a1e013f6e8",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3d6a958f-5c6a-474f-ad1f-4e12b9417aa3"
        },
        "item": {
          "id": "6f24e202-3830-4d64-b3f4-d234f68c4896",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "19d4fbc5-7e73-4151-8cbf-5f2781d7d586",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c61d4e-1b8d-45a8-aa46-f2da510c47a4",
        "cursor": {
          "ref": "873e6a0b-1b4c-4b2b-a51e-92acb751285e",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d4c1826d-bbbf-4576-bbec-d3ea145667e9"
        },
        "item": {
          "id": "66c61d4e-1b8d-45a8-aa46-f2da510c47a4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0d6dda20-a358-4465-8245-f23f47b2768d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde79eae-c9a4-4e28-91df-4941bd900f0b",
        "cursor": {
          "ref": "7adc3bc9-8afd-4e8b-90f6-8cd1b5bafcd6",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0d1cb76a-842a-42e6-becf-958e69f430d7"
        },
        "item": {
          "id": "cde79eae-c9a4-4e28-91df-4941bd900f0b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7aed2912-0350-4482-ac68-64a246448253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6205ce5a-029f-4b7d-9dff-480e99616c08",
        "cursor": {
          "ref": "3b951331-8385-49d7-92e6-f041b96b96ed",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a344a6fd-2266-45d9-a5e4-19282adeb166"
        },
        "item": {
          "id": "6205ce5a-029f-4b7d-9dff-480e99616c08",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b437f0f1-1631-4e27-be5c-f1be0416d96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7df46f-2133-4a03-8c01-099fe4b76431",
        "cursor": {
          "ref": "97654703-b0cb-4bdf-8c30-cfc5fcbe199d",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ba08a22e-77fe-4036-966e-3cdbd2b5d3f9"
        },
        "item": {
          "id": "0d7df46f-2133-4a03-8c01-099fe4b76431",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "07a8c3d6-e704-4848-9578-54d3c56519ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0debcf7f-0083-4fd2-82cd-e543bb1e850e",
        "cursor": {
          "ref": "83c2792f-8265-4d1e-9fec-c10a86a80882",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9f3b2675-4923-494b-930c-9c90e60565bb"
        },
        "item": {
          "id": "0debcf7f-0083-4fd2-82cd-e543bb1e850e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "eb0e61af-fa6f-4842-aaf5-775dccee13ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d79fe2e-6f01-4eaa-8049-0853873de145",
        "cursor": {
          "ref": "0d62cca8-ab44-4d78-8411-b90c6d8d0d4d",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cdfe3c6a-2fa6-4963-8956-9823deba6b24"
        },
        "item": {
          "id": "7d79fe2e-6f01-4eaa-8049-0853873de145",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9ff67f72-1c4e-43fb-b7bc-e7b14ba02ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf612d5a-c85b-4437-82b3-cfe9d13b661b",
        "cursor": {
          "ref": "870dd3bf-428d-48fc-a86e-395cb4330a18",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "73ad78c9-bdc2-43f9-9e1a-3d640bc85ec5"
        },
        "item": {
          "id": "bf612d5a-c85b-4437-82b3-cfe9d13b661b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "16e70335-38e4-4fe2-a256-2f6829933519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6ef189-a0c4-4fc5-a272-c820dce39bbc",
        "cursor": {
          "ref": "7933b81c-cb22-4f20-8132-401944821d46",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "88dd0b9c-d82a-4459-ad43-645f947df419"
        },
        "item": {
          "id": "4a6ef189-a0c4-4fc5-a272-c820dce39bbc",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "23786268-b98d-4235-9cc3-e6d000325816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b1c956-61f4-486c-b0d8-0dfc12d56587",
        "cursor": {
          "ref": "f66ce727-c41d-4a41-8c40-d1fc3bb72261",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "68e16c91-ad3c-4cab-9f0c-e728dfdd92ef"
        },
        "item": {
          "id": "44b1c956-61f4-486c-b0d8-0dfc12d56587",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e058da51-c9a5-458a-bb17-76ce12ce9d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f588c17-61be-4e74-b8b9-ec0dc9d10a8d",
        "cursor": {
          "ref": "3ce8be1a-012c-4eb1-bd7d-c86095a3c64a",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "53281773-fc2d-4e17-bcb1-46b6c51fb5c7"
        },
        "item": {
          "id": "3f588c17-61be-4e74-b8b9-ec0dc9d10a8d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1f97f079-d47d-4e9d-b0a7-66df3bdfc659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecef639-1ce4-4c7d-b781-114f001a3dd1",
        "cursor": {
          "ref": "61f6e5ea-6f8d-4a45-bd22-1b01f2cf96c6",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "62eb1ec7-068e-4256-bb1a-40186c2010eb"
        },
        "item": {
          "id": "9ecef639-1ce4-4c7d-b781-114f001a3dd1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "abd8db87-f506-42d6-a2db-b2f4e63d0124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745efa67-7027-4e68-b282-8b97ea4790fd",
        "cursor": {
          "ref": "66d64fee-4e2a-495a-a23b-78d0c0624458",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2d8ea9f0-85fd-4441-a251-461e20bca07b"
        },
        "item": {
          "id": "745efa67-7027-4e68-b282-8b97ea4790fd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5ac8389b-db91-47a4-ae68-4c8a7132c642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b5308d-98b4-43a8-b969-66eb9f73d76c",
        "cursor": {
          "ref": "e34dd86c-c71d-4cb3-90e7-335897571eb2",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9d4af9e3-044c-4b68-8287-12c9377ed49b"
        },
        "item": {
          "id": "00b5308d-98b4-43a8-b969-66eb9f73d76c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4a0ea69b-be54-406a-9fae-a8de8546bd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ab4f94-9d7f-4eaa-bc9a-f8ca331ba806",
        "cursor": {
          "ref": "37672d64-3e8a-4ace-8d4f-de7305bc867a",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7b2c0f8d-e100-4bbd-ba8f-8504b8b1a3bf"
        },
        "item": {
          "id": "64ab4f94-9d7f-4eaa-bc9a-f8ca331ba806",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "459a2f54-eec2-4a55-8840-735a9eb00f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e10e0d-ded6-4313-89c7-d6073d088fd3",
        "cursor": {
          "ref": "f830782b-ec19-47fd-9584-640f6dec1166",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "be613a74-256e-4417-81d2-addafff96a0c"
        },
        "item": {
          "id": "e0e10e0d-ded6-4313-89c7-d6073d088fd3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "967cf92c-6f8f-4dfb-bf09-59c022842e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8928e5ff-c615-4aa1-bf71-f2d170ee284d",
        "cursor": {
          "ref": "c938c8db-0234-48ba-baeb-ee1c79c80b60",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4f6192eb-921c-431a-b52b-09a738d0305e"
        },
        "item": {
          "id": "8928e5ff-c615-4aa1-bf71-f2d170ee284d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2708ce14-12db-4d6e-87be-3de84cc9c408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b36e41a-e768-4812-96b6-8eb7322b333a",
        "cursor": {
          "ref": "7e035886-0cba-4efb-94f5-4f2368c2b147",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2a249680-336b-4673-aeca-22dce927a981"
        },
        "item": {
          "id": "6b36e41a-e768-4812-96b6-8eb7322b333a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e6b00e89-d78a-44d1-9612-d534089179a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565196a9-96fa-4ebf-8927-8d5da7eb55b5",
        "cursor": {
          "ref": "76793432-d1a9-40d8-aa46-8d0cec324186",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e6e9878b-ea53-489b-9235-a3825c5a5ed2"
        },
        "item": {
          "id": "565196a9-96fa-4ebf-8927-8d5da7eb55b5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0651ec87-3a6b-410a-98e0-e4e752e3f2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2217f57-c479-4953-957d-cd394360cdae",
        "cursor": {
          "ref": "f53d07a4-e7ac-4daa-addd-36c419738e82",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e5f3cb60-f823-4ec9-953c-2ff53eed302d"
        },
        "item": {
          "id": "a2217f57-c479-4953-957d-cd394360cdae",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9d3d8b68-ac56-46b8-8a28-250c69255ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457339bd-30d6-4b2d-b538-5e59691d456c",
        "cursor": {
          "ref": "424ee986-d819-4b44-ae64-fa97cd4024a2",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a3a5065b-7a5e-4eb8-8464-6c936618a58c"
        },
        "item": {
          "id": "457339bd-30d6-4b2d-b538-5e59691d456c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6541fe85-dae4-4471-b79a-142aa971b9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fe2548-0213-4218-84fc-851d7cabea6e",
        "cursor": {
          "ref": "1f6ed4f3-7d5b-4841-b273-2393fcc1acaf",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "55e870db-a287-45ae-b370-8bcfc5a73014"
        },
        "item": {
          "id": "c2fe2548-0213-4218-84fc-851d7cabea6e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c9b5c365-15a1-4879-97a1-1ccaf3576419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9b2818-1cb3-46d9-8ec8-446b568e6a7a",
        "cursor": {
          "ref": "9c4ac767-6111-4760-a82b-f12b294952cc",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e91c4a1a-efd7-40ae-a795-048c1502549c"
        },
        "item": {
          "id": "8e9b2818-1cb3-46d9-8ec8-446b568e6a7a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "198380cb-41ea-4e63-a6b6-ed8767480cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d356f0-21a6-423c-8110-c0e330144650",
        "cursor": {
          "ref": "05ba30b2-fbf9-44f4-aeb6-56ac216855c6",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3e9f022a-4779-4c7d-9740-a7f446e87bdc"
        },
        "item": {
          "id": "e9d356f0-21a6-423c-8110-c0e330144650",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7dbd3a2d-82ec-4e15-b604-c85600e7859e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a2b4da-442c-48df-939c-8869d8dc8a15",
        "cursor": {
          "ref": "7bd64ef7-f9bb-4218-b620-d4aabc6f445e",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9b14c48d-497b-426d-a740-186261340ab1"
        },
        "item": {
          "id": "a4a2b4da-442c-48df-939c-8869d8dc8a15",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "faf35269-6f7a-4017-9676-c4cfd9a7cb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cdb31b-1229-4c10-8122-01015d1efeb0",
        "cursor": {
          "ref": "c55d834c-f452-4af6-9147-748cf55d9a48",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6ebb4cee-e302-4dc4-b4eb-8ea2a0716565"
        },
        "item": {
          "id": "e9cdb31b-1229-4c10-8122-01015d1efeb0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "12ff0a98-44f6-493f-be9e-7118c86489e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f9a08e-ea43-41cd-b93d-59fcff276ad2",
        "cursor": {
          "ref": "23795ccb-9c31-4211-b89c-d4232188d661",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9ccdf966-0f35-40a8-a047-2fa526f0d8c7"
        },
        "item": {
          "id": "93f9a08e-ea43-41cd-b93d-59fcff276ad2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "68a0b6ed-cd4e-406d-a5c0-4117ff7ff4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a90f28-9b7f-490f-8bfc-cd7c9e13a842",
        "cursor": {
          "ref": "eb27fd37-2890-439a-963c-aabb647f30f5",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c554bbed-4986-4ccb-b897-f7df256bbf9a"
        },
        "item": {
          "id": "22a90f28-9b7f-490f-8bfc-cd7c9e13a842",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a1ef01d0-c8d7-4020-b144-594e41175fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8433bc06-a82e-4a8a-9507-700680722a80",
        "cursor": {
          "ref": "d958580f-f4d9-4cde-a799-97810d012566",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c04481dd-fbfb-43d4-9823-3a351e7aaf21"
        },
        "item": {
          "id": "8433bc06-a82e-4a8a-9507-700680722a80",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e3a8becd-06d9-4761-9880-460c3f1d9122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16239b84-6bf1-4faf-8175-ed63df6fecea",
        "cursor": {
          "ref": "837692e4-f646-410d-858c-9694a54c0b79",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2bc11e0d-c4e6-4505-9393-7656f84dfd8b"
        },
        "item": {
          "id": "16239b84-6bf1-4faf-8175-ed63df6fecea",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "056a3d76-53fd-41d4-a6b6-1afa2748baf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d81cb26-b016-4df8-aa6e-cdb66a203ec0",
        "cursor": {
          "ref": "859a8886-a136-474a-908a-79407a29e546",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6a5c9145-3038-4042-8ed0-623fe41d09b0"
        },
        "item": {
          "id": "7d81cb26-b016-4df8-aa6e-cdb66a203ec0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9a8a612e-1bee-4c9c-a9d5-5721a146c2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdd4502-9479-4de1-8193-c1ef4b7dea8a",
        "cursor": {
          "ref": "09b99443-0a25-46e8-abe5-13aa9a20ea9b",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e2dfb0af-86cb-4c11-af36-39e4149df7bf"
        },
        "item": {
          "id": "afdd4502-9479-4de1-8193-c1ef4b7dea8a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "458f5f72-dbbf-402c-adb7-8ed803d259ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134bc7ec-38d1-496a-a0d1-1005abb3e92c",
        "cursor": {
          "ref": "b0f5d0f2-50df-40ce-8a51-79121db28173",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9780ca47-ccf3-496c-a86d-2edf84b3ca6a"
        },
        "item": {
          "id": "134bc7ec-38d1-496a-a0d1-1005abb3e92c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "09036096-6e15-4032-9740-8205cacf4afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1839e1-094d-477e-9371-22192c59d6aa",
        "cursor": {
          "ref": "659dcdc4-c0b6-489c-b616-3d0d9d49e86a",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "09a89025-811c-4b2d-9d2b-e255bc15e6dc"
        },
        "item": {
          "id": "4e1839e1-094d-477e-9371-22192c59d6aa",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e15e0ee1-6e0c-48e4-8f88-5f724451d794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7785ca3-0528-45be-b06a-ef2ba01cb85a",
        "cursor": {
          "ref": "ee1ffd17-19d7-4ed9-852e-103fff2ba5e0",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f8d3f4bf-a921-49db-9f35-01af10323055"
        },
        "item": {
          "id": "c7785ca3-0528-45be-b06a-ef2ba01cb85a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f284e502-7164-45f6-bb16-8c6f60e98492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4220c2-06d9-4016-aae7-798c3f1b2707",
        "cursor": {
          "ref": "574939a2-be4e-4b0f-a091-64f767d4cabe",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b6b02d70-988a-4c9b-80ea-61ca7e848418"
        },
        "item": {
          "id": "7b4220c2-06d9-4016-aae7-798c3f1b2707",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7a5b8b10-a848-4fe1-813d-aaaa8e9ed09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb8845b-ff48-4cc5-835e-e05fbc07de21",
        "cursor": {
          "ref": "4941b922-f786-4abe-95c8-5006653e5184",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1c6f56f7-3d62-4809-b35e-87eb89f867c0"
        },
        "item": {
          "id": "9cb8845b-ff48-4cc5-835e-e05fbc07de21",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "420bce0d-52a1-46f4-a2bd-48dbf1e269d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de09aab-3707-47f9-8680-48a6b8869998",
        "cursor": {
          "ref": "e7ccf015-68b4-4a51-b066-608db035da71",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b9ee0c39-7004-4424-b895-a63164c38eef"
        },
        "item": {
          "id": "2de09aab-3707-47f9-8680-48a6b8869998",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7fb45643-6a71-4649-b0fb-6c2091390e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c6009e-63fe-444c-ab5c-b80db0f00857",
        "cursor": {
          "ref": "a1ef09d6-6fa5-4e89-8850-714bca7dfbd4",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ced8214c-4480-483d-ad64-075434ede997"
        },
        "item": {
          "id": "82c6009e-63fe-444c-ab5c-b80db0f00857",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c87780ee-afbb-43fb-b2f5-43bb2b103406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea62c3e-8e13-4f83-93f5-d065ed490632",
        "cursor": {
          "ref": "464fc4b1-e06a-4746-82f3-692d845c09e0",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "deaddf00-6cb5-400f-ab65-c35bfd09c31b"
        },
        "item": {
          "id": "dea62c3e-8e13-4f83-93f5-d065ed490632",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0db61fa8-b88b-49d1-83ff-398c4160e2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3e720d-8a8c-4f17-934d-15100f174b56",
        "cursor": {
          "ref": "ff2f447d-dbab-4dbd-b884-eb3eaf889741",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c1bd09ac-4d00-40d9-947e-b6891e3c8ae0"
        },
        "item": {
          "id": "2f3e720d-8a8c-4f17-934d-15100f174b56",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "44d45e16-1d98-4ed9-901b-707e5393ab9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f94af94-9ea2-42c6-8fb9-5833106de169",
        "cursor": {
          "ref": "2ce55ef6-1532-43ec-92fe-99c573be88e1",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0e4fb074-a11b-471a-94a2-4e1ac7108c45"
        },
        "item": {
          "id": "7f94af94-9ea2-42c6-8fb9-5833106de169",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "17e463e8-9611-44dd-b7bd-fda74952cb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecc01b4-b78c-46f5-9d5c-afd609c85a52",
        "cursor": {
          "ref": "d2acfdce-3614-45d1-bfd8-c994dd4f72f6",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cec45261-f713-45d6-ad56-b30137b907ed"
        },
        "item": {
          "id": "1ecc01b4-b78c-46f5-9d5c-afd609c85a52",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e3c94b97-ec58-472a-987b-a5626cb9d14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa760e4-7f06-4512-9285-04d96babb5cd",
        "cursor": {
          "ref": "a7ce4c83-8930-4e9e-bb86-e02f190c9c0e",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9c1a9e26-6373-4e75-a960-00d6fecb8f09"
        },
        "item": {
          "id": "6fa760e4-7f06-4512-9285-04d96babb5cd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "58998343-9a1e-47b0-a5bb-48155e373a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3f19fe-ebaa-41fd-8ec4-456b4a157cad",
        "cursor": {
          "ref": "d3afa1db-6af6-4dee-bf48-a9f6d3813e61",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a3fe4c46-7c23-4d01-b48f-d3d82ad7920b"
        },
        "item": {
          "id": "8c3f19fe-ebaa-41fd-8ec4-456b4a157cad",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "409da3bc-08e5-4b14-82fb-37d254e3949c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd74e93-c4c7-4c34-a5be-34c304c51a44",
        "cursor": {
          "ref": "fa2dda06-0d69-411a-b4bb-9f6606f16c1e",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "caf3e729-3f3b-4be8-9cec-9a03328b051c"
        },
        "item": {
          "id": "9dd74e93-c4c7-4c34-a5be-34c304c51a44",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "14e28733-a9f4-4692-83fb-ee04dcdf18c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6799f1-951e-4838-a3a9-20b88eb1bcfa",
        "cursor": {
          "ref": "5c11098d-06dd-4f25-b538-08700835c7a4",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b4ba6230-3ede-4ac0-b880-71c538f0a332"
        },
        "item": {
          "id": "aa6799f1-951e-4838-a3a9-20b88eb1bcfa",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "24262c96-bafa-42e6-ad90-c7f402c12524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97273bd1-defb-41ab-a9ae-ca7277067941",
        "cursor": {
          "ref": "c3299321-8329-4acc-9f5c-973987676cfe",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e577ddf6-9804-4a14-aa0e-53d3b8082c36"
        },
        "item": {
          "id": "97273bd1-defb-41ab-a9ae-ca7277067941",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c00eb383-3341-461c-8ba0-814bd69ea374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4b4dd4-ffa0-4e34-af91-a19b607d5cb2",
        "cursor": {
          "ref": "5bdf806b-576f-4dcd-b0ec-f843740e8e70",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "37475847-4cff-446a-8ef1-dcd02b612621"
        },
        "item": {
          "id": "2d4b4dd4-ffa0-4e34-af91-a19b607d5cb2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b7a45e1c-bc31-4d7f-828a-c359713151ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92566c99-ed9a-4cd2-8c9e-d4867a6f7495",
        "cursor": {
          "ref": "8133694f-634e-40a7-88ce-9249c4d66fbb",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "454dba8e-47b1-4c91-995f-6eefc0b29d85"
        },
        "item": {
          "id": "92566c99-ed9a-4cd2-8c9e-d4867a6f7495",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "34328e56-7988-43cd-9d35-6f66ecb3da53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfd9e74-fc7c-4243-b6ae-c1605aa54359",
        "cursor": {
          "ref": "b73ef59c-cc36-4304-afa6-c0d3175d326c",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8536b1e2-6996-4330-a9a1-6d17277b00d2"
        },
        "item": {
          "id": "7cfd9e74-fc7c-4243-b6ae-c1605aa54359",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5dc38123-d7d6-4782-8cc4-56e35658c47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e909399b-df05-40e3-a16d-e88abdd6a706",
        "cursor": {
          "ref": "da6f4165-7fd3-4480-88a6-6429cd377f7c",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "db926d74-2cc6-4356-a271-dada12bd811a"
        },
        "item": {
          "id": "e909399b-df05-40e3-a16d-e88abdd6a706",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "cbb76dca-d486-4ad7-99f5-708e286c561e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764fbf3d-1fb7-4cce-9c94-dd459302b5ac",
        "cursor": {
          "ref": "60d7cb3e-34f5-4057-90b3-d1622fb30afb",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "654239f0-fa7f-4487-b15e-542448dd597a"
        },
        "item": {
          "id": "764fbf3d-1fb7-4cce-9c94-dd459302b5ac",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "42cc9797-75a2-491e-bcff-fcb51118222e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9067f0ff-a785-44e3-ada5-13a3e61850f8",
        "cursor": {
          "ref": "7e2efd3c-b204-4300-9702-8054eb3ba6cf",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4ea8f273-226b-410b-a7b1-d6e4256c3a38"
        },
        "item": {
          "id": "9067f0ff-a785-44e3-ada5-13a3e61850f8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5b8aeef5-7f87-4193-816e-78858937eefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c35f55-c4d4-439c-a95b-fa1cfa0f8c4b",
        "cursor": {
          "ref": "a08c6bd2-d354-48c5-abe1-17ae7c0d3da2",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "95141c36-e028-4193-9096-a62c22e9c161"
        },
        "item": {
          "id": "b9c35f55-c4d4-439c-a95b-fa1cfa0f8c4b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "809c949a-815f-41e4-81a9-86b457a279e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa46183-515d-425e-8233-5736a55c9625",
        "cursor": {
          "ref": "9e341e85-c4b5-4536-b4d9-1e8e946eb378",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a02e9900-cc36-41a0-90bf-94ce857f0a6b"
        },
        "item": {
          "id": "9fa46183-515d-425e-8233-5736a55c9625",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "50929341-bc06-4085-871b-bb53d91ca253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ab44db-a83b-47e1-b77a-1bd3a6328743",
        "cursor": {
          "ref": "2e773809-c92d-4d0d-841d-7f8368865f99",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "305166c1-7252-4449-a9a4-0dc5f6e58d7e"
        },
        "item": {
          "id": "d0ab44db-a83b-47e1-b77a-1bd3a6328743",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5413007a-3153-47ea-b8dc-ec661b429a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfae27a-141b-48f0-b0e0-0c1e64a3c31e",
        "cursor": {
          "ref": "5c828360-e7b1-4467-933c-7a6083aa2895",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9ca3465a-cc02-45b9-90af-686fd7d7f918"
        },
        "item": {
          "id": "8bfae27a-141b-48f0-b0e0-0c1e64a3c31e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e5a518d6-3a42-42b0-81fd-d84dda91cef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab55322-5eae-47fe-8180-3f169659ae38",
        "cursor": {
          "ref": "39e28012-ced6-41de-8562-0d269644f70c",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "da9fbd22-c76b-4d7a-95db-f2acf1af8d63"
        },
        "item": {
          "id": "6ab55322-5eae-47fe-8180-3f169659ae38",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ef6a7991-aa6f-4a11-bfc9-daafc18b02b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee6be87-c97f-4376-9e54-8db24e8da2ea",
        "cursor": {
          "ref": "ed4776cb-2c12-4b04-86f7-864954546441",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3d082ba2-a53d-4981-8239-efd29d6054b2"
        },
        "item": {
          "id": "bee6be87-c97f-4376-9e54-8db24e8da2ea",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a030af92-ec7d-4a70-863e-90ffeb297e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3e20fd-304a-4ca6-a5ff-b0385da71a8f",
        "cursor": {
          "ref": "5afaf524-b2ca-49de-86c3-fc37e0da114e",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0365a015-7b99-4e36-8206-21befbf747ad"
        },
        "item": {
          "id": "cb3e20fd-304a-4ca6-a5ff-b0385da71a8f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "72f83fd0-2520-4c23-81a8-fa3fdad19569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74723a6a-cb95-4572-bc38-0984eba44657",
        "cursor": {
          "ref": "11945dbc-c67e-45f2-8424-d808d5cda5aa",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1c8d637f-499c-423d-9ed5-091d1e6689ac"
        },
        "item": {
          "id": "74723a6a-cb95-4572-bc38-0984eba44657",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "70f3aa92-4efd-40ef-9bf5-913ea40f96ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abc88a4-bd49-4f73-83ec-5d597632135f",
        "cursor": {
          "ref": "875761ac-fbb9-4db6-ac6d-bd27b337704a",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a295f0ee-b20e-4763-87fc-c3b653dfdd8a"
        },
        "item": {
          "id": "4abc88a4-bd49-4f73-83ec-5d597632135f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bc327a66-175c-42c7-8af4-9146f4ba92c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38660f4-379e-4917-99ab-fa1b87c06565",
        "cursor": {
          "ref": "6455ace8-fc72-4d82-968c-1ba9269f9058",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b6220bc4-0ba5-421f-9f9b-f15cc568a2bb"
        },
        "item": {
          "id": "b38660f4-379e-4917-99ab-fa1b87c06565",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9370bd27-983f-4823-908d-a622e6e2a5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1029113-37f7-49db-a061-11598bb4c0ba",
        "cursor": {
          "ref": "4b501940-05d7-435b-b67e-2bbc1b919507",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "597df4c3-c67c-4092-829d-0298832fe998"
        },
        "item": {
          "id": "c1029113-37f7-49db-a061-11598bb4c0ba",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "845127a1-52c7-4bb8-a3f7-447815b55336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d665aa-2c11-4d6f-9efd-bdb993f65af0",
        "cursor": {
          "ref": "9a6c3668-cec5-4173-aa82-bc2ba59a256d",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4b6a8f41-0f1f-4d33-a274-5c7e9fa7ab68"
        },
        "item": {
          "id": "26d665aa-2c11-4d6f-9efd-bdb993f65af0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bd9c1315-7dea-4c7f-922f-e1ae5be26dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c426e11-d0b8-44b3-b42f-5927809853e8",
        "cursor": {
          "ref": "83fbbefe-454b-40ce-8d2e-3b312a7f263d",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3a5b1f48-9047-4c65-83d6-d36791772d17"
        },
        "item": {
          "id": "0c426e11-d0b8-44b3-b42f-5927809853e8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d3611409-a9a6-4190-9ea2-a32c7363f914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5382303e-b055-4e32-bae6-fce3e8063aa6",
        "cursor": {
          "ref": "a7e70d2d-73b6-4c5b-a9e3-a9ff2ac1075c",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1608400c-dfa1-43c8-8935-c155c010fe85"
        },
        "item": {
          "id": "5382303e-b055-4e32-bae6-fce3e8063aa6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5af376b1-74d8-4a3a-b1b7-25afa26989e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6d7a31-1933-476d-95a4-d1598a5dc948",
        "cursor": {
          "ref": "a93ae463-6ba8-4ae7-9198-acefbd677397",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cf139ac6-3faf-452f-9a86-3830e447cba6"
        },
        "item": {
          "id": "ca6d7a31-1933-476d-95a4-d1598a5dc948",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c2d1443d-e697-4822-842a-01e9dd8804e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bc0521-b2e9-4c05-9373-18c22e781c24",
        "cursor": {
          "ref": "593841a6-43ff-42c7-b2c6-d0b72d6e9ec4",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "665d12a3-cce9-4ede-993d-1b2c5feaa3fd"
        },
        "item": {
          "id": "19bc0521-b2e9-4c05-9373-18c22e781c24",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "eb1a64cd-c061-40b2-97c6-e8c81e786e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074d9469-3303-48f7-acd5-acb7c049b7cb",
        "cursor": {
          "ref": "52350a35-ebaf-4b3b-b0de-92e47dadab0e",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "84c40414-f607-4ed6-8d51-ca4fc2476820"
        },
        "item": {
          "id": "074d9469-3303-48f7-acd5-acb7c049b7cb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5fd71b9e-b658-4602-93d0-7cc98dc46a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a996405e-2205-4b68-9a41-f7edb912ce97",
        "cursor": {
          "ref": "cea83e19-86e5-417e-809d-d085c12ce629",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ddd11f59-dc5f-45bb-bbc7-cfcd274b273e"
        },
        "item": {
          "id": "a996405e-2205-4b68-9a41-f7edb912ce97",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e7757cd6-df2a-407b-a767-d41352313608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c5bb42-73ed-4564-8399-d7ca11b5eac2",
        "cursor": {
          "ref": "6448f483-346b-45bc-9e08-393b4e6f8091",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "18431cb7-9586-4afc-93fb-f50364cd0e21"
        },
        "item": {
          "id": "81c5bb42-73ed-4564-8399-d7ca11b5eac2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3651d4dc-0983-4fac-a0d4-25f8e4aa3b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa227b3c-9ecb-4b37-8420-a9071150549f",
        "cursor": {
          "ref": "6b4f4121-11ff-4f38-bd8c-6d33bbc476e4",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "92946a17-2f34-4e08-baf4-504ae892b043"
        },
        "item": {
          "id": "aa227b3c-9ecb-4b37-8420-a9071150549f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f1976e3a-bbd9-40e2-ae68-2a13d2c0232f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2720a186-c0bb-4587-8e28-13b16e9c9d5b",
        "cursor": {
          "ref": "4e2395b7-0f19-4a83-b3bf-e6ba9d681b56",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e1fbc370-c2ce-4b7a-a87c-26c433242a8c"
        },
        "item": {
          "id": "2720a186-c0bb-4587-8e28-13b16e9c9d5b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d1d30a1e-c2c8-44c4-b18f-3e7df306c4af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49320ab-33ae-44dc-8466-3accd28dcb1e",
        "cursor": {
          "ref": "760d0f8a-df37-41b8-ac61-2ddddf373521",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "13f34fcf-2b3f-45f0-9698-20f5c9fd9241"
        },
        "item": {
          "id": "c49320ab-33ae-44dc-8466-3accd28dcb1e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7a368482-6cff-4112-8628-8c4916d0d80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baafc4fd-7a99-4b14-9f03-4911c71237c0",
        "cursor": {
          "ref": "d9c9cfd6-4353-4fa4-8bd2-d9cf85c82e3a",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1de1a0be-c743-4beb-be4a-e91260566032"
        },
        "item": {
          "id": "baafc4fd-7a99-4b14-9f03-4911c71237c0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "09293638-9eea-410a-abe6-cf138ca3e1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595e01cc-45c8-4a92-b5e3-6d745a05d91b",
        "cursor": {
          "ref": "5b18d9e9-4ea5-46d3-9e52-ae3dfe13ff54",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "465b6e73-8d89-435d-b82b-80e8b4a08899"
        },
        "item": {
          "id": "595e01cc-45c8-4a92-b5e3-6d745a05d91b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d7f9ed6b-a596-4d67-8344-621bfd723fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79163e2-432f-4f75-807e-cd94f89d8cd0",
        "cursor": {
          "ref": "bb9b0119-b5fe-40dd-9884-5ea9e0b11e71",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9bd96590-051e-41ea-94a6-59f1f44de9be"
        },
        "item": {
          "id": "a79163e2-432f-4f75-807e-cd94f89d8cd0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b4fc977a-d08d-454f-b5d9-9296414bc863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eff62fd-5150-421a-922c-fd536d52e0c1",
        "cursor": {
          "ref": "9577ad61-c9f1-4fca-be35-7f0ef4b7f49c",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "04bc50bf-0721-4558-95eb-d59232ec584c"
        },
        "item": {
          "id": "5eff62fd-5150-421a-922c-fd536d52e0c1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9d1fc3bc-4e85-4236-a9e5-2ff6caf41bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f61c43c-c29f-4d3d-936b-557ce32c5092",
        "cursor": {
          "ref": "c08e240a-ce9f-4b23-8534-1c85b68d7038",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fc72fa65-946b-4ceb-b8b4-24596532de0c"
        },
        "item": {
          "id": "0f61c43c-c29f-4d3d-936b-557ce32c5092",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3d8c0354-f0ac-4c79-bc31-933b44ae94d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f847addc-1478-44f0-861f-d6a8ccb31f3b",
        "cursor": {
          "ref": "a7484a25-a34a-488d-b29c-71a7c1157d1f",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "431628a9-7509-462e-9b3a-71e9c05df777"
        },
        "item": {
          "id": "f847addc-1478-44f0-861f-d6a8ccb31f3b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "175bddc1-56ca-44ce-b6d0-dfc8bb928e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499aac3d-9653-48f6-9317-b9b403c162ea",
        "cursor": {
          "ref": "7b3adc86-3c4a-4fd7-906d-541b1b7ebf79",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1016bb7d-0283-4c77-ad8e-baa01d787780"
        },
        "item": {
          "id": "499aac3d-9653-48f6-9317-b9b403c162ea",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d06f733b-1b9c-47c8-bba3-dd5fddeba83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac427d17-fcdb-436d-ae12-54184959f40b",
        "cursor": {
          "ref": "488cd8ed-b072-4c1c-abe9-4c9f8cec35ea",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "754b151e-c3c1-4998-9105-047aab00a666"
        },
        "item": {
          "id": "ac427d17-fcdb-436d-ae12-54184959f40b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3afee9a9-a846-46f4-b99e-328b77a7e8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966220ea-73b0-4004-bb36-260d325ab1eb",
        "cursor": {
          "ref": "084ca9dd-c912-4c8b-a77c-3e6bac3e5b27",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4faa1498-4e89-4a82-80d6-0f0882aadb6a"
        },
        "item": {
          "id": "966220ea-73b0-4004-bb36-260d325ab1eb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a6b46c01-e9f2-402f-ba0e-177229a7023d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d011eae3-59f0-481b-820d-d62bcf752c2d",
        "cursor": {
          "ref": "f22b49ef-659b-433c-9b42-496ca87c2ab0",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b096a273-974f-43ba-84ff-085187202945"
        },
        "item": {
          "id": "d011eae3-59f0-481b-820d-d62bcf752c2d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2e033546-41af-492f-889b-d63fdf4ad0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526fd815-d462-4ae5-985b-a8ea1c5f109a",
        "cursor": {
          "ref": "61561ec4-bc67-40df-86af-9d73f32c5c2d",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "448eb34c-5855-4f40-81fc-75569e153d97"
        },
        "item": {
          "id": "526fd815-d462-4ae5-985b-a8ea1c5f109a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7ca994fc-9673-4be7-a9da-1d53a93bb72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ee0b77-60df-4447-a7fb-529820e5a10b",
        "cursor": {
          "ref": "1c7980de-8b17-4084-8adb-16ea6245db9c",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e7ee9c89-302c-4848-a8a3-792727a1e946"
        },
        "item": {
          "id": "86ee0b77-60df-4447-a7fb-529820e5a10b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ea5e9a32-b65f-4c74-8844-559008aad679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78629c0-ee36-4163-8ad5-75bb1d853bc7",
        "cursor": {
          "ref": "5d6a113e-6fc8-4cb0-99bd-1bd1b6f2cd43",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ba848dd5-4f74-4c85-8a07-3905c1e31820"
        },
        "item": {
          "id": "a78629c0-ee36-4163-8ad5-75bb1d853bc7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4f40f712-e9b6-4739-aa49-668c6a7c7716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a7145f-a7a4-484f-bebe-a3165a976546",
        "cursor": {
          "ref": "8e5afe9c-21f2-41de-a1ea-29c1b7fe79c2",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "431e91b6-0b83-44a4-9237-259f2839d618"
        },
        "item": {
          "id": "87a7145f-a7a4-484f-bebe-a3165a976546",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "68ae60ca-d6ee-494e-88a4-ca0eebf3d743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dea9689-7aab-4902-8695-2917d89b202a",
        "cursor": {
          "ref": "eff62450-9535-4456-831a-20746ded0843",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d8232302-4528-49f9-aba2-4ff8c16b4e3a"
        },
        "item": {
          "id": "1dea9689-7aab-4902-8695-2917d89b202a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "317b8766-af56-4b30-a6bd-d85db5b7953f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db87676c-3c6e-489c-b59c-0cb667403142",
        "cursor": {
          "ref": "bdf06a7d-3717-4bbc-9e4b-71de4a959f8c",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a3063f9f-af5f-41cd-bf52-cd86ed2e90f9"
        },
        "item": {
          "id": "db87676c-3c6e-489c-b59c-0cb667403142",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "eb7de6de-4f75-4705-901c-4895f8e1e05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cef71b-ec61-4119-b544-b583a3b4e463",
        "cursor": {
          "ref": "a82aea35-2550-49a7-907c-a22531e375b5",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1e5bc0f8-04d7-4e54-bba7-6a6dacdef2e5"
        },
        "item": {
          "id": "55cef71b-ec61-4119-b544-b583a3b4e463",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "42306cd3-3ca3-4145-8d92-8a794ffc6f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424196e0-6a7f-4fe4-bebe-4ef41efdd13b",
        "cursor": {
          "ref": "e781c352-d7da-4ced-89d6-6b68d0ce2613",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3d452b43-72bd-46a1-bf8f-a885d94ea552"
        },
        "item": {
          "id": "424196e0-6a7f-4fe4-bebe-4ef41efdd13b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4535b243-d818-4870-bcc7-ee6e18da0ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da668f82-1603-490f-995e-b45686b619b7",
        "cursor": {
          "ref": "f546dc42-5f72-45c7-ada1-f11ca4d1077d",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5d306d9d-ebce-4a56-8ba3-e341862dfd4f"
        },
        "item": {
          "id": "da668f82-1603-490f-995e-b45686b619b7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a59fe9f8-8c7d-4ab2-a1a7-61363f5c7d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebf9779-999b-4617-81ce-121451000368",
        "cursor": {
          "ref": "e7c620d4-8959-4458-8317-6059aac714eb",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9e2d9755-54f7-4a8b-89c4-467fec7b0160"
        },
        "item": {
          "id": "3ebf9779-999b-4617-81ce-121451000368",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ccdb696d-c50c-44dc-9481-56f50aa755af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f57c24f-9c71-4104-a8ea-9f970ef993b2",
        "cursor": {
          "ref": "ebc6017d-4654-48df-b01c-671eba36be86",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "af09e77a-0d07-434d-a75c-e6c211164c01"
        },
        "item": {
          "id": "2f57c24f-9c71-4104-a8ea-9f970ef993b2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "78590d17-f26f-4a7b-b824-c5651fb4fd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e156abe8-b1da-459a-bbf0-1a84edf2e5b9",
        "cursor": {
          "ref": "21765630-3ae6-4e78-9598-4a2edb4725d0",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3389da65-bb9f-46f3-a27d-260c72b99ab4"
        },
        "item": {
          "id": "e156abe8-b1da-459a-bbf0-1a84edf2e5b9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c5007725-1fea-4d8a-bb1c-7940523d8853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29450ec1-f1f7-44cc-9612-a7d4822f46d1",
        "cursor": {
          "ref": "c6eb9e6b-0411-4992-baeb-3a3411891241",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6a8217fa-10ed-48ed-b95f-8dfb3374069e"
        },
        "item": {
          "id": "29450ec1-f1f7-44cc-9612-a7d4822f46d1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6db54a04-b12c-451c-aefe-88fdae0f08d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42021993-0078-4e0b-b79e-cc56e733b16c",
        "cursor": {
          "ref": "c63baa7e-8b8a-4fd6-98fb-a16586f19ef2",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0fbe8891-fef1-457d-b5a1-9efe64595b50"
        },
        "item": {
          "id": "42021993-0078-4e0b-b79e-cc56e733b16c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6586db1e-92c1-4838-a457-2bddc0730e79",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4b0a53-7e24-42fe-9d7c-cfa352484787",
        "cursor": {
          "ref": "c62d10da-b72f-42f2-a85d-cee4e6bf516f",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "692bac41-2dd6-428d-a9ff-516ff23e5b3c"
        },
        "item": {
          "id": "9f4b0a53-7e24-42fe-9d7c-cfa352484787",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8348496a-58ca-4fdf-be06-bdf98fc9cfdd",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "128b2030-077e-4958-b03d-08adb7668d2b",
        "cursor": {
          "ref": "dbce94c8-7b24-40cb-ad10-0d185618236f",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9a081cde-76ae-4198-9a57-1e372ffeca9d"
        },
        "item": {
          "id": "128b2030-077e-4958-b03d-08adb7668d2b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b7b3fa3e-89ad-4cf8-8b5e-3ba680470cd5",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb405b18-a04c-4335-8494-79deb4a9544e",
        "cursor": {
          "ref": "44210606-bee1-4f1b-81cc-1dc6b6f6df4b",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "87a5c230-276d-44a5-a1d5-10ba1e910a79"
        },
        "item": {
          "id": "fb405b18-a04c-4335-8494-79deb4a9544e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "25f49eb8-4b6a-4e43-9b90-aad9285d0062",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb405b18-a04c-4335-8494-79deb4a9544e",
        "cursor": {
          "ref": "44210606-bee1-4f1b-81cc-1dc6b6f6df4b",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "87a5c230-276d-44a5-a1d5-10ba1e910a79"
        },
        "item": {
          "id": "fb405b18-a04c-4335-8494-79deb4a9544e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "25f49eb8-4b6a-4e43-9b90-aad9285d0062",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042519d7-5a04-4587-b093-a1b3ea2755c7",
        "cursor": {
          "ref": "1044c496-a975-4dfc-aa7a-5bf43477d9a2",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c06c1858-cd23-4c62-acbd-80b3a37a5027"
        },
        "item": {
          "id": "042519d7-5a04-4587-b093-a1b3ea2755c7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "94c3d56a-7487-4191-b3f8-5277a3729525",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9619836f-6da8-42c9-a957-4d4ab0107631",
        "cursor": {
          "ref": "980cf5a0-5287-4071-85f0-c257b2ade083",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "60e28e03-8669-497b-b1e7-2a4ca96f6433"
        },
        "item": {
          "id": "9619836f-6da8-42c9-a957-4d4ab0107631",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "abab09bb-1b3e-499d-a607-e4c5dfa7c74f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}