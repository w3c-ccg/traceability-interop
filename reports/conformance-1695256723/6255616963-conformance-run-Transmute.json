{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1bc02e4e-35ea-4e49-9dac-fc429a970e12",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b89daf82-a177-4ed7-b485-bd182fd35725",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c917c64-dcdb-427d-bc46-47f1b6f988d4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "efcc85ad-f7c3-4d77-980a-115f2df109ca"
                }
              }
            ]
          },
          {
            "id": "c4c8e132-2149-48f6-b7e4-6aee39a8fd3c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a53536a-c612-44f7-9fcf-fe1213f452d7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d102db2d-1033-4e69-8b6b-9a1b0d4b4775"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "59cb84ea-640d-4101-9290-666fed44858f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bb139e9e-e52c-40b0-a052-6ededb188ee2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "63c89e2e-c468-4700-bac1-1fc71890c88c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1bafdb2-8512-400d-baf9-c4b8a53df2b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a4b07a0-1180-4745-b708-81fb6a1f09ca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "68a704d8-df9a-4e85-91cf-dfa2beb283e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f9e19db-4285-42ff-b899-9a846995de59"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6eac1a39-f5c4-45c2-9d99-ab272da1c3af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8eae086e-34d5-4108-a752-ce532ac48334"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5be39df-91e4-4e03-8eff-3c96c661ad7a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "404cae88-0cdb-4a3c-8f2a-9d9e5a2b8342"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "938dcf71-6157-4f78-bdb5-61208928f7c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9e3356f-cf45-46d5-88bb-6483e3dc6aad"
            }
          }
        ]
      },
      {
        "id": "2085c153-d71b-44f3-a621-e0ac609f7c91",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6e13284d-9a19-4ddf-a16f-3312e614086f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f780588d-a319-473d-884e-ef23c2c8dc97",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c18c0b36-5fef-4709-a24c-33e3ebd6cc74",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c280bf09-f50d-4ae5-9cfb-ee8fe423b4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b09caff0-48bc-49fe-882b-20314251c28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0612a55f-f412-499f-90d7-e023612b5132",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf7e556-c7e7-4b94-9f7c-500aafb845e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f6a3ed1-b878-486b-acf7-fd377239086b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0eac55-c929-4887-9edb-6315d86b5b97",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ae96cb-bc42-4d7d-85e7-8cca88314de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96204803-3a90-4f20-b234-b1946d1e259d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "158e2c2e-71b5-4c22-82ab-a0794598e8c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd589fc6-ab63-4477-bbcd-b196af9a8699",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43db688a-4026-43d5-aa1e-d19b1fcf9f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c880d4a-3e72-42bf-b8c4-0246939825b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed6527e-cca7-4cc9-9e9b-0e4362cce0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c051ca61-77b1-4a6f-ba1e-c7ef9fab57df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f856f52-3735-4644-bbdb-d88216840cfb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2690fa0d-0ea9-4406-b5c0-0caa39571f88",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7df1a3d9-dd58-4d16-850e-710ae5cf152f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a00b5e4d-ca4c-45f7-825b-cfc85e286259"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9be14cd-531d-444a-8fc4-4e4b9efca585",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "edb41c20-e94e-44f9-a505-89d9381f82d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d422291-023d-4a86-9626-cb1e04587fca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28ec384c-65f9-4bba-9f27-8f5957d0e0c6"
            }
          }
        ]
      },
      {
        "id": "181e2706-360e-4218-969e-2c6c7dfd0274",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "418be1a0-c5e4-4dc5-b449-d1a7c9b939d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e7ba72c-24e1-4644-bed5-0b0b0d760845",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9cd87b02-55d7-476b-b591-22cf6d17b121",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad9898b-fd3d-4f9a-a9e4-f92f0e7118b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8925a69d-d003-4fbe-9549-c15915ae2e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab4bc3e-5c86-41e1-8e3b-bfdeb8d06d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf055b2b-252a-4246-a3c0-a0d6ba68ec92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a13c4e-dee0-40c3-a9ee-8445dadc11f3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13afd34-b384-4b0d-a0df-67114cfbf88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de1bbf50-28cb-4993-a45f-2b82c8c1beeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2b8aa4-2e23-41ed-b277-152cd46abf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3045edf-af04-4141-a478-f54b96ca1c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24afce40-d4f1-4f95-b9ca-efaed5672b17",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540fe0c1-19b0-4b0d-ae09-19eabdd5a629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262b70b7-b347-4524-8b8e-89267a8fb2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475e66d7-0c0b-4a55-aa61-bc2af6764bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "108d6137-165e-4029-9bb0-592f12461ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20da9e22-3884-46dd-a68e-16d6eaa6a5c3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4324cfa2-315b-478a-a36d-ae76f8fe73bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8dcfcc-60c2-41dd-8106-960b0888f1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a6cac7-4941-46f9-b463-3058975157b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be3a5394-c654-4a7f-8064-efd8ea8d89f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07ba448-ae15-446f-891c-1d9dfaf90d06",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9193c442-11a5-459a-b98b-80e5cb26f66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3922977-ec13-4dd5-a40c-db94ab8a3bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdd9310-45e0-40da-8146-d2346e4c2434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0619b3ce-0485-4d08-9e7c-0d24ee491d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfaa553-e4dc-4355-878e-2de7e493dcf0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463c0a68-96c9-4644-b29e-fcb0386800c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ad6e96-ef7b-41fe-9bc3-fdb9c040bad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb84e014-3b75-43f8-a38b-ff7fcce279e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc3766d7-dc6e-458c-8c69-2da62516c6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e52f3f-9bf8-44a8-9c40-918f9f746114",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c191bb7-96ff-4692-a8f7-a40555f1bb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8323b473-9e43-4c7c-b3bc-b3aa093d2192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1d45be-48e2-4de6-bb33-9d1b882ff70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adab2ce4-b3bf-48ad-8beb-574ed11fbd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206e91b0-4ece-4436-9715-976640b613f6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f837647a-f1ff-4ecc-afb1-96192d6a5bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda38268-036e-40fd-a594-eab64d50b299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63a96d8-1fad-4c2e-b4b3-25335b33eae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfa13251-63b5-43f2-befa-6f21549123f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e82cb63-ab65-4506-bfc5-7d2879326741",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2569022-ee48-44ec-9e11-d90a2c151ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2febedd9-1b91-42fe-aa40-13ee09ba1711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d107602-4c9b-4cd6-9b0c-8837b36aec5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffaf6eff-96d7-4ea8-81ae-26129d104149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfe35af-c957-4a43-b9db-ad63c3884ba7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86843002-36f4-4967-aeb9-56c7be395b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533ba22c-e796-414c-afd4-c8ffdd67f1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9af689-c1f4-4180-aabd-f66723324e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c35f38f2-ccbe-4eef-a1a5-459b6daf0519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468bb536-4341-47db-bb73-8b1ff6d47046",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163f9256-7495-4d6f-bd39-ad1c313b56d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a76d74-1c50-4d7e-98a0-9f9fb920f8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7011ced0-bce3-4198-85ad-92e4c7358250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6d92412-94e1-49d1-8aab-8f8d940a1699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2e9fbf-13b1-4024-b331-67b5f8f1c842",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418a7920-c35d-41e6-b5e1-1d95250dc623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd04aa12-9013-44b8-9faa-108839cca329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c744b0cb-98dd-4dff-8fc3-e21b6f268957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "616ea214-808f-415f-97ab-2ca7497bb3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce64d7b-7745-4551-a719-c300864413e4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9603411-abd3-40c4-8a21-d618fce7c203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc35fe48-3bfa-4b57-935e-f119008c7cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6c65b7-96a3-4c93-82a7-9f70fa834100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c74a3144-8e66-491f-9a52-cee9e087e04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad46f67a-f63a-4e4b-9861-59fc317798e9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba686594-abd9-46c9-b90f-797728a4ffb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba0ed12-e480-4b23-b183-9cde154bcffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3380b22-f11c-465e-adec-10101781e086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33289413-5eb3-40ac-a989-141dedebcb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300eaa0a-c1a2-4af9-9db8-2f7dd1e555cd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bef96f-03f9-4f71-a027-d2af8ce4a55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e276ff78-4634-4339-95bd-e13ac5ec2937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f24f16-435e-49a2-930a-5b2ee615cc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deb3f199-7270-4b20-9c48-493e14975271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6c8818-8669-48b2-a7d2-3b4d68346086",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042f077d-b369-42b7-915e-e629bd13091e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8dc77f-4101-4c9b-8a91-e3e03d733d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343993b2-11d6-484e-8b6a-3c09322f43fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b82cc491-06e1-42f7-8176-5ae57a75715a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24388da9-2308-4095-8d43-925287ca3d72",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d823c9-b775-48a3-919c-dfdc9631f795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4703a09d-6aad-45b9-af41-88f575bf084d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05e36a7-d8d1-4f30-80d9-1c012036a88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b79f4460-3450-4403-8f45-f35653f22f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6210be-9e00-4b69-8589-3f2cd864b68d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356d7c8e-94dd-4bfa-9f7c-62a6b596b137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6702ab0a-e674-4c6a-aa9d-c56bb3abd3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ed72ef-579d-406a-bfe5-a432dc6edb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c888729-c39e-45ac-9709-8062554b680d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1da6f44-1d03-4fa9-a44b-07084a19433c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f0d2f7-b4fd-427f-ad3f-713d9374628f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc0aa8f-154e-4795-984a-736e425e4f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458fe04d-c825-440e-b1bb-580080be9e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d45c2e3c-4a32-4271-84df-b5240e92647e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d95731-42c3-4852-bf92-6b67ec819816",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c043180e-24b1-4282-b003-bc45f156f0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972313c4-4d28-4dbe-8cd7-fb886ae50b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46b541c-32d2-4e05-ba2e-7da682393501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7d18cc-5782-4d2a-8f75-1527cf901120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3de7afa-e590-4b51-a67e-8eb7fe68da11",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f517c2-8606-4f19-aec7-962092728bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c195a7d2-91ad-4bee-b47f-b0b0bfabd9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e103c30e-0602-4126-8bfa-7054b39e6019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "590adf55-fa52-4dd7-85b2-30eda23393da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee43ec1-2a27-4962-8408-b626209432a1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba95610-9b41-4e9d-99e7-65541a486e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03cdfaa0-2b0d-460a-bdcd-f3076f85078b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fcd828-5ca2-40fb-b4a0-6c40b9bf33e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d7693b-9fd3-489a-9320-41980b4acc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ee008a-11a9-4ce3-9e27-a02d35e554f5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e861bbec-8a5a-4488-9372-0c0cdba76ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5981c49-d069-4d74-8124-8052d194a7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775bc68b-eda8-4e27-9c25-c3ffba1a0e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73519199-c44d-4365-9416-efe0de41ebfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d93786-cca8-4631-84ed-68f5b4c6c6ab",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2211a083-f69f-472e-b46f-6b8358effeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d559eb8-53bd-47b3-8db6-f4e08b80f540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ab62a8-70b1-4c20-9b15-186077b34eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1317bc40-b332-4c67-885d-47d9121989e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70db023c-4e0d-4552-a5d3-b1f0967c14fb",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c545bfb8-d678-41f1-90de-ddadf4596241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5188e49a-ab93-4649-ad10-e5c25eb5098c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff537f99-1acd-4588-8c51-6343f81f3ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84366bf1-7fe6-4678-b831-384eaa270bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff257106-1757-43e1-8fc6-d33a88e8682f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9c9eb3-9b38-4938-bc86-75df1073933d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5320ae2b-57ba-4b54-b021-71e991b42cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fc25ab-4f8e-437a-b7c3-08f3877e333d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f653692-5b49-4439-97a0-988a4747a536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c549f72-0968-4b58-b3c2-bc4a3867bc0c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a1f23a-5adc-45b7-91d8-33c988dac09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa11ed7-4613-4540-9761-c2bc3bd33127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808b42c4-ff31-4769-b79c-fe7d341e450c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de7f3875-2ed9-4b6a-958d-1b8e9e23830f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f05f5d7-d0bf-47ee-ac3f-ffbd9c6692da",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3a0d3e-0494-4ee4-83f3-555516c94264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a7b80b-31ed-4525-bcf4-02d9521b06e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ab44b9-934c-415c-aac5-d09631595503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c29b43c-094d-4f39-88c4-d72185af7f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baa4122-ce23-4506-b52c-4b3078dd8978",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee3478e-ca16-4292-bb69-ad3c9786d0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd3d810-db1c-4ba1-afa6-45fadea7381f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855afa7b-c853-4d70-a055-8007d5b74ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90861ec2-893b-45f5-9cf6-4fd56e0bb0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7686ff5-4b36-4ba8-94c6-4b8d73df6bca",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a313f582-6ff2-4b8c-9617-878ff98f8d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514ae491-b425-4792-b743-913c39ac7ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25029ebe-e4fa-4813-b805-41d1f98e5caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "639e3335-f8ed-494c-b710-41d4e868e78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ba36b3-3b45-4506-b81e-39344ffe765f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a100e6a9-20e4-4bff-bdbd-ad30ea57d661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2c1127-920a-446a-80b4-8752d3ceb73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15397318-b048-493a-87b0-230d0bd94755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f4d63a-6b02-46a4-9002-e4c60fb74474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff34202-db65-457b-9f06-831f78ba7a5d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058612cb-2761-4f05-b9f2-1c0f472eedf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116053e7-a27f-42ac-8f8b-6038a2ff2648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f306a6-3289-48e9-acc6-e416be945e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d37715d-85de-4e78-9dc8-59e5e29e4f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe458f3-3e9e-45b3-96df-1be2236b0dc4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef19a2f-c68b-4454-a485-73e2ccee13d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd178f6d-8267-422a-83c8-7005f47d144d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a855a84-4d45-4bd7-9a75-9056f37eb981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "560769eb-eb44-4b3f-8831-0dcbdff67745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191330cb-a7e9-45d5-895c-683783ec072a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6ded95-f03a-4a52-8816-a19bc0692d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc72e1b7-2c11-4f0a-b4e2-90705de6a80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0236a756-d8bf-46ff-a32d-8d496f204ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01b460e3-94b4-4ece-b921-08c7c9599aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b1a271-84db-4ad6-9e46-5cef617d7140",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ce85c6-1754-48dc-8d5a-c1efc44fe8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1902ba37-edb7-4ec2-9aa2-0ce902fb6726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ec513b-59c6-4ef8-8a35-25fdb06c7cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0273e4ae-5995-44e9-9aba-426800eefe24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdf521c-03ac-4ab6-8aa4-a101c0f83ef8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1a97bc-18e1-49e1-b66a-c25fa057fb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13792017-0561-4977-8919-6eb9525faa30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6486b76-b8a7-4dda-a1ac-eef6c3387e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db1f0e10-ccb7-471a-b2fa-460d17bde087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8aa01cc-a23d-4882-bafb-037d7a68d44f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efd69c0-37ac-46d4-bce8-ec6b3e27c5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698fabbc-1846-4311-9353-6332a213cf33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc358ce-36fd-458b-8c5f-c8b096311d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75879e5d-6f3a-497a-9d26-1614a6d56719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82f23c4-1a1f-49fb-ac3e-eef209678eb2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987296d3-ac95-4c4f-a1ee-75ad380714ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14846313-718f-4573-ae5f-b4c99d9de947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447454be-0ccb-4353-b0aa-088d1dc45608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9376d590-2626-4560-bfd8-6e6d469dd12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de7a2c3-d777-4e9b-9318-f38d2f726476",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a88d41-e9ca-456a-976d-c02a2df416cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5a3b03-1391-413e-8d93-c761ee8f32e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f05c81-4a8b-45d2-a969-adf27fc70207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "90d074b6-6e6f-4ebe-bb74-e5df54b43be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098cb10f-f912-43f8-b4ce-5fa43fbec782",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e633aa21-f824-45ab-ae33-2a057cdeb6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad76e133-bc35-42b1-ad51-17b85dcef453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2713487d-6cca-4b20-929d-a3b9501a9de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdea5538-d31b-455a-a93f-a6ff0377c72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7295ad86-57ed-43a3-aa6f-cd6b4bb8d2ed",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1dc517-d0f3-43ab-89c5-45f3f3368471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929ba0ba-3a5e-45d4-a839-36b55eff8cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab18b75-efbe-4a18-825a-09efaa067c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed300f9-820a-42d8-95f5-2b7548c8dbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc586a9-821e-433e-b170-7ab81a19178d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1652ee-1400-4007-afe1-4962dad947e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74230617-4a95-4637-8a93-9c8a7af95894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d855526-1360-4e4c-8513-29e14f7de23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3142ecbc-fd75-41b6-b029-b34a7c631f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170620b0-70ea-4db0-9a77-62ebb5734d2e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcd737c-bc99-49e1-8c77-e2fadc0eded2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed12e06a-924d-46e4-b81d-fc1ee5598f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70208633-fda5-4698-83cf-8bbc75383b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfbcb88-af1f-46ba-a312-b04b9450a9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e084c7-789e-4479-a70c-be6b2ccd2e90",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f83793-9081-485c-8199-d852575e2f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae1bf09-8bb6-49e6-ac0e-12fcef0ba24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ec6be4-7f3f-4746-9617-303a56a61926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "53be8228-2222-44ae-a69e-6ea599a3a0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d7ede6-c0f2-42f2-ad6e-4b962e8235f7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a695a6-aafb-4b76-bf22-4a35d5c1d9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049326c8-bc08-44c2-96ea-b9a3148c2b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5c00d8-8db2-4eb5-bd85-12f181e0a0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "443b8349-398e-4993-881e-41dc64e19c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bc675f-1d21-482f-95f7-7bcf2f6b1f73",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4302e2-99e1-4428-838c-3ca98ecf8c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a700fd44-cd17-4191-9fa1-0584ee042ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf14756-1903-441e-a0fa-aeb5761a4fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3029174-2e59-4ecb-bb97-995aa7003b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee0ffeb-d6ac-483a-83a1-cadb991e0456",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bda9f49-2d88-4b5e-867b-2a191e710bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e052635-f2c5-4e1f-a6fa-92193fce10d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b827079-6b0b-4981-83b8-6c128290f7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9ac042-40ba-4254-af40-abdf2b72da2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58aad88-f8fa-47da-924c-9c2fb315e8b9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32df3180-ec98-4871-98d5-489def30f30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1430c9f1-e04c-46f0-adc9-257d791f7851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3676dcd6-f89d-4f2a-ae6e-88bb0ec705d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01b4e531-4cc7-480f-b90e-a562b8a98ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27794010-86d7-4821-be2c-9a1650315405",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbaee89-378a-4e3b-b17d-ce7f4e9b35d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f549bce4-047d-46ff-aca1-732f93228c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71f625b-d8be-449e-af4b-c6c6bf4036ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7be39ee-82e6-4107-a587-2ab61d8328ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b941c3bd-050e-4343-a25a-637e9bcbcd79",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee7a123-f24d-4269-a13a-f15f9c444cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703a810b-7bf3-49f8-8114-057855448478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978af764-c93a-4038-bc43-6f022d660395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e22ad30-5240-432d-ba43-1445feb34ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359f7653-1095-4477-a16c-07113be582a0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767e6ae6-dfc4-4dca-bf74-94aa02ad2181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eda9856-5beb-4912-a74e-01018cbeea9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885b7ee5-5fe8-4284-808a-6a0786f1fa6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bac073d-1607-4e8a-bccc-7fcdbedd0cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a8ef6a-4c34-4c3a-9038-20239812f431",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72d1e93-063a-4bc4-b2c4-6cb035df7f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ed112d-a905-46a5-b4b3-13adb721a4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a459d1dc-5f3a-4638-8b17-a24392d4b88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d05755af-a0e1-4cb0-9e75-d5ce815200b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9423796c-e080-4e3a-97a2-d958707b800a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43663d5e-bfa8-48cc-89d6-0da906c161d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626c1628-6d2f-47c9-b531-2ffd288bb463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5df4cf-84ea-46d9-8dd2-2e0f5c1ec4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1748ec4-4e12-4cb9-96e5-2fc20c152285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ccb569-f534-40cb-a3c7-24d571f2f4ca",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad9e3d5-9c4e-472c-8b03-3dafdc13a37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa09a96-bdec-4b38-a02f-d33f3e4a6d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b84230-31d1-4215-bd0e-c9e906a4cf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b8e3d2-edcf-4a7d-b5e2-da23633befd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e1aed3-8e91-4c21-a423-bacc6840d1a4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4767cddc-12ee-4d7c-a4e2-45180ba20784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a4e1b5-e668-4821-a161-ce59ec7013a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707e02bc-39b7-483c-96ba-7b11c6021ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd50dc8f-2401-4735-8f89-83d9b69f9499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7942be8-b3c7-4bb7-b87c-9305db270fd3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add205d0-febb-41d2-bc16-0e4b511b1f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11913fa6-5e3a-4dcc-9c61-5ffae9b16e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f308656e-6b41-48f5-b79f-4f110ae24bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc7811a-47bf-414c-a80d-adef7421fe67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21248b4-840e-42d9-8818-5e5aaf69b7a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90ec095-89ee-4be7-82d4-6501dbf2c9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2df511d-cb1d-4b4f-9854-a99013227cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaa5480-847b-4d8f-a3c6-8c0d78cb96d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee38eb4b-2674-4334-8c1d-b33c1b2ae3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84dcb49-9dbc-4a5f-ad62-b5252647d300",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d222a749-0865-484f-899d-76029805fce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f87a95-3510-4cc9-bd8b-9e3ae3dafe76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9d3e92-44ab-405f-8cf3-5eabcd731f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9d3154-5162-41e3-a73c-73793ba3eb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bbaca8-603a-4d8b-bd82-0f76ec15efdb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4d2123-0b0f-45bf-8f03-4d738fe8264c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8493cd56-2917-44f2-943b-46d7d2ee41cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0b95f3-5bbf-4b4e-986b-f3dc82a9325e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "53aa730d-70b7-476a-b189-ba3b69e3275b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e167e72-e0fe-425d-a0da-dc02f411f436",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eb11ec-62b7-4f59-abc6-fd1448ae2252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3150dc-0145-4dd5-a389-535736126dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9442eb46-990f-48a5-b246-290e98876926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef92ae1e-545d-48da-aa8c-55b9754ad788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9b187d-2a27-4dc5-81af-3949ff6b44aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ae6e8c-3e3a-4797-a8f0-598ba2036c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f732556c-8a10-4c62-81a2-bff8a58a458c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b318efba-dc9e-4367-8737-c26ac1853602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "db3b56f2-e824-44f6-bf27-8f672aeb4c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ca9a00-7212-4707-84d4-1dd83c0b5739",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770395c9-a59e-4837-ac6a-9b65bb91cdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ea9aa6-399b-4697-9799-7792f8ba9c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7820033-6034-44b1-b388-3133ab7322c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "885c1dd9-3206-4734-b500-23b411f2fca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffb643e-89cb-40ad-85b6-1eb59330005b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e96bd8-ceea-4c60-8024-71b99cdd078b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2518ae38-b8b1-4c90-8d4d-62ed6745f76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d49493-3b4f-4e75-9ea8-468bd80498e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "369ca984-fa3d-4bd1-9968-85996d90dd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e7d711-e2f5-46a0-a32f-74297d464a2b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a0a295-f7ed-45a7-82c1-ea25d6ff6d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1809b04e-5bc4-416a-ac7a-6273801405a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5638c69-b564-449d-b1cf-4bc3e01651c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df68926f-2279-42be-a12e-de041ede575f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a4b440-9a09-496f-bf30-dde8e56a3a51",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00c897d-502f-40d2-8027-cd09a0468aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0b806c-fa4e-47fe-bdeb-a09cbb563d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c5d2cc-2db1-43c4-a258-e9436d7e8071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0082fe-ea70-4ac5-b85e-f3380d1650a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7af48e-b69b-4d5b-be3e-08735a5cc6e9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1186e7-08a9-49e9-9cb5-bc32ca4fd6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147eff80-def7-4ddb-9142-040b81a29ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321bd4bc-1372-4e9e-805b-1800eea58ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dad940bf-016c-45a3-9a50-9965f8f92eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482b3b13-7708-4908-a613-2840b12c9b8a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce7fcde-a20e-4a7c-a4af-e8d9332e8f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2207d8-4b00-4717-832a-01315ae1943c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db653a65-beff-4515-9915-67441adf1e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99e7c400-36e8-4729-9b14-48bdae8b2026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae7106c-a3f7-4665-9fa8-645e17980a6b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67a097e-22c5-4695-a92a-e8fd89bc8716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74efe6af-24d7-4e42-9b6a-8687dcc08424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80640751-231c-4748-ad9f-89706c734ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2882a5-ab45-410e-aa9b-c097bb0f9fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa3067c-1bbc-42cd-8fe5-6358ec3e89a8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033722c1-3c4a-4bb2-9e69-49c54a9a5000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10c3b84-ff74-430b-a53f-f88230164bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7a2909-0535-46a9-9792-e3722b6163bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85f5de9f-a7da-4afd-9a5e-928c23138196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da566f1-847d-4826-9258-e9d3e944d42a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a06f33-261e-4cc7-a3ea-23ee7025f871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7b2897-aa26-4ab4-88fc-0e7ccee71b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e8421a-2eaa-4c0a-bd18-3c4ef062914c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0578e198-f24e-4a86-993d-74be4cf2f332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59736da3-5853-4d60-99af-4723777a1dd4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020791af-9f6d-41d6-ba96-fbab89bf91d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc63efa-1cdc-4a02-b0ed-0749aeb89db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37ca9fc-0642-41ac-bab3-9e22c6b4be62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0abbbb-2267-4308-bb57-b589ca7cab3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd5478d-65d0-468f-a36f-1c0bd09d6b11",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b464cda3-26e8-42bc-a64e-65cae54844c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5a28b5-0529-41da-a04b-0b5924a62a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d8c7cf-dd91-4996-b5d1-70061e6aba97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e67cd3f4-7c78-40df-a810-d3cff1cc92e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5123a6-ff99-4a97-aecc-30e4c9fc66f8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a82fe1-4ba8-42af-aa38-90791a9d8ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751dd49b-9755-485e-93bc-73ef6ef6b858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c402e7b-ec92-4e2e-89a9-0b05544337a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1341618-8f0e-4db8-8921-9ae8159ec2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f1ca70-8a91-46e5-be3b-ff31c01ae0bc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701a1cda-df37-44a7-b6e4-72ab247530f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4686d5cc-4b98-4fce-8e5d-98cc23d1e865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f574087-f8e7-4804-ad91-a5b3a0ab68df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52475310-99b1-4704-9d0a-5e2ea0489768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4617ea-93b5-4a8a-a4a3-346424af2721",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87eae7b9-6d70-4c7b-9610-6885c6dcd400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6819d501-776f-455a-b7b7-dc5822e970dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc7ebe3-64a2-44b7-bfbd-f19e5f028f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6136f6-02e6-41aa-ae61-9d81a9889087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e77447f-ef0a-4d70-9158-b33f5037828a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad7915f-b758-4a28-9210-fe5c5ccb634c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fffaaa-a84b-412b-a390-50166ebfc2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df457e08-e09d-4c01-9de8-2605b1980d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9c46bc-cfec-4535-98fe-5d423fe992cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f156ea-78a8-464d-9919-2707eebc5ce8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74acc41-8723-4e15-b33a-0b37505233ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e9a575-4a8d-43c0-8822-8c68a80226b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626b70a5-3591-4cca-814f-4a4405a9cedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65190414-741a-4a0b-adad-98b02f6a1ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e885f0a1-2625-441a-be14-8476d705df77",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42274c4-695f-44c9-bd78-4b1f4a40ee5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbee9822-f9f0-49fd-9b40-dae7d3bd99a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9f611c-81dc-40dc-beb6-dc78e579f7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2a521b-3fa1-4415-9759-2254f6b1f93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3259d29-49dc-44ca-8b85-12c6ae52181f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7bc6f7-b636-4c6b-8bf9-7674e910b612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37939b6b-367b-4396-a7a2-53f87a2aceb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43266624-bbc7-4cc0-8d88-9322819733de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81fafb9b-9102-4de3-b8bc-fbf4a3ab06ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551e1889-7b54-46dd-bbe0-8ee6d7bc4698",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a63f83-3d15-40fc-941d-ad2a5bc1e077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2082e4b8-910c-42b0-8b14-05e233caf45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6510b8-e79f-4c88-b62e-755b2868aec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "404d3653-a74e-4f64-b469-06194805ac4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe2bd6c-36af-4d7a-ad2e-d0435f534c35",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d3f630-a648-4610-94fa-674ad8006b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51322d3-a5c0-4bfa-a150-ba0b1687b5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a308368f-9c47-47a4-ae52-5194de5554da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbec2c72-f5ef-4610-8a3a-4368e59c78bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4b76c3-733e-4447-a216-0355b4cc9283",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacc2ec2-cf5b-4ebf-92b9-f23fe783bb59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ed9416-1ca4-444c-ac3d-2d9ef82298cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3997fca4-6bc8-4511-8f4e-b32977e02527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5555beaf-c4cb-4f81-9ce4-16d8325c8bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3ba45b-d284-49b9-8f02-a658f6cad458",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f00624-b167-40c1-b7b0-39c9f38c1b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f21705b-166c-407a-84f6-6160745d0eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e0c06f-ee1f-4e2b-9abc-18659b75983a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a11bb0-a3d0-4a21-9621-30bab172fa25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd5aa08-f420-4c40-9b2e-8918573332ce",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdc2dd0-eb16-465c-a34b-139ce0381df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1219959-3ba2-4fa1-8a8f-28328f6bcdb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1149c0a-362b-45ce-a4e2-e4134c066b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f22d593-7cf3-4578-b42f-c9fa4a872ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5790a6-9328-4c64-b2cb-bb782926e8cc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a51f7a-bf97-4fd4-b74d-e518fd55d8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb6d61b-2be5-40c8-a12a-47991d4a22b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b2334c-953c-42e4-a003-8509647537c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb025405-1986-4d45-8ce0-c8d04e76fbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cdbc1b-7926-4b24-a56c-e64c235d100f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dea696-c31b-416f-9acc-f01b013312f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e367d6ca-ec48-4576-b5b4-8d1f4b2b39aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a2bf70-cf64-4803-aee1-eafc2cd99da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90bba270-d6aa-4a16-b56e-5d17b06d22f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586e2023-caa4-4c8d-b4b4-1cfc2f45eeff",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe44d73-60dc-4669-a3fa-aec2412da10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1468fe8b-4460-4f82-bc90-41a892f74cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7862c6-f9b4-498a-be9f-ddf38770d29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1db4b5-ef1a-4d9a-9e1e-bc4e65cd4edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410a444e-c3b2-4974-a4ae-34f48a3e65dc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ecbf3d-a898-4f76-a522-5ef3827bb696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361fc386-a252-4e2d-a796-3289e7e61400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa78cd0b-2b7b-4420-aeaa-31fb56883449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1dc50e-2345-43ba-987f-be4646e5ad23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0518eb76-7ee8-4de0-aadf-0a7734357eec",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbd96e4-f23a-4380-98e9-866132cb3089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdba0de-e785-4f58-83bf-11ae1086dbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c7b87f-9ff0-45e6-ad0e-3bd005c55737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dea44a13-3294-4fde-b6cd-0ae8b772727d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fd76b2-8c4b-4d23-8f6b-7d29ff4f56b1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd80c241-9ee5-4a92-bca4-0255f64b7f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318eb16e-21ed-4f4d-87c9-146af2e1d764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c7aaa1-eb41-4149-a8c6-90df60169c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6238c27a-cfcf-4eb0-ae22-4972d8083cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b401dd3-0006-4fcb-858b-4c75da330863",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96fab85-3efb-4c31-b275-ce2dd3ff344c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad73dea-b806-43c4-9140-7e6db6db77c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526c2fec-0b76-4e8c-b139-969901ccae01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8c7640-9147-4d91-82f1-48d713cca517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812a9e85-c446-42bc-870f-a42ff2eb17ab",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f043564-61d1-460f-8d36-384c81e3d688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1813e4ef-d281-48c7-9bc8-f71a5c23f74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787879d5-c4b9-40c2-9cdf-7b8c1764540e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a124bc-69f5-471b-a7e5-314cb1752a50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "262b3d69-5178-4218-97f4-9f11be3f9064",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6b4b396-4fd8-42ce-8f8f-7972dac0392c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7347f5-74c9-428b-942c-e85d94277384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f90ce2b7-62ce-4510-bbc8-6b87ed52b919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ea6c39-235e-48af-abf4-3afb011106e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6097b02b-0877-4368-a87b-b0534612b4bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5d20aa0-7f0f-4ade-8669-3cb2070aadb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66f33ec8-c4b6-479f-84a6-feaeab3415e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc10d3dd-8f53-4a54-b127-6ee2753ef293",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8722cbe-436c-4a78-ab17-de9e7735aafc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "83db3c10-8c54-4936-9c6e-1037988a79d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6cf6b8da-eaf7-4dbd-b7f9-73fd8d598502"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3fd340d2-f7a8-4f2e-8155-98f172a6747c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f866a3e-99ac-4e21-92e7-a3f3368b385c"
                }
              }
            ]
          },
          {
            "id": "8e4df215-5ed1-4964-b4c8-8274a21730fe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0dacb8ba-6921-4b3c-877f-2c615e2d431c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f76d0ef3-8e02-4e7b-8535-a0babe3a901a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "486dad05-6000-4e2f-a729-b4a86f14f729"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "218a33a0-51ca-4350-b4b6-4c76a6b3cd8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d7eb9994-7153-403a-bf51-1ea6476da288"
                    }
                  }
                ]
              },
              {
                "id": "ef6451bc-b35b-49d1-a9fa-9aca90333418",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6815f8a-89a0-4f51-90d1-ad0e6c0c7279",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c5a2f7f-a45e-4a89-a5bf-0aa00d6bfef7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67bd3c35-9f4b-4074-b44c-2aa74bec3171",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "36af6ee8-dd17-48b8-a0fe-c6aa60c07216"
                    }
                  }
                ]
              },
              {
                "id": "d5bd6028-b9f2-4991-a596-dfaaceb6ff55",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46cac798-2a0f-413f-acb7-2a517d3b7150",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d59598a7-73eb-4019-ae0b-270f84a225bd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "111bf1c0-4596-411b-a304-79fdd54ad048",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ff55b2ec-6d2e-433b-a2f2-65e0303a71e9"
                    }
                  }
                ]
              },
              {
                "id": "10cd5fb5-446f-4dc6-9c96-7747eab51ac5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f795179-195e-4c0e-bdf2-40c99ffdc707",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cdbc8223-30c3-4cfd-85d7-c51dcd9755ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6096746-419d-4338-9d1f-6dadda793ef6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "28087a1f-b883-4d5c-861a-ff842e11233f"
                    }
                  }
                ]
              },
              {
                "id": "1b7000d8-e154-434c-ac50-f8a18fbbce7e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcff0b97-cf55-4a45-a00f-2f2f62d364f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a84f692-74c8-427d-931a-b4231ca9be88"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d65f206-8ed6-42ea-8b17-ed41eedffcf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6926166a-ca85-4fbb-87b0-1600fbca9456"
                    }
                  }
                ]
              },
              {
                "id": "08220cdc-6261-41f7-89a9-1eb50d723eca",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d47f1c21-7d76-412c-a2b3-e4c4687f0fd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41715dd5-7700-4620-926b-d40899dc1188"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abdd362f-6cc2-49f1-a36e-d6f21096f44a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "92d98df3-95d4-4bd8-bf42-f24ff368d8d8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52b2a2d4-d2e6-413d-8042-dc39b9862a98",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "393ea7d7-70aa-4cf5-8f39-5ed882ad1b57"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "03ed38b8-4f6f-4621-953d-efadf34a6fd6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7fe1a1d4-9d4c-479d-902e-6b248f41ef05"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6b0fea2-740c-462b-a4d3-c790179ab352",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "74b2cca2-4406-4df5-9cd7-203de612100b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5487adc-1bf5-4eb1-a69b-921e590100d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd1e8ede-25c7-4a6e-b9ba-b3f30069b3a8"
            }
          }
        ]
      },
      {
        "id": "919b3c65-bfa9-49b2-8a04-bec978a8c171",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7c6f4bab-c9a4-4d59-9ed9-5870ad35c82c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b704100-1722-4a25-805a-71077e810a9a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "edfcc4dd-8f50-49a4-a09f-d45857104dd5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bcd263-e6fd-451d-aa4b-4e5a8c302475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6047b2-36ae-47af-87cf-fc4e68806ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d6f9a7-f44b-4dc2-b7ec-0e5339555f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "584a404f-7cc0-4bc2-af0f-e7a345b72aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c668bd-edf6-4d54-a0c3-0d8951773727",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57475e2b-ce2e-43d2-babf-31d216248e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f7c6ca-de2a-4264-a039-1ed67e26d272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1284cbc-6e31-4ca3-8645-ae3e020319b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f129072-cbf8-4def-abb4-a9b247821eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d33950-3135-41b2-8174-bd3b1ea8c90d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8b962b-32a7-401e-bed3-d21e99c584d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90db9979-3fcf-4f84-8766-4413c7bc6e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9409ec-024b-4c79-bd9c-22e614c824bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6b88ba-8d23-4741-ba4a-de28ccf13405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8143b18a-7a22-4c0c-a1be-21ad76db551d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85212395-48c4-41e4-9aba-7ec6497275cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576f6c7d-8134-49d7-a401-1268452617f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d0ad6c-613a-4bec-9078-be0813efeeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f6bc7c-1337-44f5-b2e3-6af8b17b5310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce89dd6c-10bc-41ca-9e1a-5d1b282e0a36",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84c31ff-c5ff-451a-99ba-e8b56e1a768d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e719a46-816a-4ba7-b097-4635ef42213b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c924cef0-c297-4835-a8ca-6e8f35eaa465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57171315-1999-49d5-834e-5ee08789c2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb00969-6dac-4935-b4e5-203657912d93",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59ffb57-c3bb-4dd4-8c01-723c05828288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8ab0ed-520d-4cd4-90cf-91f88ea3d3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd973854-126d-464f-9130-d0dd7982b8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1932b434-c256-4411-9f95-e0266e10fd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8128fd5d-ad9a-4f15-a0f9-7a104dcf178a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f855483e-25db-41cc-a6eb-2674cedc2683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9899ae6-6ab6-4d6b-8ab3-50ee2bd1b158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52ee9ab-5084-43f4-940c-2e35b4b5d465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2cefc4-e603-4821-a63a-dc0900920f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb12e2e-ea8c-4b23-b6d6-70a945d889a1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fea8f7-393f-470b-9103-915bd860d82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0d63ab-c584-4451-aae8-84e8bfebb8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be296e0d-d8ef-4606-9fd8-eb3e0cc204be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09982996-6ff3-4cc3-bc5f-147821d27b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c303019c-92a8-4991-96e5-c14d30e49766",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc977620-6a40-4e80-9299-c635c42de738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b74f3e-ea9b-4e80-9f62-4756e73cc64c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cef3376-3d6d-4e2c-8116-b56041371b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94d28df6-b442-470d-b7f4-52fb5923194a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96561cce-f390-4cfd-8bc8-5dcb95c6d245",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99aa6fc-eee4-4423-8b47-3ab738f3f2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b500dc-1820-48cf-a77b-b8f861c02753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653a0306-0a02-4af5-9897-c06625c5b4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6f0460-a419-4e18-9574-3680ddab4506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d921918-b20f-4225-a214-1aa3ced8626a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c4047f-ccdc-4e53-9f7e-f2c1428525b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1d1027-10ad-4680-bb20-9c8c3250fc5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28143ff2-f7b5-43ef-8d39-165447bf5084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "30a9d3b1-08ac-41aa-9001-8d71d5450d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d6463a-d8e8-452f-b44b-d377335d70fe",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4cf88b-2da9-4906-aa54-afec6b17d6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395245f8-f1fe-489b-9d2f-eadca29a282f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31e9c3e-2af9-4a1d-a841-ac9dc9ccc186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4475339-060f-490a-9a9c-69e061709632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f979214-a87a-4930-934a-a412173b2079",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd0eaec-391a-454b-9a97-9bdfd4c36814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244dd45b-a3bd-49ce-9a3d-60260cd55d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644fbaa5-2ee6-429a-be75-1ae4fd6a56ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fcfbbfe-7ba9-4481-8818-87e72d3c4fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74be905c-18d8-4810-9bb7-0dd26512dbfe",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5b2c74-ffe7-491d-978e-65945f9de978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e600fa8c-79f6-4a95-9e48-5f6fdf74d704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583bfe67-46e6-48b1-98e7-7cda8d6b6a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8c21ee-55e1-43c4-9d5f-d1fbb81c2426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4e6659-fafe-4921-92e2-e16007cc4355",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9446a81a-3e49-4818-9f05-477d12f22f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9666431d-baa8-4ea2-9df9-a5235fb490e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84641377-8d97-4132-a8c1-23af43b7a639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7eb8de-5474-4cd5-97d4-68dad4727c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63aada85-1e96-48d5-a425-f11c93e54e71",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23df622-d1df-47bf-ba2b-49cb8df934cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf716a01-fd70-4ba1-8559-5aa28ffa0daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1266c4ef-cd45-441f-bbd8-0e7f86e9f05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "33135e15-02c7-46e4-8a53-113aee621d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdd6a07-f3d6-454d-af4d-424062a72949",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b3d902-d574-4c98-8ca4-99c3b83a72ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8790bf-41fc-4a24-9068-1dd1b8fb85e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6c2e14-7cec-4804-9bb3-695e78a5568f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3716d9a-ca8a-4639-90a6-4ab4b2e9a6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94763329-0adb-45b0-8728-54b896558bd1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe8d730-51d0-45c9-a5d3-a2abf789fa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e2495e-65d5-407c-8dff-a7e54697ccfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99e936e-79f2-4163-8cd5-ce1c6407aa6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "98f16af2-56b2-4589-9aeb-3a106e9f838b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9609c667-df33-4ee3-8a48-9bc2691c674a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a351e0e-36de-4269-9ae8-a1880755c28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413ffdc6-cdaa-42c8-b5df-305b2b6efd0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567e9df7-c618-4c7f-935f-139cb8ba04d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4be327da-e6c1-4f64-b7f2-866318cb3ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49c19fd-31ce-4355-a06e-b85664f7ad8a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320f1d99-3bac-4ed6-989c-e737fff5e10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58dd0064-ae6a-44a4-ada5-0e8c8907f966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76356326-f943-4089-a750-8f02ab0684af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "398bf9ea-1b73-423c-9e12-e616b96dd54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae78d5be-f5fa-4d27-aafc-588cd1a099f4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72afdc2b-6600-42e1-a0ed-a2aca3deec28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241ed901-b978-4f64-b6f5-7476e9e73272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0696f3-441f-4bcd-ab42-168ca0fbf055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d43683c1-29cd-441c-889b-c15838192e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165c09d8-2c02-4192-9b1b-77ea26e14986",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee617b6a-ff5f-4191-a1c9-8c638481070d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b770c2bc-664f-4278-875f-c954a1909539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf079a0-7a67-4a11-8caa-ac587fc605ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86a68c2a-cfba-4580-8ffa-ade3ab3f41d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995b419d-5119-4e32-a7ff-29867bea8b9d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b8be68-c796-4152-9e47-c58902c7299a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56282454-79ad-4a9e-b2a4-711d2053f1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d474b3-6183-469f-a777-a45bc3f67a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46e15859-1367-46c9-bcbb-02a6b8fe1503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04b7973-e923-493d-b388-c74bed7b8096",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6a2494-f668-4031-a4f9-f82d666feb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f502ee60-dae2-4777-a19a-0aa2ca26f86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7702565d-09df-4b38-848d-cdf6fd7bfec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f176dd3b-0e9a-4493-af40-c345a258de95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a024d4d-6bd8-497f-8d6e-3bb717c04c41",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27801133-dcd8-4cd0-a49f-37debcb1cf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d842b4d2-90df-4d87-97c4-2bf03b842775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3d56c3-b258-4379-b296-16bf48eb23a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91edc002-36b2-41ed-bc2f-49a813da040b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddc1ae6-a2dc-43a8-927d-4dd06acd8350",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71834503-bc5e-4c50-9a70-3ce6df70f720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756d6a0f-4e29-44a3-921a-3fd2d85175ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36186c6a-2763-4249-9a24-bd12fb73fda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "883533ad-51e9-40cd-8780-f02ff5d4043f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eba6f81-45c5-4fb0-b883-6846062f5114",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e875dc07-d486-4646-8e52-0f8f0ca475f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ad3c6c-c951-440d-b254-026420796a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faebf0d7-74a4-4503-8c20-5846fff78a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40ca4282-c75b-489f-8dd5-70eabfe2c2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3c5441-106e-4512-a8ce-fef7b2b8bd93",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008739a6-9ea2-44dd-8870-dc2896213efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791d266d-0ceb-4edf-95b4-525ac8563c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d992db72-7ae4-45f1-aaf9-eb0350d5d0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd04c3a5-afc6-4ffc-8642-a79e47923edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7d1454-30e4-4435-bd3d-575e9f9e95fa",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4a1b49-2c56-4718-bfa4-c61e5f541b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a2324b-bc6b-4a17-81af-a7a5f0ef69f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9473782-f48c-4918-a152-62edad9896eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e279748-5307-4780-87e8-3071bbc3308d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23a472d-b3e2-4764-8b4a-ba85068eba4b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f7436d-841b-4355-a7a2-b6dcfa5ae2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a96f3a-7820-4fad-9fa9-a4c3475fe4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ea833b-6c04-4667-8997-3595b18c8e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cec1290c-3b0b-4bc4-9e3e-a6637fc80115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fd3974-5658-4419-9975-57173d384707",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6d0bbc-ad50-4c1f-90bc-3d1eba274093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7008a08d-757d-4b65-bf0e-ec0262003b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bd1982-13bb-4d02-8932-b70c554696bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6106ed71-ff94-4ddc-9eb4-06eff0e5521f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71075017-a476-4431-9b2f-b9c672910829",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f33c8c4-3359-4a8f-b481-95e22ff71d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f2549a-ff67-47ff-8b99-aff68c5150a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e8dfc5-0c99-4609-9eb6-d2868f5bcc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4845782-a6ee-4d69-830e-e1fc307cda34"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37ce6bb0-6dec-4d04-9d90-5c234474848a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "301158ab-0967-412f-b3b3-671da900f58b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01af6341-ca22-45de-a164-504e55dff688",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "220dbe2e-916f-4621-966d-ace14bbe0672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b71d520-faa3-45d0-b5bf-935b75993258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4f65cbd-0002-4a45-a700-2780e7b440f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf8dfb74-2437-459c-8c76-5d779fb91e92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a330b401-55c6-4a03-8923-9b58511eb5f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b04f8875-1c3f-47c7-b6ca-2270a2e3116a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc21751c-f3e8-4c43-880c-86da3ce7a5c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a026f3f2-b0ec-4431-a5c0-597a5883815b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "096f29dd-f4a3-4df0-92a2-ab670a6275bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81a419c9-35dc-41a4-b5cf-22a9e664502e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "791bd14b-a57b-4e9a-a663-a03c91978919"
            }
          }
        ]
      },
      {
        "id": "386d9518-ebf0-4ef7-b661-5e7bf765a0fb",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0cbd6ae7-cbee-4ea6-85d1-01b26291199a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96a6f17f-9f91-4447-8d65-a4e569f41628",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "41f6ce9f-3028-400d-9697-f00959a46266",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabea649-4d89-4d50-b5c1-009739bb74e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a8caeb-a919-4c01-b171-385f058cb370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517b963f-b008-4f5c-9ad9-d9e92f43eb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "34919f8a-2a98-46c6-84a3-5487445208d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b745ac-e100-4f3d-bb4c-ee53dbb7e8c2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac479bc-3376-42dc-824d-4ce466866f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6539d6ae-6cf3-48af-93d0-f8ca4868a3ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6254b4-3453-4d86-86c0-b10cbf3a9cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12defb16-def7-4008-b2ab-d9a8fb4b11b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b2861e-702c-4104-9b1e-9efd82ca11ed",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbfb62c-1f0b-4891-99a6-c68adf9f0cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47688fc8-2ab8-4a92-a940-f0c4cbc0307b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0b20bd-13f7-4643-ad0c-ba395ef70272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6fb0ffa-c817-4b08-af97-7d5b2d2150fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2edc27-0336-4e00-b15f-57b9a989fa68",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059493d8-591a-425f-a42f-020a76e3d3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a53aa6-94c4-4cb3-b60a-a3d8162a60a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3436dd34-ce90-47fc-8baf-9ed13d5a15f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7914e5-9931-429d-8953-9aeaa9295c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7b6ecb-1303-4a42-a05f-8dab656e70d1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ede283-d557-4557-8b78-109545e906dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697352ce-fc0f-422f-954a-90bbf9b51660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aadd7fa-59e6-4655-8403-8d5ccbdad003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dac13ebf-d690-404c-8e81-8e6818ad50a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38410bee-6369-4412-a093-5d7d8dcad846",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52441fb3-d4f1-4bcb-89f8-8ac6a9002a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524526ab-2b52-4b7a-9e5c-585578b89ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29457e4-37e5-4c4e-a680-18a53dc41966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6714f71-246c-4aa8-bab4-0be06316f089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1dfa23-78d3-4613-bd92-1a0f6f01d60e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b666f85-daf6-416b-868a-227d638b45e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f362cb4-3493-4b21-957c-8d7e10101677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fee423-5c08-4b2a-ba61-8ea79510d59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d34e5c8-dcce-4f75-8d7b-c95f8e89f5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e48973-dc5e-4290-8c34-bba6892c1c15",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3b71ac-92c0-432c-a793-ac3a39eeee35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbcdcd4-46f1-41b3-9bc9-3e417464cfef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5780da90-7eb6-4f7c-8db7-b55b25b6f628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90fd16fb-7741-45b8-a481-9d356fd30758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ea6cfe-188b-4dad-9542-41e6a99d3cd7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764afe70-2e4a-4eac-a40a-0b7958d7c2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e441a7-b770-47fb-8c88-49f1227e803c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a95a50-7338-4a52-b789-e75e2a71a65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b413486-b32f-4f9e-8e00-75cf974b4230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1d8a93-3e34-4672-848d-496d2a6f0175",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407d75e1-9c14-4b95-b917-bf7fd647a491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc663511-b6ad-4d98-a8b2-dcede16c3269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ce8b51-2ebb-4080-aa2e-4324e4d60aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab4149c-714a-4867-bdb1-7d7f5294c13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85819af-8824-48ce-b5dc-920eec505318",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae40a36-fd6f-443d-935b-47f2a0cec999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb28dc1-8387-4a0b-863d-f9db2904da3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ba7815-bacb-4165-a1d8-ae1dd4af1a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a668d20b-072f-4d62-886e-d52f522097a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0b34fe-57a5-4a9c-9d92-da9c40430f9c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3792a3a0-e96e-409c-a28e-40325a00bbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7988981-3b1f-4fa1-af63-73c903481a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e309f84-79fa-448a-9d83-8f81b877f628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96e4ff35-3482-44dd-b218-ca4350017078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8392318d-811e-499f-bad5-de5762140e7c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93502aa-3e38-4e49-8eb4-0713be6fcb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd28bf3-c382-4439-9a2f-66516f3d558e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c677efd-73b2-4f41-a37d-fe485f828ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9ac4d3-fd8f-4ad0-b83e-df1070b9837e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465da1e1-2121-4feb-a452-c203f0af990d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a551f5c4-8c46-40be-9929-a270b12dbe62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e57e771-ecc1-4c9f-9686-7f0a1ee15c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065499ce-62f4-42cf-aa34-986983ab4a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba22a37f-497d-4fa5-b625-9f59839aba54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6752692b-d726-4f7d-bdc7-9e17b39c40a4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef341fb7-7bfa-4617-9b5b-a6d3269e1ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddf7972-7f12-4ed8-bc99-de5a9301d5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4dcf54-45e0-48f0-adbf-4e331e6b95af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "88ffb70b-2314-4ddd-ba68-0e89f4d91c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e057ec-0620-448b-82ad-8d9832f2629f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2c76f2-177e-4da0-95b0-6c98bdb56f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c956a2d-1d25-44ba-9aaf-7a45ea247e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253ecb05-be78-4243-b3c7-bf17a2f975ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "49955c07-0644-48f0-8b0c-f6379a2c29d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48491c0d-04ed-40f0-bdb1-c4e1c9407948",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099bd26e-4908-4f40-8d17-e444d06c7398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319f06bf-501b-43bd-9888-8993e29c5ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265896f8-2826-4c57-a976-87d611e40b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b247fc25-97af-4461-8ad1-8e732735cf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf71d6ad-80e1-4899-9fca-f34cdffe6aca",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cffe7d5-48f2-43b2-b89d-fe5b86161769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2810e180-cfcc-4292-9ab9-06eafb7fe9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3292ef3c-6779-4adb-bca3-cabd421250b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87841609-f038-4b15-a61b-c8608d88bd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d7c885-cc34-44a1-bacf-6532d7eb7cef",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4e0c9f-47c0-4b4b-b1ed-81b9614b15ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38e1271-5a08-4437-a5f5-1bb249f1b777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb5c02f-a681-4521-9471-6f619aa45a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b47747f6-97d3-4207-b488-a03855eeee89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60223e5b-4d09-421d-b1e3-6027f7859f36",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bb17f9-0380-47bc-9c55-2d7d1bc2f01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceedde21-d1ce-4507-a039-f3fd7f311d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52225768-602f-4bfb-b60d-af8d6d6ab25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b70c4fc-1ec8-4c72-8a14-c6756b3320ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4864b143-c791-4698-985f-b9a47beb2a7a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479fe09b-feb9-455a-8a4f-6f667f72855f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5ce170-3271-4c40-a0b7-a5afc30a41b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f3e4e6-66e8-4276-881e-a5d668a2257a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a9562b-acc3-4dd3-be37-8354b96a4b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3a4159-17b2-467f-bfba-fccc9f636a2a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d87ec00-7b58-4b5e-89f1-532c585d1b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2bb6d0e-2aa7-42bc-8b41-fcaae8bd71d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46b6c68-3550-4af6-b987-c8811057eae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eac1a645-7ee1-46a4-92c9-c77f42f8280f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6647b4c4-6670-48f8-8a91-78032e6d5cd2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0733cdd9-e3b1-48e9-9e1f-d6f709bd1d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca64692-fc0e-4e83-a776-68d8ddd267f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ed9900-bd09-401b-a9a5-2c5bfc8f2a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73bd35a1-d8df-440d-ad64-44350590ec50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ed0f53-c57d-4835-bfcf-973dbdf7bb5e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4773a3-dc11-4a8a-a9c8-33729bb04819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2e1de7-bc56-4dfd-87b1-c2237b51c87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ce0ff4-af49-45b9-b44e-a8a28e4c6053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4008dc16-2924-456d-909e-dd2d0cf3b30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16369f0d-0bce-424b-9ac2-d17474558c7c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02ee836-2c9b-4e2e-88ce-dabcf622077f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd51a98a-a409-4c79-8827-243860d0e5eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4d3fbe-d1fb-4a63-be39-f86f9ed93da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc3b380-82dc-47d7-a593-ef4ff7af2014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b01213-46c4-46be-ac4e-ba575f349686",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32927f1b-b2cc-41fb-aeca-6b0bf498a832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bd617f-d421-4587-b5e0-6dc0ff56dd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd16559-76d1-44c0-a9b9-6fea2e81b867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "087ce1d9-702d-4b75-98f5-ea560419f078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795da281-f13b-4e31-944e-72151df91498",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed71391-5178-4bfd-a8be-c91f558eef8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47eb3c3f-c22e-4720-9107-49109622b003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46152be-ccc7-491e-9506-3d68b901522f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c22e15-e404-4ed6-94bf-7780bf972ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c9cc43-63d0-4101-b554-2124794fb98b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c223de1f-7de2-48f7-9e8d-46b0ae64b2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c4a8dc-9f10-43ac-a87a-e56c956923e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6524ca-d9cf-4cf8-929b-25cc398fedcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d790d4-20e3-4d43-afe6-fb286cf5db5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659292f8-560d-4a92-926b-8c04cc1a0593",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e46540f-8807-448b-9333-01b811662653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73df1636-3de9-4d72-8233-8d18bb949352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c090e777-f826-47fc-9fb0-c162e3acaf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae0272a-7fbc-4624-ab26-8e9a7fc174a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c8f751-04c7-47a2-9487-b157adb9d259",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dc912c-bb45-4941-958a-dbcade4d0620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b914e24-3f19-4a51-b33d-c509166244c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9673ee9-e482-49ca-8c43-277054c1ae02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92d3e914-6854-4e02-953c-ea40ac627c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b046fd-4946-4240-bab2-abe8f70b3a62",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272d5a2e-c400-48b1-94d7-65a7820a936a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0859756d-a65e-4840-a6d2-7f8955c34cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2691b2f-5a34-4d1e-8b17-98e90fbdf40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9594ff74-1d54-44be-9ae0-b72c4b2e11d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af5220a-ce3d-42ab-84e3-f4a48cefd8aa",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc3b040-0b5e-4b82-bd78-4ba388fca3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7967cdf8-394c-4874-94c3-1e8ffdd0aabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ca00f0-1391-472a-be62-e9a0837aefa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45dad74f-a7f1-430c-93b9-87480a008133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7861e5-cef2-4432-bf31-556969e2b1ff",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d51697e-6406-4f7b-9fe6-cda205552f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc75bb9-a620-42fa-931e-6746906ae410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad172af3-6d2e-44c4-a43b-0515b2197f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f39fef0d-3a7f-46cd-a12f-3f9a445236fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed75c89-a891-4d0d-ba50-a844b16675be",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a66aff-d69c-4005-b3fe-128da29048d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a180c76d-2bee-4476-9bba-93903ef4938b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab6286e-3f37-48cf-aa9c-adbebaee655f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6acb729b-ed7a-452c-ace1-ee481e643d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a130f99-6ee6-4683-956b-e57aa3f975dc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb0543d-4a4c-44b5-bee6-9693894e3966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e642eab8-2c0b-4d38-b611-d962ecca4936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dc3369-da2c-4286-8b83-da99adf28e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3a5bdc-a09b-41c9-8ff0-196b0d9dfa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bb7ed2-8766-423c-88a0-46e3ebe62625",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3741c368-5208-4f99-bfea-7477257d2046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d506e3b-4e83-4425-8264-6d1dd0431050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183f6550-4e34-47df-96a9-bf5d844e394e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "977dff61-6e64-41bf-88af-6652b74bc2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cd2c3d-c81a-40b2-939c-64734a3e4eb7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06612f10-d38d-4ba4-91a7-b92b2f1ecc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf894d36-798b-405a-a839-b45c2120c032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ae60ed-bdae-447a-bb78-e9d0953081d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5555072-b955-406e-8b7a-1d05af7a4653"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b67d41b8-7c2d-4b0b-8326-9c06d3b8658f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01c58453-cd30-40b8-a39d-cf47ed7ed0aa",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9a9c90-37f5-4773-9773-652142bece76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ff7bda-a5eb-4317-a95c-372c1fcd78f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4207c26a-f1b5-43da-bc47-f0a526cc4c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d139dca7-98e2-45bc-ab75-4115e77e2ddc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4af8b63-a538-4bee-9c9f-9fb1fef38be7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5054b39f-cbfd-4937-8b35-811f5d4fa0fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ff15edc-cdb2-4c5c-923c-69839b32f2a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3975a6c-3b88-43be-a89b-4b1ec0dc1442"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c918b11-f338-4aba-8e1e-7381c7bf309f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5aa860a0-38a9-47a1-921c-a47c3155c096"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "da75432e-a713-433d-8c23-720b45a0470e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21214df9-c978-4a38-89e1-cf6c29b579f1"
            }
          }
        ]
      },
      {
        "id": "1d029c86-333a-47f5-a7d6-2b72f4080604",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4d8a6062-2716-491f-a3fd-5d61beb53169",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19bb1d10-df09-4e2e-939f-128e99cb4195",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a12aa0f1-2216-4ae1-a3c8-5cf1495cc0ed",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e35b34-400f-468e-bc6b-1002f017fb3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0001695b-06d7-4a33-b374-68e450d95b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e236b0b-eb49-4626-a5b8-8742e1746725",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122c1db9-71f2-45c1-86b4-43de01b02a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5010714-03f2-4789-a887-3a2fcf723be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c52d9e-94dc-4d07-a323-c54fdda31dd8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2671ed45-3264-43af-859b-300df54666e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6642e5d-ca15-4a31-8098-fe57880b1649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ae4f44-9402-4ae4-bf87-152ba8746370",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3013617-37ef-490d-ae9d-2738675058e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56dcaf74-c380-4572-a90e-47c1328d5bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15cced5-8007-4915-a387-75b7ac9e5bed",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d711530-b6f4-4b25-aead-8e4576f69f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526cff2e-a3ec-4b34-8ed3-a1056391ab26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5527ccb-11ad-41db-92db-910c5bbbb7d6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5471d2c5-2f1f-4252-bcd0-34ed665c6e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fdc43d6-3ce6-4bf2-bb03-30d81f2f6723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88411b8-c12c-4fe0-a394-81b6c26a5b42",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de55266-fd2e-45f1-b629-0904d5eb99b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9609ba-ddac-421a-9c98-0682d3d98120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91400ed4-07c6-480c-a02c-94d2d03d7a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3534220-19e8-42d0-bb82-61cf91b344ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15548e7-966b-4af4-9e38-76d9821de7ba",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea63d53b-7a48-4541-81f0-b261f8d98d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d420a6-984d-4acf-a43e-e8f545e7582b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34814771-7324-4088-8c75-bb0bacac1278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1c5c61-4b3c-4f36-9a9d-3d64d76269ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa395b4c-cb6f-4bfc-bdbc-86c5ba98211b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8c1371-a937-45e4-82bd-b4a755bca829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6b1617e-8a99-4161-8e66-4868fb26ed09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ccc9a8-4d33-4d01-a4e2-2aaae72fbe2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c59021-4bea-4dc9-8cbd-f53ab7ad8aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b315316-a18d-4aaf-97d1-a48b9a11d92c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c5ea4b-3eb5-4a89-bcac-a0538054b1b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea2e74d7-92f7-41a1-b5ee-8e7dc7f25c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbef0a4-eadd-4ef1-af69-d0f134b600c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee39568-1d6e-494c-b5b9-bf9029e14635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7efa2e-f280-4b69-8a6b-cc7993ac8d6a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9583973f-0891-4bc7-aae5-6c0cba6f00c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f93ac1-638c-4e1d-baa0-fbc7cd2f7266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e20934-f015-46c2-9756-04b08ba3d617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea90933d-faa4-4208-977d-795ba6be1070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef706994-0798-4613-9e27-de0d7ea31b85",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7002a3a4-4ee8-47f6-9d16-0d749b33c1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38ef252-5fe7-458e-ab87-2a9c2019c54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e9f82c-f203-45f4-b947-80e6fbce77fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e9f4ee-76b4-4ccf-8774-3b4f20521f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1901d2f-2be9-430b-abc9-bc68973ecf9e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520213f1-1518-4278-8332-02b30223b270",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c74017-f3e1-4277-a417-c2299da6cede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31b19ad-e6e2-4bc9-b2e6-b0d80a7bbcc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48ddde9-7566-405c-818d-37314000ba93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c735852-83f4-469c-a4d4-0576022fb1df",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5c9d2d-7a30-4ed2-a517-5a2025b8291c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf8d3f82-853b-4047-9a98-ec217db09156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8fd503-2c12-474d-9c17-04744847e4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f1dd72-8cc6-4cc1-8ed3-0c5b6038cba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0765af2-e420-4d45-baaa-7479650172e9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec72b909-5d03-467d-9f57-b5c20a43f8a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f9fa732-a652-408a-ae1d-827493202d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b3590a-3969-4441-8434-df21277667a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9212bb90-0bb8-41dd-90b1-d3757454dabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e06d96-4f33-4029-a767-d28a2426ef5c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6bdf40-985d-4a82-a33e-51b9e59e5312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dac9dbc-10a0-4a36-a82e-6d2612572202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ded9c32-f1bf-42c2-b263-6df7bebe4955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eaca8b5-c9f5-4f96-aaf5-21b1094bc1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31333bf-8090-4a4a-b624-d4728d060d3c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2d2c44-b6a9-4591-8c67-85edf5394eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5607c03-da30-48e8-82dd-3c468a99441e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5a8386-fdcc-49c6-aeb4-295a3c2300b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58657d05-ac5c-49e3-8ae9-7a464fbe9d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9baa99-d210-4ebb-a740-3e0943b6557f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1746457-50b1-440d-9be5-d1e71d58fabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa42d86b-7867-42b9-a451-9077d4b42af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840e2d9c-5fb1-462b-8ecc-b8cde4cb7dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3c426d-1304-452e-b09e-5f509f3cecde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a05a1b-6f7f-4bba-baef-d3cc9830886d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5ef561-0cec-4f4a-9a61-521327c20224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b378773-5637-4d36-9e24-980b6c8801ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682fd440-63d1-43a2-aa19-9b90f23d2ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c88afd6-4fc6-4644-bd08-265022c5af49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ef26a9-193c-44e9-bc0a-e22c3bd444e6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4033ef-85d5-4189-a5a8-e2f0a26557bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae4fc82-204a-4332-8e12-7b1b9a91a890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429324b6-023e-42cb-9f23-203fe50a5ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1ff8fe-2255-4a6d-b4e9-3bf821c7a7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d5b63c-8b94-47f2-9619-455f010d80c2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9df327-1c08-43df-99a2-e86e2f0a84ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cf4b26-6ff7-4c3d-a72e-2063d463087a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f8d293-ee3a-4c52-ba0b-bef9004fa03d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0e5f7f-89da-48f4-8b10-3979b5d77520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5670d798-8cd3-4df6-b3a4-d313bc9535b9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417d9207-1628-4052-b7a6-8e8f04b590f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6d68a2-5ea5-4855-a8e3-8d99534ba521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cbab11-33aa-4120-9222-0bfb09cb3617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4588d580-26a0-49f6-a4a8-6e2ac761022d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36ad700-cd96-43b4-a3af-f110f497ea6d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5d8410-51e7-41be-b7eb-1e1cde5f6826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d36e08-cc46-4223-a645-a30ff99f0016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "401ff341-8180-4de4-98b9-9967b3f143ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a151d72-ce68-4aab-83c2-fdd9a14b2823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1254d51a-22ce-4165-980d-477582f0a7b4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67101919-0170-4857-85c3-4810a1b0b2e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d223ec30-538e-4d26-a6af-c5a07e1bf9c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5b8bcc-53bb-4f45-aaf0-c3f4e9677e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ae2cf7-8598-4508-adac-7bb14e7c4758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a421d434-aed8-4206-9635-13f45fa6dd97",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77abdc96-ac80-408c-8753-7956fe0fa723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ca7d85-f50b-4233-82de-711101cd8bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd425fa-c8eb-42c0-9070-5fc1ad9cc7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d8e22c-98ee-446a-9f22-84e385b9922b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de2672a-7060-4fba-a654-70f0868523d4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f73eb1-ddb4-4c55-bb94-a7661b7f8ff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26c1505-e9c5-4b6a-940a-5219978c72bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c705a314-5c36-4565-addc-e0fa25bf489b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e776d7d3-9d03-49da-a093-f35d2abca7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859b9058-b717-4419-aa57-ac368eaff388",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4774e8-a32a-48e6-8e2c-df192755780d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94f15749-a1c6-489d-9780-3be06146e4d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36549df1-f1a2-4db7-9bb8-e58233bf4047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c40444-1ec8-4558-84fe-d93e0f34bcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13755ae-8dd3-4757-b2c6-f7118345b3f5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014e4344-b85b-4307-a532-abbd0c02b818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f04b29-9679-4d19-b8b9-f80777a81ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0f29db-e2ce-44bb-a2e2-e6298b73a3ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2196dfc8-db6b-470e-890a-6cf82b55b73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f592baa6-07b9-4e12-ac43-ca60826e7c84",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7150ed-61aa-43b3-8a39-4d7e9f228ba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9e6615-0260-414a-96f7-59ce113e8559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437a2343-a347-43e7-88e4-797e1b655c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fff7fb1-be5d-4af2-aaae-37dd09d6a5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac4232e-ee03-4b41-81e8-319e9a3bbba1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a796f3-bc82-461a-bf43-b4838241836e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b708ec85-644b-41c0-b305-1200418715a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6684b4-315a-4741-99c3-a5f0485e7322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184288c5-4da1-43cd-a1eb-ef2dfe1f47f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7419401-05d0-4501-8e8a-8fc6309a0d8a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051df0fd-4f7b-48cd-ba06-9b38a464c8f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ecc9fcf-205a-453a-bb2a-62cc39b6eb98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c88078-fca3-499b-82c7-f66a329eac2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048cd2a2-d708-42d9-9c75-6c5d332117dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6850e9-1557-42e3-8ebc-3b28b449dcf5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48eb6df2-7cd3-47fe-97d4-36ad782f4c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1dd0ef5-deee-4634-99b5-bfa59c839ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84697ef1-48f7-43eb-b227-6959a68674c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca50e1f-1977-4f90-9c6a-c5ed76dbac1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40304a99-9f1b-4a46-870d-02ebfd0d48a4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a820f13-e729-4ef7-be52-f503e291b887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c00cb8af-592e-428f-bf17-025641ab1685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebceda5d-43ea-47fd-9dcb-d44498fe0ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1c3e37-c0cb-4df8-998a-ffc973ddccfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e53b6e-58c2-41fc-9813-27f786183ff0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994c1cea-b613-446b-93e8-aeec43df86fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dc26a0e-ab56-42e5-b26d-a8fc2923e791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d09bb83-e4a0-42a5-b39a-fe99f20a4a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee55535-845e-432a-8877-cb4d99db5bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfd625f-6247-4450-841c-6b42ed8e0dda",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770fbb9b-d677-43dc-8d95-89e45f00610a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016b6a52-e21e-4729-8b3e-6731295a6962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0491dfb-71a9-4499-bf2f-91f3d35cf94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00f876c-85d4-4b03-a07b-174e862fbe2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956a5592-dcdb-45a9-bed3-5a849ab98c0e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d91a2d-d51d-4e5e-a6c5-6536fcd739e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2e43a5-9fe6-4bfb-b0a3-15a60fc9da43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3aaf22-2286-4ada-9db9-f93cab58caf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3033d3-168b-4acc-be74-b171524cf2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cfb75e-6078-40f7-8b41-3f45c8f31360",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad03396-a259-43ef-8dd6-676d85f59375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf773a33-f1d7-4959-9bbb-e8f68c6a9058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c931b5c-aa4a-43ab-bbd3-1379df883e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ce0700-6f07-4616-83bb-394a6022f8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f24264-4f59-4726-a387-c8a4ae8a53af",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42659e47-63af-4e42-ab9a-710dfbc7578e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375e798d-19f1-4e38-8010-f23320d6d250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f555ebd-3a7f-48a6-afae-1136e95a6d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f3d35c-d657-4e66-b2d0-224ac9f7e513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a41fa3-fe9f-4ba9-af86-644c7026e598",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5764c5-908b-4b39-bc26-9f6896e6e837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47d19b0-b6af-40d3-916f-df8cfee870a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d52debd-f694-458b-8ead-4f59f86629ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40194780-bdc3-4c66-9b04-8a0f9ea3276d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "344fd77e-be06-4a67-8120-55a613d78350",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61b75c9-1425-4b69-96d3-0f643b2b551c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37653c1-2aaa-44d7-a620-c8098e09d202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f72eb81-c32a-404d-9d79-11989701fed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46e76e9-0a59-4866-9768-395fc1222efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262431dc-ef28-42ad-8d08-20bab9f4d0c1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a5170e-05c0-4be7-8114-f254271673b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e870390b-e32c-49ae-b00a-3f4607eeeb4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0361dc1-d790-404f-a16d-05eefd43f0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2949c465-44ed-4d4a-8d17-d6fcd295be8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecf1910-ed30-478a-8093-af28faa05751",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402ec84e-c97c-41d5-8d41-98bf35635cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ad4520-fb2c-458a-afa4-65cba84a4b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81b35a0-160e-4dfb-99f3-eb43e9b174d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3511f97a-1360-4ff0-883c-32c1ef30520a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1407e1d6-9a9f-4003-b05d-74fb61fe52f9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e558772-0d5b-488d-8c29-54ab2b62f735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b67286-65d7-4527-8e9d-257788440cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11317e6f-af48-412d-8b7e-a38d85802f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e1fbc2-f373-41f8-8782-c05125ca096f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5b3776-d5f1-4078-8d47-32753b132431",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ed4346-b5e8-4ce1-ad86-f216e8757d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39f313e-13fd-4e15-97e9-090fe1430c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87283723-a784-4c4b-b1f1-83e25f7f1cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054a1b0e-1f70-4ee3-8fda-a25f6dde3c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b58e06-936b-4f1e-8f9f-9d076d0d7ffe",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ff74dd-0672-4342-92c0-6f6bb3a0ce04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a4cacd-8c15-45be-a345-c13d91872be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63618a2b-7d50-4331-956a-20761926e831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efcdb4d-68ce-43d7-aad5-6936051a680d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bd7175-c7ba-445e-b50b-e715c7d5607c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1b24a3-e064-445c-ad2d-b60d439cb5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12a81b8-1ad6-4434-8a1f-eae93b5a2dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872b3b2e-dd63-4052-91fb-ec3fad19cb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f688649-c92b-4884-9ead-b1b0670666d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12d08a5-7386-412a-a5fd-49611a8ef6da",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fb7a1d-1251-49e4-99e9-5ad64a41d2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736f03d8-6cca-49cb-ba21-2607324542d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2df9b9-3a39-4ceb-94cd-28ba8c23cc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2909a4f-20f4-40d9-b408-ffe49524b13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a684d9c-b851-496b-a58f-185a0107598c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b760f970-be46-4e01-b519-6cb909b5c9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50293486-4c07-4a73-a816-f417b02239a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a21ca7-1485-46a2-abf3-4dc2b7e2247b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfdd06cb-67a6-456c-a83a-091dca2a8362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900465a2-dcf4-40b4-8953-3b344fa5a585",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c856ea89-76ca-4ee9-9b0b-0f77954a4ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fff56de-7ba3-408c-94a7-894ec4275ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8202d001-525e-4231-9042-6e085d7992c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2c9ba3-d70e-48c0-a323-f5cbd895e732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdcb477-f1fa-48cb-8e4b-2306fb1490bd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f28916-f1b7-4f1a-bf89-0ec44ad0f7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1291e6-b1ef-4d3e-a69b-a4ed645b6a42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c46a0f-b8df-48a8-94b7-e94580cd5be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d27229-1d6e-42a3-b31b-2a60ae48dbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d905ddbb-4b29-491e-ba91-aaaa39a2130b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79368c49-82c5-425d-a439-c02caaedd70f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2fffca-706c-4945-b881-2fae64605dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179952e4-fa9e-4f4e-9531-ae8e4b793803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046358d7-78be-41ed-bb65-a0715982e4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1315073d-33c5-47a7-ad49-c721a8083cad",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3904c011-3d37-4af5-be1f-c29c73de9c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0890be0-6f6b-42fa-8fca-c2ede236d602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8818c095-e2ca-4a69-a7c8-c30e9cef712f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca0cca3e-a086-47ad-badc-0547988f5390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7071560d-380b-4c73-96f8-fd59644f0497",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a3eae1-b7ea-4ab2-b8da-2d592262322d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7df8e83-e68d-4d16-adf3-b5268797902b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2ae271-3847-45cf-9cbc-96a29a60c68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edb7a44-0aff-4d3d-9a74-78e7b2a1b612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020de8e8-ec3f-455a-bdeb-8e1d5532904f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfd4f4a-279b-483b-8360-4ded040369f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee114064-f1a7-4069-95ea-a0cd4a27de2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ca49ea-b07e-46b3-b704-ccb51149d5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed12a4be-39c1-4356-b256-435e64312256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60822fce-06e7-4571-8604-0f9ca298d173",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350463c5-e4d7-4363-8f35-9359e5d9c35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db86e94b-fecd-4ec2-894d-3ba4a1f67930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecb6633-e966-443e-ac89-c2538b75d572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eaa6a27-7404-476e-9270-623f73f6c983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30587d87-91f7-4fc9-b5c7-acdaf84a158d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3eee254-54fd-41b4-8363-a5cb6cc74dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c9d14a-b7d1-47cf-a78d-90c70228fc77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c271af9-1461-40ac-a9b6-cf9c555bf412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b835cf-5d8f-4d90-a76a-2d6426ac93c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fada9f6-f098-4dcf-9dca-5bd919377c06",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6048ac-0bee-4ead-91b9-fee81c9777f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8a4c5b-b2c0-48e4-a2c4-8358b863a766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcf1867-523e-48d6-a0ee-db30000d0912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356b0a3c-86f9-46c5-b116-120224eda68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df4dc0d-5be4-494c-9f33-5c47c039a293",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a20a018-484c-46bc-bbef-8c8b312def98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeabbd44-02bc-436c-9069-4875977b10a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53eb0db1-bb82-4cfe-94b2-d9816cae1a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fb3471-b231-49e1-8221-1d8639de2907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bf1750-c655-42af-ae35-3640eb3b5cd9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e32f80-b6e2-41f6-9014-e7d8f4a5683f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea0f3fd-1ed6-418f-9150-665d0a592235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06080eb8-8cb1-4d90-85cc-2aa3860a03c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a83213-502c-496f-8309-67c4c0a8d14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f322dd-204e-4168-ac91-bc8f15144713",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed66d9e8-dd91-4ba1-b52e-310906df9214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852af226-5586-4b1d-90b6-e66ae39225fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d2407f-0912-49e5-aef6-438647dffe4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebf9288-b9a6-4a1f-a259-e84ad1ce4a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439f166d-c894-45ce-a22f-dbc6b9c10e2f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11b9be7-1516-45d4-9b2e-72fd46cc3942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951169c4-0666-4af2-83a7-ef1e3668b151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2165ac-a82b-4d6b-bf2b-da4391470c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5163c251-785a-43d9-b610-402c497369a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a6df2a-536d-48ef-83c2-0bdbcb2d69eb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c8d174-d68b-43af-afe4-2885d73b0d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ebfb5f-b320-488d-af69-9096c1d1c4d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6540e395-ea52-4651-8d74-0ffb9062e141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18402d62-c128-4fa5-8af1-19dcda70bd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f129a7b-2e3f-4695-b593-3387421214e2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc227fe-ad98-445a-a0d1-a790516dcff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23578849-e806-4e44-8aba-225171a37b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb518ea-4942-4056-8860-e2fe51e5d83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733cef1b-9370-4fcb-b2d3-40966a1e77c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efab904-8756-419a-b4e3-7709df37ac47",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddaf3ec-7b70-43b7-ace5-d453bf3a2773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbfc3bef-af2f-4e2e-a003-229c34cdbacf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad52596-5a0d-4f51-9f97-637356afe079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4938f5-09a5-4926-8030-b5a7fb2e1f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50d17fd-879d-4b5c-a7a6-1694fee8f424",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c4ab27-c0f0-4b65-b182-1daf510883fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "722d0c0a-12c0-45ec-b624-2a526f233652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e242823-306a-408a-8c70-57dbf3f9bfae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940d66ea-956c-4c16-b823-c4922c5b1e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a4ad38-550e-4581-8e48-4bd6f0efda77",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79e0ea4-6a03-480b-85ab-a049b25e4de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e434f60-138c-4f6c-be9d-621b567cb44a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc93730-caff-4b62-84a8-846061edc18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c4a459-2c29-4630-a495-dd3a6a2cf253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1055f262-a84f-476e-aaf7-c5c9836fc606",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf49b039-de89-45bf-828c-897415f02b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24d4f0a6-5137-442f-89b3-f72b7ad27d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050e0c73-d6ca-4218-85f4-f40e5934a573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51df0e7c-bc28-4bd9-a568-d32a50536fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414f8b32-cf29-4903-8aca-994667791e92",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d586eb7-421a-4f79-ab24-64093f900824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87b68b02-30e3-499a-8d2e-57891222d134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dc2a23-bd3e-4240-bad4-4787b875cf79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11dc8330-7f19-4086-9515-b84567cf8910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6b700e-edc8-44b6-885f-510318d9427a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e08d076-acf7-4872-842e-c3b0443cb075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c380de9-f29f-470d-9c01-307ed5e03c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe28971e-c25a-42df-88f7-49d9d153807e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0bbad0-4050-41c3-8b84-20be984e9747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cd6f26-86ae-4fa0-b83a-f9c5eddba1b4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00a30bc-5825-44dd-98bc-907392200a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2dbc8a-d5af-4257-8e0f-4ebdbab79ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb00ec5-c63b-498b-ae01-404d0ee79b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12dc523c-ddb4-45f0-b612-e03e0ce0bfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50486664-01fe-4fd3-a431-0833ebbcc23a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bc37a0-125c-4d63-a658-2d842ea4da41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71272d0d-2312-48be-a4eb-a46f12c0c585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f819f8-54fe-4d21-b9f6-2c29cfbe1624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab629bc-64e4-4e61-bb0f-497e5139c67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb0c152-e34b-4411-878f-b020449ade17",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54622e98-8373-4fc3-99cb-11bb3b6a8994",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d88f56b-8fc8-4754-81b3-56e4d3514bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30536df2-e9f2-49cf-bd05-026cdb5584ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c277c3ea-06c7-4c1b-a303-f902492dee23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8d289f-2e67-44ca-93f1-7a19567ebe2b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6099da28-19ef-46b1-b367-887e9db2bbc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c26a625c-e2ec-4a1f-bbf0-88feac962b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b011bfbc-a162-4729-9098-14f672972298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa64d71-fbfe-480f-b150-846cc7a27b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0bee25-e1d7-4ef1-a93d-a086f1413992",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db29e554-6d21-4f86-bff5-141df288a6b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9026c15b-a216-4d15-8a3c-de5f60abc176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb2bb80-5113-4564-b040-aa9658c3ea03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3d40ec-b2c7-497b-8a24-bd0f0169d7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1575c45b-8b9c-4315-bb24-0fb0ca9d23a3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df32516a-f72b-4b30-a8d1-81cb23e430f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf13cae-9fdf-4f70-abc4-831ed22ad1cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5278303-189b-46f0-9cff-bd270883c037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9937dc22-6d5a-4259-ada9-25aa1909690b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8e4e02-5185-4d3e-a702-7c11f7c7a0d3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db20fe9-5926-41a5-b25d-69653bd4bd54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f92bc6e-c44f-4fab-a442-c0f7d717e8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4e471f-d1a3-4fdd-9a67-de36508e87d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9208b0fe-db53-475f-8d28-e4d733dbf1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c02c59-74a6-469b-b243-aefc954f650d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4b5b06-11f6-42da-8479-cafbfd1e09bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48409e25-ef22-4a5e-92ce-c506ad885d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2edab6e-76cc-40bd-8d3b-656102077f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aec14d1-5c60-4bb6-8711-fa20e8d9ecd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b33b12-2dc1-46d0-bdfb-15b3ac9e5fcb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d61d8e-fe32-4be5-89d7-4325906a6bf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "302a71b0-da15-4740-8559-1644b581a97f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bff1ff-63b8-40b4-807d-8a1e355eec3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb14efcd-debd-4bb0-a2e2-9824a2b63417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b29b6f6-5985-4939-a5dd-8e36377a96e1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b0ee45-2b95-407c-9ab9-bff30d176a20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9c2feac-2ddc-4b00-9feb-f6d2fe71a367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bd638e-a353-4adc-a8fe-7ae3a1dc6d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3777fac-d88d-471e-91a8-c9f8d87d4a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f043fe9-92fe-4b6c-a729-c04747bf0d0d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a96b2e-ff5b-4023-a482-f73e961db92c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cadc25e4-350d-48ab-865e-2a5838ea0400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a0c410-44f5-44f6-82fe-c8a9d9771adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c79310e-46af-4e31-b586-a0968a9b03c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a9d3c6-e31a-47e8-b260-ef781b8027a0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0b7492-3465-44db-9f74-11bea2b00771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "325ad126-a5da-4abf-9265-936e9050fc8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1625424-e3a5-44d6-a227-8ea2729c193c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf750c0-e892-4a65-a378-ce501f47bd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2711268a-4615-478d-8e15-a27649f6f253",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a147f451-0e6b-4b6f-b05d-42b14430e72a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d91cb7da-deb9-4665-a9f0-706df803c05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319490c9-3fe3-4f0e-b782-57eb94e101d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb40540-4050-41b3-a581-626b796e8f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed4a7d0-2e5d-4b82-b465-a45837dd2cec",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21aba40f-d92f-4cc1-afff-52cabf6cdd51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee2f7cc-c8f4-4b10-957a-a4479cbe1695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee78d6d8-7911-49f1-a359-04d6b14a5b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf790d2-adb6-413b-80f5-dc730fc8e057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9255fb6-cca2-47a0-bf32-ecba766198a9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79551ff4-95ab-4760-8970-a35779afe849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f76fc2b7-75cd-47f1-8ef8-b2e97b8ddd84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9696f0-5b79-46a1-b933-74d45ff8eeb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65b0688-9a14-4c2b-93d3-f22e6fd79053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7b4dcd-ae09-4649-a5d1-7ab4cd832438",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e85c12-cbdf-4917-8948-6e4c96b7904c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce58ce57-3ad8-4d29-9a6c-51a00f426e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369ff906-f650-46e4-9f11-07c4fefdb8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63cb3068-bd53-45bc-9126-9aade5cc3ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47effdb8-982f-49a5-a01a-10cba070b790",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2b7ffa-23d3-4416-90df-0d0d58eeeddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33af3a92-b4bd-4bba-8bdb-ffbd28d78aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f65a7c1-f254-4194-a0c0-5120f5f67da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b32757-7326-4800-9c5f-34aed0ee38da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071b4c02-9eca-402b-ae1b-056a7f7f2a28",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c965b5-d07b-4d3d-93c1-ce3867ba0b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "623635ba-29bf-456b-9bf4-dee29d737781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fc1b2a-b711-4be3-a12a-2bc1e4c88be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0068b2c1-91c2-42a8-a691-8b4c5a504566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94507d8f-992b-49e9-8f57-de8cedb34a69",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d168a92-b045-48ce-aced-98b13078c615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd060c39-134c-47c8-bb8a-8498de225d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48e5123-5dfb-45dc-8f04-f9031a216cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b50b215-46c1-4ce7-baab-d7767a1c87de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5459324-3f8c-4509-a92f-b0d3c03a0f2b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e793817e-6742-4316-b745-f0ea4531a21b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cc5550e-788d-4286-89fb-769545154141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c38bc62-6034-464a-99ed-eebe3f50cd4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f82045-e0b5-43c8-af63-7f4223561f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043a9d95-3474-4a5e-ac3e-1362e8089a4f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a2e2fe-8781-413d-9b97-2fac1d007139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd4ae210-8c41-414b-801c-d6da0f3953ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50587290-39b9-445a-9c3b-f46e5d96a446",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f65e963-3110-4a74-939d-b8206d01a1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907cc25d-4981-4425-bb5d-0af3a76c82c6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086c6021-872d-4a38-b94d-5dbfe17e014a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7e9b9b-351e-4c4b-b6a0-29b27ef4ab14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1e1fdd-bbd0-415b-80f0-b60d20b6ccb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901cbaa0-c620-4f84-9f7f-da92ce46deec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbfb52c-6838-4069-a954-ef6c35bbeef1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f9585c-c58c-4146-b5f3-e524ce6e3be9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bcf7dc4-fff5-4979-ba3f-32df3bf42c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91b1de1-abdf-4e9d-ab08-24ce90a82092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a571c9f-5808-43c9-bc61-4c24a7fe612b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee2d232-ae59-438b-8dfb-45c72b0193d8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19dcbd5-68ce-4012-8696-4f9961fa7c02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a7d887c-a33e-4b92-89de-6f57057b78f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d26de3b-7da5-4fad-ae5f-b055ecd50d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256b70b7-574e-4e94-b6fb-82ffeba3d4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80918dc6-9316-4275-8c05-449a4d84f70f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9936c2ca-5677-4ecc-99d2-7abbd1eb4c17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d0dbf0-dd04-472d-89a6-8c992c8b0b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d8ca9b-f499-4a03-b1ce-22156fb267d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19c27ea-1fe8-4394-a7d9-2adc1465e8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d09cee-faf8-4c26-a7b1-579dbd173445",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c375d3c8-f037-4e22-a855-d26dbc9df473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "283b7840-4f5c-47f4-8b79-b04bc4aa61c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0752c44f-e8e9-41f0-9940-717b1d088f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b0d904-5546-4c4d-b090-515ad84508fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97941c1b-0162-40e7-b0bd-a4c2e2bf4876",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f9374d-2998-441b-8403-a3be4c1ce1f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1de2990a-c56b-44c2-9269-4a0a08abe122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "435d196d-9873-48f8-b87b-71856626707c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c54ab0-c896-4454-a426-576f39df0024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a956ddb6-47e6-435f-b4e0-8069c500d26a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0b35e9-e302-482e-8d1e-ef67d67acc8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1216482e-fa04-43c9-a27f-0e4b2b8a6c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5a955b-3c07-4ae2-ba16-3c352114505a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb021bd-373a-4927-8906-f275b4509fbb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc243cbf-9662-4c17-a4c3-c0589a1a2818",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4522d9a-7427-4ec3-9d1e-5547e1a7b127"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "633c4e0d-7ae9-4bf5-878d-78da8010c1e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39765006-9638-4a65-9e43-9f1f9e0c6550"
                    }
                  }
                ]
              },
              {
                "id": "003bd7a5-f072-442a-ad6c-27bc62d8adbd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d43e8b84-d4a9-4700-9fa5-ac2dee172de5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c371da0-56ba-4284-b01a-769684b81951",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "32fe81b4-b63e-4c33-8da9-fc0296da3558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c06e71-f070-4813-9ba4-6f2f59ab2b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f9957be-25c0-4d50-9306-642b684bfb4e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56e4bd03-0d44-484e-bbd7-25e160664afa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d21ab77b-0925-41ea-b258-b8034475479f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8471c3ad-cd86-4948-8b2a-831916ff8f50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "123f9db7-9eb7-44bf-bbfb-f10d2a5eaa07"
                    }
                  }
                ]
              },
              {
                "id": "113f07ea-8168-40f8-a5b2-cb58df7dc280",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "808d4ffc-b378-4514-ae24-0c4d5f2fb9f0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43f1523-4502-46fa-ae7b-046bf14624d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "80a33831-2b45-4e44-a955-efdbbe66dc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24c78f1-09d8-4f37-8154-8cb981399c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaebfb53-da16-42c6-8c02-f5bdf133494b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3170904c-f020-4ab2-9f6e-f49303cbcc30",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f41957c5-15a8-4af2-b75f-1b91e5c06c94",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b7c6ed6-f86e-476d-b5b4-19150491eb67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1540abc1-8919-4690-a44f-5704cef6b157"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "284d8a47-a85c-4bda-a8df-3af06f5b8b5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b4fe48d-4a7b-4b7b-9cd1-02bdaf44f4a8"
                    }
                  }
                ]
              },
              {
                "id": "be2aefad-022c-4155-b132-5ccf80514117",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb66ce52-2fd4-4055-b86c-873e592c5187",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4b673128-5424-4f3a-925b-22acbe2498ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2311b7d0-eee6-487b-af34-0539792beca6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a513ab8-3446-4e25-9dd3-9f980dac232c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3e953e6-8ee6-47c6-a8a4-21401f64fead",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "305bbab8-66f7-4adb-9b56-9abf961ca31c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27bb1594-3858-44ec-a8b4-2ceba68b9401",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb526e68-1062-4e35-913e-5174c8fbaacb"
            }
          }
        ]
      },
      {
        "id": "50fa4d2c-2104-4047-af55-94d66911caaf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "81aae247-8920-4ca4-adfc-6e04a6f87993",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b00b23ce-f35e-49c1-96d8-cbfbacb71236",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab46b064-1e7e-4586-b907-9350febb02f2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77466fb0-1560-446c-90a3-d2a2e362d823",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4f5061fe-e100-4d0d-a034-4c619afea104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4151386-70ce-4154-ae37-f0c3a03471af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "890fac8e-533a-4b50-8c95-e74c82917303"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d6a08aa-7459-4360-a0ba-1dacbc8752ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9ab88df-f293-4405-ae82-b2bcb4767741"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8360ad4c-a4a2-4f24-bcd7-c2d011218976",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca660f7f-4b63-482f-9747-1686621d496a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "443e7a94-bc53-4c64-8618-80a04d0ee5d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "24dbf78e-7139-4a1d-b90f-f36e48ae68c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5a99d53-667e-44ef-ad69-bda44552c149",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "853c216a-8bac-40a9-ae2f-bb3b230f9c89"
            }
          }
        ]
      },
      {
        "id": "18373a66-2aa9-4e45-967f-a0f083be0718",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4feea850-5cc0-4756-b9f9-4b1d39f51876",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b94d992-4fc5-490a-95f7-656dd4b77f92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72abaf44-5895-4e66-bad4-aa10f403fc5b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b832a3-6118-4a70-a6a9-a93e3f066acb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0231f18-89b7-4fa7-baa6-e7490361554f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f616c366-247b-4f76-a973-a5632bb35f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dabbd201-92d5-4684-b9eb-7b18f82bc06d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "769ead51-e64f-41f5-8b12-0f21704d34b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d3040a0-e407-4116-8524-a721d138a465"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0232dd20-0af6-453c-9349-50fb51296c3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f2ed340-f167-40fd-8f70-20068423d676"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b25431a-4c27-41f4-a0cc-f215d512b4c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "40e9da8c-2f21-4b98-a67b-7104871ec114"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbffba4e-386d-4235-8c74-30e8e691a202",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cd01670-1aa5-4ed6-907c-a4cbe0cda76f"
            }
          }
        ]
      },
      {
        "id": "ce1d9c35-af2d-4b30-9c92-c3ea1c04410f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "53244db2-9baa-486a-a060-bfbb513ad43e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d0a1f10-d138-4e18-a1d4-e815d0ad1512",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e49d7ebc-59ec-4375-b62a-382b53a028da",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3294bb78-4aa4-4271-b18e-f5ca31d29ec1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c53f459-7bc3-4bdf-8c0e-6dd69fb38e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8a589d-8b85-469b-97e2-b0adae56d595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1793330-c687-4e4d-bc88-141f3e3a989d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea1bb608-f8a9-4ff2-a562-d9203b714c05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17552c4d-f10b-4424-8c97-a48896cde972"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c51dce6e-f143-4854-8c96-89329e247e1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "795a4a85-5003-4520-9dbe-046d0ffa14cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44e401c5-1e0d-418c-9b21-4f4f792c9773",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3c0d89b4-be35-406b-b036-d794681db89b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7338e9b6-9332-4b17-9d44-fc718939becf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f791bb5-bebf-4e62-b3e0-262b18fc3092"
            }
          }
        ]
      },
      {
        "id": "1b779900-1f15-4790-a9a0-237169e875ca",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4656b7ee-93ea-4acd-920e-e08639ffa1c2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "997a0ff4-d674-42a7-a16f-a53484d6a8ef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0a9894bb-4785-4abf-864d-d430134b8e60",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17a7df5d-d15f-4cfd-8624-ef508a5d13c9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d30c9a6-a773-4aef-a4d3-82f233d9ac1f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 361.04225352112667,
      "responseMin": 7,
      "responseMax": 7727,
      "responseSd": 912.6992151687053,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695256389449,
      "completed": 1695256506587
    },
    "executions": [
      {
        "id": "b89daf82-a177-4ed7-b485-bd182fd35725",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6ff922f5-a881-43c1-8fc7-391c4e2b9090",
          "httpRequestId": "a011863f-00a8-4125-82cc-cb5f21fb496a"
        },
        "item": {
          "id": "b89daf82-a177-4ed7-b485-bd182fd35725",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c00eef4b-e5ee-4101-91a3-8f942a0ef436",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "c4c8e132-2149-48f6-b7e4-6aee39a8fd3c",
        "cursor": {
          "ref": "3ecced84-2bbe-45ba-8c2f-771016ab4093",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2d1a02d8-e2ec-49d4-93a8-5330e1d32674"
        },
        "item": {
          "id": "c4c8e132-2149-48f6-b7e4-6aee39a8fd3c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fa7a5007-19cf-4373-baab-4a698cb22497",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "63c89e2e-c468-4700-bac1-1fc71890c88c",
        "cursor": {
          "ref": "cb8f10eb-f11d-4db3-ae9d-730e256dc3ab",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "721fde7a-a2f8-4d6f-a9bc-05a23450a17e"
        },
        "item": {
          "id": "63c89e2e-c468-4700-bac1-1fc71890c88c",
          "name": "did_json"
        },
        "response": {
          "id": "d183514f-2478-4ae8-baf3-88e4d180974a",
          "status": "OK",
          "code": 200,
          "responseTime": 1485,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18c0b36-5fef-4709-a24c-33e3ebd6cc74",
        "cursor": {
          "ref": "884ce9b7-d80f-4975-ba2e-a222ff2dd9b3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0e68ae28-8817-45be-a097-c9ef4eb4111b"
        },
        "item": {
          "id": "c18c0b36-5fef-4709-a24c-33e3ebd6cc74",
          "name": "did:invalid"
        },
        "response": {
          "id": "a76ae7f9-9b42-4dbf-9a2d-53e81ccbeb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18c0b36-5fef-4709-a24c-33e3ebd6cc74",
        "cursor": {
          "ref": "884ce9b7-d80f-4975-ba2e-a222ff2dd9b3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0e68ae28-8817-45be-a097-c9ef4eb4111b"
        },
        "item": {
          "id": "c18c0b36-5fef-4709-a24c-33e3ebd6cc74",
          "name": "did:invalid"
        },
        "response": {
          "id": "a76ae7f9-9b42-4dbf-9a2d-53e81ccbeb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0612a55f-f412-499f-90d7-e023612b5132",
        "cursor": {
          "ref": "29c43e3e-b5c3-4e97-a346-5d1611f641a5",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8088f746-078b-4c3f-8d9e-84f64b9d3447"
        },
        "item": {
          "id": "0612a55f-f412-499f-90d7-e023612b5132",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c419942c-c5c4-4d73-ac56-701198d0ae8f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 906,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0eac55-c929-4887-9edb-6315d86b5b97",
        "cursor": {
          "ref": "c3218c9d-c2e9-4403-bf23-05596142c02a",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "af66233f-64e3-45df-87d8-310424fb6d36"
        },
        "item": {
          "id": "1f0eac55-c929-4887-9edb-6315d86b5b97",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f440e812-9d4c-4513-b64c-b270bd357c2d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 287,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd589fc6-ab63-4477-bbcd-b196af9a8699",
        "cursor": {
          "ref": "c9ce121a-951b-4ac5-942e-a98f0dc52d2d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "950a9569-c0c8-4592-a1e1-7cdb984911ae"
        },
        "item": {
          "id": "dd589fc6-ab63-4477-bbcd-b196af9a8699",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "39f023a5-a7aa-4802-afa1-ce575aed98be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2690fa0d-0ea9-4406-b5c0-0caa39571f88",
        "cursor": {
          "ref": "e8ad70d2-9788-4140-ae11-1fc7db5178ae",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5eaf6507-34b3-463a-bd7d-644e4f78435e"
        },
        "item": {
          "id": "2690fa0d-0ea9-4406-b5c0-0caa39571f88",
          "name": "identifiers"
        },
        "response": {
          "id": "1cc67d55-2e61-44c8-87d8-a09b3c69c2e4",
          "status": "OK",
          "code": 200,
          "responseTime": 1716,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd87b02-55d7-476b-b591-22cf6d17b121",
        "cursor": {
          "ref": "6b556bc5-73f1-4ada-b3c6-8af2f6dee86f",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4c3cb086-b00f-48e5-ae49-057672d51477"
        },
        "item": {
          "id": "9cd87b02-55d7-476b-b591-22cf6d17b121",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a1419e01-9b6a-4b9e-8b91-a5da50f16f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a13c4e-dee0-40c3-a9ee-8445dadc11f3",
        "cursor": {
          "ref": "fa3b6855-904b-45ea-b034-d608252d2f7c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5ab69fef-be5a-4cc7-9cbb-b944802d7e1f"
        },
        "item": {
          "id": "f8a13c4e-dee0-40c3-a9ee-8445dadc11f3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d0c62e29-4328-4c9b-b725-0771f8a00599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24afce40-d4f1-4f95-b9ca-efaed5672b17",
        "cursor": {
          "ref": "159bdfe9-1bfb-4b96-bcbd-353cc9d71b4f",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1b3319e7-aafb-43b2-9b22-d76d92226de7"
        },
        "item": {
          "id": "24afce40-d4f1-4f95-b9ca-efaed5672b17",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6ec62d90-f490-4e57-ad6f-ee7d416b8f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20da9e22-3884-46dd-a68e-16d6eaa6a5c3",
        "cursor": {
          "ref": "b754d256-e611-4bc4-8f3a-6699dba0ec2d",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cd0bea37-6d1f-4b95-8fea-5ebb5cb77614"
        },
        "item": {
          "id": "20da9e22-3884-46dd-a68e-16d6eaa6a5c3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "817ab4bb-8e60-407b-982f-5d0618f9f29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07ba448-ae15-446f-891c-1d9dfaf90d06",
        "cursor": {
          "ref": "679e1c42-cef8-4a81-b422-4f45951fc5d1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5091201a-51a5-430c-9821-b2aefcfa8e15"
        },
        "item": {
          "id": "c07ba448-ae15-446f-891c-1d9dfaf90d06",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "63f92204-1823-4ce0-86be-3fc3ec1bf719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfaa553-e4dc-4355-878e-2de7e493dcf0",
        "cursor": {
          "ref": "6dd45639-d209-4bbe-a95a-47399498c9b5",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "543dd6c2-b9d9-42e4-b446-355d7659ec49"
        },
        "item": {
          "id": "dcfaa553-e4dc-4355-878e-2de7e493dcf0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "067e9bfe-dca9-46b9-aa97-037f5ae25453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e52f3f-9bf8-44a8-9c40-918f9f746114",
        "cursor": {
          "ref": "33a92688-7458-4b9a-af14-3d3898f2ff47",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3d43c2da-bf6c-4900-aba9-8669e4386137"
        },
        "item": {
          "id": "e0e52f3f-9bf8-44a8-9c40-918f9f746114",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "75a92135-03b0-41aa-802c-12587ea3f084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206e91b0-4ece-4436-9715-976640b613f6",
        "cursor": {
          "ref": "60581afa-887c-49cf-a8a0-cee092d45da8",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b1e5be6b-2fe9-43d2-95d8-d5ccfb96f798"
        },
        "item": {
          "id": "206e91b0-4ece-4436-9715-976640b613f6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "55d0a892-9964-4192-b294-9af1b767374d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e82cb63-ab65-4506-bfc5-7d2879326741",
        "cursor": {
          "ref": "9d7bb5ec-b7a1-40f8-856b-d1874d9c073c",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "60992a75-3a5b-44f9-bc36-b526c090edb5"
        },
        "item": {
          "id": "8e82cb63-ab65-4506-bfc5-7d2879326741",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3651f165-416b-4aad-b7dd-e2289203e326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfe35af-c957-4a43-b9db-ad63c3884ba7",
        "cursor": {
          "ref": "f3a1d49c-8f08-42ec-aa9b-328f8d0f96f4",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3e41fcd2-acfb-40b1-969d-c4c16724d228"
        },
        "item": {
          "id": "5dfe35af-c957-4a43-b9db-ad63c3884ba7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "05f7a943-a59b-44f6-9000-088db00dc036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468bb536-4341-47db-bb73-8b1ff6d47046",
        "cursor": {
          "ref": "fcd90efc-f770-4068-9ce1-3b55a15ac36e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c4dfdd98-fc53-4e7f-92de-ca15794dae0c"
        },
        "item": {
          "id": "468bb536-4341-47db-bb73-8b1ff6d47046",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1f3225ba-38d7-4bf3-83a1-b4e45783436d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2e9fbf-13b1-4024-b331-67b5f8f1c842",
        "cursor": {
          "ref": "66af8c74-93d7-40af-8b76-7a7ecf4b0270",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f21b77c9-c7fe-43b2-9946-24d8225fb5c8"
        },
        "item": {
          "id": "be2e9fbf-13b1-4024-b331-67b5f8f1c842",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3564eb8e-8e39-4449-8bd9-49087eacb1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce64d7b-7745-4551-a719-c300864413e4",
        "cursor": {
          "ref": "1860d1df-9daa-4c9c-b06e-17a2809b287a",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fb957831-da35-4775-b7a6-860f6f24885e"
        },
        "item": {
          "id": "dce64d7b-7745-4551-a719-c300864413e4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7f7f5dd8-84f9-4391-ba6f-18ea217b585e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad46f67a-f63a-4e4b-9861-59fc317798e9",
        "cursor": {
          "ref": "ca186980-2f35-424a-b600-facc47f4bbd3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fa270be8-2b3a-4f56-a880-ac7b7ee7c14e"
        },
        "item": {
          "id": "ad46f67a-f63a-4e4b-9861-59fc317798e9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f210e154-d6dd-4d99-a935-66e3810f6f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300eaa0a-c1a2-4af9-9db8-2f7dd1e555cd",
        "cursor": {
          "ref": "84b5b3d4-2fa8-443a-b8b9-4faebf1d55b0",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0c85c02f-7bb3-477e-a357-47700355251d"
        },
        "item": {
          "id": "300eaa0a-c1a2-4af9-9db8-2f7dd1e555cd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "526821ce-5ecf-42d6-842f-0c07bef4b37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6c8818-8669-48b2-a7d2-3b4d68346086",
        "cursor": {
          "ref": "1bce53d8-7551-4d26-9711-89281b61b224",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "321070eb-5bfd-4ae8-a2b5-95a7f8898e5b"
        },
        "item": {
          "id": "2d6c8818-8669-48b2-a7d2-3b4d68346086",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7c162961-cd90-4d38-956e-74930a994ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24388da9-2308-4095-8d43-925287ca3d72",
        "cursor": {
          "ref": "38d95104-55a7-4a69-abea-e0b900eddc14",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "67e3f3c5-6cc9-4661-98cd-99c1c6c37773"
        },
        "item": {
          "id": "24388da9-2308-4095-8d43-925287ca3d72",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "00ae606a-c176-456a-b9ef-9dc09b80da66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6210be-9e00-4b69-8589-3f2cd864b68d",
        "cursor": {
          "ref": "5f874ebc-e1b5-4855-8b79-b1a80d2f3772",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "794f4fec-f940-46b5-b7b7-abec60de8c56"
        },
        "item": {
          "id": "5f6210be-9e00-4b69-8589-3f2cd864b68d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e8bdb98a-584a-48e2-b1af-1b0f7b56412d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1da6f44-1d03-4fa9-a44b-07084a19433c",
        "cursor": {
          "ref": "de4d5c49-6930-4546-878c-9713c36ebb7e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "91a0a7e1-4d00-4341-a5cb-216e4f4a3025"
        },
        "item": {
          "id": "e1da6f44-1d03-4fa9-a44b-07084a19433c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "332b0546-c74d-43fd-86b6-e98960144ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d95731-42c3-4852-bf92-6b67ec819816",
        "cursor": {
          "ref": "ac9701a5-a0ee-461a-9a25-7903ba204893",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6e6c8ffb-8017-4c0d-9fdd-bdca6847a83a"
        },
        "item": {
          "id": "84d95731-42c3-4852-bf92-6b67ec819816",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bdab837b-aa0a-4190-be7e-a1484608f870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3de7afa-e590-4b51-a67e-8eb7fe68da11",
        "cursor": {
          "ref": "7dc20595-ac8a-4238-b2ea-0f831f27853d",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "05d1e024-89f6-4691-bb11-c939d3f2bb0f"
        },
        "item": {
          "id": "c3de7afa-e590-4b51-a67e-8eb7fe68da11",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "11e0f03f-e6b2-4605-b76d-0ae85b688ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee43ec1-2a27-4962-8408-b626209432a1",
        "cursor": {
          "ref": "5e2fe13c-700c-4002-80a6-2478163ab89b",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "af0ba479-69fb-4f48-bab7-f15d79613c2d"
        },
        "item": {
          "id": "4ee43ec1-2a27-4962-8408-b626209432a1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fffd0e3c-0b6b-4f3a-aaf8-4f14c405fbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ee008a-11a9-4ce3-9e27-a02d35e554f5",
        "cursor": {
          "ref": "74ad52d9-fb1e-462f-923a-7d6f25f0f15f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d8cea6e6-f797-40b7-bb8d-7811f8a90a23"
        },
        "item": {
          "id": "75ee008a-11a9-4ce3-9e27-a02d35e554f5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bd801698-bf43-4e82-b2b5-fa15f4fb792c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d93786-cca8-4631-84ed-68f5b4c6c6ab",
        "cursor": {
          "ref": "2b2f8925-0291-4e23-9f99-3745bfe5475c",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7b59ca02-6700-49cb-890c-33ad5afadcbe"
        },
        "item": {
          "id": "52d93786-cca8-4631-84ed-68f5b4c6c6ab",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5d7f5f3f-3b5e-4ea3-b11c-d1538a9968e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70db023c-4e0d-4552-a5d3-b1f0967c14fb",
        "cursor": {
          "ref": "2246ef50-b7b9-4ed8-9f8a-b8ac6d663c1f",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "00ff459d-ad8b-438e-be07-12405a1e186a"
        },
        "item": {
          "id": "70db023c-4e0d-4552-a5d3-b1f0967c14fb",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "de6cc4eb-9df9-430c-8ba8-4ef776fff7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff257106-1757-43e1-8fc6-d33a88e8682f",
        "cursor": {
          "ref": "6cf9fe76-7900-424a-893e-066ae07af51e",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3edca964-15ae-4843-812a-2876cddacc1f"
        },
        "item": {
          "id": "ff257106-1757-43e1-8fc6-d33a88e8682f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6c0ef29d-8e8b-4635-81c2-9a579c4bfe05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c549f72-0968-4b58-b3c2-bc4a3867bc0c",
        "cursor": {
          "ref": "f6f8b3be-9cc4-4be3-b36f-cb6d963304a7",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5e23edf7-4c86-4468-82f9-45dd4bb7fe87"
        },
        "item": {
          "id": "2c549f72-0968-4b58-b3c2-bc4a3867bc0c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "198ca88d-df6a-44d3-82f5-aaeb4a874aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f05f5d7-d0bf-47ee-ac3f-ffbd9c6692da",
        "cursor": {
          "ref": "e9d93f25-ad93-47e5-a2cb-40ebbbbfd1c2",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bbe79cf7-a08a-4aed-a543-f6b621cf7897"
        },
        "item": {
          "id": "4f05f5d7-d0bf-47ee-ac3f-ffbd9c6692da",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "24011c81-3fb2-4f9a-9822-9d3232e3794c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baa4122-ce23-4506-b52c-4b3078dd8978",
        "cursor": {
          "ref": "253f3279-9259-441e-973f-c20c4c72f2ea",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3e5a50ae-db4b-42cb-8b87-7897109f7d08"
        },
        "item": {
          "id": "9baa4122-ce23-4506-b52c-4b3078dd8978",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f46c7a03-464e-4372-8f8c-5fea96251152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7686ff5-4b36-4ba8-94c6-4b8d73df6bca",
        "cursor": {
          "ref": "98d684f8-1f27-42d4-8647-8b0b55fb03c3",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "254b9dcb-731d-4023-90c4-093b59095e63"
        },
        "item": {
          "id": "c7686ff5-4b36-4ba8-94c6-4b8d73df6bca",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6b0a12a3-3f69-457a-8281-55d79ca3625b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ba36b3-3b45-4506-b81e-39344ffe765f",
        "cursor": {
          "ref": "51b543fe-7174-4a1f-9921-ce65c75437eb",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0c623cfc-5eee-427e-9c69-a6ff4c04dad0"
        },
        "item": {
          "id": "50ba36b3-3b45-4506-b81e-39344ffe765f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "de0619cc-0fee-4709-8df6-6fba131c66a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff34202-db65-457b-9f06-831f78ba7a5d",
        "cursor": {
          "ref": "8fe54d4b-deef-47ab-aa91-50f0e92bd29b",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "739fbbad-12ea-41be-8499-8f8098eba413"
        },
        "item": {
          "id": "3ff34202-db65-457b-9f06-831f78ba7a5d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cf0e4032-d2ad-4cae-a0d7-c5c6892ce2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe458f3-3e9e-45b3-96df-1be2236b0dc4",
        "cursor": {
          "ref": "cf466f20-b8a8-4ee0-aa62-e9914ae86b28",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "90f8f8f7-5420-458a-b615-d9a729dea009"
        },
        "item": {
          "id": "cbe458f3-3e9e-45b3-96df-1be2236b0dc4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dc38ac10-31cc-406a-b4ff-3c8d5ee676ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191330cb-a7e9-45d5-895c-683783ec072a",
        "cursor": {
          "ref": "09841186-bd7f-4a8c-9884-0d5e7b7c928f",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2fbb1181-0e7a-4ff7-9df1-5068fe2ca846"
        },
        "item": {
          "id": "191330cb-a7e9-45d5-895c-683783ec072a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d9e91a29-79c9-4c33-8255-bdedee209e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b1a271-84db-4ad6-9e46-5cef617d7140",
        "cursor": {
          "ref": "947b8275-dc58-4da0-9292-1b8621a3e64d",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "38cff514-736c-4ae2-8a1a-9b5583a451c9"
        },
        "item": {
          "id": "46b1a271-84db-4ad6-9e46-5cef617d7140",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f7faf125-2d78-4c85-9f7e-9f68052f6d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdf521c-03ac-4ab6-8aa4-a101c0f83ef8",
        "cursor": {
          "ref": "9efb4ee8-97b1-4d55-aeb5-dafab35464fd",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "16067462-6c44-45bf-a420-afac6bb6f9db"
        },
        "item": {
          "id": "7cdf521c-03ac-4ab6-8aa4-a101c0f83ef8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "edad4f71-b793-4938-9b84-e3b4164b1649",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 633,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8aa01cc-a23d-4882-bafb-037d7a68d44f",
        "cursor": {
          "ref": "5d8300bc-51bf-4e2d-9f35-5bc0587cb6cd",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "10ef9487-2825-4b81-a867-7e662d304dcd"
        },
        "item": {
          "id": "b8aa01cc-a23d-4882-bafb-037d7a68d44f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "31ea6de1-9361-4712-aaaf-62d88b15457d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82f23c4-1a1f-49fb-ac3e-eef209678eb2",
        "cursor": {
          "ref": "273f3a47-1b74-43a5-99db-d009d08b6e3a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e9908061-0914-44a2-b910-880cd49398ae"
        },
        "item": {
          "id": "d82f23c4-1a1f-49fb-ac3e-eef209678eb2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c5ad0ad0-3121-4148-a5c4-5fbaa84c1aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de7a2c3-d777-4e9b-9318-f38d2f726476",
        "cursor": {
          "ref": "b4b26d4e-0183-418f-a20a-c9ea794c0cc4",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c0eb014b-d66c-4c54-9f2e-c399ba450e3e"
        },
        "item": {
          "id": "9de7a2c3-d777-4e9b-9318-f38d2f726476",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f7c04212-7bf2-4020-a31d-80fad7eee8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098cb10f-f912-43f8-b4ce-5fa43fbec782",
        "cursor": {
          "ref": "beab8b98-d34c-491b-a8ec-1943e626dd94",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1ffe19d8-e34e-4f5a-8c36-5749dab087ee"
        },
        "item": {
          "id": "098cb10f-f912-43f8-b4ce-5fa43fbec782",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "17e47235-a5ef-4538-8bdb-ab155420eb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7295ad86-57ed-43a3-aa6f-cd6b4bb8d2ed",
        "cursor": {
          "ref": "eb739624-80f0-4369-9aa7-7dcf52d19f07",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c2994a84-248d-4b40-a23e-377aeb327fbc"
        },
        "item": {
          "id": "7295ad86-57ed-43a3-aa6f-cd6b4bb8d2ed",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2a438785-9b49-4dbb-be68-8729c030fdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc586a9-821e-433e-b170-7ab81a19178d",
        "cursor": {
          "ref": "a448df86-2a43-45bb-8dc0-a660fbd973ae",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "773ae4b4-96a0-4936-89fd-00fab69a545d"
        },
        "item": {
          "id": "fdc586a9-821e-433e-b170-7ab81a19178d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0fb2d612-7055-4b68-b6eb-9207c714a27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170620b0-70ea-4db0-9a77-62ebb5734d2e",
        "cursor": {
          "ref": "2da4718a-c987-4937-88b1-0df12479c9e7",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dc092d78-6f86-4576-9884-0c8c2fa6e76f"
        },
        "item": {
          "id": "170620b0-70ea-4db0-9a77-62ebb5734d2e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f24ad63d-3356-4a98-be5f-d06e86da054d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 651,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e084c7-789e-4479-a70c-be6b2ccd2e90",
        "cursor": {
          "ref": "729cd0b4-f99c-4210-a920-3d27f0d45179",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "32a0b184-d9c8-4ed7-8829-02bd69f3560c"
        },
        "item": {
          "id": "06e084c7-789e-4479-a70c-be6b2ccd2e90",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3879031c-c958-4f8c-b8f9-24fa458394b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d7ede6-c0f2-42f2-ad6e-4b962e8235f7",
        "cursor": {
          "ref": "00ca7d79-fc90-4c66-a438-a83500667b60",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b449ff92-c5e1-4d40-9977-6f896f7d5955"
        },
        "item": {
          "id": "30d7ede6-c0f2-42f2-ad6e-4b962e8235f7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2b45bb16-c8be-488d-935c-5c3fb481253a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bc675f-1d21-482f-95f7-7bcf2f6b1f73",
        "cursor": {
          "ref": "0e781fe8-6c8e-421a-8856-67e2058a63f5",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9b940563-b1b8-48b1-8222-5bdf361bcb42"
        },
        "item": {
          "id": "43bc675f-1d21-482f-95f7-7bcf2f6b1f73",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "42ec2c7c-9c29-4510-9780-f6c05453c096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee0ffeb-d6ac-483a-83a1-cadb991e0456",
        "cursor": {
          "ref": "23d3e85a-c110-4154-9c66-e6031da469c1",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3c4d49f1-25af-48d2-961f-322f3fc81572"
        },
        "item": {
          "id": "8ee0ffeb-d6ac-483a-83a1-cadb991e0456",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "688c7168-8b75-4b33-83a0-1a5511a94303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58aad88-f8fa-47da-924c-9c2fb315e8b9",
        "cursor": {
          "ref": "51b6f05b-4d5b-4d79-ac3d-471de965373f",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "28698613-e5dd-4c81-a829-da73b710f127"
        },
        "item": {
          "id": "f58aad88-f8fa-47da-924c-9c2fb315e8b9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "99bdc267-d5f7-4063-959c-2d1b75fd9c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27794010-86d7-4821-be2c-9a1650315405",
        "cursor": {
          "ref": "05598d39-eb29-4a5b-a4e3-8eb15368e42f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "be993c3c-d9c0-4d64-9967-e6283bd1c907"
        },
        "item": {
          "id": "27794010-86d7-4821-be2c-9a1650315405",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e20af94a-e7d0-426f-af0b-a46ec743f4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b941c3bd-050e-4343-a25a-637e9bcbcd79",
        "cursor": {
          "ref": "f9e50018-ec80-48e0-b206-897fa16ba20a",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "57aecd9b-a924-4945-acfe-3f30e5b20086"
        },
        "item": {
          "id": "b941c3bd-050e-4343-a25a-637e9bcbcd79",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "dd9e9c5e-d03f-4f27-892d-28d84790744d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359f7653-1095-4477-a16c-07113be582a0",
        "cursor": {
          "ref": "f052d846-c85a-4c56-81f0-95686c14f27b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c8e55ecd-dd45-44f3-b0e9-625724214485"
        },
        "item": {
          "id": "359f7653-1095-4477-a16c-07113be582a0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d5a15ceb-534a-4364-aba8-729f055fa784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a8ef6a-4c34-4c3a-9038-20239812f431",
        "cursor": {
          "ref": "7da437f5-a5c5-4617-9dbf-7bd1af703c0d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0384d8e5-c24a-415c-9c5a-e3a90fe0b26f"
        },
        "item": {
          "id": "86a8ef6a-4c34-4c3a-9038-20239812f431",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4dbf2583-3682-44a1-81fa-27be7f7ef270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9423796c-e080-4e3a-97a2-d958707b800a",
        "cursor": {
          "ref": "0fb957cc-ec13-4b23-8d86-41bb303972d5",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "989aa8c7-07f7-474a-a9e7-f1310fb7fa4a"
        },
        "item": {
          "id": "9423796c-e080-4e3a-97a2-d958707b800a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2cafdc8d-7625-43bc-9c15-b63ba663cd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ccb569-f534-40cb-a3c7-24d571f2f4ca",
        "cursor": {
          "ref": "b7749271-558b-42bd-88f7-8a5e545fc7a1",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c3f33c01-1b53-4ae5-9080-0ff054e148cc"
        },
        "item": {
          "id": "91ccb569-f534-40cb-a3c7-24d571f2f4ca",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0069c932-2ae9-4ef1-bdd7-db5903bdfa43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e1aed3-8e91-4c21-a423-bacc6840d1a4",
        "cursor": {
          "ref": "a14fbad7-578a-4e03-9757-76a8f036d0d6",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "eb1eac6d-9d90-45ac-8414-e8f8a519b4b0"
        },
        "item": {
          "id": "33e1aed3-8e91-4c21-a423-bacc6840d1a4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "489e27a2-78ae-4ab7-afb8-cd47718beb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7942be8-b3c7-4bb7-b87c-9305db270fd3",
        "cursor": {
          "ref": "1ca4e8ab-8cb6-4d36-a0b0-2dc5c013ef31",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3bf83082-6f28-4d04-8d13-f51d39ff42e8"
        },
        "item": {
          "id": "c7942be8-b3c7-4bb7-b87c-9305db270fd3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0f598a24-d1ac-4b1b-a321-c1fe0285a1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21248b4-840e-42d9-8818-5e5aaf69b7a8",
        "cursor": {
          "ref": "fda8f1bf-72a9-4832-9e24-672944132c47",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "02d3aa51-efad-45e3-a200-be9f2c5e64ec"
        },
        "item": {
          "id": "e21248b4-840e-42d9-8818-5e5aaf69b7a8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7e30a1b4-110e-4008-8f08-1d72f4b39ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84dcb49-9dbc-4a5f-ad62-b5252647d300",
        "cursor": {
          "ref": "3b8aebea-9ca0-4c9a-af11-78c3b0c8c5c0",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "489b4b37-28f9-4138-8776-d7a154ffee6c"
        },
        "item": {
          "id": "a84dcb49-9dbc-4a5f-ad62-b5252647d300",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3a25a8a7-b4aa-4768-b66d-1d33a8a9e4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bbaca8-603a-4d8b-bd82-0f76ec15efdb",
        "cursor": {
          "ref": "356e0795-3fef-401e-b0c4-60b31f78965d",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a7e610fd-d4d3-4954-8c5a-00d9d6b03fea"
        },
        "item": {
          "id": "a3bbaca8-603a-4d8b-bd82-0f76ec15efdb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "76390fef-9ca5-4846-a48f-b22dc78d5f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e167e72-e0fe-425d-a0da-dc02f411f436",
        "cursor": {
          "ref": "1bf298be-5371-4fdf-b8c0-035e8ad434b0",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f62eaf67-5d0c-4c4b-a659-802d91d7a776"
        },
        "item": {
          "id": "5e167e72-e0fe-425d-a0da-dc02f411f436",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "13888738-d77a-4c28-83d9-124fa1bca60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9b187d-2a27-4dc5-81af-3949ff6b44aa",
        "cursor": {
          "ref": "7e601400-496b-423f-8326-827ce555514f",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "23f1de02-8170-4314-9d26-1e66f4c2a1c1"
        },
        "item": {
          "id": "5a9b187d-2a27-4dc5-81af-3949ff6b44aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4e92a37a-4a6b-4d72-8221-489d94e365fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ca9a00-7212-4707-84d4-1dd83c0b5739",
        "cursor": {
          "ref": "a582d49b-58d3-4db0-8a6f-7427201217a2",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9a1641dc-5180-4059-82b6-59ca297c13b7"
        },
        "item": {
          "id": "55ca9a00-7212-4707-84d4-1dd83c0b5739",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6e52c0c2-c82e-42d2-a591-4067b7695728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffb643e-89cb-40ad-85b6-1eb59330005b",
        "cursor": {
          "ref": "1d01296e-4df8-45c6-9183-4d62ad4ecf5a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b2273c81-5113-4d78-a1e3-75603426a6ae"
        },
        "item": {
          "id": "fffb643e-89cb-40ad-85b6-1eb59330005b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4666c4eb-d340-4217-958e-fdeb4bdd1f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e7d711-e2f5-46a0-a32f-74297d464a2b",
        "cursor": {
          "ref": "1dd3ebd3-44b4-4638-86dc-09b924a721cb",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "54437ae6-d037-45b0-9d3d-7eba15d0e908"
        },
        "item": {
          "id": "a1e7d711-e2f5-46a0-a32f-74297d464a2b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d90c4a0f-7508-4f13-87c5-61c6f3ba18c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a4b440-9a09-496f-bf30-dde8e56a3a51",
        "cursor": {
          "ref": "4750b8b0-2f72-4d30-83d3-2864faecdf0d",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a6177795-ef53-45da-a19a-7382194f63a8"
        },
        "item": {
          "id": "01a4b440-9a09-496f-bf30-dde8e56a3a51",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d08f9100-c140-4dd0-9b99-7a26762806ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7af48e-b69b-4d5b-be3e-08735a5cc6e9",
        "cursor": {
          "ref": "392924a4-6f9b-486f-92ff-df8d9ec078ac",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "73c7811a-0f3a-4ea2-8bba-c8622e99142a"
        },
        "item": {
          "id": "da7af48e-b69b-4d5b-be3e-08735a5cc6e9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9b47c7a3-3b30-4a5c-b5c3-3c2510dfc4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482b3b13-7708-4908-a613-2840b12c9b8a",
        "cursor": {
          "ref": "cb6d3f8d-f7f4-473c-856f-9aef9ffe1d18",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "66265024-68c2-40d1-be01-fa1554b8545e"
        },
        "item": {
          "id": "482b3b13-7708-4908-a613-2840b12c9b8a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b03dbe2d-b0f8-438c-9fb6-ad1134a9e2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae7106c-a3f7-4665-9fa8-645e17980a6b",
        "cursor": {
          "ref": "3922a9e8-a624-4f24-9afc-fe1e22a3bbb4",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9cfc22e7-4709-4f7e-9d21-375df3e95f43"
        },
        "item": {
          "id": "7ae7106c-a3f7-4665-9fa8-645e17980a6b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fea908cd-3445-4068-98ef-099dc96bfeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa3067c-1bbc-42cd-8fe5-6358ec3e89a8",
        "cursor": {
          "ref": "46897b8e-4226-414b-9b29-78309dbc1912",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "99dd4ea6-4958-411d-85b4-071cd40f9431"
        },
        "item": {
          "id": "4fa3067c-1bbc-42cd-8fe5-6358ec3e89a8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c93d85ee-a205-4a0f-a71a-b61c25cb3d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da566f1-847d-4826-9258-e9d3e944d42a",
        "cursor": {
          "ref": "a1db9516-9b6d-4f59-9cfe-6cd5bd9936c7",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "575f7fcc-d487-4ca8-a06d-b2257db9e631"
        },
        "item": {
          "id": "5da566f1-847d-4826-9258-e9d3e944d42a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a3045eb8-ada6-41cc-bff1-864f65a875d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59736da3-5853-4d60-99af-4723777a1dd4",
        "cursor": {
          "ref": "92258b85-38da-4050-bae6-3738fcf388d4",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b4e9d53d-998f-4895-8679-91ec8ca27947"
        },
        "item": {
          "id": "59736da3-5853-4d60-99af-4723777a1dd4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "083c1437-81d7-40cf-92c5-67b7d080e063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd5478d-65d0-468f-a36f-1c0bd09d6b11",
        "cursor": {
          "ref": "b63179b3-27d6-48bb-8ee2-20923e8d9014",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3a985ee5-d2d2-4665-a54c-446866320177"
        },
        "item": {
          "id": "4bd5478d-65d0-468f-a36f-1c0bd09d6b11",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d61186f1-c5e5-4c09-9c4a-b4c1484cd76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5123a6-ff99-4a97-aecc-30e4c9fc66f8",
        "cursor": {
          "ref": "a72ec115-aa88-47be-818a-4875cb8c7dce",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6bce1a37-8a84-47d0-8a49-5fff29238d9e"
        },
        "item": {
          "id": "9a5123a6-ff99-4a97-aecc-30e4c9fc66f8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fec5fcb6-df97-4261-bfa9-a5c58af79e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f1ca70-8a91-46e5-be3b-ff31c01ae0bc",
        "cursor": {
          "ref": "cec99dbc-c072-4948-8d2c-0c3a6945863e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "763dc8de-6c78-4702-9495-53e275c961b8"
        },
        "item": {
          "id": "f0f1ca70-8a91-46e5-be3b-ff31c01ae0bc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e2803793-e142-4e7f-b948-c6971a72a80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4617ea-93b5-4a8a-a4a3-346424af2721",
        "cursor": {
          "ref": "9c4323bc-c567-40bb-b981-33e31cdb8e4b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "964920ae-2bee-405a-a18e-6e6bb5e46973"
        },
        "item": {
          "id": "6b4617ea-93b5-4a8a-a4a3-346424af2721",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "91957f48-f3bb-4f86-8d9c-6dea7108aa2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e77447f-ef0a-4d70-9158-b33f5037828a",
        "cursor": {
          "ref": "3d914e80-a3c4-4d58-8ff5-5d98ba71ac54",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bd8be1d8-9792-4cdd-9fdb-7665268f33bc"
        },
        "item": {
          "id": "1e77447f-ef0a-4d70-9158-b33f5037828a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4aa3f7b9-05e1-42d7-b82c-15bb2c95ea80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f156ea-78a8-464d-9919-2707eebc5ce8",
        "cursor": {
          "ref": "2cf94c77-e0a5-4f10-92f6-4c313deeb708",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "63390794-a2fc-4cd1-84e6-85ad218ae6b1"
        },
        "item": {
          "id": "a2f156ea-78a8-464d-9919-2707eebc5ce8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2f49987f-9e76-4e74-83c0-a1003a3a5889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e885f0a1-2625-441a-be14-8476d705df77",
        "cursor": {
          "ref": "d1de6ec2-b59a-49de-80e8-6e1be843832f",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "18077932-4321-4658-b05d-1e673860fd34"
        },
        "item": {
          "id": "e885f0a1-2625-441a-be14-8476d705df77",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "66754bdc-1b27-4f1c-87e4-f0f181bcbdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3259d29-49dc-44ca-8b85-12c6ae52181f",
        "cursor": {
          "ref": "1ad9280a-a0cf-477f-a768-b5bac0c5beaf",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "472689eb-7dd1-4f11-b447-217bc792c266"
        },
        "item": {
          "id": "b3259d29-49dc-44ca-8b85-12c6ae52181f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "cf0402e9-9c92-4ee0-bb85-14d5d9e029ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551e1889-7b54-46dd-bbe0-8ee6d7bc4698",
        "cursor": {
          "ref": "8bcaaec3-ea47-4312-b56d-24749674953a",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5e50b4d0-7fc4-4de3-8d21-01246f572678"
        },
        "item": {
          "id": "551e1889-7b54-46dd-bbe0-8ee6d7bc4698",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c7ada05f-edbf-4584-88da-5d032b8ea28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe2bd6c-36af-4d7a-ad2e-d0435f534c35",
        "cursor": {
          "ref": "56130ff7-bad9-46f6-b7d6-e3d308aa790f",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8f77b946-594b-411c-8cd0-78a8c3bee1e5"
        },
        "item": {
          "id": "cfe2bd6c-36af-4d7a-ad2e-d0435f534c35",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3fa5375b-e122-4acf-bc23-1db180af7989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4b76c3-733e-4447-a216-0355b4cc9283",
        "cursor": {
          "ref": "c6f219a3-abcb-4eb9-8e20-29d823acbc3b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "caf14ab3-eeaf-4320-88ab-d9a563313ab9"
        },
        "item": {
          "id": "4f4b76c3-733e-4447-a216-0355b4cc9283",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1ca6c0bc-4856-4527-9e74-3663b28ac55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3ba45b-d284-49b9-8f02-a658f6cad458",
        "cursor": {
          "ref": "783c16b0-1102-447a-ba80-eb815b149e21",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e0413809-7924-4344-a1d8-fe6296b12e53"
        },
        "item": {
          "id": "8c3ba45b-d284-49b9-8f02-a658f6cad458",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7a4a4523-f771-4b7c-b123-27e905f3dd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd5aa08-f420-4c40-9b2e-8918573332ce",
        "cursor": {
          "ref": "269e12bd-e5a3-46da-848e-38a9e5b5c4c1",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e4257ee8-3524-47e0-8be9-844f11e2c0bd"
        },
        "item": {
          "id": "2cd5aa08-f420-4c40-9b2e-8918573332ce",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7dcdcfef-90df-4a7b-a685-8d0f0f253ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5790a6-9328-4c64-b2cb-bb782926e8cc",
        "cursor": {
          "ref": "7abeda08-fa68-468c-b778-f7bb7cf431e8",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "94f7a2d4-bc09-4102-8096-ef5f69b5b490"
        },
        "item": {
          "id": "7f5790a6-9328-4c64-b2cb-bb782926e8cc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "61f98632-4693-4953-a5db-41a07bc6db3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cdbc1b-7926-4b24-a56c-e64c235d100f",
        "cursor": {
          "ref": "7d82d205-62b3-46a8-b606-4aab961f6bc7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ec40739e-4359-4663-9193-104aad773801"
        },
        "item": {
          "id": "35cdbc1b-7926-4b24-a56c-e64c235d100f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "68966dd2-5a39-478f-a12f-c719e0f1c4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586e2023-caa4-4c8d-b4b4-1cfc2f45eeff",
        "cursor": {
          "ref": "34b35743-77c4-4e8d-8267-bab55a3758f1",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "becfeb95-949a-4378-921d-f31fcd3168cb"
        },
        "item": {
          "id": "586e2023-caa4-4c8d-b4b4-1cfc2f45eeff",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9f764ab8-d9a3-4e74-aa22-7d8cfbe9a306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410a444e-c3b2-4974-a4ae-34f48a3e65dc",
        "cursor": {
          "ref": "1bf514f4-b1d5-4705-9f5a-3e6e6e7bf00c",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "62afb0cb-a1f9-4c57-b73f-81e1ec170178"
        },
        "item": {
          "id": "410a444e-c3b2-4974-a4ae-34f48a3e65dc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ad727567-eb42-46ec-ae33-117e39448960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0518eb76-7ee8-4de0-aadf-0a7734357eec",
        "cursor": {
          "ref": "35e584cf-e2c5-4d58-945f-4b45bcdb4f06",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "56b73db9-a36f-4ded-bdfe-2eef848e8b98"
        },
        "item": {
          "id": "0518eb76-7ee8-4de0-aadf-0a7734357eec",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "26345058-4fe7-4a85-b34b-704cb8149e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fd76b2-8c4b-4d23-8f6b-7d29ff4f56b1",
        "cursor": {
          "ref": "b9134a59-dac7-4ce5-af6f-ff9e97001c70",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6ab47c30-4b60-4682-abff-35ba585a3175"
        },
        "item": {
          "id": "f0fd76b2-8c4b-4d23-8f6b-7d29ff4f56b1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2c1b8ac4-5587-45b7-8e7e-e81a44aeba2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b401dd3-0006-4fcb-858b-4c75da330863",
        "cursor": {
          "ref": "224fb0c5-5316-4a92-9f60-335574698710",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "acc57709-1294-4298-89a9-06c87c69836c"
        },
        "item": {
          "id": "6b401dd3-0006-4fcb-858b-4c75da330863",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0d4e7f80-139b-4125-8fe6-1b1cd6a9bde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812a9e85-c446-42bc-870f-a42ff2eb17ab",
        "cursor": {
          "ref": "e45978e4-d30e-4027-a306-49a8488f5b2c",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6ba98dc2-f7c9-4339-acd9-e0529f9b6f35"
        },
        "item": {
          "id": "812a9e85-c446-42bc-870f-a42ff2eb17ab",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ae74700e-96e2-4884-b58a-e5eea9325ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b4b396-4fd8-42ce-8f8f-7972dac0392c",
        "cursor": {
          "ref": "ba088b48-b9a7-4ca0-bf71-7a5235303a22",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "08ebb97a-ce7d-4bec-9057-fef552788913"
        },
        "item": {
          "id": "c6b4b396-4fd8-42ce-8f8f-7972dac0392c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5f632481-cd71-4540-8f55-fb7daf1aa10f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dacb8ba-6921-4b3c-877f-2c615e2d431c",
        "cursor": {
          "ref": "e3d26712-19fc-440e-b205-a1b67bec72f9",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c5ad0ec2-c882-4707-9b73-cbba903484bb"
        },
        "item": {
          "id": "0dacb8ba-6921-4b3c-877f-2c615e2d431c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "de70726f-6ab9-493f-b199-ade711d87cf3",
          "status": "Created",
          "code": 201,
          "responseTime": 7164,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6451bc-b35b-49d1-a9fa-9aca90333418",
        "cursor": {
          "ref": "fa2d718d-7a15-4ec2-83e2-8131eefca26f",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dafe9b7a-a948-4704-91fd-51be43430f5d"
        },
        "item": {
          "id": "ef6451bc-b35b-49d1-a9fa-9aca90333418",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6a1194e8-71b8-4905-bc9e-0e8fd18b7d04",
          "status": "Created",
          "code": 201,
          "responseTime": 6585,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bd6028-b9f2-4991-a596-dfaaceb6ff55",
        "cursor": {
          "ref": "056d2f51-c115-4724-b012-4a87e5c65e5f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3a4afdbc-5719-4ffd-8067-904f2ef4d726"
        },
        "item": {
          "id": "d5bd6028-b9f2-4991-a596-dfaaceb6ff55",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "067242ef-8234-4840-92b5-302f24a15293",
          "status": "Created",
          "code": 201,
          "responseTime": 6598,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cd5fb5-446f-4dc6-9c96-7747eab51ac5",
        "cursor": {
          "ref": "fbffd6ff-b0b5-4f6d-9898-eb82c9df5e8e",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d9160e99-fc8a-4242-85b2-e52dd425b2cd"
        },
        "item": {
          "id": "10cd5fb5-446f-4dc6-9c96-7747eab51ac5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9332dd86-1da1-4df6-b319-75cbdda03822",
          "status": "Created",
          "code": 201,
          "responseTime": 7727,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7000d8-e154-434c-ac50-f8a18fbbce7e",
        "cursor": {
          "ref": "e6c60813-cf10-4842-95a8-61076aa4c5ed",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "454ad481-7e96-4bf4-9795-db7248e31b03"
        },
        "item": {
          "id": "1b7000d8-e154-434c-ac50-f8a18fbbce7e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bd9b29fb-0c49-4e7a-a1c6-3fcc35fbdfc5",
          "status": "Created",
          "code": 201,
          "responseTime": 6827,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "08220cdc-6261-41f7-89a9-1eb50d723eca",
        "cursor": {
          "ref": "f3e210ae-cf4f-4c87-9d7c-e36c8d1ba09d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5eea1315-a0d4-427f-84a7-dd2c1a60b571"
        },
        "item": {
          "id": "08220cdc-6261-41f7-89a9-1eb50d723eca",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3f4c93ed-f98c-4962-b4d0-9b0fa49c0a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "edfcc4dd-8f50-49a4-a09f-d45857104dd5",
        "cursor": {
          "ref": "47d3c660-19a4-42d9-bd35-28f203677632",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ce09cdcf-1597-4c5d-9128-2b248b611184"
        },
        "item": {
          "id": "edfcc4dd-8f50-49a4-a09f-d45857104dd5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "58b62344-4087-4efa-8289-92bb8866c2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c668bd-edf6-4d54-a0c3-0d8951773727",
        "cursor": {
          "ref": "6ccf6f88-c443-4ac1-9e85-8e596d1d69af",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6ce22178-7018-4d7c-b075-097cba6e55a9"
        },
        "item": {
          "id": "96c668bd-edf6-4d54-a0c3-0d8951773727",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "72c21f06-4485-48fe-8be3-6eef7d8346fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d33950-3135-41b2-8174-bd3b1ea8c90d",
        "cursor": {
          "ref": "ca6544db-818e-4678-b558-e8d626c6de78",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e3428afa-7306-4b11-b138-aceb86fa2d2b"
        },
        "item": {
          "id": "00d33950-3135-41b2-8174-bd3b1ea8c90d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e62a7872-a6ec-4c57-a8f1-76ff96e97dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8143b18a-7a22-4c0c-a1be-21ad76db551d",
        "cursor": {
          "ref": "a3c56f4f-82c7-4fdf-b45e-efb15e36f5c7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e62b8ec5-fea4-45d1-af38-e8b6ef58cadd"
        },
        "item": {
          "id": "8143b18a-7a22-4c0c-a1be-21ad76db551d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f105a691-cde1-46f7-8153-bcd8b0640648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce89dd6c-10bc-41ca-9e1a-5d1b282e0a36",
        "cursor": {
          "ref": "d26f6368-8da9-49d8-a991-e4578a7aaef0",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "afaf6d29-d19c-4927-a620-f7e7a714e04c"
        },
        "item": {
          "id": "ce89dd6c-10bc-41ca-9e1a-5d1b282e0a36",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e376a791-4423-4086-b4ff-73205b96e492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb00969-6dac-4935-b4e5-203657912d93",
        "cursor": {
          "ref": "caa4fab1-04ec-4851-9528-34e3100de03b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "664894d6-70c7-445a-9f64-74559dd8841e"
        },
        "item": {
          "id": "dfb00969-6dac-4935-b4e5-203657912d93",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6869dffc-26ee-48a2-aa90-e9105a762ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8128fd5d-ad9a-4f15-a0f9-7a104dcf178a",
        "cursor": {
          "ref": "33715598-6e37-4a1f-a67b-b235b6712639",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "00e0b48b-fd6f-4220-82f8-98be708ac78a"
        },
        "item": {
          "id": "8128fd5d-ad9a-4f15-a0f9-7a104dcf178a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c6f6c9a8-c574-4d6e-97f6-24a73a5fb52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb12e2e-ea8c-4b23-b6d6-70a945d889a1",
        "cursor": {
          "ref": "bd94da72-6da6-43d7-bdf2-a1cab7eac8d8",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7c3aebbb-249b-4e05-a9ee-0ae132b1a593"
        },
        "item": {
          "id": "aeb12e2e-ea8c-4b23-b6d6-70a945d889a1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e8396abc-d243-4775-a5cc-be193a00668a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c303019c-92a8-4991-96e5-c14d30e49766",
        "cursor": {
          "ref": "d396f9ff-7014-4831-9c3b-84368f7364bf",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "56dede61-cd48-4fe5-8ade-12b638d8899a"
        },
        "item": {
          "id": "c303019c-92a8-4991-96e5-c14d30e49766",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "eed2fb43-b93f-4003-a64f-cfc63e84494b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96561cce-f390-4cfd-8bc8-5dcb95c6d245",
        "cursor": {
          "ref": "c1b5eaa5-acd8-47af-95e3-7de53d8c9e3f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "55db11ba-3f20-45c7-bbc6-528d6fb76f5e"
        },
        "item": {
          "id": "96561cce-f390-4cfd-8bc8-5dcb95c6d245",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dfaafe9b-2a90-4349-b720-a227c734b96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d921918-b20f-4225-a214-1aa3ced8626a",
        "cursor": {
          "ref": "1f401a16-8af9-4441-b287-750f24a680dc",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "50ffdfb4-1586-4b68-805a-a651e41513a6"
        },
        "item": {
          "id": "1d921918-b20f-4225-a214-1aa3ced8626a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "750ee9be-ab04-4f45-aea8-cc7771644832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d6463a-d8e8-452f-b44b-d377335d70fe",
        "cursor": {
          "ref": "8c2747b1-5289-4c93-abbe-bbe93f1878a0",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d114bf82-8285-43ab-9942-358cafcd1e14"
        },
        "item": {
          "id": "84d6463a-d8e8-452f-b44b-d377335d70fe",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "74362eaa-cbbc-450f-a1e5-769b827e1e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f979214-a87a-4930-934a-a412173b2079",
        "cursor": {
          "ref": "97f6c218-90c0-45c1-9fff-6dadadadd133",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ce0826d3-0970-45a0-9c1f-2f8f4f08ac3b"
        },
        "item": {
          "id": "8f979214-a87a-4930-934a-a412173b2079",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7ab3f09c-ef69-4022-9be6-9a6bdc13f742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74be905c-18d8-4810-9bb7-0dd26512dbfe",
        "cursor": {
          "ref": "abf9809d-3f99-49a2-b7d6-ee10d7c6a6c3",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a75fa8e5-bf0a-47a0-9004-68f00fbf4ca6"
        },
        "item": {
          "id": "74be905c-18d8-4810-9bb7-0dd26512dbfe",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1512ec9a-b8d1-40be-aed2-ab4160ff0a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4e6659-fafe-4921-92e2-e16007cc4355",
        "cursor": {
          "ref": "c0631708-8f9e-45c3-9394-e499aa847f14",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "161f559a-2717-4aac-b815-40b3cc462ca7"
        },
        "item": {
          "id": "ed4e6659-fafe-4921-92e2-e16007cc4355",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a39fd81d-3c42-4682-ac9d-37f0951f7364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63aada85-1e96-48d5-a425-f11c93e54e71",
        "cursor": {
          "ref": "4552ed2f-8487-452b-81c2-ae710caefa50",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "815412d5-e90d-48a7-b4b4-33ff155ed519"
        },
        "item": {
          "id": "63aada85-1e96-48d5-a425-f11c93e54e71",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "79d870b2-d958-4e6c-892a-f5870302e97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdd6a07-f3d6-454d-af4d-424062a72949",
        "cursor": {
          "ref": "beab2cc1-8382-4b13-8c87-26a436aec3e0",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bffb075e-ca08-4517-9c24-9b3385948ade"
        },
        "item": {
          "id": "acdd6a07-f3d6-454d-af4d-424062a72949",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e447e645-fb67-44ef-9468-0c4be42889af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94763329-0adb-45b0-8728-54b896558bd1",
        "cursor": {
          "ref": "a23db0f5-2ea2-49d9-b47b-8760acb38705",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "612d7516-b3f3-4cd8-8ffa-a3ae41547d7a"
        },
        "item": {
          "id": "94763329-0adb-45b0-8728-54b896558bd1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a214f1bb-139c-4b92-863e-de54fc953687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9609c667-df33-4ee3-8a48-9bc2691c674a",
        "cursor": {
          "ref": "d0741b3f-b610-425a-a9e4-e69d2bf6936f",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1acaa517-b4db-410d-a581-38079c63f7c4"
        },
        "item": {
          "id": "9609c667-df33-4ee3-8a48-9bc2691c674a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b6d9452d-a354-42e0-aeac-d160cbdb8d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49c19fd-31ce-4355-a06e-b85664f7ad8a",
        "cursor": {
          "ref": "438e4ee1-9551-4994-9d7e-8faca61f095f",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b743d559-d50d-451d-abed-ca0238428b0c"
        },
        "item": {
          "id": "d49c19fd-31ce-4355-a06e-b85664f7ad8a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4dac1e0b-aa68-44e8-90ab-d4d9269126fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae78d5be-f5fa-4d27-aafc-588cd1a099f4",
        "cursor": {
          "ref": "1ef4bff3-2a1d-44bf-a606-b24472326448",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7929fce4-6f57-42a9-9b95-39eaece10901"
        },
        "item": {
          "id": "ae78d5be-f5fa-4d27-aafc-588cd1a099f4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a710ca80-4a6c-481a-bcaa-8b13b7553dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165c09d8-2c02-4192-9b1b-77ea26e14986",
        "cursor": {
          "ref": "ce05aa2b-acca-40da-91e3-e95b18008f11",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f93c9f47-5771-495b-816e-f6dc7d0ace37"
        },
        "item": {
          "id": "165c09d8-2c02-4192-9b1b-77ea26e14986",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bb40ee2c-049f-4a0a-bb04-bea70767bc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995b419d-5119-4e32-a7ff-29867bea8b9d",
        "cursor": {
          "ref": "8fac535e-6bc7-4cd1-be5b-0e11f83dc250",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d6b7c025-1230-4b06-96e8-7f4200d47ade"
        },
        "item": {
          "id": "995b419d-5119-4e32-a7ff-29867bea8b9d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7e3bb20e-51a2-48e7-91f9-d94d5d9006e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04b7973-e923-493d-b388-c74bed7b8096",
        "cursor": {
          "ref": "ebfd274a-0a98-4612-8b69-a46300b4da68",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3e08ed01-6e28-4191-b882-92d1938b4082"
        },
        "item": {
          "id": "b04b7973-e923-493d-b388-c74bed7b8096",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "85e6ca8a-8391-4488-be64-ac3af7a60939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a024d4d-6bd8-497f-8d6e-3bb717c04c41",
        "cursor": {
          "ref": "ef7ec504-3d72-4ead-98c3-505457de9aab",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2678bc1b-5863-4afc-9c26-36f41f984453"
        },
        "item": {
          "id": "1a024d4d-6bd8-497f-8d6e-3bb717c04c41",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3a7f2439-67f1-4d83-a766-da3681df6adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddc1ae6-a2dc-43a8-927d-4dd06acd8350",
        "cursor": {
          "ref": "fb13e5d6-bce2-4d88-9ab5-27da259fc61f",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "57770195-5fd1-46c8-be80-314a53e07240"
        },
        "item": {
          "id": "4ddc1ae6-a2dc-43a8-927d-4dd06acd8350",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "29cf71ab-6190-4b28-9b11-5bd95aaec251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eba6f81-45c5-4fb0-b883-6846062f5114",
        "cursor": {
          "ref": "26abae92-6cfd-4686-be9f-ddc7da27eded",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f563aeb4-f72a-4c8d-b03a-3fd1b37bfae9"
        },
        "item": {
          "id": "4eba6f81-45c5-4fb0-b883-6846062f5114",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "767e9f30-61e2-49fc-a5de-1774345b6030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3c5441-106e-4512-a8ce-fef7b2b8bd93",
        "cursor": {
          "ref": "36e2ebce-4a44-4f11-a0d4-604eafe71362",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "72022b42-3b61-4e11-9d2a-c82f5bb8d881"
        },
        "item": {
          "id": "bd3c5441-106e-4512-a8ce-fef7b2b8bd93",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "11d824c7-3845-43d9-80b4-dbd5f89760f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7d1454-30e4-4435-bd3d-575e9f9e95fa",
        "cursor": {
          "ref": "25bc8e04-6e8d-44a1-b4d8-228fd78fd519",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "56ac4bb1-017a-4cb6-b468-d942d687b517"
        },
        "item": {
          "id": "eb7d1454-30e4-4435-bd3d-575e9f9e95fa",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c8daf0d8-e673-414d-b341-83e16d9f9cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23a472d-b3e2-4764-8b4a-ba85068eba4b",
        "cursor": {
          "ref": "866868d9-a3c6-4faf-84fa-1d521d2353bb",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e9c6d211-93e3-4566-b3ff-dfdda36d8b91"
        },
        "item": {
          "id": "b23a472d-b3e2-4764-8b4a-ba85068eba4b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "96e1e5e7-4164-41b3-8a9f-f6889d23bbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fd3974-5658-4419-9975-57173d384707",
        "cursor": {
          "ref": "6b4a0a37-fdbc-4f5a-aed9-1a5548856365",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fbb9b082-4c33-47ad-a3ed-9149feb3dd07"
        },
        "item": {
          "id": "79fd3974-5658-4419-9975-57173d384707",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3d3cf72f-b7fc-4879-ac96-0c67e2a85106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71075017-a476-4431-9b2f-b9c672910829",
        "cursor": {
          "ref": "a2767ac7-48c1-4c09-9af1-dae3139e81a6",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "72d66836-e17c-4b63-a218-7f15f4282bc5"
        },
        "item": {
          "id": "71075017-a476-4431-9b2f-b9c672910829",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "01b81616-5c7e-423d-9ff1-95830d5101ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301158ab-0967-412f-b3b3-671da900f58b",
        "cursor": {
          "ref": "e1b39346-844e-4945-9488-47c82a201ada",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "81807219-a7b3-4b51-9fd7-c1c4caa3a34e"
        },
        "item": {
          "id": "301158ab-0967-412f-b3b3-671da900f58b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "791448d1-181a-4095-b138-181b977a3c2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f6ce9f-3028-400d-9697-f00959a46266",
        "cursor": {
          "ref": "11186f77-b97e-4a02-b1ef-d2dbdad2ef6b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0369d149-88a4-4924-aec6-2d29b0f953c5"
        },
        "item": {
          "id": "41f6ce9f-3028-400d-9697-f00959a46266",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "995cb983-23e5-49ad-841f-c473eb275323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b745ac-e100-4f3d-bb4c-ee53dbb7e8c2",
        "cursor": {
          "ref": "80f04c5f-53b9-4ef2-acbd-4e0b14905707",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7205447d-8d98-44f5-a621-39e4872690cb"
        },
        "item": {
          "id": "18b745ac-e100-4f3d-bb4c-ee53dbb7e8c2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eb42ebb3-5292-4776-9a60-504ead5ec4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b2861e-702c-4104-9b1e-9efd82ca11ed",
        "cursor": {
          "ref": "f11b94c9-83f6-44c0-a7d8-46283b02347b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7047d22e-5bda-4268-9ba9-01375a47a19d"
        },
        "item": {
          "id": "96b2861e-702c-4104-9b1e-9efd82ca11ed",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "93517dd5-9443-40d1-b554-e89f728a9578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2edc27-0336-4e00-b15f-57b9a989fa68",
        "cursor": {
          "ref": "95fcf24d-1772-449f-a39a-784c888be504",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f9644a41-fc1e-4c7b-8ace-b25a48fcb6f9"
        },
        "item": {
          "id": "9d2edc27-0336-4e00-b15f-57b9a989fa68",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "733fe9a7-08b1-47c7-b01a-6021f368e076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7b6ecb-1303-4a42-a05f-8dab656e70d1",
        "cursor": {
          "ref": "2f374143-35d0-4073-beb4-8367c59ad98f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "751f5478-3d9c-41b9-8e22-b8b6ed149326"
        },
        "item": {
          "id": "2b7b6ecb-1303-4a42-a05f-8dab656e70d1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5bac3b13-c1eb-4aea-aa85-0b299df8738e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38410bee-6369-4412-a093-5d7d8dcad846",
        "cursor": {
          "ref": "c29f5d03-4a92-4eb6-bdd9-f86a8f6547fa",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "57fd639b-a588-4206-92a7-9c26e64273b8"
        },
        "item": {
          "id": "38410bee-6369-4412-a093-5d7d8dcad846",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1ec382eb-7dbf-435b-bf49-98d8d3b795bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1dfa23-78d3-4613-bd92-1a0f6f01d60e",
        "cursor": {
          "ref": "df21655f-3cd3-4036-aede-e026f640a0f1",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7cbb26a9-14bf-4016-857a-8ff26240a077"
        },
        "item": {
          "id": "1c1dfa23-78d3-4613-bd92-1a0f6f01d60e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1d22e2c2-0332-4e5d-963d-9d302fd67dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e48973-dc5e-4290-8c34-bba6892c1c15",
        "cursor": {
          "ref": "cdf9cde2-86db-4f51-90bd-5a61be28cff9",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6a42947d-e114-40a0-8efd-8ce5e971d91d"
        },
        "item": {
          "id": "a0e48973-dc5e-4290-8c34-bba6892c1c15",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ea850aee-b272-49d5-b962-ef647e25b900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ea6cfe-188b-4dad-9542-41e6a99d3cd7",
        "cursor": {
          "ref": "6b8cbedd-fb28-4fc6-a640-d0043de0f26c",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0717e490-36e8-4c78-b37b-67cb20e7699a"
        },
        "item": {
          "id": "f5ea6cfe-188b-4dad-9542-41e6a99d3cd7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3b5211e9-a4f6-4f0b-a932-6692ed2421b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1d8a93-3e34-4672-848d-496d2a6f0175",
        "cursor": {
          "ref": "c7f8c56f-1d0c-479b-a24d-ddf933b1a028",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7a5a3055-2620-4351-b0d7-d5f1476cee0f"
        },
        "item": {
          "id": "1d1d8a93-3e34-4672-848d-496d2a6f0175",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0ec7b291-01f8-44e1-85e0-295c7d57c545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85819af-8824-48ce-b5dc-920eec505318",
        "cursor": {
          "ref": "3fac7dc0-d12f-4201-9813-41186be31820",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "64bc771f-c296-4aaf-aa1c-6f0e0666f2bf"
        },
        "item": {
          "id": "c85819af-8824-48ce-b5dc-920eec505318",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b370dc04-bf4c-43c8-a7c7-472dd510267c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0b34fe-57a5-4a9c-9d92-da9c40430f9c",
        "cursor": {
          "ref": "d965ba70-a7ca-4576-bfc9-12a956efc406",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a267c631-1a47-4d1e-b522-4febc499b427"
        },
        "item": {
          "id": "5f0b34fe-57a5-4a9c-9d92-da9c40430f9c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "30f3cf1d-740c-4bf1-900b-f21fa76d1698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8392318d-811e-499f-bad5-de5762140e7c",
        "cursor": {
          "ref": "88fcfe2c-ff20-4bc5-b55a-a6cf93790ad5",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "260b0405-79ae-450c-b08e-5160407e08ba"
        },
        "item": {
          "id": "8392318d-811e-499f-bad5-de5762140e7c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "54d0544b-c0ed-450d-882e-1c683fa4f317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465da1e1-2121-4feb-a452-c203f0af990d",
        "cursor": {
          "ref": "29136728-f36b-42c2-bfcd-acfd46930561",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1d75fc60-a019-496a-8f69-c065bd265b89"
        },
        "item": {
          "id": "465da1e1-2121-4feb-a452-c203f0af990d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "193e6c97-cea5-4a4e-9f46-bb634bc29596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6752692b-d726-4f7d-bdc7-9e17b39c40a4",
        "cursor": {
          "ref": "4c27b1ba-da01-4720-8bae-bddfb759aa5e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8331e28b-88e1-484e-be32-2b4d022e7168"
        },
        "item": {
          "id": "6752692b-d726-4f7d-bdc7-9e17b39c40a4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f1138fa1-201d-4964-987d-25bc9d915923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e057ec-0620-448b-82ad-8d9832f2629f",
        "cursor": {
          "ref": "0ef8f252-6fc5-4040-83eb-b38e13108df0",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ae0a9069-1c59-4147-b167-cf718778eb61"
        },
        "item": {
          "id": "82e057ec-0620-448b-82ad-8d9832f2629f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aaa5c876-51db-44db-90ee-1dfab065dc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48491c0d-04ed-40f0-bdb1-c4e1c9407948",
        "cursor": {
          "ref": "adb08025-11a7-4ec0-afe7-ae7da8cf2668",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "53966cde-ea2c-4511-a307-a7e8566ed1bc"
        },
        "item": {
          "id": "48491c0d-04ed-40f0-bdb1-c4e1c9407948",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b5347510-a7af-4f0a-a921-e96823cde4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf71d6ad-80e1-4899-9fca-f34cdffe6aca",
        "cursor": {
          "ref": "b29025fd-4dce-4c1d-8ebb-88ae2bb4f550",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d931cb35-277b-4fbe-b350-28db047c7f4b"
        },
        "item": {
          "id": "bf71d6ad-80e1-4899-9fca-f34cdffe6aca",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "536c64e8-5980-4418-a5a5-7d99289d5aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d7c885-cc34-44a1-bacf-6532d7eb7cef",
        "cursor": {
          "ref": "057aab85-0aa8-48c8-8ad6-d2ddfa7ec08c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "acf9dd4e-8ad5-4b9f-a621-56b527249669"
        },
        "item": {
          "id": "c8d7c885-cc34-44a1-bacf-6532d7eb7cef",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7c766af3-b44b-4095-a285-5eef9c2cfc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60223e5b-4d09-421d-b1e3-6027f7859f36",
        "cursor": {
          "ref": "1ddb13d6-31bc-4b86-837d-68814cc3543a",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3fb88270-1742-4649-ac52-cec97e2a9f59"
        },
        "item": {
          "id": "60223e5b-4d09-421d-b1e3-6027f7859f36",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5209e9c8-6a54-4622-be8e-9aaa6aaf27d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4864b143-c791-4698-985f-b9a47beb2a7a",
        "cursor": {
          "ref": "44788551-c5c9-40fe-a3cf-c65b307e6c41",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9e60c2d1-8aef-44e1-95e9-2082456717c1"
        },
        "item": {
          "id": "4864b143-c791-4698-985f-b9a47beb2a7a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "71bd7309-49b5-4f02-93d5-891a94a1f4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3a4159-17b2-467f-bfba-fccc9f636a2a",
        "cursor": {
          "ref": "16861def-a627-4c5a-91b7-4e57f588eb9c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f00018ee-a01c-424c-ad7e-13e8e1f0493d"
        },
        "item": {
          "id": "ed3a4159-17b2-467f-bfba-fccc9f636a2a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "112986b0-7c7a-4465-bf9b-2add07b36a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6647b4c4-6670-48f8-8a91-78032e6d5cd2",
        "cursor": {
          "ref": "4841c36e-8705-4a12-a40c-a01a3100c750",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "04ebdc4e-c3a1-48f2-acee-4fbf41ee7c0f"
        },
        "item": {
          "id": "6647b4c4-6670-48f8-8a91-78032e6d5cd2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dcab76c3-e03f-416f-8765-69a4a25492e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ed0f53-c57d-4835-bfcf-973dbdf7bb5e",
        "cursor": {
          "ref": "7f9091b8-20d6-4225-bbdc-bfa1afe1d94c",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "26a7112b-d1d8-4590-a5c6-ff9f557d8c56"
        },
        "item": {
          "id": "d9ed0f53-c57d-4835-bfcf-973dbdf7bb5e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3a3cd023-dea7-4dbc-9759-a089ba35a0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16369f0d-0bce-424b-9ac2-d17474558c7c",
        "cursor": {
          "ref": "056639ff-237c-4bf3-8ae0-e6c567efeac2",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "650252ab-bbe5-4e79-998f-80155841162f"
        },
        "item": {
          "id": "16369f0d-0bce-424b-9ac2-d17474558c7c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "24650b9c-33d7-4db1-9d3a-e523ce208261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b01213-46c4-46be-ac4e-ba575f349686",
        "cursor": {
          "ref": "faaa35ff-da04-47c1-a728-4a89781eb54b",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "41b2536c-1e04-4d90-8c56-d1f7c3024ce0"
        },
        "item": {
          "id": "84b01213-46c4-46be-ac4e-ba575f349686",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "224dc885-fb96-4ca7-a33a-9a19004a6f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795da281-f13b-4e31-944e-72151df91498",
        "cursor": {
          "ref": "7df10221-e13c-4ee2-a225-fb45669416c3",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d83beb64-1e70-4f93-a879-275f1f7c8f02"
        },
        "item": {
          "id": "795da281-f13b-4e31-944e-72151df91498",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d50efba3-e0b2-4c0c-80aa-fbde82ce487a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c9cc43-63d0-4101-b554-2124794fb98b",
        "cursor": {
          "ref": "721afd23-439e-4123-9468-e7428550ef99",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "51d5cccc-311d-4d5e-b1ac-4cb2301fac32"
        },
        "item": {
          "id": "52c9cc43-63d0-4101-b554-2124794fb98b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b8d1bbd1-e27a-438e-a5af-fc0a55764967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659292f8-560d-4a92-926b-8c04cc1a0593",
        "cursor": {
          "ref": "3f8ae5cc-58bf-4031-a394-f1c9d414efb9",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0e89f16a-63c4-4745-bdd5-e97019e92401"
        },
        "item": {
          "id": "659292f8-560d-4a92-926b-8c04cc1a0593",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c576e4c6-6377-4980-bc9b-b6ec2304e464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c8f751-04c7-47a2-9487-b157adb9d259",
        "cursor": {
          "ref": "dfe1aa4d-9043-4554-8379-ac9f5b59aed6",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "68201286-0f01-4ad0-8635-debcade996c4"
        },
        "item": {
          "id": "22c8f751-04c7-47a2-9487-b157adb9d259",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0c65b747-f751-48cc-b974-3feec540b0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b046fd-4946-4240-bab2-abe8f70b3a62",
        "cursor": {
          "ref": "7b8136d1-8b36-41aa-b00d-8e25719b567c",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ba586f4a-8624-48a4-a499-2b9309a6765b"
        },
        "item": {
          "id": "80b046fd-4946-4240-bab2-abe8f70b3a62",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8703a458-ec0d-49e4-a8b3-69eb7e7cab29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af5220a-ce3d-42ab-84e3-f4a48cefd8aa",
        "cursor": {
          "ref": "b3ae1dda-17e4-4fb7-bc5f-d4e8bdc2cf29",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "76590046-9b6c-4a33-8a14-c7c754788414"
        },
        "item": {
          "id": "5af5220a-ce3d-42ab-84e3-f4a48cefd8aa",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "86f1b42b-4839-41c9-b969-3784f1b3c359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7861e5-cef2-4432-bf31-556969e2b1ff",
        "cursor": {
          "ref": "dfe128cd-2e8c-4252-a64f-28537c5096f0",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b7f1f5e8-3a48-452e-8c04-a819ac0ca11b"
        },
        "item": {
          "id": "3a7861e5-cef2-4432-bf31-556969e2b1ff",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5730d7ef-c01f-4528-af16-55f5acac7262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed75c89-a891-4d0d-ba50-a844b16675be",
        "cursor": {
          "ref": "3e4c1539-1ba7-4259-9941-20fdbeae0147",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0f744d99-0298-4d5d-b62c-3b0505385abd"
        },
        "item": {
          "id": "9ed75c89-a891-4d0d-ba50-a844b16675be",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "92c1d3d8-5071-4e2e-bc50-dece9fe3ef26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a130f99-6ee6-4683-956b-e57aa3f975dc",
        "cursor": {
          "ref": "bb49c4ea-1938-4faa-a409-b7431877fa73",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9da2b2c5-9d97-415a-a5c7-13b49f023a8d"
        },
        "item": {
          "id": "4a130f99-6ee6-4683-956b-e57aa3f975dc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "38f4c668-f9e6-476c-a9b4-6ab5f73706d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bb7ed2-8766-423c-88a0-46e3ebe62625",
        "cursor": {
          "ref": "2f47c490-da91-4a7a-be59-52bbac8caae0",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d83f34ab-e3de-4520-a014-92b4ee9bbbd2"
        },
        "item": {
          "id": "40bb7ed2-8766-423c-88a0-46e3ebe62625",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "eb0ebae1-f1ad-41ea-8404-00651f95229f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cd2c3d-c81a-40b2-939c-64734a3e4eb7",
        "cursor": {
          "ref": "e7c64272-043a-4dd6-b57d-3cd2f2fc3e2a",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6b4bc9a3-832f-47f3-af85-67dbb3479f98"
        },
        "item": {
          "id": "f0cd2c3d-c81a-40b2-939c-64734a3e4eb7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0eb40170-063c-462f-8144-b8835e67603c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c58453-cd30-40b8-a39d-cf47ed7ed0aa",
        "cursor": {
          "ref": "662af29c-6cbe-4077-802e-27b845591386",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9cf6f8c5-3fa0-461c-88f2-20616e69c7f6"
        },
        "item": {
          "id": "01c58453-cd30-40b8-a39d-cf47ed7ed0aa",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "36bf89f0-f530-4684-bf5e-ca960eef3660",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 85,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12aa0f1-2216-4ae1-a3c8-5cf1495cc0ed",
        "cursor": {
          "ref": "425d8b6f-8680-472c-97e3-1e01a9839f26",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a1711460-a304-4de7-b3e9-2572e195968d"
        },
        "item": {
          "id": "a12aa0f1-2216-4ae1-a3c8-5cf1495cc0ed",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2cf38f05-8ec9-43b9-a1b1-381759eec4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e236b0b-eb49-4626-a5b8-8742e1746725",
        "cursor": {
          "ref": "6865dc93-5c25-4fae-8ae4-fd13666a8411",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a4fc9006-de95-4a15-b8af-daef9892086e"
        },
        "item": {
          "id": "2e236b0b-eb49-4626-a5b8-8742e1746725",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "14873128-e411-4100-89a2-c49056951a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c52d9e-94dc-4d07-a323-c54fdda31dd8",
        "cursor": {
          "ref": "ff85965e-26a1-448e-8180-5e690dbfd765",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "97ed0dad-99fe-4e38-95fa-aeae63a890a7"
        },
        "item": {
          "id": "67c52d9e-94dc-4d07-a323-c54fdda31dd8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a38638c9-e3bb-4a47-b5e9-1c374b78d5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ae4f44-9402-4ae4-bf87-152ba8746370",
        "cursor": {
          "ref": "bdb1361d-62ba-478e-98ad-79e049c79c29",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f7885747-57bb-4c0f-a995-d1662a5acdaf"
        },
        "item": {
          "id": "48ae4f44-9402-4ae4-bf87-152ba8746370",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8795f489-2b61-4e92-816b-0253790c47a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15cced5-8007-4915-a387-75b7ac9e5bed",
        "cursor": {
          "ref": "72c764be-621d-475c-9596-0254847d25e3",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bb4f36e9-0ac1-496f-aad3-4b24df37d6fc"
        },
        "item": {
          "id": "c15cced5-8007-4915-a387-75b7ac9e5bed",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "53db0ea5-de88-4630-bfc5-8d8e77ad3431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5527ccb-11ad-41db-92db-910c5bbbb7d6",
        "cursor": {
          "ref": "4f90c50c-fc5e-4951-85c6-86f01d0fe135",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ab7b7e6d-dace-45b8-a98c-18682b5d6f23"
        },
        "item": {
          "id": "f5527ccb-11ad-41db-92db-910c5bbbb7d6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dd336cfa-b2a3-4eff-9e25-a503ccebcbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88411b8-c12c-4fe0-a394-81b6c26a5b42",
        "cursor": {
          "ref": "931c679a-af54-4ba3-ad83-9f07cf85f825",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "346cb3d2-6125-4a2c-aaa5-455b4f857c46"
        },
        "item": {
          "id": "b88411b8-c12c-4fe0-a394-81b6c26a5b42",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "51f59dfa-0d39-4e4f-8d39-6a5694da0686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15548e7-966b-4af4-9e38-76d9821de7ba",
        "cursor": {
          "ref": "af4e0964-6834-45a8-989a-6840307ed863",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e708b035-49f5-44fe-ab04-8f7185d3f9ab"
        },
        "item": {
          "id": "d15548e7-966b-4af4-9e38-76d9821de7ba",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a64e7cf1-2613-4e84-b80e-4eab755f954f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa395b4c-cb6f-4bfc-bdbc-86c5ba98211b",
        "cursor": {
          "ref": "6c8d029c-80ff-4626-923a-e3c1e12af795",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "63aa88e0-91bc-42d5-84cb-2bdfa74f6818"
        },
        "item": {
          "id": "fa395b4c-cb6f-4bfc-bdbc-86c5ba98211b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d1fa5b09-4460-4691-9447-9c7e3bb3db3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b315316-a18d-4aaf-97d1-a48b9a11d92c",
        "cursor": {
          "ref": "f24bb843-930c-4728-bea5-f3a57941918d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "722f3591-058b-4ff5-a179-8a80df21d2e5"
        },
        "item": {
          "id": "6b315316-a18d-4aaf-97d1-a48b9a11d92c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d2db04b7-f663-4dab-9254-906cefb83e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7efa2e-f280-4b69-8a6b-cc7993ac8d6a",
        "cursor": {
          "ref": "e7f0017a-fb28-4e33-b154-054db547598d",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bec243fe-8cc5-4a86-b066-54411aa88f67"
        },
        "item": {
          "id": "7d7efa2e-f280-4b69-8a6b-cc7993ac8d6a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "75ae84f8-57db-4588-afb7-261e8d214b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef706994-0798-4613-9e27-de0d7ea31b85",
        "cursor": {
          "ref": "a4773117-b5e8-4e0d-88a6-d8b3b52e0aa1",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "19201c29-02dc-4ede-bc8f-2a63cd1c258c"
        },
        "item": {
          "id": "ef706994-0798-4613-9e27-de0d7ea31b85",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3b379710-56a0-4ec8-aa4e-8851ce863250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1901d2f-2be9-430b-abc9-bc68973ecf9e",
        "cursor": {
          "ref": "8726ac28-4cd9-4ec1-b6c9-b64479268281",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a062072e-5adb-41a8-8aa4-c8719e42645d"
        },
        "item": {
          "id": "a1901d2f-2be9-430b-abc9-bc68973ecf9e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "39a66633-9677-4872-9ae3-1a1a130e9bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c735852-83f4-469c-a4d4-0576022fb1df",
        "cursor": {
          "ref": "5c39975f-890c-4fb1-aa32-c7342f386618",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "299c09c7-4f5a-4604-83b8-e871efd3498e"
        },
        "item": {
          "id": "7c735852-83f4-469c-a4d4-0576022fb1df",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a80e9bbe-cd50-4927-b48a-97c8f6299f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0765af2-e420-4d45-baaa-7479650172e9",
        "cursor": {
          "ref": "8e3fe7ef-3e50-4e04-8169-c70d7d4102fe",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c9f269d4-0e9c-49c5-a948-d3b321f6c2e6"
        },
        "item": {
          "id": "c0765af2-e420-4d45-baaa-7479650172e9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "421a7353-a257-4dc5-bcbc-d4815864286c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e06d96-4f33-4029-a767-d28a2426ef5c",
        "cursor": {
          "ref": "f0a30eba-48a7-4951-9f03-bd0c90da6614",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6edcb521-8bf7-438b-83dc-8c9f3b6a0cf5"
        },
        "item": {
          "id": "d7e06d96-4f33-4029-a767-d28a2426ef5c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4d7ec01d-481e-49c1-83fe-fb2e4e2d7f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31333bf-8090-4a4a-b624-d4728d060d3c",
        "cursor": {
          "ref": "526d3435-0107-4c6e-8c38-3959d20bfe10",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5278f7f2-6478-4850-86b8-534523497db0"
        },
        "item": {
          "id": "b31333bf-8090-4a4a-b624-d4728d060d3c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6880b38c-42bc-4df4-91d0-07a7c62b031c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9baa99-d210-4ebb-a740-3e0943b6557f",
        "cursor": {
          "ref": "817bfbcf-c209-4a4a-911e-88972de633fe",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1ebb1712-076b-4f2f-9b80-3e478f8af6d7"
        },
        "item": {
          "id": "9f9baa99-d210-4ebb-a740-3e0943b6557f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ece2949a-0a1f-49cf-934a-72a5c5dc08a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a05a1b-6f7f-4bba-baef-d3cc9830886d",
        "cursor": {
          "ref": "60297d11-2bd7-4081-a104-acc68d1fd0ef",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "174b1d1b-5017-4c96-97c4-77f535207880"
        },
        "item": {
          "id": "30a05a1b-6f7f-4bba-baef-d3cc9830886d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b47d91d0-96a0-40b7-83b9-0238e23f8fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ef26a9-193c-44e9-bc0a-e22c3bd444e6",
        "cursor": {
          "ref": "5b5d2a1f-9ee6-440d-a1a5-c61702ee0458",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "88a63e88-55e2-46f5-bf7d-f771a209a3bd"
        },
        "item": {
          "id": "54ef26a9-193c-44e9-bc0a-e22c3bd444e6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "84fb6ba4-b7fc-41f0-80f2-421047b8dab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d5b63c-8b94-47f2-9619-455f010d80c2",
        "cursor": {
          "ref": "fd7d4a87-3918-42d9-8fde-75fd864b2f12",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6e1b677d-f29e-4396-9a33-9c0f752d4182"
        },
        "item": {
          "id": "c3d5b63c-8b94-47f2-9619-455f010d80c2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "56b36972-3ad1-4a88-af46-1047b0a877c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5670d798-8cd3-4df6-b3a4-d313bc9535b9",
        "cursor": {
          "ref": "56dee88a-388b-4292-a3e7-5dae92374e24",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6f5d1a2d-102b-4551-9122-5bd32485bc49"
        },
        "item": {
          "id": "5670d798-8cd3-4df6-b3a4-d313bc9535b9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "04cb25b1-7e08-48b5-9e7d-5e8596e45851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36ad700-cd96-43b4-a3af-f110f497ea6d",
        "cursor": {
          "ref": "a0ea7a1e-8bc7-4604-9d91-02b308c17f4c",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fb2b4f58-30ed-406e-9914-e59b7a804775"
        },
        "item": {
          "id": "f36ad700-cd96-43b4-a3af-f110f497ea6d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "796d9d77-dd31-4f26-ac82-a2efb6474233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1254d51a-22ce-4165-980d-477582f0a7b4",
        "cursor": {
          "ref": "04b9310a-c7e8-4304-ae9c-e4b75bbd86a6",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ec68d9e9-bc88-4da5-84d9-03b488bb35b1"
        },
        "item": {
          "id": "1254d51a-22ce-4165-980d-477582f0a7b4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "07e73fca-5bb0-4b02-9a84-f300971ba425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a421d434-aed8-4206-9635-13f45fa6dd97",
        "cursor": {
          "ref": "a75012ff-6619-4507-b9a5-4f8ae6ede1af",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4fa983a8-3e60-42c7-8116-378a68d6f710"
        },
        "item": {
          "id": "a421d434-aed8-4206-9635-13f45fa6dd97",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c2d120a5-81e2-4dcf-b781-242485bd7bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de2672a-7060-4fba-a654-70f0868523d4",
        "cursor": {
          "ref": "57b004e8-2e09-4607-a851-4a06b0da5de1",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "129085cf-02d2-4946-9a35-ee9a5e5d34a8"
        },
        "item": {
          "id": "7de2672a-7060-4fba-a654-70f0868523d4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "988e55ec-0a4b-4467-a1ea-e92472974c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859b9058-b717-4419-aa57-ac368eaff388",
        "cursor": {
          "ref": "a4ebaabf-b67d-4728-a310-1732fbef5ff1",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fcb720bb-47f4-4c6f-86df-68e6d3d18592"
        },
        "item": {
          "id": "859b9058-b717-4419-aa57-ac368eaff388",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7fe30a13-474d-479a-b961-368443ff29e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13755ae-8dd3-4757-b2c6-f7118345b3f5",
        "cursor": {
          "ref": "552d5544-d374-4eae-a55d-e13abd17103d",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f407a750-783b-48b4-b8b2-6ad66f1485c0"
        },
        "item": {
          "id": "c13755ae-8dd3-4757-b2c6-f7118345b3f5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5171b913-7aab-433b-8c41-6b03e9acbc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f592baa6-07b9-4e12-ac43-ca60826e7c84",
        "cursor": {
          "ref": "18526383-d020-4b99-b75c-894e8cf58145",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "96859799-e605-4d9a-b9c0-094c7013f01b"
        },
        "item": {
          "id": "f592baa6-07b9-4e12-ac43-ca60826e7c84",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e06aa56c-1c61-4d2b-8018-dbaf14d894f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac4232e-ee03-4b41-81e8-319e9a3bbba1",
        "cursor": {
          "ref": "224f70be-7bea-4e8d-b2f2-6acc9a4abbc5",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "da6c0a8f-d452-42f4-a578-8721c5333de1"
        },
        "item": {
          "id": "0ac4232e-ee03-4b41-81e8-319e9a3bbba1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1ed0fcee-63ff-45f3-bd01-4efe62ca4d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7419401-05d0-4501-8e8a-8fc6309a0d8a",
        "cursor": {
          "ref": "a09e5713-4075-4e14-a591-49708d04a4aa",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0088b779-24ba-4488-9634-b2d0a8f07ec8"
        },
        "item": {
          "id": "b7419401-05d0-4501-8e8a-8fc6309a0d8a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "40636cf9-be42-4869-b2aa-414d04b6e3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6850e9-1557-42e3-8ebc-3b28b449dcf5",
        "cursor": {
          "ref": "bf4c605a-1e57-4c6b-8597-a5090a9b1cbc",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2c67a2aa-fc3b-4935-9ad7-20fabba5bd30"
        },
        "item": {
          "id": "5a6850e9-1557-42e3-8ebc-3b28b449dcf5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "711dfc99-1868-4916-9439-89974f18d7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40304a99-9f1b-4a46-870d-02ebfd0d48a4",
        "cursor": {
          "ref": "8051a407-6eab-4ddb-ba27-b129081dd443",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fdc30e09-f17b-4b81-8767-4b9530e7b89d"
        },
        "item": {
          "id": "40304a99-9f1b-4a46-870d-02ebfd0d48a4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5b4dada0-02e6-4ae4-9071-5dbb5783f244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e53b6e-58c2-41fc-9813-27f786183ff0",
        "cursor": {
          "ref": "fad060c2-ba91-4475-82e7-46ef1f8457e3",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9110089d-fa07-40f0-b7e8-85092bbbc40b"
        },
        "item": {
          "id": "84e53b6e-58c2-41fc-9813-27f786183ff0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "79fbaf1b-af92-416c-ad3f-fd366adf11d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfd625f-6247-4450-841c-6b42ed8e0dda",
        "cursor": {
          "ref": "f4aab5a7-e205-4b1a-a35f-2d755150477b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ca39c4c3-bbba-4648-b842-91d2fdb37f8b"
        },
        "item": {
          "id": "ccfd625f-6247-4450-841c-6b42ed8e0dda",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "944c921d-d939-42ab-ab28-4fefe490c185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956a5592-dcdb-45a9-bed3-5a849ab98c0e",
        "cursor": {
          "ref": "f5cb77c8-bd67-446f-8f21-541ac5a34c79",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3d76af7f-a0fb-4c8f-8071-26fe94217883"
        },
        "item": {
          "id": "956a5592-dcdb-45a9-bed3-5a849ab98c0e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3a9b13e3-9de5-4965-8d04-1cdc18d85c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cfb75e-6078-40f7-8b41-3f45c8f31360",
        "cursor": {
          "ref": "e0e20f3a-3a6f-4d4f-86dc-1ad8152c8696",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "081b732e-0085-40f8-a9e8-aa55a437d2a1"
        },
        "item": {
          "id": "a1cfb75e-6078-40f7-8b41-3f45c8f31360",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bfe14fa9-7c49-4619-98cc-fd1bd7ef8bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f24264-4f59-4726-a387-c8a4ae8a53af",
        "cursor": {
          "ref": "24ceca50-32ed-4073-9677-ec815f1d7642",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c78d6ab5-7660-4796-8839-145f44c19372"
        },
        "item": {
          "id": "70f24264-4f59-4726-a387-c8a4ae8a53af",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2493fb30-49b3-44b0-b8e7-565e7d867ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a41fa3-fe9f-4ba9-af86-644c7026e598",
        "cursor": {
          "ref": "35a50135-1010-4bfc-aed7-0bbfa6c691c8",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a0bf8aae-04fb-461e-8526-d9751375c676"
        },
        "item": {
          "id": "92a41fa3-fe9f-4ba9-af86-644c7026e598",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "44eb5f69-7f4a-4374-9b9e-27f24673d5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "344fd77e-be06-4a67-8120-55a613d78350",
        "cursor": {
          "ref": "b143909b-ea88-49bb-b661-60f2d756b03e",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cf4a6c06-73c5-45fe-aba6-49bb08decfd7"
        },
        "item": {
          "id": "344fd77e-be06-4a67-8120-55a613d78350",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b2571202-0c92-4e49-a35a-38dad6f3e5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262431dc-ef28-42ad-8d08-20bab9f4d0c1",
        "cursor": {
          "ref": "858058da-c4a3-43f1-a7f9-51188e35a78f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0a8efec1-88ac-4bf3-8eef-1ed8e5229f9b"
        },
        "item": {
          "id": "262431dc-ef28-42ad-8d08-20bab9f4d0c1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "4457dec3-1226-4be6-a2d0-3a2e3f4a2e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecf1910-ed30-478a-8093-af28faa05751",
        "cursor": {
          "ref": "3ebaba29-7d33-4288-90c1-f7143be77c6b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "38445712-3176-44e4-a8ff-fc2baba2b405"
        },
        "item": {
          "id": "4ecf1910-ed30-478a-8093-af28faa05751",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2f1a9972-a02c-41d5-8e10-78fd909b3adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1407e1d6-9a9f-4003-b05d-74fb61fe52f9",
        "cursor": {
          "ref": "66fb861b-3d31-46ff-ad0f-716e2ac72c74",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "af3b616d-dd38-4e64-9557-68fb76c68a46"
        },
        "item": {
          "id": "1407e1d6-9a9f-4003-b05d-74fb61fe52f9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "46cfb9ba-bbce-4748-bd90-cb02a9ad6e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5b3776-d5f1-4078-8d47-32753b132431",
        "cursor": {
          "ref": "e373a18e-dc57-4e3c-aedf-41f336af65fb",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "29bb4dd7-2a0c-42be-a25c-949d5b4a528d"
        },
        "item": {
          "id": "3e5b3776-d5f1-4078-8d47-32753b132431",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "16d3d5de-d2e4-48ea-8d3a-563734755dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b58e06-936b-4f1e-8f9f-9d076d0d7ffe",
        "cursor": {
          "ref": "2952d7bd-4ba0-4007-803a-6280aa277a90",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a43c3979-41dd-4119-8388-0a7adc2ad76f"
        },
        "item": {
          "id": "e4b58e06-936b-4f1e-8f9f-9d076d0d7ffe",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "84936ff5-ee6c-4132-a6ca-4faf1cf1bc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bd7175-c7ba-445e-b50b-e715c7d5607c",
        "cursor": {
          "ref": "94d60029-8add-4ee5-920b-47a44e080a56",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "98b84247-8729-4d82-8598-0ee7b3b0b94b"
        },
        "item": {
          "id": "e8bd7175-c7ba-445e-b50b-e715c7d5607c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6037e86e-a80d-4ebd-afd8-8940df59fa18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12d08a5-7386-412a-a5fd-49611a8ef6da",
        "cursor": {
          "ref": "9176477b-b706-4225-8c82-8ee2134bd7be",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ace4e6f4-b8d7-4a6d-be5c-5c782c0c6b35"
        },
        "item": {
          "id": "a12d08a5-7386-412a-a5fd-49611a8ef6da",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "eb4d3e99-c611-42fd-a418-e991d5c5ed57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a684d9c-b851-496b-a58f-185a0107598c",
        "cursor": {
          "ref": "7391f5d4-39af-479d-907d-72cc15450d7d",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3325cf70-a770-43e3-8ee2-8534b016f620"
        },
        "item": {
          "id": "5a684d9c-b851-496b-a58f-185a0107598c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c9cb3772-ec20-46b1-b209-0d44d552d226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900465a2-dcf4-40b4-8953-3b344fa5a585",
        "cursor": {
          "ref": "c9a99ba5-79cf-4c70-bbbe-f862543f6ba7",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d8a13787-3dfc-441e-9a66-fdec993464ee"
        },
        "item": {
          "id": "900465a2-dcf4-40b4-8953-3b344fa5a585",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "57ef7de2-a277-46d7-ad02-17b915a02f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdcb477-f1fa-48cb-8e4b-2306fb1490bd",
        "cursor": {
          "ref": "dd9f62b1-7962-48bf-91f5-4a60d8b3bc1c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a8ae9c25-b6da-48bd-be47-18d9583d1349"
        },
        "item": {
          "id": "7bdcb477-f1fa-48cb-8e4b-2306fb1490bd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4e0e30dc-e49a-43b1-9fe9-970f05bd6ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d905ddbb-4b29-491e-ba91-aaaa39a2130b",
        "cursor": {
          "ref": "40da9fa0-3a42-4bdf-a41a-10dccfef736f",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7f62eeca-077f-4796-935a-e2ad65946643"
        },
        "item": {
          "id": "d905ddbb-4b29-491e-ba91-aaaa39a2130b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f1ae73c7-3a97-4315-9da3-fdd9d201f12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1315073d-33c5-47a7-ad49-c721a8083cad",
        "cursor": {
          "ref": "b0c1d7ad-9ab9-4958-9f50-49b049b567ca",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e1ff0e57-efd6-41cd-ae3c-985a4891b8a7"
        },
        "item": {
          "id": "1315073d-33c5-47a7-ad49-c721a8083cad",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6eab044a-2719-4127-bbb0-bdede4572111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7071560d-380b-4c73-96f8-fd59644f0497",
        "cursor": {
          "ref": "353cec8e-fe0b-4f00-bc4a-127f730ad9eb",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0e8683e1-07c1-4556-bcd7-ccd68799b9ab"
        },
        "item": {
          "id": "7071560d-380b-4c73-96f8-fd59644f0497",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a2fe94ff-94e5-4fa0-a607-db22a45ba011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020de8e8-ec3f-455a-bdeb-8e1d5532904f",
        "cursor": {
          "ref": "a130a124-1a95-4f4c-abd3-5db4befc5504",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a1df1505-3762-4636-8e8e-18a67fafff9e"
        },
        "item": {
          "id": "020de8e8-ec3f-455a-bdeb-8e1d5532904f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0e6d22d3-4131-455e-a8e0-09f74195d2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60822fce-06e7-4571-8604-0f9ca298d173",
        "cursor": {
          "ref": "9bbbdd5a-189d-41ea-a063-31cfef0d7a52",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2d1bb421-65f5-444f-be26-8693285dcf66"
        },
        "item": {
          "id": "60822fce-06e7-4571-8604-0f9ca298d173",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a1a3bc2a-3298-4f9a-b688-2f907b78ab4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30587d87-91f7-4fc9-b5c7-acdaf84a158d",
        "cursor": {
          "ref": "930c82e0-179a-4d27-ba14-ce72dd51d3ae",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2b6655c3-abbe-4d57-af85-c34cad84d4f4"
        },
        "item": {
          "id": "30587d87-91f7-4fc9-b5c7-acdaf84a158d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ca7a6bc3-1582-43e9-99bd-5032eb5d3e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fada9f6-f098-4dcf-9dca-5bd919377c06",
        "cursor": {
          "ref": "8d410cf4-7706-4799-a7ab-d74a180ec9bd",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a4b00310-35b0-4a42-be52-7bbb1e107a90"
        },
        "item": {
          "id": "6fada9f6-f098-4dcf-9dca-5bd919377c06",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0a30b181-6841-43cb-83b6-643441679a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df4dc0d-5be4-494c-9f33-5c47c039a293",
        "cursor": {
          "ref": "6a1c20cb-5fc5-4477-afc0-fc0da16ef881",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "862478c1-aff1-479f-b694-367ae413f523"
        },
        "item": {
          "id": "4df4dc0d-5be4-494c-9f33-5c47c039a293",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5fedbc57-837c-498a-a2e3-f0917d41c336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bf1750-c655-42af-ae35-3640eb3b5cd9",
        "cursor": {
          "ref": "141e24e5-6a85-45a6-9f3e-f227349f7cc8",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cd6550cb-ab3c-40cb-817a-098a7ad1dde7"
        },
        "item": {
          "id": "43bf1750-c655-42af-ae35-3640eb3b5cd9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4235e54f-bdc7-4866-b8a6-206eb4dc2088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f322dd-204e-4168-ac91-bc8f15144713",
        "cursor": {
          "ref": "afc8d747-e0be-4d4d-9cf7-797110b16c65",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d477edac-afca-4cbf-a9f0-308b49d0a3c2"
        },
        "item": {
          "id": "09f322dd-204e-4168-ac91-bc8f15144713",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "eeb65534-4ccf-4486-a978-aa94571aab12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439f166d-c894-45ce-a22f-dbc6b9c10e2f",
        "cursor": {
          "ref": "b7d25966-e7ce-4c02-9f72-dd783b9cc8da",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "009ee1f3-296f-467c-95de-6b59f1b92f78"
        },
        "item": {
          "id": "439f166d-c894-45ce-a22f-dbc6b9c10e2f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "314791e9-ec70-4526-aa69-95fb40dd7b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a6df2a-536d-48ef-83c2-0bdbcb2d69eb",
        "cursor": {
          "ref": "4ce4adaf-07f6-46e6-a771-9541d44d0361",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5248469c-0a46-42cc-a945-6d1c55d9d284"
        },
        "item": {
          "id": "d1a6df2a-536d-48ef-83c2-0bdbcb2d69eb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6f34f754-c667-47b7-a4ed-e4eacdde6b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f129a7b-2e3f-4695-b593-3387421214e2",
        "cursor": {
          "ref": "e194d9cd-781d-473c-92a3-dda00aad0e90",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "df810fdd-fa81-47b7-aa16-3c59434064b3"
        },
        "item": {
          "id": "5f129a7b-2e3f-4695-b593-3387421214e2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c68746e6-3c1e-4503-9aea-82745595bde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efab904-8756-419a-b4e3-7709df37ac47",
        "cursor": {
          "ref": "144bea87-98d1-4dce-91eb-e0e8603f6cfe",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cc37ff75-d3b3-4428-be5c-15bd2b91ac0c"
        },
        "item": {
          "id": "6efab904-8756-419a-b4e3-7709df37ac47",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5e2a4299-bb29-4645-8b9d-ddd500fe268f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50d17fd-879d-4b5c-a7a6-1694fee8f424",
        "cursor": {
          "ref": "363e94aa-c572-490a-a13b-0fcaf1a8c551",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9e0761ed-d7c7-4758-8259-faa0b83ffa46"
        },
        "item": {
          "id": "e50d17fd-879d-4b5c-a7a6-1694fee8f424",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "996a3a4b-9cf0-4f15-a9e6-5b6cf33e145e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a4ad38-550e-4581-8e48-4bd6f0efda77",
        "cursor": {
          "ref": "9b9f182e-a27f-4af7-9909-3e23663e413b",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7ef6f3c3-de5e-4f4c-841b-5f0cbf50eb74"
        },
        "item": {
          "id": "b2a4ad38-550e-4581-8e48-4bd6f0efda77",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0e40edd7-a1f1-480a-9194-8df8749ee771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1055f262-a84f-476e-aaf7-c5c9836fc606",
        "cursor": {
          "ref": "d9ea12fb-c3db-4345-ae7e-fa6403bcdd21",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c41f3043-4fa8-4618-ad42-59aa88d7e0b2"
        },
        "item": {
          "id": "1055f262-a84f-476e-aaf7-c5c9836fc606",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "64dbaffc-5364-459f-99ab-65bcf472cdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414f8b32-cf29-4903-8aca-994667791e92",
        "cursor": {
          "ref": "f466f153-b01c-4b06-a0ca-b720135c748b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3b1ae4dd-f457-4ec8-85e2-e24651524b49"
        },
        "item": {
          "id": "414f8b32-cf29-4903-8aca-994667791e92",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a5c0c4a4-d538-4e5d-907f-1fe9ca5f787e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6b700e-edc8-44b6-885f-510318d9427a",
        "cursor": {
          "ref": "7fadee1d-4e3b-498e-82d1-cb7922edce63",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8c733f29-ea0b-4b5f-8435-606502afbc13"
        },
        "item": {
          "id": "ed6b700e-edc8-44b6-885f-510318d9427a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "dc1ae9f4-6c99-4863-8e0a-a093d207ab2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cd6f26-86ae-4fa0-b83a-f9c5eddba1b4",
        "cursor": {
          "ref": "c1b7dcf6-edff-4946-bc2a-41b437a53e5f",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7211ef0f-ab8a-4c8d-a29d-694a77be9c99"
        },
        "item": {
          "id": "a9cd6f26-86ae-4fa0-b83a-f9c5eddba1b4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "44ed88a6-68e6-4497-b89c-43a698174584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50486664-01fe-4fd3-a431-0833ebbcc23a",
        "cursor": {
          "ref": "9a46c780-0c35-4c06-ab83-0a0c9a532bba",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "274eb1de-3217-49f0-9e8f-e0c02c41d671"
        },
        "item": {
          "id": "50486664-01fe-4fd3-a431-0833ebbcc23a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9513719e-2936-43d9-91c8-b5b18fb2de70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb0c152-e34b-4411-878f-b020449ade17",
        "cursor": {
          "ref": "7cd2909b-4fa8-4ff6-b7af-4a072da0f322",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9049f529-8d5e-47af-a07a-0df862ad1dbd"
        },
        "item": {
          "id": "1fb0c152-e34b-4411-878f-b020449ade17",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3f9804c5-582f-4d90-82fd-8e74d65e449a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8d289f-2e67-44ca-93f1-7a19567ebe2b",
        "cursor": {
          "ref": "31a6b872-e140-4ff4-9ac2-f0936468248e",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "49586172-6cdb-4937-aa9a-02f40a4868cc"
        },
        "item": {
          "id": "6b8d289f-2e67-44ca-93f1-7a19567ebe2b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "66d9c942-1583-4afd-83d0-88bf2f4a895f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0bee25-e1d7-4ef1-a93d-a086f1413992",
        "cursor": {
          "ref": "097a76be-4970-4769-89fd-38028c2a5b7a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "96ec1090-b9ec-4472-abb7-2cdb98b2bc92"
        },
        "item": {
          "id": "3e0bee25-e1d7-4ef1-a93d-a086f1413992",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fdb044c5-2c75-442b-b492-0c48d1aeec01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1575c45b-8b9c-4315-bb24-0fb0ca9d23a3",
        "cursor": {
          "ref": "ab9dc996-6dd8-4ca8-b03c-eb50c3fcacd6",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0f58eb96-6604-4db1-9eee-752ef5816efa"
        },
        "item": {
          "id": "1575c45b-8b9c-4315-bb24-0fb0ca9d23a3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "194976d1-ec76-470a-accd-7609bb05d40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8e4e02-5185-4d3e-a702-7c11f7c7a0d3",
        "cursor": {
          "ref": "b04d15dc-caea-4d70-ad6c-5b15353175e6",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e775f207-071a-41e0-adbd-060de3c1f1f0"
        },
        "item": {
          "id": "2f8e4e02-5185-4d3e-a702-7c11f7c7a0d3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "64d0bbfc-4328-4aac-ab6b-9647a159227e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c02c59-74a6-469b-b243-aefc954f650d",
        "cursor": {
          "ref": "2a463443-4f6b-41ee-b74f-8bf9131378d9",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cade898b-9e78-4ab5-a340-59a2fde1b4b3"
        },
        "item": {
          "id": "a8c02c59-74a6-469b-b243-aefc954f650d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8f87cad5-c3ee-43e1-8725-2000983c8c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b33b12-2dc1-46d0-bdfb-15b3ac9e5fcb",
        "cursor": {
          "ref": "483b56e7-de49-4789-b361-9c8660b75ab6",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "aef71632-53bc-42ea-be0b-e46554878671"
        },
        "item": {
          "id": "42b33b12-2dc1-46d0-bdfb-15b3ac9e5fcb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a47d2b5d-045b-4e00-958c-bd0974143daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b29b6f6-5985-4939-a5dd-8e36377a96e1",
        "cursor": {
          "ref": "dfb3cd00-4da4-4887-97aa-d90cb30ca4d7",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7d2bc452-74a9-49c5-90da-579ae6e47baa"
        },
        "item": {
          "id": "5b29b6f6-5985-4939-a5dd-8e36377a96e1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7591712d-516f-4f9e-ae49-f48ae878f44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f043fe9-92fe-4b6c-a729-c04747bf0d0d",
        "cursor": {
          "ref": "0b937f23-d1db-4ce3-ad06-b6ebd6b123ad",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d96cf8ce-3b93-4ad2-9d83-c2f3dee3213e"
        },
        "item": {
          "id": "0f043fe9-92fe-4b6c-a729-c04747bf0d0d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4b2bca77-9b0a-4d4c-a23e-7483d407da94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a9d3c6-e31a-47e8-b260-ef781b8027a0",
        "cursor": {
          "ref": "04ca45d4-4420-49af-a35d-d963c899a85c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e60cfa7d-866a-454a-8c58-a999d31f357d"
        },
        "item": {
          "id": "47a9d3c6-e31a-47e8-b260-ef781b8027a0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "121fb5f6-e691-4cf2-b2b8-62767fe9d99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2711268a-4615-478d-8e15-a27649f6f253",
        "cursor": {
          "ref": "969112de-d5ba-45b6-b867-c3cb18808f36",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d763b143-129d-4bf3-9aab-a5ba7f0e8aea"
        },
        "item": {
          "id": "2711268a-4615-478d-8e15-a27649f6f253",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0fec1bb8-f058-4ca6-b247-8e0001ac5609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed4a7d0-2e5d-4b82-b465-a45837dd2cec",
        "cursor": {
          "ref": "7ddf9b6c-71da-488e-99e8-e60c446853d4",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8e8313e4-ae7a-4b30-b177-c5c7cd10936e"
        },
        "item": {
          "id": "0ed4a7d0-2e5d-4b82-b465-a45837dd2cec",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ef0f07b6-14bd-4eea-9400-03e6720e9750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9255fb6-cca2-47a0-bf32-ecba766198a9",
        "cursor": {
          "ref": "7f7d139e-8017-42c7-ba74-a7fe678f98f0",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "b1fae39f-ebec-481a-a2c8-19590e0ae638"
        },
        "item": {
          "id": "e9255fb6-cca2-47a0-bf32-ecba766198a9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "18412530-ac93-4a92-9502-6c92778bdf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7b4dcd-ae09-4649-a5d1-7ab4cd832438",
        "cursor": {
          "ref": "f5867070-cb2d-4661-bd04-6948762cffc5",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7b69e94c-d0f9-49c4-9a19-64ab1031c34f"
        },
        "item": {
          "id": "7e7b4dcd-ae09-4649-a5d1-7ab4cd832438",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0ed14bc3-c8e9-4f9b-9a5c-9a7d33ffc289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47effdb8-982f-49a5-a01a-10cba070b790",
        "cursor": {
          "ref": "339c6a74-48b3-4c5b-a8f6-891ad5c6c6e0",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ce5e1aa4-5436-4cb6-bc3b-d612b8fdabf0"
        },
        "item": {
          "id": "47effdb8-982f-49a5-a01a-10cba070b790",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "90161e5e-99e7-44e5-808b-5367659641d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071b4c02-9eca-402b-ae1b-056a7f7f2a28",
        "cursor": {
          "ref": "1cf0ed61-25ec-4c2d-a27e-faf600a2956d",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6ea3494c-a7d6-4078-b163-4de10c520306"
        },
        "item": {
          "id": "071b4c02-9eca-402b-ae1b-056a7f7f2a28",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7a2d56d4-2aff-4f56-9b66-6dfa23327990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94507d8f-992b-49e9-8f57-de8cedb34a69",
        "cursor": {
          "ref": "f09cfb36-e453-417b-b3f3-e6470ec3e632",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5e5fe0cf-fa04-4796-9964-c5f204a8e42e"
        },
        "item": {
          "id": "94507d8f-992b-49e9-8f57-de8cedb34a69",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d8f9e69e-4d93-44e7-84dd-2c77a03b83c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5459324-3f8c-4509-a92f-b0d3c03a0f2b",
        "cursor": {
          "ref": "22ce6195-53c6-404e-8060-62e34370005f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "505de4be-cb41-4f4e-a0ce-2335d12f1a53"
        },
        "item": {
          "id": "a5459324-3f8c-4509-a92f-b0d3c03a0f2b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9e1a29cf-3f8f-43df-bb48-b17a75ca499c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043a9d95-3474-4a5e-ac3e-1362e8089a4f",
        "cursor": {
          "ref": "c6fd195e-45d7-4063-b258-3f0ad08be204",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "57857346-8682-425b-aa4b-35b560ad5aac"
        },
        "item": {
          "id": "043a9d95-3474-4a5e-ac3e-1362e8089a4f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e37cce15-46e6-4f7c-b1e5-c7fbcafb5aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907cc25d-4981-4425-bb5d-0af3a76c82c6",
        "cursor": {
          "ref": "55271cb3-beb5-41bd-b783-1ea675d75cde",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "6b5a6625-0d51-46e3-9442-febe2001dcf6"
        },
        "item": {
          "id": "907cc25d-4981-4425-bb5d-0af3a76c82c6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "43e593bb-5225-4484-bca0-d37aec0fba4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbfb52c-6838-4069-a954-ef6c35bbeef1",
        "cursor": {
          "ref": "1a768fbb-b746-478a-a92b-12458f3cf257",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f4169751-7440-4dd4-8657-e03d3271b177"
        },
        "item": {
          "id": "0bbfb52c-6838-4069-a954-ef6c35bbeef1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "091c89f7-4fb6-4f14-8741-6199b44be6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee2d232-ae59-438b-8dfb-45c72b0193d8",
        "cursor": {
          "ref": "9e710581-cafa-477f-82a7-dd26387b31ce",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b0d070ff-061a-4f16-b1b5-17c4543c76f3"
        },
        "item": {
          "id": "bee2d232-ae59-438b-8dfb-45c72b0193d8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8a144876-d693-4ad7-970e-e4dc0ce56c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80918dc6-9316-4275-8c05-449a4d84f70f",
        "cursor": {
          "ref": "08dad2dd-a9db-4fc5-a4ec-d930e9be0358",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "6e3feeb6-278f-474f-879a-a76910f167dd"
        },
        "item": {
          "id": "80918dc6-9316-4275-8c05-449a4d84f70f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5f319fc1-e9d2-4818-af1d-700e63578a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d09cee-faf8-4c26-a7b1-579dbd173445",
        "cursor": {
          "ref": "ee66a6bb-6984-4bb1-989e-028e37e70152",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b13edf27-ab2c-403f-916b-a92e2f034893"
        },
        "item": {
          "id": "44d09cee-faf8-4c26-a7b1-579dbd173445",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "840a0ae5-8de2-4a84-9f2c-c963d3a9f9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97941c1b-0162-40e7-b0bd-a4c2e2bf4876",
        "cursor": {
          "ref": "0195c527-2258-4408-a28d-fd80668a82e8",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d3ec85cd-5fe4-4c47-9a65-96d71325dffd"
        },
        "item": {
          "id": "97941c1b-0162-40e7-b0bd-a4c2e2bf4876",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9c4999f7-816a-455d-a0de-53ae3b906709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a956ddb6-47e6-435f-b4e0-8069c500d26a",
        "cursor": {
          "ref": "15be79c5-44e9-435f-9ed2-edb45b23f754",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a790548c-4db2-44dd-944c-14579886ffdb"
        },
        "item": {
          "id": "a956ddb6-47e6-435f-b4e0-8069c500d26a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "753346de-978a-43a9-8fdc-e9efe78e7d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43e8b84-d4a9-4700-9fa5-ac2dee172de5",
        "cursor": {
          "ref": "eee45fb3-c719-4ed4-925a-1bdae19a6f5a",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d139808f-ac79-4d20-a886-c113e43e59f4"
        },
        "item": {
          "id": "d43e8b84-d4a9-4700-9fa5-ac2dee172de5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "56088f9d-c664-485b-9f20-b637436b9f2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 88,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808d4ffc-b378-4514-ae24-0c4d5f2fb9f0",
        "cursor": {
          "ref": "c7e8dec4-b5d8-478d-b031-cf4e36003c45",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "520d5c2d-b145-444a-84b5-d6dd159fa117"
        },
        "item": {
          "id": "808d4ffc-b378-4514-ae24-0c4d5f2fb9f0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2615aa2e-a41f-47fe-97bd-5177a2cf5342",
          "status": "OK",
          "code": 200,
          "responseTime": 143,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41957c5-15a8-4af2-b75f-1b91e5c06c94",
        "cursor": {
          "ref": "f0f025d2-5a3a-4d9f-9d57-efd7c84b65d4",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "eb7913b3-5267-427a-8c62-a2fb66068966"
        },
        "item": {
          "id": "f41957c5-15a8-4af2-b75f-1b91e5c06c94",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1758f587-4d71-4a56-b6e0-fe07ffe18eb7",
          "status": "OK",
          "code": 200,
          "responseTime": 1813,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2aefad-022c-4155-b132-5ccf80514117",
        "cursor": {
          "ref": "854c5ddb-7574-48e6-a327-1b43ea82c9e1",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2feb77f9-b101-4fbd-b75e-564ee42fdaf5"
        },
        "item": {
          "id": "be2aefad-022c-4155-b132-5ccf80514117",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "10be4bc6-e827-402e-a8c6-980fea9b3e24",
          "status": "OK",
          "code": 200,
          "responseTime": 1401,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab46b064-1e7e-4586-b907-9350febb02f2",
        "cursor": {
          "ref": "2b6517c6-a2c7-4b6e-8d21-3e44db76036f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "272a800b-4c8a-4269-8335-bcb3d30c1452"
        },
        "item": {
          "id": "ab46b064-1e7e-4586-b907-9350febb02f2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "42a6862a-2122-48b6-8c65-026635330b80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab46b064-1e7e-4586-b907-9350febb02f2",
        "cursor": {
          "ref": "2b6517c6-a2c7-4b6e-8d21-3e44db76036f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "272a800b-4c8a-4269-8335-bcb3d30c1452"
        },
        "item": {
          "id": "ab46b064-1e7e-4586-b907-9350febb02f2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "42a6862a-2122-48b6-8c65-026635330b80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72abaf44-5895-4e66-bad4-aa10f403fc5b",
        "cursor": {
          "ref": "db4673b0-2a2c-49f3-babd-695034f6e703",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "20594911-b9ab-488f-888a-ac5b9ee7fcc4"
        },
        "item": {
          "id": "72abaf44-5895-4e66-bad4-aa10f403fc5b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "53a1dfbb-9f3c-42cd-9be4-124c5a04729a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49d7ebc-59ec-4375-b62a-382b53a028da",
        "cursor": {
          "ref": "f3ba4a63-3e0e-4ba3-bc94-023502b74937",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "728c53aa-0388-46d1-b1c9-21d46fcb6ad0"
        },
        "item": {
          "id": "e49d7ebc-59ec-4375-b62a-382b53a028da",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "65b2dbf7-d78a-45de-b260-86f29942c1f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 93,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}