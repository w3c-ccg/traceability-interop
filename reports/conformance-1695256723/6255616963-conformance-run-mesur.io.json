{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ca0e9776-962b-415c-bf66-5fcb5d73cf28",
        "name": "Clear Cache",
        "item": [
          {
            "id": "677c6733-2023-4357-9b1d-c1a51abdfdbc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "889131aa-836c-4dc3-b18d-4d444b559ece",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "49ebd485-dedc-4547-8347-70c9d89cd9ca"
                }
              }
            ]
          },
          {
            "id": "76532b6b-0d8c-4c91-b3a9-ba11d2e1c59b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78648bc2-0a82-4137-9af4-22cb8e8223b2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "448ddc58-0057-440e-b22a-bb5c0b959a21"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ae0b0aa3-2d70-4f05-930a-c283575922a0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c9903d28-f651-4a03-b871-abc27cc366c8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18314d10-3839-40d5-b7a3-9a787c83f96a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79e7a8d5-a22e-4477-9353-2f6b75c8d220",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07863dc0-a096-4da9-99a2-9aa27cd01a9c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fbad2c02-2dc4-4088-bae6-77b0230ba252",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10daafb3-7209-4f41-9b0b-a4dc763fff53"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9ec93a9d-02fe-4158-a908-8390b5845d48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f31104e-8abb-4935-820c-4498aa1fdeea"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89af938a-df8d-4627-8a7b-4ebdb63e4b7b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "036f17e8-5722-4b7a-abb1-b24b00848e6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c74a76e6-8eab-49ee-bd9c-01e522c43d11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0357de02-aa23-44f1-87ea-12560856f50f"
            }
          }
        ]
      },
      {
        "id": "3b8d8004-1d55-4207-a322-8c284ea5d6ba",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f877fef2-0dc3-40dc-9fcd-251bf670c332",
            "name": "Negative Testing",
            "item": [
              {
                "id": "923e55d7-f97d-42a9-a109-0342a9cf681e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6091642-4a7f-4d90-aebc-11c6d450cc8a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8ee7da-1040-4d5e-b4f4-879b969faf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8ecb9a0-4307-4b3a-96b9-9fcd6b63b5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564cc076-a373-423f-a31a-47f0507c73fd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51db451f-4865-4e58-b794-61b455bd054a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cad2f6d-fc14-4456-926c-0c2c00e8f5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a9ae19-329e-42b4-ac7c-6c5fd87145b8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6138c212-c2a0-4b26-86af-a982f5d0f316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c8c0be6-92c2-4b13-9433-b965d302769e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2060b9d-4326-4f94-9ee5-143fb6aade53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9adb1c87-8b1c-4a5b-a930-8c7203be3199",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30acf70-5d11-4bb7-8882-cf68663196ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7edeee6-f020-47a2-8faa-f0c6e1889d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc69fa8f-f998-4e06-a544-a321736b503f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364782dc-9330-4847-be64-cfd368fd8598"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "69a552fd-a6ff-49d3-81ce-fb2cb7b2cca7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d9c47bf-d2c2-4eaa-9c20-bd02c303a05f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12870d15-1dca-4525-a012-10b3c4b8fa44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ff359acd-74f4-49f0-ad3c-198b80367d07"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8764fe63-dedb-4bfc-97c6-ca86c68d0048",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8dab8c36-b866-4671-8d31-cbd3acf404ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "545641a1-a959-4d72-81ff-41ab9ffd0a77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6222ab9f-0d88-496b-8535-e43972918819"
            }
          }
        ]
      },
      {
        "id": "f79ae71b-634e-426a-8c55-45b2b3907efd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f747c690-8253-4ab0-b10b-ed7c168af6c8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e677c59e-60b5-4007-a7e6-ae8b727a5565",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6013b92a-798c-49c0-9007-693e5ef94a8e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9165bb-54f9-4d5b-9b08-91d4f4bab5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848eac3c-547c-4d7c-bd34-800fbc827ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee6b760-4c0b-4767-85b2-6ac3b2ca9745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e2b2550-5060-424f-86de-f98204254d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fcf874-64ad-4f98-b0b4-776b72a85ec8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ad7c3b-532f-4d16-9db6-90b6b4ffaf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9a0a82-7756-4e23-9fac-427dc3533d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339376b7-3c2e-47aa-9a40-db4d1a7069ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1d5006c-da90-4fac-a4a4-2194a5dd1078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c931ab25-5293-4551-8a31-77da4efc557c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b80b2f1-7945-4a8e-aece-2251e526f3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df0e543-4718-485f-ad1d-bc94a2ac7425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a97687-55ad-445b-92e9-c5d7467f5af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "286dfc3a-9da2-47ec-b03f-4cb9b47988f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dd7f81-3f92-460c-b9f0-715b95d32453",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d70a51d-2802-4ecc-a188-c5b56166be80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e366197c-3412-4b19-933b-241673c95232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41464796-a9ab-494f-9714-a815824494dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8c80550-2fc6-4729-ab32-c0fd604d0015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3765acd3-3ec6-4d0d-87ff-abf997106eed",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5c5a3c-2ba6-4e4d-9515-1f81358f663f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80ec672-d648-44c8-b553-47e3b8234c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1af604e-32b9-4b10-94a4-fe18c54feb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97054691-48a4-4e5e-b4b9-3c5d90f96eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9755913-3ca6-43c7-8ea4-d2c6e7c1321b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f4445e-4ff8-41ee-bdd4-071fbe98c943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4a121d-112e-41f1-bb3e-a3fd34d6b15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fcabaa-cb99-47a6-8ee3-4f9ef0fa7c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4b76342-8057-4767-8587-d7ada117bc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c4009e-7d8b-43c7-be19-9bf69baf09d5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "128b9121-e829-4075-b58e-6d4c11e5229f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec822012-daa5-441f-a1f0-9c198ec967ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d283fc2f-2437-4ce4-a5ca-edd74cb5124e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9c27c45-f136-4740-9009-ffa7f6751413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2adaf54-f152-4b1a-8a83-f887553aa817",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03382db-9cdb-4e38-9c81-a2147e1074ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f1c42b6-a35e-4eff-a24d-6d1e935608e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fead82a0-a1bb-4585-b1c4-cc5cecf687cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7000d3ca-c6e4-4bd3-9954-2e33f98fd73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1fa453-3fc9-4e8e-99a9-f1a88f5abca6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51446843-a1eb-4452-9293-1e631574d641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f56d446-68cb-4051-902a-5b9b48eb5e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f407fa-5a19-4e09-98c7-56a62a3b333f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed9a06b3-4bdc-4633-8b60-8a4ad3986286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd5fb24-3780-4edc-8579-0ccf80be4952",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951d4405-0301-43ed-b1af-0822d1203f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dc5f3a-540b-402e-b59e-fc93a7758a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf2cf44-aab7-4c36-8fda-aff8d239aa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7a3cbd0-84b2-4fec-b100-3ec5bde7d621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b6d3dc-eb86-481d-b523-d0de7b12e7d8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2245e7cb-0e88-46a9-8adf-ae4d164c7fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0eb34a-4a6e-4497-92de-86f9fb50856a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d526e33e-e4af-4010-90c1-16a2dece2650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bebd47af-8bf3-402a-a39d-882ca42a98f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb676f0-bd32-492c-b402-4f1ca5ea28dc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091e49b7-a39b-4545-91e9-6769bc030d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d913f6-d9db-4140-9822-a6b6856b4c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a42d7de-4d1c-472b-85fa-a5bd476577ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9846931-e90f-4cf8-8b25-c8549e3be104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a600d974-05db-45be-8ace-496e7bf5addb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141225af-bb07-4d4d-94cd-2a20ac8733d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043d2620-8dd3-4eff-afd5-61e219a2de82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bce125-2558-4eb3-a15d-91710070c2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15f68e35-0125-4c4c-a947-c0267e3fc97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93714fc8-27a1-445e-a65d-2c82b58baad7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f167141c-25ec-4c17-879d-b2bd2bad93fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b343ce76-964a-4d58-b365-e6b34930ff85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d690f2f-5965-43a7-8706-26913d76e5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cee7d6c5-3c24-4380-897c-235da0a582fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f724a16a-1102-428d-a2b0-9bcf809ad550",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60439cda-439c-449c-b29b-b1fb58222ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629669fe-ed07-4ee3-9bda-0880b378ea79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47afb83f-3dfd-442f-b9b5-69b815c085fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7acb96d3-b9a2-4467-9d19-91fc12cd96b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ef0a6a-26be-4fa0-a5dc-bf76cd0672f8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b37ef3-43b0-44f0-943d-57942ff6214a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008d5fc2-8f8c-4d62-b16e-7c6ea6a9011f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefb630a-9b67-4a84-a1f2-00ff8a88b3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40f99ac8-ea79-4dbe-9e8c-6344080a6beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d104cbb-bbe2-407b-9d8f-ca456b698db1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf6b88c-373e-4867-b180-506633e98c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab7ed5c-c86c-41ff-a12e-c1bac8b8d7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f81630-4114-4f8f-a513-60ab68a9a80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c059cb73-5180-4e8c-ba1d-149554628a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df03452-b53e-4526-8756-1d4f1e70b216",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09582973-3d8f-4956-a9d3-9d3b18f90d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9cf530-d685-437b-8ccb-4c2151eb69ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed23d9a8-199a-4f94-a6fc-5504e5c668c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "902c02a2-1459-44a6-b4ff-cae9c6b9c2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dba3285-bdc4-4c5e-891e-7c6717378506",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4402bc3-632c-46bf-96cd-3f768b89cd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8298d5-8724-4061-8121-ca03c2a3aece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c7e1c6-de2e-4f99-b510-6140507958ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c891519-509e-4dba-b29d-fe2c15842cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4608c5-4e78-4716-9e83-b508668d72fe",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28497521-1e8f-4589-9090-1884363f9bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad869d2-19aa-4cf8-8996-96280e5a44c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca0be6c-429a-4410-b9fd-7efb93e38617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b60237d-833f-4487-a5ff-afe29a6933ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81077b43-bf29-4065-9164-d230b5ace535",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f719fb02-9667-434b-a80a-5df3f8416b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0cfdde7-c41d-47b8-9b21-cdf2fd7443c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf639232-a97c-45a2-9d58-4dd1e6638298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23e4b254-cb1d-4f09-8cdb-606f2c1f7ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c9e1ac-2339-468b-a946-f35337275c40",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377b25c5-926e-43bb-864e-58a7fbe6cdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde4b0c8-425b-4043-9e12-effcf1b10ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43cc0a5-2fcc-4c48-976e-9361940e4d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52bfc441-d918-4508-977b-25d87c045ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92b3992-f2e0-4da8-8157-036c2a4b0534",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0bb0ef-6895-46b4-b40d-9087f97ac3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86286eaa-371d-41cb-91b6-8e46c8e0ec40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b99df9-341f-41a9-8e32-18b874f24077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d07f990-743f-45dc-9e5d-ad9a97354bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be149ad-29bc-4659-921a-424bf8944271",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda59ecc-0c47-48a7-b3d1-bd442a14a807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fdb5e3-00e4-4950-8986-7f4e9b78c07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374f363d-6f22-4e16-a977-77e9de6505f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac535847-a382-4db7-807c-f94198ccc7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712c9781-c80c-4ca0-b256-cba28b3ebf35",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4ca1cf-07d2-406d-88fa-735be5dea60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcbcfb1-03bf-46d5-ae66-889771a68d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c681006b-dd92-4841-817b-8646cc119f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc4c11e-5908-48d2-b3bd-d9ce7581c713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46f4396-2364-4c57-9d01-7b1a9c3107ed",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6449099c-d547-4bb9-9638-7cf0eb4702d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a99f110-1244-4a3e-ad68-ef2694fd2c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a61360-0993-4f87-a4f6-fde9f7a67ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e56f891-9178-4748-9d13-1aa3d6723e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fa7bb2-f614-4a0b-bcd6-25e48c5e3784",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b696b3c8-d86d-4d0f-95b9-7796f8d374d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9502dd-1c43-408a-8dda-a8b773819be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36226726-4ad9-48bb-aa58-d63a20a1e366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5130d99d-acb8-480a-9cda-e0c25296dfde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6517bc-08f8-45b1-ac7a-1bb4c9a6b882",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b338232-c7a1-42f3-a751-96ead4d02b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c3ddc4-9c3c-47ca-9e1e-7bd499e82bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883c0b91-8c87-4c0f-9f16-076853f6d24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e73a6c3-21e1-4c98-9196-d5da029a4a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfbd075-a9a6-43a0-8c21-fa2733e7ebb0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd12b50c-61ce-4fbb-b555-0e1df7164429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189f1ca8-afd7-40b2-8aff-149aa6878c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c54328b-a006-4f95-bc9b-db360a279a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ec58f3-14d4-4ba5-800e-9747bb0aebe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4418cfbc-129c-43ae-8274-0de0720e2131",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f92a00-c572-4cef-a23a-d3a520f6f613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9626aca6-b7a2-4fd8-89fb-9e109e8fdf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967e83af-e55a-455c-b742-6cc3fd3b354d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5976056-f709-4219-9a7b-f8dcd2b2b6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df63f46-b704-4e99-9094-3e904a9c3a6b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a98a6a7-ce22-4698-9355-38194b1ea96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4783b6-b87e-4c6e-8722-ea70c16f7a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9875df75-bbb4-4a9c-bf85-bd1e61b2a3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b26549-4ee0-4016-9f24-df9de36b4b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031dc70b-3f41-4e56-b6fb-0655036f7940",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad95fc72-a794-4d0c-beb1-81752a5a5c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1b59e9-40a6-44b1-be1c-5021c4163f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72af1483-7744-4a8f-960c-2790229468e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "655bfbe0-9cb1-4d6f-94ee-b65de3284731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8733954-6b84-4cce-a861-ddc434e3934c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd5e5bf-0a56-40d9-81d3-53c81f4fd8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d894dc-b443-4f5a-9843-afa7d1d15bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f7ac85-498b-4367-83ca-df9884f6cb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "138a0777-63f9-4643-9024-d5f403bd460c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197bc84d-b124-4a71-8530-737dd5b6ce86",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9cc558-b281-450e-97a0-7a8b72510cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90aa7e57-b368-4c68-810a-0cb5c7bbcd4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95732253-c519-435f-af4b-e21d0d1c3c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc27ee54-6555-40e8-bd2b-902afcb61bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb32f6dd-293d-456a-a140-cdd361a8401f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90b96bd-640b-44d5-8124-1c1d787ba25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9041cd0e-cddd-4c7e-84e5-04cb54156d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d530e69b-b97a-4f4b-b001-b308e9e19956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "dbcfaefb-0a13-4fb0-b2f7-d0fe61f46da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5005c455-b157-4a73-a781-81ed7214bbe2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6aceddc-7339-4666-ada4-8a0f1246ce5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb6361e0-4a23-4b96-923b-f281b0385762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cb0c4f-2501-49c5-8af7-bcb0a8a038cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "daad214f-237e-4550-bcef-94b0849b4c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f09786-46e0-4ea3-979e-7fcd9aed6804",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ea6fa5-9f93-4b9b-868c-24ff9b2cde0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627e4425-c1ad-429f-94d6-fd958a1b128f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1edd3af-2d5a-4975-bf68-e8660cfcbfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1b2fcc-107b-47b1-b637-2a04354d028c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba751b54-ff85-405d-ae00-fd94246d1e76",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21f9f21-7cda-4080-a6a6-86281b0272f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4759dfb7-1061-46a2-8618-6af92396bf7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1199286a-8c77-409f-9dc4-0d572434651c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1b2aa4-d4f9-4834-966e-e32fd53965cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52561dad-6677-44fa-a8ae-59dc0dc4498b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6f670f-9c74-425c-a8b8-77feeb7719c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33def3bd-d11c-4e15-90cd-f157b9091113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80a5391-ae52-4967-8c0d-c361468a4a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9549302b-88ae-4904-8bc0-65025b8e97e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0856a9-b9e4-43ad-9097-849290e4783a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54ebe2c-b310-4f5f-bc17-5095c3243737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85cba1d-b49d-4dfe-bf5f-2d63cc2b4ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efd3de2-f277-4013-ae7e-66376f94e75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "80d1611f-c5c8-4a37-8934-c2d355e1cda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb05517b-b045-47f0-a540-c0425a163559",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be879cc-4ae1-455a-bc00-48ceb7462650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99012b9b-76c1-4b0e-9d9d-af0dac2c15a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b0282f-c75c-4d39-ac79-35a42ebe4e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "656db607-b16d-4298-bb56-95f435440d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccabf6a6-b6f4-45c8-9380-31a24807214a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46c6840-a5c8-44b4-900e-fffaf1be084d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e58247-1966-4bbd-87ee-f809b50fd1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aea55db-5950-4d7a-b44f-665666853c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "aee4b2d1-9eff-44e8-8169-953ddb3682cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa07020-3b2f-4d4b-9595-659307b90b75",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2974721c-d766-4777-b1d0-29eee395f39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f470d91-4dc9-47f2-ad85-698b44e50334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa695ad7-1bf1-45b5-934e-415c622545e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c17ea7-386c-4c9f-9ead-300f48936b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5a95b7-502a-4148-a6d2-94cc56d13956",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6d3a45-9164-4c13-af0b-14594e674f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33729b2-1f8e-48e1-8269-61057606f7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6977951d-3836-4a03-9a63-53c6d5ecde2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a598374-2844-4f1c-aa08-77fa0f3c796b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a81a62-158e-4d1b-b02c-ec9229e95f6d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf61b00-ee01-4f5d-aea9-61343d5553a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c611677e-f635-400e-a12b-fb7d31bc0df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8071e02d-ce9d-4b6d-9622-b1b7b9dda4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "afe4f364-48a1-449b-a01f-eee02e545969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9eff3a-7794-476f-9a83-5641e9677d53",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9146f686-88a2-41ad-89d0-a9f7ea5931ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b958f067-dc71-4032-b100-8607578bd43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78192f30-9cc6-4547-99d5-dc512f808947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a36a480b-4603-49f3-b3a0-edeaad84bb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d976b6e3-7e9e-4a95-897b-b1a269434faf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecf300c-9e1f-4a85-8a76-ff0ecf338ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc214244-017b-4b70-b6b2-8783fe091eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08e711d-3f9f-4ea4-91ff-a987d52d1147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aee6db9-f3d9-4711-bec4-55dad581edce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c5d912-5234-4698-a8a7-b76cdb59f36a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd47c922-8557-4e42-8229-36d629074e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acca0c8-d876-46fc-b9e1-f7e376bbabe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1140c74-16ba-4cad-94b9-86819093303d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4a1b13-2ab9-4450-ab04-3384d07e37da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58a64d9-e3b3-44af-8d33-5ce82e757f69",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cc4795-3ddf-4353-86b7-1ffca3c13576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f6e610-433b-4bb2-9a80-3658a1cf3d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fac50e0-408e-46ff-aa15-4c6b70e942da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0950f2-2644-4615-84ee-51fa607054b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeda115-ed24-4cd7-b6b5-7433d07c1b5d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342cd0ec-1acd-4589-94e5-809a6c580ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dde65d-10ba-4528-9a0f-d1dbb8b9746b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabbd345-f4cf-42ce-b2be-b1e1d4f7cbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "acbb0f8b-4810-4c24-a080-3a9254a0fdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f565f84-bae2-46e4-8260-489748c373d5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b336aec-82ba-461a-beec-294d7692a266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21f63fa-37ea-4634-8104-f2fb526c0d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacd3c50-71c9-4b4f-b70d-4ef8727acdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3229190-4e4a-4098-b147-e6e0aeaafd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2daedf-6fde-4db7-92a5-243e7fcfb9a0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23036c5-80f2-41d8-a647-3b8d06d86619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60069d63-d4a2-466d-b8a3-eeed18a06473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750ecd44-ef86-42cf-a811-8184f997098b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80b8c364-d5f4-4df1-b15b-df2d2f4afc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae98a476-aeea-43d8-93e5-e2c42fcbe90c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b5c83f-8c97-4c43-811b-8d6df729f705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fe021c-3360-400f-8a3e-d532d87376e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237f008f-e7c4-46a1-a977-e444fc225dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2afab2d3-0e1a-4be5-9bec-1879554029ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e833e0-c739-455b-b4dc-39c3d99d72c9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5013f17e-31dc-4d5f-a79a-24fde6c34f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da96600-b1f6-4068-82c1-fd3e0a824e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3d8342-c019-407f-aedc-5f87d6f5947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4370c4-9185-4835-8bc9-aa9d88ec61c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf9fd7b-81c3-4006-adb8-084e9f556cc6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439c50a0-3eb1-4afe-89ed-eae36128dbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e296ffcd-1a85-42a3-a371-44f2db58b647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc732a5-5b80-4718-9424-fe3f407da2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a476ebe-f3c3-4558-a241-47ee85fa4af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a512412c-34b7-4030-91be-54a5344256f7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cef808-da88-436e-8e30-3f7c59724b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8fac5e-8151-4e9d-93a8-a0fa224a9c3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3839dbb1-7029-4fea-95ea-e229c9d8507f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "22d9fe12-112e-47d9-aacc-f94ed3d8b7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f304e0-3c92-43d1-bc24-e26b577368c5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8a31be-3fd2-4351-91b2-f0dccdb8be65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6694511-7cdf-4362-9d15-f42b938798be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94493129-2c35-48f7-9479-2e242bdbf7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "57e512ef-0938-494f-af11-3dadcd32f667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13c322a-a39b-40b3-9755-e827d1efdc97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012b5d4a-8521-42ef-b8b9-e884ed2ae6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba86963-5414-49b6-8bf8-bb0a84b8af5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e18462-b852-45a4-bb5d-5c8485edaa9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b26825e2-a157-4391-b163-cabf0cdb00eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdab10d3-9423-413a-96f9-712db6378035",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72b6b5c-f13b-4281-b3a8-c825021654e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ac504c-297d-48a1-9163-6ddd17f31bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0cf9bf-9351-47cd-9de9-4125b7133bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c61550-f64f-48c5-b985-4d7845ba0488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4bbc3e-e097-480e-b8c0-91d635f92e0e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b819560-f392-47ab-9f2c-2589d385b7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a102561-5c4c-41a9-b51b-799fae6c10eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d78e8b6-e938-461d-971b-d3b05fc69093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a31467-bf3f-45b8-86ab-099a9bb1243b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3375b8e8-a299-459c-9f50-94edd975a770",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20105b30-7d85-4dc4-999f-1e7127e416de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6431d6f5-d984-4b34-933b-10e851ad56f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c4fd1a-effb-4366-a61d-5c8fd9f33814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "95d1df1b-ca49-4bde-a48c-41be73d24dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a1c1df-d573-498c-8106-38a39bd28250",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc59fbf-816e-4fa9-aae8-b5887a8d8acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68db0008-2a3f-4cd2-b735-eefe217a5d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8bb4cc-9cc3-4568-be79-93a2349d5835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e174676-fec1-47c5-835b-98bd17046b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7ff110-88e8-4019-a4f6-178fda5185a5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fed9e23-225c-4d82-b286-73bfe2689b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62601e3c-ea92-4b96-92f2-2c0931269f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b45c06-0212-4dcc-9f1e-ad228da9bdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5895204-7952-4d95-9eba-2eed276ab9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b8f40d-8e6d-4f46-9b1d-51678142e698",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b97417b-7162-4fa3-a381-735114356c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a37a4b1-9579-454b-8c5e-ce30d3bee8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896c32ec-804d-4de9-99c4-a922f494cbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "660fe6e9-9361-4194-855a-63b1f51a240c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f838f4-bb54-4d84-b22e-936f27edad56",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7e7ee5-20d7-4242-ba1e-e45a7a0b7685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646a69f5-1e07-491d-ab93-35f1505c2163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9779705d-9dad-4abd-8883-394c580889c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cefcf3d-fee5-43c9-8d50-37e08fbdae20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367f07ed-19b6-44a9-8f7f-7a8725f2fb3a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431a4c5b-de0b-496f-b3a5-d6a5d0e343a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e4a01a-a82d-4d7d-b5be-66c6d4860514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d567bfe0-e2be-4b8e-aa76-92bae9fe00d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb20f0b-dba2-4ffe-bccc-68d6368043a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407c5e75-3bcb-454d-9ccf-536c67139e28",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0940ee3c-43d0-41e1-9ec7-14c2095dda3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56da9bd1-5539-4e07-a984-7c13a6128137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d8fd02-4c0b-40cd-a051-4c435971d4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5fff9a0b-7a74-4708-84a8-5e2dddec8228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc7361d-8a22-47d8-8848-ceab4ff0bda1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc02af1-333d-4295-9713-a51408e93968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc17495-927d-4a58-a581-0b009d466f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3515b27-5421-4358-9941-c6c749e2c0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5542acb9-a75b-4854-8dfe-ca0092de30a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5341d119-7f5b-42e0-8715-ed70d01c2e4c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6681d3db-dd7f-48b2-b5e6-50df8a2f889a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fddea0c5-0b3e-44ab-b86f-a625a2650a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7685b7-e8bb-43c6-905e-e10e627daeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee73356b-02ad-4821-84ae-ad927618c58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbb9f98-7b9e-4fc1-8742-e074b29dbf89",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821b3f15-cc89-4bb7-aba1-13f77f627aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7cea91-1bc6-476e-85ba-c7de3c175c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a4b357-5129-4738-a1be-f269e8a4c352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce8f5a5-a72b-43d1-8406-165bf7ddf83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc31e69-55f3-47f0-a528-93ffb5fcde0b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d473e9d-e50e-4b3d-b2d2-fe0575bac55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709cf457-b97e-40c5-a621-20770447ae32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6d873d-6ece-4e59-82c3-2b0da72f3ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b813e5-15c2-4a3d-8cac-b90bfcb9aca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e204f7a4-242c-47be-aafc-b730f5f52d2c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82e456b-6d86-43ca-8d2e-7e912a9e2332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5d69ef-677e-4606-9a1e-50ff9b0963b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d535d2-f21f-47df-b052-313bbde6fd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9486fdc2-40e5-46cc-bcd2-dfef21647183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643a2ea4-f860-4fc1-aa95-fb7b4c951e03",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df215d75-6680-4a74-9d9b-652049d1bb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1dd498-cc97-47d2-b358-84385fcc2219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbc075d-b6ba-41da-98db-5dd8fc189167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0399e905-8ece-4aaf-a6bb-788c8ff0448e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b171ed-32e5-40c3-a4ad-66c60f45ebbc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a9c568-e287-4168-bfe3-182feb0e697b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b620786b-b366-4889-aa1a-e2cc19159165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18623aaf-48bf-46bc-b55d-4cf8c463a182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e95fc497-b68e-4899-93af-37842fbe1937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54a8b77-360a-45c2-98db-3cc90ac31da9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe9c66e-a539-4326-b9ae-71184e77e479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4d0bf4-508c-4139-8c1e-daaff66e10ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c36042-b2d7-46cd-868c-5a5c8ffb1265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b136a06-a908-4235-bc3b-b5eeb275ec70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467fb018-85e1-4f95-85fc-9e1f1974f411",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4f5c4b-13a8-4e8e-8d05-84f52f721e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec664845-0940-46ef-aea6-db7db6c5e466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51456ba-f726-4912-9d0a-9e200f93b554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d40dbdfe-d6f4-434e-93ee-368ece2d20bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d166d56-442f-4e82-bf61-19668b9616e3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e272ff1d-ade6-453f-9059-7d27ed2266cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75f5015-3215-44c0-a785-a4e83c6f653f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b26dc1-1f90-4e6c-a0e5-b144e70f11b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6d5e7e-e781-469f-8775-a17a38055467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f6b2d3-3b01-4bb7-8a69-7e483b3e1359",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded07d07-86ca-4965-a465-f6e0270cb425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7aeb40-0664-4c13-879e-d27de219bc78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6536a591-d4b2-4cc4-a816-ec924517177b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f126ca-2f80-4048-96cd-ba798c7898ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ec62ba-6ea1-4a20-94b3-5f2d9a897b8f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997b6628-ebc0-4eaa-b2cf-0fbbac1716cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b90c402-cdda-479e-9542-18ed617fb218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c58643-bbb8-410f-a8af-c055ed5b37b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f35b3ba3-43cb-492c-bbdd-7e149777dca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a30349-f431-4946-a992-e0d805f68fd5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00844d8-b2b8-4b0c-9707-75390102bf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b9783a-81c8-4a06-b523-c3eb353753a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0630349c-b111-4529-bb9d-e912552b89e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d363dce8-631a-409f-8026-7483ff8fabfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab6745f-a934-479d-8b24-6ca487d0d506",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2c426e-d46d-4851-91b2-0a5ec105fe76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19b988f-02a6-4a38-86ba-82c2ce7ceef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9ab23b-36ee-484d-a591-3fe8be3c2b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e105b875-02a5-44a3-b2ba-7414f437327e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce99b5ca-a2a9-46a3-b5ba-f508289d21a0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28c09c7-d482-4a60-8e9b-275f512d7d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714a1917-5cc3-4c99-ac38-a80ca9f15124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f80e30-0ba7-4573-88fd-9c274fb82fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac57857-9c48-40df-8065-f64238990c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3df0a7-9528-4ca7-949a-3a1a508aabf9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1e6baa-c9bf-4807-92a3-44fe69a18967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3907c4d9-329e-4020-a33e-29104a87c2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58157922-f0e8-4350-8a26-1c4f175a4562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "238ad504-25b8-4c3a-b5e1-b42b0334eadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62251414-0c7b-42ae-9aa7-76e5abed22b8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665ec02d-4a6b-44e5-863a-5b87692f4854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851a19bd-fb7f-4012-8ce3-3f61dd92ff75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f493d5b-e335-4a7c-925d-81b61efdef7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "131d5d58-1faf-4785-97a0-a95606829637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acbcf96-0181-4ded-883a-051fa97d57be",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6639e496-4801-4191-92f1-4d31ccd1724c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b728fb9-20a1-4a76-890a-44635df979af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3491de07-d94d-4bf0-ba50-d0efd5833dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10a95540-44f7-4629-82a1-8424955282c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c824576-e789-4218-a7c9-527beea10034",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f89a56-2ace-4d77-b7b4-fa54515630af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c81d563-3a70-4c35-aa03-5d8df79fe66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08e9a67-6c4d-495f-835a-15c22d7e8c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e34e5369-9c38-484d-92bf-b2a02bd4b900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8202c83e-887f-403e-9da0-3c2be9231615",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a50fce-4305-4c19-875e-1f478c474309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3814b5a-dc7a-4b20-b13e-3eccba107f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2f794d-1899-431a-af73-e5f6e0d54fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f179df05-9f86-423b-9163-bb1e6e6dcada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33daee2f-9f73-4b8d-9e86-a54e9d22a58a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff5c263-c9a8-42d9-b519-7919059cb5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636f1f6e-b770-4f95-bb50-1c1e4aa9321e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1165c49-4fd5-4b76-9c22-0b334348994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a086786-1260-4138-b127-7a00eacde4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b5a857-05bc-4c6b-bc47-f577203faeac",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63532d0b-a5d2-4940-af02-43f4bf910922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c771a5-3fd0-4f46-b488-09fca1738da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99335a94-18c0-4c4f-85de-900520d147e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e972b3-1e73-4555-b48e-1ff998972c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00aab810-a194-47ef-ab94-04051d035608",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53867304-b380-4ee5-bbd6-f1660a97f97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f8926b-ff97-4fc6-96f8-18430cd4fc67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4063d693-a75c-42e7-86b9-29a7d2116f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "80e8babf-6193-48f0-b8e5-51011783f480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5967575f-6d05-414d-9841-ebc61b83a3a4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158688a1-6953-414f-a916-756ff2584f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e291be96-5e10-4d74-a7e4-e3bb591b45a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c321c7-da2f-4a11-94d4-53f3e40d95c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f12974d-59e0-418c-afff-d91a78e2ab4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9721826-9d6c-472a-a2f6-0caeb6bff9e0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31b25c5-f30d-429a-ad48-5a5a0e3a5095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dc9d4914-b924-4e81-82e1-66f71bb90462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e3fcc4-9fdc-4ee3-baba-151bc165e6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0f827a-4917-4302-809a-6fac74d334f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29b6423a-b76a-4644-87a0-2479289193b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ed849a2-fff5-4e2c-9d4f-e43e69bd978b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4606afe7-cbbc-46b2-ac87-9a20cc311ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19381655-0d7e-4ba2-87ab-23ea9ea303a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4632d764-0e5c-4e3a-ae36-9899447bce43",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40c7b85a-6ec6-4f5f-9278-ca08701062d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3af1b7f8-a267-48c5-b265-43dc5114606f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c01800f7-c935-4cb5-9fdb-f5b49d23b452"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c243899-2102-42fa-a45f-64783712f0a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78caa183-2ab3-4e08-83c2-f67a996306f4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1339d3ce-dc31-44c8-8031-619d11493227",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff6de637-6996-4f10-88bd-55fadfc26d63"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48be4861-78d5-403e-a462-39da65944836",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a6271d2-798d-4f3a-b77a-b72496040134"
                }
              }
            ]
          },
          {
            "id": "f18b6651-c5f3-439f-bfd9-7e9d8f354650",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f66ffe7c-6769-4dcb-a977-60664cd9231d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5720604c-afaa-4e63-bfca-ccb0bc279a7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a53315c-dfe2-4c3d-bd3b-81a71d8564a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e2d276d-f40d-4b7c-9c6a-dcddc78fbf9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0996fef4-5509-4d7e-a3ca-028862e2e33d"
                    }
                  }
                ]
              },
              {
                "id": "feb34a77-5552-48f0-a501-10aa82e33509",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0de49d9-d425-4c82-9dfd-7d41546d2be4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b39f63ac-60df-4dde-be08-84ebe689eddb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4fd41cd-6a35-4b4c-bcac-9bb2e4c0113c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77ba6027-8a2c-4938-ab5f-51c103511604"
                    }
                  }
                ]
              },
              {
                "id": "0aaddb9e-d471-4969-a172-780ae7fac21e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78f60ca3-bbbf-42eb-a01d-049b7f968e90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1c505c5-8b55-45f0-942c-fb5d6aad4cf0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6d7364e-1bd4-409c-aacb-800d650802e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3e15c7b-727a-4c22-a6df-0b442119445e"
                    }
                  }
                ]
              },
              {
                "id": "94538cb7-2039-4096-b1ba-b0ba78b6ef95",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eb60a0d-d798-4159-b912-d5ae1b085608",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "183064f1-73f3-45e5-aeb9-5bed3a566c40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38eb3067-4fde-4ead-a65b-7573dd8ac3ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "69abc73b-64bc-4910-b983-4f111ae0b85a"
                    }
                  }
                ]
              },
              {
                "id": "3021e83d-b287-43be-9c3b-ba0e20579d72",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0291b2d1-72ba-4929-ada6-339ad31e2fd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b48f3e9e-d85e-423b-8ff8-3e06d7a305a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71f15145-8a4c-46e3-a56e-e1a43a5ef515",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2103a59f-605e-4f4e-8db6-96ec3501966f"
                    }
                  }
                ]
              },
              {
                "id": "523602cb-6b82-40be-91fb-25795a5eddd1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96f48fea-c3ea-447d-97ad-0ef870ed436a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6d63ddf-c528-4a88-ac12-6d23331ef842"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c4c23b1-5684-4df9-a124-f7fb95e8b071",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d436cb84-f591-4599-8fa4-eed412ffd451"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f5649c9-cd6a-42a7-b6aa-d27fc9767e2a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a844e75a-c674-439f-96a2-8cc3a1c00305"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5e30216a-1f4d-4c4f-ab07-84b23822a2f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9642e51-1668-4c18-9e2f-0d331d52191f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1fefb53-f8ef-4dc1-8e2b-d7bbf3470dfe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e1d3d2f7-06ae-47b7-adff-070018ca2116"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07edbb0d-3173-4ec7-bfc6-b13224e6dcac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b14052d-f635-4b77-8fab-9012986c79d4"
            }
          }
        ]
      },
      {
        "id": "eea0cb55-9632-49ab-b94b-309fa34b186d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "31ed494a-3fdb-43b9-bb8b-b6f1cbfcac70",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd1f7743-25c9-482a-a3ab-422f75136533",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "963cf504-5970-4af7-9e82-5e9d3020a518",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00aeace3-306a-4836-b78e-bc83db42423a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a49e98c-7a16-4891-adf5-7cdb84df8933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e123c0-80f9-4802-825f-bdde8aefa714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "49a7b7fc-66b8-4c64-9173-6e696d40d889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bbbdf9-c9c3-4819-9a7d-3646dac40717",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814e1a16-9e3c-484e-808b-c7df185e3a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4afe43-3416-4bfa-a86a-28eb4fdd9660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1a385e-2b8b-49d1-b5bd-233a2667408e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b512bfc5-464d-4722-9df8-17b709c1e1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d9944e-ccae-449e-9317-9acb7c9b86d3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311d2e3a-b56e-42b2-9bee-3e095e7329d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ef5780-ad82-4491-9fbe-641e9fa2a305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a78bd85-421f-4d71-8220-52f4e6d57727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "567f84d3-21d5-40b9-ba47-9b05b5f0203d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0666cc9-2d40-473b-835a-bca4effc3821",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95a64b6-5c6a-448e-87da-ddb86b8899af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbfad2b-5327-4ac5-9ebb-de9a70a70ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157b7e92-80dd-48f2-8f30-099bcf7c261b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d78981e9-35ab-4f8e-88c6-22d4ba5bec3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43240be5-31e9-4d0e-9061-3d0959a1b259",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c50cc6-8184-409c-8b88-4bfd130c43bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15faa005-79a0-438a-85fe-7e9cbf51bd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a77327-159e-4a8f-bd4b-c0c1ace83962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1c63c0-8456-4eab-9f2e-93a416260b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec5031e-2fd6-4578-a717-f6e9ac148521",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e11f55-c4e7-4312-a87d-ca7c7ddcdec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0de8df-bc73-4ae7-aac3-add255ce21d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc2bb03-b479-428d-83f6-a9042ba09195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac64950-785f-4f02-84f7-786c19c0d24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fb9a3c-f2dd-436a-84f1-45e4871c9b9e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff088ef-b256-4552-9f19-29428b33a1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e54336-8df5-467f-acbd-b6ca17bcf7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc62354a-c8a4-4039-8e06-14ff76e40094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "794f4334-c9b0-4874-a1cc-f659be58de93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac42c2f9-1990-413f-8ef3-8c0773ac11a2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92033fa4-7880-48ba-a245-8031e891e2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e099da59-2f6e-468b-9561-5fac6fe30284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6feee109-2396-4910-934c-bb7f140788bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de123f36-858e-4047-8d43-91dcbe6066a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aeb6e36-88c5-44a9-8f86-03d006653338",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe50e72d-1094-4ec4-9283-462ee1414b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75a7090-3c2c-4c7b-81a7-a80121cd48d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d7a493-67a3-4aef-8dc8-330356ca40ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fbc2961-f97c-4183-b6e4-8a47791fc5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cad956-edeb-498c-9510-dd41d0454e6a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0002519f-47de-4b39-a77a-6eb903bbf826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53a4212-ad67-46fe-928e-52c89c34c98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc6d0e8-8bcf-4e7f-b4fe-de0eaea61d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69e758ff-61b2-450e-bf0e-981a9003a66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b79ca0-08b4-43e6-9f60-3d0e504c9484",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab43a19-d9ca-485e-ac90-48dc9967ae3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bb9151-f72d-4b93-bb65-43d8bf9eda59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec20a47-9e0e-4f21-ac46-93a24e4f2d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "36af258b-c0c4-45de-89de-b5f2d5f13e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc259dd6-6e47-4309-a640-21e6f5524288",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea9ea0d-b017-48ee-b2f6-6828b72842c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77cd257f-f336-4506-b7f4-9d9d350f395c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b239c79-e347-46ff-9da5-31d6db46b3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d74b54-f13f-49d5-a9e5-23f56c25fc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e1bf43-9edb-4cb6-827d-37a744231132",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42916be-c436-4978-bea5-ad35d21d8096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6194e65e-57f0-409d-9341-a02fdc1e1a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b36b638-ae9f-45c7-96dc-2c3e9256ff0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b12e0d13-bd21-46bc-b669-3f55125fa359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1584727-661b-406c-8d79-ea2213d40f63",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f10eb6-b5a6-407f-8a26-5d218de804aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c7a7fa-0228-4ec4-9430-23aa8cd345c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c379c3-c934-43ae-8789-f029d6d067fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a58a41d-0e5c-48d4-836f-34bbc64e6083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1f27a3-d3df-46a1-a826-d8377ff28f2e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8326ee56-c86d-43ec-b500-883ea2bcef14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd66427-ef17-47ee-b417-70a5b186e4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbef92d-43f1-4a05-b80d-8bd4bf678357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4633c69-6f03-434a-8507-7f9229f5b9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e269afc0-c75e-445a-9980-aa42bb5b06fa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e636aa1-d418-41c1-935a-2fa134bb573e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3eec5c-2366-4a89-962c-dcba9785d3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff4462d-a14b-4f97-9542-104b933a3fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4359c9d-c2e3-4e15-8d20-f344ea6c8563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bf915e-98e7-40e7-9a47-eb43e27b098d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d8189a-0a89-4440-8e59-af1ad56634bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895542b9-971f-498a-b8ed-3ea1c24d11c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03380b30-3e6c-40c9-b618-71c837c92466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ef32e8-cd3c-435f-8274-8c2ac9b3cb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00cc128-44d4-4385-ae36-c2bf998368f7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dba5c74-9323-4cf3-84a4-b4ff34dfa5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbbded1-e752-49c5-abc1-2c5bec1464e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c276bfc-9e01-49c0-9a10-b14ce07f0574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d97f31-faf5-4888-a9ae-f131f68db7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60a4ff5-16ea-4e2e-9e00-8c2da488cda2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a2523d-4024-44eb-9e82-d6aa18dfc305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a44937-c763-43ea-859f-57ae1c390fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4acbd44-7f9e-4778-9a5d-69509068fd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc4c327-ab9d-4176-b2b5-6016fe7d9ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51216b74-7ba7-475b-a358-fad9b8d041fe",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0065fb2-fee6-4e5e-82c3-5071dab01040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82771bf1-3dc3-42b2-96c3-f2a85b55904d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24aad19b-84b3-4346-a462-cce8a914249c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86c31f6e-64af-4f02-b485-ab12e1365a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be33ae27-a652-44b6-a42b-bccc1d830278",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d1ee31-f8ca-4764-8d93-91993955baac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5deb1b28-a91c-42b3-b1a7-621232ca2154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7265b912-a1aa-4aca-8d3a-3b0364a6c750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8440e36d-6348-4db0-b96f-21ebd28dad35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb3488f-b188-47d4-aef5-1f848abb0827",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c2ef63-f8cd-46a5-9af7-22f695d3fd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8ed63e-89d3-4f1f-8e1b-fbeaa075fd64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d70fc1-4b84-437f-bac0-12aa7900ed82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf7d7d1-7981-47b8-871f-3179a427d749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89d0b34-43c2-4d35-8a7c-032c1a23e79d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "015274e7-d7a3-4c2e-9f57-46e7a6ffca3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18168669-b133-4934-b994-297a13cddd19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68de34bb-2408-4e76-bfc6-b750032c0587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bfb150-4028-417e-9912-94633102c331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753c6e96-cad9-449b-be85-e5868e7f0e17",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d558bd8c-ba9d-42ca-a836-3fdb69753643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca238b60-18e0-494c-99c4-dfbd237c20fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73202c69-dcba-4370-87a1-2f8bb162f329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6eec10b-a282-469c-8ce5-1f6cb14677c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa91ad98-0391-40a7-87ad-d2acbf601edf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92613b8-5339-47d6-86c7-3572a1617c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca800340-f514-4ce6-a0d6-8e2359b07699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d5e85e-44e6-496d-a965-506375282a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa1abfc-7e4d-4687-93d0-70292379e202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4b83df-6638-4832-99f7-0c4d256ce3e9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a879be-ee13-46c4-a87a-7396f1ce3b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe1c1b9-fb65-477c-9754-996042388fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15d817f-fbd9-4afe-aecb-5d47087f9d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d31fb9b-f913-4417-8a4d-4578ffe07bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3265b09-4529-437f-a10f-cfebe728647e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b150b0c-a561-43e9-bd7c-441de348c0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732149ef-5287-415e-809a-ec5799122af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c189c6da-e1f8-4043-97ae-deac7b5737b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0f5b93-e2a1-4658-b0a3-0d144a335790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf604df-12dd-46d0-8c19-e2863b1bc882",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74143fca-d3c9-4b3b-bcd5-37a7f6f51956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842f29b6-1143-4d07-9766-bf3136009796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d87993-4da9-452a-b3ac-eaee82d24387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5f1338-17e6-49e7-babe-2f734f089b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3f1eb2-003d-4ce1-a212-de7fe92fa309",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b89a9eb-4fe1-4bfc-a522-9f4c6049a928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a05be06-19a1-48b2-99ad-5346d187bd57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0a2fe1-3bc2-4b2f-80de-1b6afa15fffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b201c33-a710-4284-a393-4e8b1e1c4a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07823ea8-d026-44b2-9467-09ce51fd46f2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f87fa5-ea4a-4702-ae16-3555eed26f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039fb70b-e498-4a69-8b79-7c52952d27c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b3ae53-cf08-46c9-b8bb-4e94c77e01c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a78ac962-6361-4a58-ba09-abc635af87fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39162f9-38c4-44cb-b5ae-9f74ac8b4a91",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2b0fcf-9c79-4248-a256-ef9f3ef32b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f8af09-a139-4aaa-86eb-ee8ba434d175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7ebb85-7b5c-4889-be23-c3cbfbb925b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d44f53b3-cb12-4f62-8c5b-8593b1347591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be47e6d4-7e19-4a6f-9e80-ae9290e2b8a1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ded475c-3a42-4e55-b899-8b73fadfc68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbd99e71-9709-4435-8ddc-3388f0a6ae03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f49b55-3828-46cf-b57f-2489dcfb12f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0933ed3-c7db-4746-bd8d-03823f16931e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f79ebbfc-3d18-4e8c-b207-25defd04497c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3b4750c-99df-400a-a05d-ec88d89483c9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64df499d-fea3-4796-b7e5-655ff529fd07",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "44c19088-7e1f-4ccd-bb33-7dd7cc684d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dd0ede-db90-4674-9b82-5429eb9d7536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d44a8f12-6e0b-4366-a990-2535eda42377"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28a49503-63ef-45e7-a1a2-229ecf7bc4e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "928890f8-cd21-46b0-98d0-5b3d6a68f9af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33affa17-eb7b-46ef-b3b2-e13857ccac56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbf227df-8ab6-4e9a-865a-8f2ef2b6ad5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d921533d-74e0-4492-81f7-827f03835246",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4d80d5ec-9c32-43ef-87dc-d5936f20b39a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ea63ae9-6964-4820-94b4-610dd7064cc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa22b34a-d304-4a55-a091-275fe2e16d30"
            }
          }
        ]
      },
      {
        "id": "b0fa9b9a-75fa-4231-9183-47f876835896",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f90e2c60-2565-4547-9e7a-780fa9402ce9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "421ca24e-f2c3-4341-8fcd-1beec93fa3b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "91b1db37-f4b3-4600-9f79-38b0b0b95ee5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bb018e-80fe-4d28-8182-385ff5f95f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078d1b79-6802-470a-85eb-beabff4d4c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef98e699-5d20-4dcf-b158-9bcbae632c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "81878cbb-7b67-4a86-ac45-96732e682d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9ccea9-fbb4-4665-a02f-51598fe5fe8d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa355b4-44ad-4882-94d5-2085b166e99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b24b7a2-21d4-4b32-8f30-b2b552b7a7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9dec2a-ae46-4768-9271-9954e95815cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a642bc0-7b9b-4b80-97a9-f9a21d6ff368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c1e33e-5954-4bc8-a363-57a73910915c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dc5bc8-9905-4ae1-95fe-0e28697763f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34f52c9-90ca-4b1b-bd90-5271e13821f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e67ee18-f425-4b2a-bd74-25a0c07c2017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a26f26d0-5016-4241-aa6e-7affd8482efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78762fff-c478-47fb-9235-c1db900064c1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e91ba2-520a-4bef-9a28-3a3eaf8acab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666e4fa0-7cd9-42dd-8f75-3e187a8e14dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166af38e-66ce-41d7-a8b0-2b34abb2206f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3dd65a5-a95f-4b40-bcf8-0d4e04f08a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb660f34-9a90-4f09-977c-b2cff33bfd55",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e657fced-8eae-4446-b1b0-a006ebdf93b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9ba157-15e2-495e-a0de-3f079cfc6a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa877f1a-4960-4a2c-9f43-6057933d7ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f140c5-c943-4bd4-91bf-20b954b996ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f28100-2ce2-49f6-96cd-46406af2af0c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50372cf-1a0b-4c48-a0b7-d7afeb0a0b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7bf13a6-41c8-4cf1-b9eb-0cd8dcda32ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b84e1d4-8047-468d-955c-7fe3222377d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c598a7fd-f22c-4da8-8b36-d79c28dbe385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad3f64f-c992-472b-9a61-5ec555e67531",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5978e4f-4bf4-4eb3-b06e-fa9025573579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d8c244-635f-4323-ab1e-6e145d3a2710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659f28d3-65f4-4461-a86c-b7fcac2652d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f08bdd2-ebf4-4bd0-a56b-bf7a9bc14953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a90e44-f8a7-49ea-9e07-5d16536ab993",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb2eb86-abaf-4ca0-bc72-844b15f35502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccabf80b-ee4b-4434-8c46-ff59d1e730f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543b9ee1-f678-42e4-aa8f-9e95ecd0e291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b072aa7-736b-4d64-b4f4-a678da9ea742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1eade80-31de-49e4-a038-1eb47b420e2f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44eb54c1-72c4-402a-afed-44ab0f67a81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f338979e-2b73-475e-9fc0-2c7d48d7464b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981d82fb-f617-4cf5-8a51-0461f69025bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7e1df3-2466-41f5-b254-3f8a76ee759b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee7811d-6f24-46e8-8149-d88e326d85be",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f53e57-4f42-4181-bb14-609ced9a1661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d0186f-674b-4977-a933-e291f7922d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c291e233-7601-4ae3-8c76-df7348c3e8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6919339a-de1c-4f5d-a7f7-e412f0ec12f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56fdc74-c381-4246-aabc-bc847d20aafd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17355b6-2c11-427e-8eae-8180c862608c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc31678c-a414-450c-811a-2a0d25195f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0bbfe4-8104-4ed3-894b-c3ff72c4b4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "02aaf521-2f7b-4546-9a1f-39f8beb3a4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d641c0fc-443e-425b-8072-e6c92cdd21f4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59de8883-b05e-42de-a974-e0bd00612075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8395eabf-8d99-452d-9d43-7b2016565834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12a2551-06cf-4969-a6c5-915bc0017af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5363f8a6-7a1e-421a-87d6-1d62a52501b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c52636b-27e2-433e-9b60-e09a06efad05",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81eda6a-4b24-4964-9dfe-f36d43631feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761e0d9a-0908-422a-994c-c1274996faf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8959aad6-265b-413a-845e-491a577bcc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b121d4-ae45-474c-9338-61a80e7a79f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c549b6-7ce4-434a-b6c4-8917424357b8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b68ed5-637c-4854-b759-11843a23e3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e9a8aa-a208-43d0-90fc-a1a87d8cd9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70224f4-239a-44d9-af4f-682abda34373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "49474963-017d-4851-a5a6-df2cb2a763b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43472813-a315-4763-9a38-d09ac2c8a8e4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec707330-24db-4231-a699-75ae72dec841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77aaaf0d-f87a-4b63-b4e5-897c17a972a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d765b4b3-b51f-4b6c-acd9-4ee6aa524677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "17907629-e639-4bed-b924-49be396966ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce829d0-06f1-47da-9b6d-36ebbd5f57e7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac7d354-a23c-4ea3-ba18-aa7fa21fd2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8fca9e-2d80-4316-9b91-6636ddb6ed5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6506af-0bfe-4dd1-a1be-554122824bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc922d5-8f12-4a3c-b163-4ced9298789a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be27d7b-403d-4f17-a0ef-045a4692f2c5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a28db4-6cf8-45b4-a776-c20ce0e2c77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6993049b-35dd-464c-9a4e-2a6428f63a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274747f5-a55c-475e-a433-7e8dc0de3370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "87cfd69d-0df6-4ede-a4d7-ffaffc2190fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b88db5-679c-4ee0-9c83-1558e4d0dfa4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed6388b-dc11-4ecc-a83c-55f0a21206df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af73fb2-5128-44de-ada7-c39938a46987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e000534-0b25-4290-b110-0b37b6eaf88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3834e9c-3e24-497e-800e-ad7f45bcdc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4806158-5a4a-49b3-b7ee-ff737cb72232",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef43e48f-982b-4d68-a67c-bb05b1f85a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b60e9f-72d2-4aad-9203-acd55d94a495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328bb242-f5f2-49d2-a353-a79f82010010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e20d44da-39aa-499e-bd9d-0dc460e07b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9f0c62-32a8-4700-976a-7cebc84c9afd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0379ba-1f1e-4e41-8566-b3354013f49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6d514f-bac3-418b-a987-7c72a05c9b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e3e6a2-a471-4a0c-8bba-285c19a0b16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "752cb12d-a8ea-44f8-b4d3-3be76a3113c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1f8628-fece-4fc8-a977-471c78bdad19",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e565d04-47d0-4fa5-b27c-33e2c729d555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166b6c8f-cd96-4cc3-bdbf-3b1996a27ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a7d571-5dd9-4a00-9e8f-f1ed43600638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebdde0f-046c-4774-9a67-06d8c5d1f8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db40e61-3cef-4712-a4ff-0c0aaedc8ff3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a37895-695a-4267-a4f1-65c6013fe38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a28e8ef-cfec-4d5f-a272-c4e83869065c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07187d3-358d-49bd-a1b4-cbecf21333ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7d55905-b334-4e21-914e-c6c9f4b79644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063c08c9-3e48-40b0-87c5-905059d992d2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576eee99-71b1-4aaf-837f-92a70d005e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54cbb3d1-f8d4-4e5b-8368-e428e5360b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5287e00-71ef-4ea4-a5cc-be6d86163c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09e8b65c-ee03-4265-a6d6-7884a8049d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194811dd-7335-4d0d-8a21-a861cf5daefd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fb2983-c969-4072-bdf5-c8ba9f43c06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01ccf97-39bb-444c-b811-5cd17690de1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc472ea3-b977-4e8a-b6f1-eed61405c838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eea142cc-5a31-48c0-80ab-e9725872e186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbdb638-0615-467a-8326-d86f7de0e6b2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71b2be7-756c-48b4-9158-dea0143cb66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530d250e-3975-4c62-9c56-f179dd3f9bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cebaee6-f8a5-4f49-a7e9-035168ad1bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11e99f58-95f5-46df-8a1b-acadf9fad8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414f6dce-c8b7-48d7-a0d8-0082bb3c5198",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd09038-a2ef-4b7f-97db-7d07abf83cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201fb292-c265-417f-8b1b-6fe967769d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed6da6b-a09f-4cf8-ac83-1d993e2f702b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9845871b-d386-4c43-bb88-97cad049d41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae151c1-b16d-49b9-a074-4f27eb8282cc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81e026a-2d50-4485-90ee-f26311f9605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49abf3a4-31d0-431c-9411-96f67bc9237d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001c8fd8-fac1-4b9e-8bc5-420e6e50068b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65784225-c5c2-4ba1-9d9c-f3e1381814e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677b6519-ffb5-4b48-a3e2-aa928d2a8290",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914ad1eb-7298-48a6-8138-827ff55557b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d449ab-827b-4460-8cf2-c4a2198feb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33cf97b-0189-4e3a-88ee-6d4f7f0ee71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e313a10-0449-4e01-8682-b2cefb62163b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0400f422-c411-48e1-b58f-08be89480a06",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1107226-418d-4aa3-a3cb-708888b9f98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a25ed1-7d17-461e-8897-613d04b771d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1739bb8-0de0-4dfe-a70b-bae4c0d58bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01ded8ff-ce4b-4dfe-9149-4ca976c38c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3a62a3-fc4b-4e9f-bd05-b2cce20990da",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6200fba-b752-4d36-9da4-6e527d20bf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a437ce-81d8-4ee8-8e87-a40a64de8124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf4ed80-334f-4430-8087-84be7d3d55cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "808d6917-f7e5-44b4-912b-36d7fd753f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589016f3-47f1-4ed0-a49d-95fe7d3fcdfc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463190ee-8ff5-4da7-b920-73c9dfaee872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f4fbbb-20cc-461d-9785-0e4fd28da633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd9662d-c95a-4166-a8b6-7409831f4c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7984ab7-a7e3-49bd-bb95-70ba29cc5499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3dbbba-d35b-4c7b-b7f7-c5857e81b0de",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b55b77-5229-473a-b5a1-c7534de4c896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58f0a91-b3ba-4ea0-949a-acbadc6f661f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbbc328-d6d0-48e7-b9c9-7a68e6e56e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7aa44d8-3008-4868-81b5-fcb5ef0eedff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586ebab2-f554-4650-af66-4c5eea7b95fb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abc35e8-6791-45df-86c1-27ce4ff52145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c83514-554c-4611-b113-a6401ced6983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648a20de-8566-4b16-a818-4893514ac199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da0e2c9c-ac79-4f7d-8204-29414ca660a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9384fe-5bd1-4ea9-8b48-f473adb6b737",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98493faa-bcaf-4af5-ae6b-cea595225ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f29bafd-6a86-4555-bbec-74f748ab34aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e6bf52-c1e8-4691-a186-7a72a8ca359a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "034aa9b2-5ef7-4623-9fcf-efdc30230793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9b5d64-e3bc-49f3-ba1e-e4d2f5a0638a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b70633c-ab19-440a-a32d-f426122ee075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c10918-14dd-4107-866f-f431a514e4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97ebd9e-511c-47c9-8b06-7c622d64e74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d065c3a0-414a-4187-8258-e642ea122c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35e902e-1ca3-4602-8efd-5e93f3555676",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba671a4d-796a-473f-913b-eb7eb67fd119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f19735b-c0d9-4274-8b17-cb762bad9470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46ad5be-0e19-4bd5-8a0c-3c950ff6fb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a80546d6-b83b-4ad4-8fee-89df9b3baef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a0b914-cc4c-4bb8-97c6-2cf1cbf42374",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2513ece9-a89f-41c3-a868-36040e85e79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d16f8b7-4390-423a-bddf-6cb639e47ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ea3dcc-c4d2-44e5-b1b4-f027e7101867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5454a6b-3627-4286-a31e-b202654211b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "612a4467-f87e-4d09-be80-d42f7651b69c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d16f5af8-00cd-4cfd-9668-6b0202e8f09b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456f7d2f-0d87-4e91-b073-e27e71ba9ffe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "91e6564f-61ee-4209-b7f6-585e06c0508a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2d74b7-5541-425c-8aff-fc65b36b207e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28a708d7-c08c-4e1e-93ed-5f872bd93cfa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6794add9-07c5-406a-9b3a-434975c6bb49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d42a015f-03fc-4b37-b449-ae21cdd473d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73d02b8c-9c3c-46fe-9d30-f33e78fffe6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bff76479-f344-4f22-8c16-8444b926738f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61ddbab7-1ba5-4e4e-98a1-a248e92d4ec1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "186f9450-57f3-4238-a6a7-1df599441ead"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31b2a3db-8720-4cf3-96b1-db9c526f67a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d07da8b8-3389-4245-9bed-228fb2d4c6b3"
            }
          }
        ]
      },
      {
        "id": "faeab9b9-0617-4b44-a7ec-e713bd52df1e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5be0c483-2041-4dfa-8312-e0304f83fa7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99040d20-dd33-403b-a08c-30e03aa87c75",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9f089a8a-067c-4d67-90b3-a67d1cb886ee",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eddf970-3c1c-4186-8063-f647da9109a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2825b4e3-60a6-4fb6-86bc-75986d71641a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08264186-6d00-43cb-925a-a5ff92a06125",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85760106-da07-4b3a-b2f5-5ae8a7279867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ca092d-41a2-473f-98c8-66be9f942ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ec5648-4095-4a3f-b25f-f82ba5f0d647",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1f767a-f64c-46d4-a9fb-d07647707c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1047f0-7b45-457f-874b-39be08362896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d4c69b-6c28-486a-8e61-9ed69e942a51",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc91516-a127-4c1d-ba77-32d87f7ac133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01010669-5128-4afe-8cdd-d29c22622baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca95f7ca-838a-44eb-9a74-b368de0743ff",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9a76d0-ad00-45f0-be2b-21afdd93ac13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcaceec0-ab1c-4f25-b9a5-c7e3bfeadd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee779a5-7a41-4290-b628-a25110b525ed",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a496aa93-73d0-4f08-94aa-34ee8e193c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae3f44f-2144-464e-b34f-b9ac9d2e960c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af76697-01d4-47f7-84f1-f0770618ec37",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf89a5e6-a3cf-4e96-a4ba-1b8a0fcf0fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8d6c77-b4cf-4277-9512-84547a24d50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a14d095-8bc0-48ee-b8cb-12451556c10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca77cbe8-477f-4b41-9b91-dbc510abd0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a298bae3-f3a5-4e33-aa49-0fccdf96ec21",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b83e665-bb9b-4d48-aa45-b837a1882d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23840e8a-1130-4ef4-a43e-55033c544a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373bc21b-58ba-4a9c-ba46-ecb92041132b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec5b471-cd9a-47c2-b117-720c0ae696e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ed1598-e9be-4199-bc8a-1ce0280b717a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f284dec0-7dd4-4d69-b792-dcfd026ce91a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b975b889-c2e5-4e0f-b0b6-ba198c2cca27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f1198f-fc7d-4a66-8e21-1cee4dc8bbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7971fb8-f1fa-41b1-83a3-dede9d4855a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d775b615-c732-4e00-9b37-c7605aeb2245",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6801ebcd-a6af-4855-b587-50ab13b38535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26debc14-3fab-4baa-a71c-e222b489d04d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca38e8f-19cb-4866-8f71-5ca074fabd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409c8f09-d427-4907-bdc8-def91a13792e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0941fdf3-673f-43e3-9053-1bc849f46d7c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642450eb-22c9-4bf0-920b-c84df375623f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9040c94-7bd7-4576-8979-3ef601f4fe4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90fba9c-5d4d-4c25-a1ec-928bebe354b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3fd9b7c-b420-4ac1-9c18-f6daeb40ba31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66caabac-7c99-40d1-a13b-1be552a9bcce",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92d352c-e0d6-4d71-b3f7-1553c2e84d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68e2049-d100-42cc-8e78-6dd390aece4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19790bd-cc11-4aed-a4b2-e6d46ccfd588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f69221-4b0f-43bd-8dad-bf00e58a2b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb94fe1-b39d-496b-ac47-2a9291af541e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c6fa6b-69ab-4cec-b262-fd869f4a56c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e80756-8d8b-4cb5-9c6b-900ee3ae53f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71820fc-8abb-4ed7-8432-79078a28e8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ebca6b-3a87-4a2c-bb15-2b721d0870b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e0034c-9da3-4221-9322-685d83d44725",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db4b083-8b4a-4578-90cd-813e22d6ebad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b17a22e-2f51-4e5d-bae0-77b327cf6329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75db2ed-92e1-4459-b498-244aed977435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f74038-8659-4159-9150-c0d58674a40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b989af2c-25ed-4469-a78b-24362a274586",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c019dacb-d664-4580-bd5b-6ae96529bece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee32279e-b1ab-4c2f-a52b-f58a9493fb51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1445fa0-8880-4ec5-a8f1-5bbaa95ee19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a490ccce-da20-4dac-b358-f59479fea7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d18468-17d4-41e1-8bc5-229691a23028",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0848232-62c7-4732-bad3-37d65cc8239c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b9982a8-9e14-4a37-8770-241b30bdc989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77420da4-7414-4c76-98f0-bca5045c4e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e52c8fb-d866-490a-8a72-5e5c5405c0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fb36ae-f53f-488d-9be0-6a117756448a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d9a6bf-1987-47cb-a14a-9b49e336b30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80234e45-c0d7-4b7d-b5d1-01f717ca9e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912b5c8e-1a41-4940-b719-c246e46576a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90cbafd2-c9e3-42a4-b8c8-9240be527115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fa188c-bbf3-4d93-bf00-5ca6a7dd87dc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7ad689-8120-4814-95ab-2196c35d2eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48bee0ad-d3e4-4382-9512-c49df224cf50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025abe9f-49ea-4606-b259-d49353e0b9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83978018-094a-447f-bd29-3fd3b87c889a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff946d6-ba39-4cdb-ac0b-40c8e87b1449",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0d02b6-7972-40ac-939b-25692f961004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f3cd93-16a1-4f76-a6a1-ec934305dfb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6192f97-210b-40eb-87a1-cb2a4dc36999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5677aabb-4321-42fa-8b92-befbd8141ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e62382-1da1-4cc5-a1a0-908c486d100b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656143a3-a764-42b6-9794-c13703f3287f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a77d08e-1102-48fe-8390-fb1f1ff94683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2812dac4-e1ac-41e9-bda2-cfd6567b5b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26f6b67-e261-4c92-958e-516e6db2c675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8426da-380e-4aca-81bf-04db50bc74d1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a6c946-dca6-4742-9af7-d5be650fb00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d94d29-dac3-4ec9-a8b8-e18b8dc57ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e627f6f2-9f2d-4f2d-91cf-698c4c5d8935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a2e69b-d54d-48e2-84c5-7ebf765ffce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55674cf5-22af-4aa2-a522-e94674eb98e5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcf78f4-7981-411b-a161-b11659f22220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20898131-b422-404f-a421-75da11f49b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3cf7be-e7fa-452f-86ab-8498a3defca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128606c9-4d62-4129-901b-c20b85c7c6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee52b11-59b5-48a5-88a1-614ddd3e1ff8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41debe6f-8ac5-4280-8b7a-3494d48b537f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8edc5d-976b-4f0c-a605-eaafff8cbd68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4940b8e5-0e70-4c5f-b073-2d97098b5714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d078d33b-dffa-4f8f-aeac-ec5477173e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34617c90-25cb-4c5d-b307-2016aeeeb34d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66f8470-75dd-46f1-99b4-30b4cbf78f0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e73881-4f6e-4859-9b04-ca1d7041502c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f198ac-5074-4b47-923a-88902ce3bbb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb53081-bc4c-447f-8df3-1125bc7cee84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7dcffc7-7944-46f5-a8bb-c9f5b28dd165",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ab33f5-4fdc-4553-9257-7df328013cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0692951-703d-4f5c-9283-c1a01f930f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb927e09-098e-4881-a995-4d262da29171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166012c6-ea7f-4fa5-8200-37f7870d33ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091b1d09-4756-4657-a78d-32dd7497ff37",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159461f0-1f4a-447e-9f08-89d1405b2f4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cf04b7c-13f0-44ce-bf3e-57ca278fc8e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc4ab9f-39c1-48b2-a196-a11f688848a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7103c50b-3702-4715-9a82-5539781a9ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c781cc-fdff-4034-9508-ab7628013159",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ec78ac-cd15-47a6-9f19-6be5806b8ec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "680446d8-1c73-43cf-bf02-b5e8ec9c0f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3d5d6b-3e07-48cd-9c48-5e84956e50d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e66caac-1c5f-4a9a-92cd-bf6f0d2aaaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cae3e8c-16fb-4df3-93a3-7f866eb53e04",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30841508-ceea-41b0-9eb9-2e6e9003d27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6ce5cd-b202-4068-81d2-7f890c1b6d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87b0ea9-8345-4439-bfbc-1498aea1493e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4eb0e8-743a-4712-9726-26e0685f5ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f10344-b227-41f3-ab0d-4adcf346ccb3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8c3a66-0e96-45c8-8086-c5a58ba1a54a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "782d49f3-4b1c-47ed-86a2-69bd69e0a959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1895ced5-7f12-47c3-be01-cec6ff769b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fec37ec-1eeb-4794-a3ac-cf39b0f7a001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3681217a-1efc-426e-86b0-260a35493357",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e23c61-5ce3-4c4e-a5f7-dead4f3594fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb80dc96-eb08-4100-bc12-f87cb1d37f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d2d998-643e-4f1e-a523-5703474ad663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9dbc86-d6ee-4f65-b363-d7f1233101c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45391aa-dccd-45ac-be13-ede442dc36c5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65906f01-a02b-49ae-b1de-ef2afaa0c627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c3e1475-0a82-4a03-ab83-1f4bb6f1b14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04160736-fd0f-4e6a-97c4-16cc940d307d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7168a8d4-0d31-443c-9978-22b04daccd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c2e35e-883b-4c7b-a52e-6f4f3975c3a3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07905691-64b7-4b92-9361-4de9e683e360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "908c9aed-9b6d-4413-81f7-c3b91ea87712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881892d6-6909-4ca3-addd-fbe965b2ede8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65db14e6-1c0d-464e-a357-b4afaee6601e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ea8919-72d5-47c2-965f-ef7c48bbb80b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe0aa3e-72ab-4bbe-a839-509263a063ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f418ce29-aca1-4fdc-83b3-410fc18667c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc78f33-a2ea-47a9-8931-da9b2bc51789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec9b4f1-3797-481c-acf9-512efd6fd4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcae34f-cfe4-4300-aa32-e7dd99896860",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b27303-42b3-4abb-a5b0-84eb6b0163ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e946944-6cc4-4a77-927b-23df58c6d5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e040798-d603-44c2-9fbf-b9d317c46a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556ed131-cf67-4af1-98a7-e97b6f86ed05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a856528a-b032-4fb3-9aa9-d8fbb0099952",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754892cf-22b8-47d3-b139-beec1df8b2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0efd161-fe7f-41c9-a5fd-9f26e322f9ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45b8ff6-ac1b-4c50-9400-c6620206cf21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef971dab-868f-4c4e-9390-dba523619b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b7cb93-c36a-4c1f-bd14-d054ac5b15c8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26606d87-2119-4620-8d87-bbd127a99b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775ad043-0fd6-4db4-9353-abf786663d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9924fc3-0363-4da0-9057-cfc9d7a561c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf9fd33-6382-434b-b30c-314d3c4882d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7977fb06-4056-4003-8a02-ff6fac36789a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e27586-7699-4b5d-a87e-b3a376a42cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94fb10c-dcfb-4d55-aeae-32be63ee00b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d8a51a-2b6b-4c80-8d5e-9df364fe4d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce852d75-e74a-46a3-8fc6-2d820be8f4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a579ccc9-8cb1-4bf9-8273-698bb22ae53f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04b3336-0ac5-46e8-bb6e-e7839f5eee76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ae17b6-ca27-4c27-9dd8-8e9c9ade5735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9474579b-5a0c-4fa6-8895-63f7cecd9c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3eb292e-7185-4847-be3b-61940cce45f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b2ffcc-ad6f-4933-ba67-07e146b7210b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d864b3be-107e-4724-800d-df0046518e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f892a19-cd3e-4862-9b2d-57f6dbc7a98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256744d0-2903-4252-a1c4-711c8056d981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19720fa1-66bd-45e8-8a92-0d5387ea858a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96126ed-9e6e-4417-9227-ed6bdd0a27bd",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd789a35-7baa-4cec-9556-c332542a58ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293d3b11-003f-408c-bf3f-50f5e1d20c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e72d086-dff2-4aa8-b69d-9e599bc569c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803041b0-68e9-4e53-bc1b-38f4c38e913e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace2da15-1527-4cb7-b056-ca24e2804f8c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1975f116-fe95-46d8-a397-8be681df1ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684a5048-831f-4ef7-bdae-114278a90bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "662f66bc-3258-4307-9d52-3155f4859c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcea6b22-7d2a-4244-a8ad-12086f73dff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dad979b-c825-48c3-9cc4-535bea4ec656",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a2457e-efef-414b-bf5b-6246776be603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d54f54-701a-42fa-97c8-dd024f1fb6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7e800a-3ad8-4f32-b564-9f77129ac923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29946056-7ac6-46ed-a5ce-ff7b355ffeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecf7eac-4d70-4124-b121-30b4fbf8416c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5389555c-6360-480c-80f8-ec9f676743a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c8e96e-6a53-4cc0-8ae7-794aaac9dff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644c04b1-8a2e-4cb0-bd20-e4a71f0adb3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0547d3-a1f3-4f77-897d-5662faf35743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187776a1-0b2a-4abd-8c27-8a4b274d606a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abc3ea6-ef59-4f4e-9dd5-0aad440ab21b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ecffe0-1703-44bd-8894-e7b7f0a20b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f501077b-149f-40a2-9d04-12d6e74f27b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af59ab81-4b34-4c7e-a07d-6cca6df8d809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3c908a-58a4-4674-b5ed-3e1d3b467b2c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed565b68-c800-4e36-9f5e-b54ac51ed649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f74d47-738f-4f85-a38b-81e3f2b97755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa782943-22b8-41ac-b0bb-255061db4195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f918d60-66c8-48cf-bb82-dada2715b4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509c4fc0-94ff-45a3-a74d-6392cea42cac",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3d2975-72c9-4179-8462-99af2d40d0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380a7d5a-fcf9-4916-982c-583d5dfc9e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7398a59e-7b7e-440c-adb1-aeaf55b61a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75141b65-bc70-4e0d-90f9-4ee51bedb187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9dccfce-5b74-4831-b724-9d291e84cb07",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff1c427-da88-4149-baa1-0262d1193eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5ef3c8-384b-4b9a-b742-d750348726c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e470e7df-12c2-42a5-b2e4-5a4890921bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5382a2-e6e7-43e8-b934-aac5f073a693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b4f0b4-a8d8-4e5d-9575-b56225980db1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f892878f-1ffe-4d7e-b053-bb85fdcb26a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a4c29a-ae2b-4611-bf46-a25dddbbe939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8642a0d4-2444-4f5d-a75e-c71a4217b5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde656f6-a89a-4019-b6cc-7f4d32e25e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096e8c6f-f036-4c5f-bdc0-a1d0f525a45e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21de284d-c5ce-4748-bfd1-f98799370abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1521c369-2d30-4c95-ad0f-a7f971873fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1f7746-8e24-4d36-a7a7-ae0e86c997cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6559319-b3ec-42ba-8a67-5f95d38ffbc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ca7190-2dae-4433-8bd5-68ff08385634",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfcc891c-a921-4da4-9e58-9fcfb94978e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c300bdc-7fe3-4d2f-91f4-ea3b62e351d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c73895-9bb9-435c-8a16-f7fb434ad681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6047bf6-545e-48a0-862d-a0e50596585e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49301f07-a415-403a-8771-0a709d7fd0a3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec6920a-b85d-43f5-a0f0-577fbe8e5da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5677ff8e-50d3-4e96-b8fa-41bd0ddbc778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a8a0ed-c351-4cf8-87d9-b1d9bc7a6841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164381dd-9503-474a-aff9-1a6d45905004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6699ab-05df-46d9-b662-c17200671b99",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc62f0d-dd36-4627-bc6d-b539b98c3a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f8a253-ded8-40fd-aa97-d64bec4b3c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc039955-760d-4005-846a-1d31efc9725e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3268c93-a829-4acc-9eac-949555eace9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c5169f-3202-4ab2-b912-4371f9ad50d2",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50716278-40e9-40f5-b731-1e1c166a2fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a742127-4b6c-464b-8e23-b802760c6d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4787704-6758-4d2e-b7dd-84dbbcbdc9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6175d5f2-6bd7-4af0-aa56-21bc0020f116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76434183-d51f-4bec-aa9b-02e2ffb038f5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8084997f-c755-4008-a4db-fc4f13910488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0538dd92-b21c-4165-8eed-d48760ba4420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0451d3f5-de82-4577-89c3-47d48b761dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbf3046-4875-472b-bec0-a9679f1c505d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa5ea15-0a14-46b4-be2c-123d7434fc6c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0b99a2-756c-4d70-8a7a-f92bb499f07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24356f8d-4206-4c03-9ffe-38e884e45637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29e68e9-d447-40d7-af4f-30eaab91f7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b2d11e-a35c-41ed-bb5a-2cc1db51a7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87543515-a41e-46ff-bb09-e2acb9ee6977",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1d3c7c-399f-4a3d-b2b2-92b209626d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5b75f3-8231-4a43-b28f-4247a27a8cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b92d41-9593-44b9-b763-ba6518855470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1c92ce-22eb-41d3-9f13-5adda3b8a83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12694d3c-4a5b-490c-ad2a-4be7234716d7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6f7792-1f6d-496c-8305-952e2330e4f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2484c11a-ceac-49ff-a4c5-8db446914a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9defc2dc-9c7f-42ce-9b78-111c946a5889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d23baad-e724-4063-add1-464cd1af0f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20e1213-b96b-44b1-901d-692a77c64d58",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057ab515-abec-4eb8-9630-9cc06b4b6c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95cfc11-63ec-4890-9d91-661adb9e5d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9399498-8685-45bd-8be9-540902f6be88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a481c17-d2e1-4e8f-b9c3-95f13d2a6324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f58462-e5c5-413f-a590-87f4e42a5e11",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c597ccdb-c857-4580-82e1-8f427ac8e3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de1d26a-80b8-42ae-81c3-cee12559d717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e7d92f-f4b5-483e-b46f-c5cae39ec0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10df7679-ce2e-4771-a128-dc2babf5604d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbc3f19-e8c2-41ef-9736-40004b30900c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c784dab-2ade-429a-ad18-f6d9c7eb6151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9496b891-1998-4128-a586-f53d645c1828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fe9e6d-deb3-40ec-9550-cf85a0dcf813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125587c5-9e88-4c94-9ada-5c2b4c8668c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11757b7-62f1-43af-aef5-739fd67774f2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f1d3c0-cc63-412a-a30d-fe193c9d970f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3728ba71-582a-4c64-bf74-800b9e28fee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db2477f-cdca-4ea3-9676-b3a777dd4ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede5edc6-7a0e-44d3-ab84-3e2ef9fac4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0124c5e-8e04-46ed-8252-2f860fd74d1b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba80fe5-65ca-4572-975b-feacfa15354b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facf5a95-b7ae-45d0-99fc-411aa3f9c1bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3903ab-bf0d-4d79-821a-a1ee03352d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f69077-fc64-40c3-accb-d1c70301461f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce40e324-2626-4975-9751-7dba1fb3c4ad",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5cbb24-5f61-4cf6-87dc-5e0cd41968ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce28cea-5083-44ca-8496-76dfc7bb0f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49acbacf-718d-460d-ad2d-0b5358977a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eadc845-9f29-4487-8532-56c707f06155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7aaaede-8b6d-4bbc-bd1d-6e111107697f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d650462c-cb87-42ff-8349-acb00a0afbac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3b9b720-f7c5-470b-9279-66746390719f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da856128-6d6b-4433-b25b-dd40e0e3d686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636ced43-4e8d-448a-845a-16251442457b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfae385-b889-4496-8172-f557e098cc05",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2e67e7-de60-443c-b2ac-8cd29d5c1bdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86dd3c35-b004-486a-ba25-f4ef72bfdd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945de42d-e1af-4ec9-ba76-e3ad3167ff5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b35b2a-29b9-4df1-b8b9-45cc9cb6efd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3443dda8-8920-4c39-b4b9-d47ffcf4dac6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f2f75f-44ea-4e35-8e6b-239c8329914e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d77fa2a-d7d4-4679-883e-da0dcb9a01e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875b7e35-78b0-4592-948b-988661fdd82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5ded63-6b49-42d6-82be-7e9d30f1280f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca86870-34ab-41a6-b5cb-e3535b719a72",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de044e4e-c147-4302-ae4f-51a3e75083aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3af73d4d-fd33-49d9-be51-30e05ebef0e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5aad03e-cb12-4492-b793-1d239b3fe8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18aa14b2-0f08-4ecc-9ca3-159c7053ac2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553f3af2-c1b4-4e65-abd4-d23ce155c7a6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71853482-75ca-4736-a509-6af4b9c42c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af6a356b-b687-46da-b72e-d1352543f8da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a685d1-03dc-4a87-9e85-e69b4f8172fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d305d973-5bea-45b6-b5c9-5ccf850c4b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb839450-81f1-4863-a712-8b0d733eb970",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effafb65-a5ed-4c5e-817a-520e4baa4099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a606de3-7dee-4740-a2f3-ba188ddf8fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6453ed-add3-401f-ae2e-fe7b1d5bf1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fac389-f4ee-4222-85c9-c00b8869e790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9a66a4-504a-4249-bc8c-f57574cd49c9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c413e3f-47cf-4666-a95a-1712ae7dc394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35429d1c-a059-4846-9dbb-aa7354a44976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d79d6d-d694-4f51-b174-a4ca1b44f402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d23c35-74c8-4882-94fd-62dfe4e1cba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6f4247-3b04-4a48-8006-f6a115037f53",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c338a1-1c8f-44b5-b540-986625e2b302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b300ce-cdc7-4fea-82e2-a1a3c356d72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "473ebb9a-4898-4f15-979f-47004486c620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848a3fbb-0c07-4135-b748-fe1fbc55317a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4a9f3d-5f21-4c4e-a4cf-f9f13dab12ce",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7604863-921b-4e2c-96a1-fb942127d1a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b12a7d4b-a1d6-4d01-bad8-73dac923a64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b9ce56-bc44-4f25-b8a9-c0c26d10390d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d33973-d340-4880-bceb-225015ba373a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b56728-d367-4b6f-9496-38388d73a823",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6303b803-045f-4c8b-9962-98c22f284952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6617f17-658a-4ed2-813e-a39667de3621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d64ed8e-85f8-41f0-9634-a681196ae9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1a2c53-a45d-4790-a495-bf51bc1fdba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bb86ca-39fb-49bb-a6ac-678f970f4707",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6566e0bf-12d5-4f53-9f45-0edd9be7c4bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "237ac7e6-c2e6-4c4a-9f9c-733eda94ae5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d90908-acd6-495d-9964-7ff1d7f77ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3080fe68-d0a9-46a5-bc68-20e70acb015f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883be18d-f036-4da9-b99a-8d23085edcb9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964a423a-ce55-40c4-9902-61f09cb48bae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef49f74f-2326-4509-a98c-a5787eb7a4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a52c4d-165c-4ba6-ab28-9a5f39038aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7414cb31-6b65-4e33-9371-baf0d1197cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d7426c-7aea-4a82-847d-f6826d727018",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9513bb98-5140-444b-a79e-ae134e778f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51a863b6-0914-4896-accd-7e36354ff18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd21075a-6f8a-4c17-9c75-d72c1486f546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77bcf90-9455-4e64-bb3d-69cb510eaa03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6b7034-7ed3-4a2a-a589-d9093236aedb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104c7f80-ac9a-48fd-95c8-2b75d31a27ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a83b6a4b-4fd7-4951-8bab-23704d667d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1699bc3b-7a60-4ceb-8ddb-eedde41b5043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be72b5d3-53c7-4d5f-b506-44fa858e2a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0893784d-a09f-45c1-9600-e055ec29ceef",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4c96f5-dc14-4c46-8696-800d900ef244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8f597a7-b8f6-4918-8d95-91bcf3cc581c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd661aa-5f63-40b9-9335-445681740f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec5f616-651f-4f5a-9cc4-bb86780827a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff60884-6bea-422a-b300-e45ac3fd1509",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5083e3d-300c-4188-a99c-8efde2a5bd4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa799c8a-11f9-4789-9a93-5b5558e7ba1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932b228b-95a3-4cf4-ac1b-08b13e24ea32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6051fdc-33e2-4651-9c54-d195475ffb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0631ab-0701-4cd9-aa6f-97d9861b5b0c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a42c3bf-fef9-485b-b259-88f168694878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea67ff5e-bf8a-4219-b49e-964aec0df71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b2e3c8-88ff-4f07-9faa-6543f5588711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e5349d-0741-4dc6-861b-f31590ee27cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ee0ec8-bda9-4e73-96af-b2ce59b621c9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed2db8f-dcfd-4763-8938-54bb99f5558a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b57dc6f9-5075-412d-a936-6439707289c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc489c5-5bee-49b2-9fc6-1cd79c41e312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31e9879-0dfb-4744-9479-295978aec9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75add6a2-6583-432e-bb5f-5d3ef00185cb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f972b5-0312-4162-8ab1-aec587dd3f53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac35e67e-1349-411b-a6fe-f3463a73ff61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c3d6ec-0959-4a29-a990-78b86141ff79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d248eabe-3146-4106-83b7-75c3270d0c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961f1862-da9c-4f72-8450-b3d385a25ee7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8d0b5b-3840-42b7-bd97-e7d981cce72f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e48bb1ee-e4ff-48dc-80be-ffaaeeaa39e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8490a0-a4fd-464c-9cab-190d555eb7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4d9088-73b1-4fbd-8a0f-ab328de91ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97acadd6-fc6a-4957-ad67-9ba73b88748a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be4d2d1-f34b-4812-abc8-4b94cfce4ac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce6f1ed-889d-4ded-a48d-d7675aaa278f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb899a27-7844-401f-ae67-f770c01ccdc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ce5cf3-e28b-478e-91c8-4e18798b7bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018a1b45-df6b-4544-89a9-f223149f84f9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54e6953-6094-41a6-8e24-375c58f560fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5701ab50-cf48-4a28-9421-1e5d1dbe220e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f537edd6-ab7a-4d84-bcf4-1c47ee937785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d855ade-c390-49f0-8313-683daaf0a048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9ab885-fe78-42c5-a3ee-16b55d923667",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2da245b-a1e0-4fc5-8474-da38612594de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bae33ebb-5164-4b1a-9cd9-12951cabb551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25835c1a-f4de-4a3c-9c9c-c39b5d28dd3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9a87a6-830b-4870-b1c9-e183e7ef1a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725a3263-00a3-4417-8395-d4d15d5c4265",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beffb403-7351-4dea-8e5c-3ab99b084d88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c506f07-29c1-4a48-b90b-c39bbf6e485e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a8b0cf-446f-497c-9ba4-09918cfb9231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c0d5db-2c92-48a8-ac67-da2b42751669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeb0731-c709-49dd-b4de-c6092bcb6ad9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d56412-6cb4-4411-a5f3-92d24b0c82bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d163e3a-a295-4aed-87ea-2cfd765d79e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f48001-42b7-4b7c-b366-859a4537be24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c62d615-6129-4e76-b034-bf68406fda64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67d722a-cb3e-4b7d-9905-f318f6c2336c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813f5a92-e767-445f-80ad-23439ed96c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f638a61-bfec-465c-9a9c-4d8fbb099da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65eb502-9e90-4143-b5d3-0d496fed7596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5850cc-33f7-4921-9020-0a71fbc629c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cb53ca-9e81-4a62-b855-cc9dfcece57c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0884388d-8f3c-431e-a7c8-4788a4fbbb4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ac35fa-8945-4e29-868e-2d02b91a4c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23255162-3bf5-4b06-bdf0-dcf0b565a7df",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c5f275-d1ab-4d51-9f8a-35b045797101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2957dc82-445d-411d-86dd-fee64140b6bd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73374d3c-a878-40c7-ab73-08b2768e042c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1f1aacc-9f0d-443f-a1a3-28f24dfe4577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c16db2e-5f8d-41f7-91be-a634108cbb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1465e96f-a26b-49c9-823d-000c898aedd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841cd905-18a6-4d0a-bee3-9cd2e98d13eb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb93769-6424-4f0e-8eca-266e2e308452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30adaa6b-6e92-4e16-aabe-d2bf1128dcff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06565f0-3cce-4b9f-8314-951843828cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1eefb4-30d7-4c2c-bbe7-4384ebc150e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce436b3-12e6-4c6a-acd3-2f1aac671c37",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0aaa658-da5b-4741-ab55-4ff61cc70fd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f49e8084-08c1-4b1a-893d-658ce1693f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb92738e-7cab-4a99-9062-07a3fb5e85ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac49025-f6ed-47b7-bd9d-ea9bf93deffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e6ebd1-01a8-4738-bc8b-52c88d594b24",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f150a099-bbe4-405c-9f76-faacd41a690c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "876c0076-e452-415c-8d49-0792733d1d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6377ad6c-203d-4b49-a795-811f7cd64c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f836e741-5fb1-4aaa-b1ff-030431c9d42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa14580-b9b3-4b43-b775-e83807e136e1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd490126-9ec2-463a-9219-81925dc4f155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d04e12a-a323-47eb-90c2-cde2bceff45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5435b6b2-e289-4f19-8fbf-1b6ce007a84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc64963-3d51-4454-9a7a-64d3bf80e4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c62b33-17f0-4969-b55f-3a1b83dbbce0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b070757-8932-41a5-8096-16e944827b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd59f40c-1c4e-402d-bfb1-be01d494e1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a67e59-d243-4abd-9b1c-77209b5ac630",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb0fdc1-873a-494c-bbeb-a287f4df817d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2a63ac-9bd6-40c7-a852-c88ae04ca442",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725c3bd0-a85a-4edf-856c-e31f71e14b93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "776343b0-63d3-4a09-8223-769d80a5753f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a301c1ba-e19c-4aed-bab7-f16eb4f676b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4dd8e3a-0763-48c2-a864-554b938bf6dd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61db989d-dbeb-4d15-93b5-dff1c0481be0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59ba5efe-2947-441e-9f6b-43800b55bb66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e2c7824-7e6e-4e17-8d21-14f4d9fb5d41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db4576df-2bb1-4377-a557-9e7ee2076bc4"
                    }
                  }
                ]
              },
              {
                "id": "166c08b2-82dd-463e-a1a7-9ebee0b828e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36ba3acf-2ddd-4049-932c-d69bdc206364",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c5bdeb-e08d-43ab-a707-61d7d6f228d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7e49f0f9-1ce7-4c76-9eeb-61983cb05ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff34d1f-6a1f-4c81-9c0b-7ef0553c3d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b183f4d0-c4ea-43dc-a899-ff84f36ec3c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e94342f-10f9-4023-bd09-f047e9fa9f9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6d94993-02d2-44ee-82c2-45354b8d5b81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d3dd9f6-2eb0-4bf2-8bcd-b2b0317de17b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c4f5632-b70e-4f4a-a299-9da362d770d8"
                    }
                  }
                ]
              },
              {
                "id": "43e312aa-091f-49aa-b2ef-bb8e24c64e03",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8f84fadb-b598-4e36-af8c-bddedfd9e5ff",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcff4db-c91a-4d78-af6c-4e52dcc518d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9a860350-e8fe-41eb-a9bf-9c4fb51e28e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc0f7dc-6c82-4daf-ab60-d28617fa88a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef556cf0-a803-4d5d-8444-50b57c085d4d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "23c7dec2-ab68-484d-8204-4e7d38f3c197",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6639817a-24a0-4191-8105-8f94c8ea98eb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22bb2e4a-e421-41ce-97c6-95cddbe2dbae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bf264eaa-ece5-4211-9221-e9a90069e1bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fa4362f-5f20-4778-825d-5599e47d6e04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fab4673-7cd1-431b-ab73-7d82981f3f22"
                    }
                  }
                ]
              },
              {
                "id": "75897cc9-4033-4b9c-80c8-28f46a486702",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "556dfefe-f3f2-4ecc-a51f-3a6f505ebf83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "07ef83db-425c-4b4f-b31e-4b2c6520a266"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e26a0581-9f1a-4dea-831d-506e8e5b652f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a079735-4907-424d-883e-deabe58c48c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "915d340d-376e-4aa5-b965-bacc1f6e1b17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0caab34a-4944-472d-8c76-9f85540acb7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1717fe3-4724-4313-a967-170b276d425c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "edf5bab8-8c32-4cef-83a4-5f1ce4d71d0d"
            }
          }
        ]
      },
      {
        "id": "d9a766af-5369-483d-83fe-a3159a5706ca",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6a2701e3-4df7-40cc-b604-6472c7162411",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f53f73f3-32a9-4cb9-9706-1f9c37985d98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab0a5a57-20d5-4026-8efc-62f7e9327cde",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daaefe4a-cda8-4820-97e0-d2fe782dc4a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d6d39fe0-36a4-4351-88c1-90729333504a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2281c7-33bd-4306-8b3b-4605de9d9f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e67cab2-8eb8-4e25-bd9a-c6d27bc16cfd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efc4927c-adc1-4724-a427-be479e0e590b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7aa6859-0628-4f06-86cc-220dc4435188"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "671ccf5b-7e1a-454b-afec-44aaf4a25f59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8f0065b-ccec-44cd-9f89-b57829929bf4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60416a53-1454-4ea1-885a-20a31138246d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f7b6ce7e-9ff6-4580-a269-d753ffa204f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6a7e01c-5854-4c96-939b-c61484b83098",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df7e42b8-7446-4465-aa2c-b9741e6d2fce"
            }
          }
        ]
      },
      {
        "id": "b511e211-aeda-406a-9124-ac6ce68f980b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b704c1c2-7872-42d6-909f-95debe20f9fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "328f90fd-ce58-4495-bb7d-80ffe80a1e88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1defec6-39da-480e-84d9-75752bc086e3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd11a5a1-10ee-4a85-aedc-b3149e5d68d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27c3b439-c1bc-4ba6-9f81-40fa5ddab6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a86242b-4072-441d-9f20-a565690f7e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5409faf-2f90-4769-9fbf-200bdce3ebf5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a42084b6-80ff-4e54-9f93-0bc1c17f6d94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a1802cd-58c3-40c1-8e98-3722466ff263"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0defada6-55dc-4c0d-9011-e422db7d3c6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4313b117-2d8f-405d-aa3b-0c1133a3c139"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fdc211e-4a47-438e-a92e-71b6a7218353",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6898ee58-9fa5-4d82-84c2-0c5e04c304ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae14d1a3-dda4-4da0-9989-3c0d0b69ef04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abeaa1e0-538e-4dca-bcdb-1cc2605d0413"
            }
          }
        ]
      },
      {
        "id": "fcfc447e-7586-4be9-88fb-9a7b066f81ba",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "db6c71e9-e99f-4fe6-ba64-eefbc43212ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "760b08ac-e2ab-4fb3-8dae-aee7e208b991",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eeb642f9-ac86-45d8-b89d-af9307771082",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cdc3f2-c6cf-43b0-8d31-6cc69196dd02",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02d9ac61-fd52-4146-a975-350bedccfd2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f324bb9-481c-462a-9233-5d1427ec95a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f7b0edf-2530-402f-add3-70fa0302cde0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "282a5e32-620a-4eb4-98d6-130dbaf23b12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3510aca-4980-47c3-bee0-57395dd9480b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2511edb9-7292-4e5d-a6f9-8b84b82f1abc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2e3be55-d4b7-4a8b-9877-28446af87a29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d98db98-92d0-4cd3-85ac-2300be99531e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce3d5dc6-fb7b-4b40-be73-1ea75d2f04f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "430b4157-14d3-4a61-9ca6-7d049eec80cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f995ae5-c968-4e88-a973-b1e89f413b24"
            }
          }
        ]
      },
      {
        "id": "5fdad550-0378-43b9-a6db-6da8c8948d89",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60eeb189-954f-4217-a8b6-0dd20245d140",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcf887bd-591b-4582-90db-d75f86e616e2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "75f95717-c9e7-461a-b244-bd729923d849",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34a2647a-3160-46b6-9d45-390df7811977",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6f099be-2c33-49b9-92f9-26034e20ac99",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.64788732394366,
      "responseMin": 3,
      "responseMax": 256,
      "responseSd": 17.321807952632096,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695256379219,
      "completed": 1695256393185
    },
    "executions": [
      {
        "id": "677c6733-2023-4357-9b1d-c1a51abdfdbc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "76e426a2-487f-4563-acc7-ba73713851db",
          "httpRequestId": "23860f7e-56fd-44cb-9111-0a46ce08b474"
        },
        "item": {
          "id": "677c6733-2023-4357-9b1d-c1a51abdfdbc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fec7c173-ec7a-4dcd-a525-0a5245e770ff",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "76532b6b-0d8c-4c91-b3a9-ba11d2e1c59b",
        "cursor": {
          "ref": "3bdaed3c-224e-471f-b94c-df8b6a52c66a",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aec40c0c-0199-419c-a354-1f6deff4080a"
        },
        "item": {
          "id": "76532b6b-0d8c-4c91-b3a9-ba11d2e1c59b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1caf4f3b-e7be-4c05-98c4-6fcbe8e91aba",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "18314d10-3839-40d5-b7a3-9a787c83f96a",
        "cursor": {
          "ref": "f8473bee-b784-4987-be78-d98fd86e39fd",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "417b61a2-3e48-468c-bd5e-90f1ed873f39"
        },
        "item": {
          "id": "18314d10-3839-40d5-b7a3-9a787c83f96a",
          "name": "did_json"
        },
        "response": {
          "id": "3b734492-83eb-4620-b05c-7ef7bf03d397",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6091642-4a7f-4d90-aebc-11c6d450cc8a",
        "cursor": {
          "ref": "1d2eac2c-0a1d-455e-a8f6-65d17c5f4d9c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "96b2fdbd-e94f-4432-a9af-0a28ce312205"
        },
        "item": {
          "id": "e6091642-4a7f-4d90-aebc-11c6d450cc8a",
          "name": "did:invalid"
        },
        "response": {
          "id": "73d45122-6c9e-4386-9ded-58dee219dfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6091642-4a7f-4d90-aebc-11c6d450cc8a",
        "cursor": {
          "ref": "1d2eac2c-0a1d-455e-a8f6-65d17c5f4d9c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "96b2fdbd-e94f-4432-a9af-0a28ce312205"
        },
        "item": {
          "id": "e6091642-4a7f-4d90-aebc-11c6d450cc8a",
          "name": "did:invalid"
        },
        "response": {
          "id": "73d45122-6c9e-4386-9ded-58dee219dfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564cc076-a373-423f-a31a-47f0507c73fd",
        "cursor": {
          "ref": "61f899b9-74dc-4929-aaa5-6319c10fa4bd",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c0e832bf-cdd2-47a5-a8d9-190de6bfb968"
        },
        "item": {
          "id": "564cc076-a373-423f-a31a-47f0507c73fd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "370fa40c-9f78-4cb0-bf0f-248e658baf60",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a9ae19-329e-42b4-ac7c-6c5fd87145b8",
        "cursor": {
          "ref": "b1063152-dabf-4f59-8409-3a1ca13832da",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8bfbde6b-2ec9-4412-bbe5-4b9073125ffd"
        },
        "item": {
          "id": "31a9ae19-329e-42b4-ac7c-6c5fd87145b8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "89538482-aa2e-45d1-9ded-bbfbe54509b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adb1c87-8b1c-4a5b-a930-8c7203be3199",
        "cursor": {
          "ref": "54b417a4-913c-47f5-a93c-4b4040523390",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "20e25e9c-440b-414c-a397-18594a350907"
        },
        "item": {
          "id": "9adb1c87-8b1c-4a5b-a930-8c7203be3199",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2209152a-1d89-4410-8700-558dbd897a2c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9c47bf-d2c2-4eaa-9c20-bd02c303a05f",
        "cursor": {
          "ref": "60171cea-bfdb-4661-94c8-c25ca02790c3",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2f981db2-2b01-40bc-a104-a9fb84429502"
        },
        "item": {
          "id": "6d9c47bf-d2c2-4eaa-9c20-bd02c303a05f",
          "name": "identifiers"
        },
        "response": {
          "id": "93077e35-794b-4d89-a299-68d4b2f57adb",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6013b92a-798c-49c0-9007-693e5ef94a8e",
        "cursor": {
          "ref": "dedabf0e-a182-438a-8712-377487007a4e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4d424619-f3f9-40d0-8a0f-b5afb5941cbe"
        },
        "item": {
          "id": "6013b92a-798c-49c0-9007-693e5ef94a8e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fe36baff-f48a-4266-911a-814b72563fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fcf874-64ad-4f98-b0b4-776b72a85ec8",
        "cursor": {
          "ref": "43fa8e58-e681-41b3-abd2-0d29109ea7d5",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "801798ae-4b1c-44e1-a7cd-57d107864052"
        },
        "item": {
          "id": "e6fcf874-64ad-4f98-b0b4-776b72a85ec8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f8e5e3bd-af6c-4015-a2db-9a34e2fa8a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c931ab25-5293-4551-8a31-77da4efc557c",
        "cursor": {
          "ref": "f10fe2a8-3ae3-4127-8119-8852b0f46345",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fb5e6168-330f-4dd9-97d4-3886e9e6a18b"
        },
        "item": {
          "id": "c931ab25-5293-4551-8a31-77da4efc557c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6310665f-3194-42fb-b4f3-a74ae29096b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dd7f81-3f92-460c-b9f0-715b95d32453",
        "cursor": {
          "ref": "3f4434b2-3fba-4e29-adc4-a240180ff419",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4fc9c8d2-59a9-435f-8faa-0f5554e3e812"
        },
        "item": {
          "id": "e0dd7f81-3f92-460c-b9f0-715b95d32453",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a95eda0b-79f6-4eb9-b42e-a284cea32926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3765acd3-3ec6-4d0d-87ff-abf997106eed",
        "cursor": {
          "ref": "fa65ad71-a553-4bd5-9985-7f602dd8ca70",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "00f0adca-bee5-40b8-8c57-27ce45586f7d"
        },
        "item": {
          "id": "3765acd3-3ec6-4d0d-87ff-abf997106eed",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "022fb5a8-1b2c-4257-b213-813b190d0d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9755913-3ca6-43c7-8ea4-d2c6e7c1321b",
        "cursor": {
          "ref": "3128e638-443b-401a-8d3f-ebe566d707fc",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "39bd030a-4212-4df4-bca6-2379c4197222"
        },
        "item": {
          "id": "e9755913-3ca6-43c7-8ea4-d2c6e7c1321b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2e200c37-6ed1-4fbd-a9d9-4fa720231e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c4009e-7d8b-43c7-be19-9bf69baf09d5",
        "cursor": {
          "ref": "8f4cbc3d-0b54-49e3-8584-ed5ad6271318",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f34c5ca5-4f2d-4981-8844-f7c0bfced0b0"
        },
        "item": {
          "id": "49c4009e-7d8b-43c7-be19-9bf69baf09d5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9e08ba5b-2f3a-4518-9d31-e0ae3d53dbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2adaf54-f152-4b1a-8a83-f887553aa817",
        "cursor": {
          "ref": "b7c4c2ad-dd99-47cc-ab00-927c64b785f6",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "659354bf-9ad4-4069-8cc8-b61fa665baee"
        },
        "item": {
          "id": "b2adaf54-f152-4b1a-8a83-f887553aa817",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a3f7cbaa-16d4-4d57-a4f2-4efd68205105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1fa453-3fc9-4e8e-99a9-f1a88f5abca6",
        "cursor": {
          "ref": "1c6aaebb-1a8c-40e5-8a05-6ccedeb55bb0",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "251f8030-9b89-4d01-9a57-d0478526108c"
        },
        "item": {
          "id": "ca1fa453-3fc9-4e8e-99a9-f1a88f5abca6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1c7f4f69-2931-437f-a408-a144691b1400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd5fb24-3780-4edc-8579-0ccf80be4952",
        "cursor": {
          "ref": "4e4b32f4-6e91-47d9-bbe4-34ca2d9b1b82",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3ed47729-5cb5-40e2-9e76-711a2dd7ff72"
        },
        "item": {
          "id": "ebd5fb24-3780-4edc-8579-0ccf80be4952",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2e003364-1abc-4b3e-ae18-8da184931b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b6d3dc-eb86-481d-b523-d0de7b12e7d8",
        "cursor": {
          "ref": "4ef4ca46-3c6a-49af-9535-042ae66a989d",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "49c5b4b3-493d-4316-8f9e-98324c1cbb05"
        },
        "item": {
          "id": "c4b6d3dc-eb86-481d-b523-d0de7b12e7d8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "15de49d7-3e19-40b5-9ea2-8ed2c72a8a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb676f0-bd32-492c-b402-4f1ca5ea28dc",
        "cursor": {
          "ref": "24fdfb07-7f79-404a-8245-9201a1323804",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "25385312-1d72-4f8f-acaf-0a5216d75791"
        },
        "item": {
          "id": "3eb676f0-bd32-492c-b402-4f1ca5ea28dc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3f4d18e4-d339-4240-907f-78a05e1b6b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a600d974-05db-45be-8ace-496e7bf5addb",
        "cursor": {
          "ref": "0ba245a4-bb43-4e12-9834-bcfa13e76438",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "05aa210f-80e8-462e-9c3e-d3f5ab641d9f"
        },
        "item": {
          "id": "a600d974-05db-45be-8ace-496e7bf5addb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e3cced68-75ef-4c77-a4e5-8c377b9fe4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93714fc8-27a1-445e-a65d-2c82b58baad7",
        "cursor": {
          "ref": "a115f7ae-a6c2-4eb6-8888-4ca004b7bab4",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aca96817-d87e-4aa6-9c89-c19b5b9f10db"
        },
        "item": {
          "id": "93714fc8-27a1-445e-a65d-2c82b58baad7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "80b952e0-8e2e-49f6-84fc-271ca89eef28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f724a16a-1102-428d-a2b0-9bcf809ad550",
        "cursor": {
          "ref": "7023cc90-4187-483b-8c22-06e8347a4460",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "78224d30-7b01-4e1f-8510-9c23456aa2ef"
        },
        "item": {
          "id": "f724a16a-1102-428d-a2b0-9bcf809ad550",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "452aafb3-64ad-4d8a-adcb-6b14924069e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ef0a6a-26be-4fa0-a5dc-bf76cd0672f8",
        "cursor": {
          "ref": "f3809114-4b2e-4645-b25b-8cf5d78195bf",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d3e3b095-3f92-4ada-b3a8-a5be42b56d2f"
        },
        "item": {
          "id": "e5ef0a6a-26be-4fa0-a5dc-bf76cd0672f8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "77e0f8be-a892-47b2-ad40-c6c0c299cd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d104cbb-bbe2-407b-9d8f-ca456b698db1",
        "cursor": {
          "ref": "d2df2a2d-3362-446b-b3d5-d1d34fdd2759",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "db0bf6d5-3a7a-4c31-bb24-6cc018b686ea"
        },
        "item": {
          "id": "6d104cbb-bbe2-407b-9d8f-ca456b698db1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f92c6bae-4c35-4513-882a-d17b5207c0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df03452-b53e-4526-8756-1d4f1e70b216",
        "cursor": {
          "ref": "b3a60988-395c-440f-87d7-fc1561e105d4",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "419f1c42-bc35-4eb0-a67b-653183c30ff2"
        },
        "item": {
          "id": "7df03452-b53e-4526-8756-1d4f1e70b216",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b4d25890-2592-4c68-9697-5a24c4d9731a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dba3285-bdc4-4c5e-891e-7c6717378506",
        "cursor": {
          "ref": "0303b51b-1b4f-4d19-bbe1-2396737c3d2d",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "587f4c52-ce0d-4c01-9071-91e82cefa443"
        },
        "item": {
          "id": "2dba3285-bdc4-4c5e-891e-7c6717378506",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5f3c6828-6873-43b1-8767-af60e1c65bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4608c5-4e78-4716-9e83-b508668d72fe",
        "cursor": {
          "ref": "66bed885-53da-4cac-8ef1-853154673d9d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7752b30d-7136-402d-a83b-ac8582a5bed3"
        },
        "item": {
          "id": "2d4608c5-4e78-4716-9e83-b508668d72fe",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e7c99276-8241-412a-95ac-57c00084e552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81077b43-bf29-4065-9164-d230b5ace535",
        "cursor": {
          "ref": "94fc2c55-d87c-4cdd-b3a3-a34139fa7368",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4f2ed74e-8d71-4a0f-be37-bd44bb86e4f8"
        },
        "item": {
          "id": "81077b43-bf29-4065-9164-d230b5ace535",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f19cf909-ac53-4c5e-aa97-43bb884cdab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c9e1ac-2339-468b-a946-f35337275c40",
        "cursor": {
          "ref": "bc9d3ac5-aeb1-4138-8546-7be8e5ee1798",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "281a61a2-f5ce-4da7-a053-d74f13db0698"
        },
        "item": {
          "id": "c8c9e1ac-2339-468b-a946-f35337275c40",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "970a0508-eadc-43f7-af18-48d074c9f9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92b3992-f2e0-4da8-8157-036c2a4b0534",
        "cursor": {
          "ref": "96dc88a1-74aa-4d52-ac2f-9a5d07267842",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1a5f018f-1f9c-4c29-8cb5-b7618541af43"
        },
        "item": {
          "id": "d92b3992-f2e0-4da8-8157-036c2a4b0534",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f9b1f894-cce9-44b6-843a-4741a91d5c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be149ad-29bc-4659-921a-424bf8944271",
        "cursor": {
          "ref": "a395b763-9423-4595-8e68-135e16c52939",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "beeed3d9-9e7e-4a8d-8088-73d8f6157737"
        },
        "item": {
          "id": "3be149ad-29bc-4659-921a-424bf8944271",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d1be84bb-e504-49f2-aad0-574ed6d7410b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712c9781-c80c-4ca0-b256-cba28b3ebf35",
        "cursor": {
          "ref": "5df0d581-52aa-488d-abee-f95bee701ce4",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9d26b188-705e-4ca0-8e17-b4243d80d25a"
        },
        "item": {
          "id": "712c9781-c80c-4ca0-b256-cba28b3ebf35",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4a70ec25-8adf-4b94-82f8-25d3291da1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46f4396-2364-4c57-9d01-7b1a9c3107ed",
        "cursor": {
          "ref": "a042ebc5-d0ee-467a-8bb1-4b0a7de7ce6d",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "133c58ea-6c4b-429b-b667-dbf2326d56ef"
        },
        "item": {
          "id": "b46f4396-2364-4c57-9d01-7b1a9c3107ed",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "756683aa-6af4-4992-a19c-a4fcf6d607de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fa7bb2-f614-4a0b-bcd6-25e48c5e3784",
        "cursor": {
          "ref": "a66b83cd-e682-4f41-9633-7ec50882d0cc",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d9c3400b-254b-4db0-9ca9-7b9c71de7a83"
        },
        "item": {
          "id": "80fa7bb2-f614-4a0b-bcd6-25e48c5e3784",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5adf4b50-3213-4fd6-809f-9f0eb4a51b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6517bc-08f8-45b1-ac7a-1bb4c9a6b882",
        "cursor": {
          "ref": "e3b42656-326f-44d8-920e-77f5b9e9f216",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6d5cd2eb-2fd3-4f40-9ace-192326849871"
        },
        "item": {
          "id": "ff6517bc-08f8-45b1-ac7a-1bb4c9a6b882",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1d761579-d6fe-44eb-ae16-a14336343ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfbd075-a9a6-43a0-8c21-fa2733e7ebb0",
        "cursor": {
          "ref": "2145f1a9-1dd4-472a-ae36-98474e15ffdd",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5d35a63c-10c9-4fb0-adff-e86c55100fa8"
        },
        "item": {
          "id": "ecfbd075-a9a6-43a0-8c21-fa2733e7ebb0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1a1abefe-dbe3-4ccf-ba04-b93f756b2ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4418cfbc-129c-43ae-8274-0de0720e2131",
        "cursor": {
          "ref": "711c9388-de00-4e26-9bf6-7f3de007e791",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "905c8f8b-6d83-4c5b-b57b-1c80987d7f36"
        },
        "item": {
          "id": "4418cfbc-129c-43ae-8274-0de0720e2131",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f73f8e2e-e1cb-45df-8915-1bcfd2203faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df63f46-b704-4e99-9094-3e904a9c3a6b",
        "cursor": {
          "ref": "30ad44dc-4d28-4a77-b95e-7f374d614236",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a6329892-cf0e-4d41-8285-ec28e9071713"
        },
        "item": {
          "id": "1df63f46-b704-4e99-9094-3e904a9c3a6b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "28c80814-adce-4561-b3b0-38d9038db692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031dc70b-3f41-4e56-b6fb-0655036f7940",
        "cursor": {
          "ref": "20809245-00a0-4cab-9885-a082fcbaaadd",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d91dca78-9bb2-43ea-bcf2-ccec9b96a002"
        },
        "item": {
          "id": "031dc70b-3f41-4e56-b6fb-0655036f7940",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f41fffcd-4830-416b-869e-8faca7dc1405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8733954-6b84-4cce-a861-ddc434e3934c",
        "cursor": {
          "ref": "f4346201-9e48-4991-b389-898adde4e536",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eba0c569-662a-4025-bc54-610086a9446d"
        },
        "item": {
          "id": "b8733954-6b84-4cce-a861-ddc434e3934c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "10b1cb59-ffe5-4fa0-89ca-a9b4c91e1728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197bc84d-b124-4a71-8530-737dd5b6ce86",
        "cursor": {
          "ref": "5077e99f-e728-48b8-b230-303cffd73845",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5136e752-8ea9-4d26-9ac4-ed252d100f3d"
        },
        "item": {
          "id": "197bc84d-b124-4a71-8530-737dd5b6ce86",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f2aaaefa-d439-4923-a103-dc7e2b684506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb32f6dd-293d-456a-a140-cdd361a8401f",
        "cursor": {
          "ref": "e697b351-2830-41a4-a5f9-f7488c834329",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b3249493-ed91-464f-a0bd-9df8bb27f8c5"
        },
        "item": {
          "id": "cb32f6dd-293d-456a-a140-cdd361a8401f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c80f60ef-b275-4ec3-88ea-be089ea8ac8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5005c455-b157-4a73-a781-81ed7214bbe2",
        "cursor": {
          "ref": "2c9e3e3b-7aad-42fb-ae6d-861443d28bb6",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8bd1d380-22a1-4f1b-bf9f-60db12bf6da6"
        },
        "item": {
          "id": "5005c455-b157-4a73-a781-81ed7214bbe2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d9fade0c-f319-46ee-851f-cdbe1331e518",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 31,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f09786-46e0-4ea3-979e-7fcd9aed6804",
        "cursor": {
          "ref": "b35c8baf-da9d-4852-84cd-4c321bc01cea",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e1515fc3-e9de-45b0-ad35-bb99e5afefb0"
        },
        "item": {
          "id": "86f09786-46e0-4ea3-979e-7fcd9aed6804",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "12dc22bd-9ce3-4a9e-be2e-2d20bd66b7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba751b54-ff85-405d-ae00-fd94246d1e76",
        "cursor": {
          "ref": "f6a1ac14-25ad-48fc-afe9-50c9a9aa36fd",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4294f9d5-e977-4c6a-830b-55ec388a5315"
        },
        "item": {
          "id": "ba751b54-ff85-405d-ae00-fd94246d1e76",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "257ef370-e3ca-4907-b7db-5bff352f26bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52561dad-6677-44fa-a8ae-59dc0dc4498b",
        "cursor": {
          "ref": "4d8123b6-e711-452b-92e9-19e8dc85cf69",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6ff22c76-5b05-4085-84de-404f04ee471c"
        },
        "item": {
          "id": "52561dad-6677-44fa-a8ae-59dc0dc4498b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ad8943d0-a926-427a-909a-618f15605297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0856a9-b9e4-43ad-9097-849290e4783a",
        "cursor": {
          "ref": "3992edc7-859c-42ed-8f02-bb50acd4db0a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d24a8d1f-b330-44c9-b85f-98e8d8199acd"
        },
        "item": {
          "id": "ca0856a9-b9e4-43ad-9097-849290e4783a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8f325b97-607b-434a-8b14-737749e3540d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb05517b-b045-47f0-a540-c0425a163559",
        "cursor": {
          "ref": "67d91439-c397-47d0-9f4f-219303bc900d",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c8bd9cea-f0a1-4826-a367-419de349f06e"
        },
        "item": {
          "id": "bb05517b-b045-47f0-a540-c0425a163559",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ed12c08a-5ecd-4099-b63d-c429abbeda9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccabf6a6-b6f4-45c8-9380-31a24807214a",
        "cursor": {
          "ref": "4d3c0b4e-4b6e-4d86-bc06-d3279b1a1ff1",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3b02b77f-460c-4327-89d7-6bbcc13e7175"
        },
        "item": {
          "id": "ccabf6a6-b6f4-45c8-9380-31a24807214a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bdd19184-2a3a-4364-a965-917b5b8f9810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa07020-3b2f-4d4b-9595-659307b90b75",
        "cursor": {
          "ref": "ef776aea-ea6d-475f-a3d0-2dd2ca6193e2",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fda97040-a449-456a-aed6-9198237d5936"
        },
        "item": {
          "id": "efa07020-3b2f-4d4b-9595-659307b90b75",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6b1a51fc-29de-431c-85ba-f047ef2bc209",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5a95b7-502a-4148-a6d2-94cc56d13956",
        "cursor": {
          "ref": "9d210ccf-5a47-4d76-9a1e-7a5eb840e378",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "999f45f0-0518-42bc-873b-e770ec743bf9"
        },
        "item": {
          "id": "8d5a95b7-502a-4148-a6d2-94cc56d13956",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c30ccc00-6e71-47c3-ad2b-61e27cd10c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a81a62-158e-4d1b-b02c-ec9229e95f6d",
        "cursor": {
          "ref": "58da0037-2808-4d5a-9e5f-cf634a1f0944",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cbce396c-bc6d-435a-a85f-2c48a519a1e6"
        },
        "item": {
          "id": "06a81a62-158e-4d1b-b02c-ec9229e95f6d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ea8d1ffe-cfb1-4c5e-bf46-03ec04e7c332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9eff3a-7794-476f-9a83-5641e9677d53",
        "cursor": {
          "ref": "c95d6ca1-972d-4840-bab5-945ff6e8fb87",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "951590d4-764b-4793-9e5c-9bfbf51308f6"
        },
        "item": {
          "id": "2a9eff3a-7794-476f-9a83-5641e9677d53",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3b0463b8-e38b-4e5f-b8b5-b0af2df6699e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d976b6e3-7e9e-4a95-897b-b1a269434faf",
        "cursor": {
          "ref": "10c2836e-d701-4d9a-8c3a-367c42d99154",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f6ca3129-0f7e-4fb2-bd43-521dd613a6c3"
        },
        "item": {
          "id": "d976b6e3-7e9e-4a95-897b-b1a269434faf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "98fa1dfa-a20b-4414-a85b-70713a77a598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c5d912-5234-4698-a8a7-b76cdb59f36a",
        "cursor": {
          "ref": "80d73b53-af0b-4881-af1c-d2a07e49c2d4",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "77e38a31-0f0b-457c-b597-81aa09e99cb4"
        },
        "item": {
          "id": "20c5d912-5234-4698-a8a7-b76cdb59f36a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fbb05e83-0d1d-4479-bbda-25a695e96715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58a64d9-e3b3-44af-8d33-5ce82e757f69",
        "cursor": {
          "ref": "66daf304-c424-4c23-aea0-9cf1cf406ba8",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "70872a93-b95b-479f-9038-0ba05ee216ce"
        },
        "item": {
          "id": "f58a64d9-e3b3-44af-8d33-5ce82e757f69",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ada3287a-6cec-427d-8664-05be2a661ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeda115-ed24-4cd7-b6b5-7433d07c1b5d",
        "cursor": {
          "ref": "4e154b10-6cf9-4ff8-9603-96597c2f83c1",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "47468f74-5409-4388-81de-900280d0e480"
        },
        "item": {
          "id": "dfeda115-ed24-4cd7-b6b5-7433d07c1b5d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7fe672f3-0772-4573-891a-9ea356bc61ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f565f84-bae2-46e4-8260-489748c373d5",
        "cursor": {
          "ref": "83a1d0cd-b5f7-423a-ab7b-482501a32018",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "768dbdf8-b127-47ca-9fa2-dfef68a000b1"
        },
        "item": {
          "id": "8f565f84-bae2-46e4-8260-489748c373d5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "37a90f2a-e5ad-44a7-8c1b-9d27c8b71cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2daedf-6fde-4db7-92a5-243e7fcfb9a0",
        "cursor": {
          "ref": "5cd1e6c7-902a-4cf7-ab92-a064bc4f8ba3",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a17c482a-7002-48c8-9631-b4044d4c887e"
        },
        "item": {
          "id": "0e2daedf-6fde-4db7-92a5-243e7fcfb9a0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "347cbaa2-7c6c-4d2c-8ee4-8ec922d6e9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae98a476-aeea-43d8-93e5-e2c42fcbe90c",
        "cursor": {
          "ref": "d571c457-3a46-4bad-87c4-f84739ecbf3d",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b05fa517-cc85-4c56-97ba-d13cbcec32cf"
        },
        "item": {
          "id": "ae98a476-aeea-43d8-93e5-e2c42fcbe90c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "25e8e056-d6ce-4763-b0bf-fc894dc90b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e833e0-c739-455b-b4dc-39c3d99d72c9",
        "cursor": {
          "ref": "bc658c48-231a-4a69-b7ff-68c70447f471",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9b19510c-8de0-455b-80f2-aa0ee43f4062"
        },
        "item": {
          "id": "15e833e0-c739-455b-b4dc-39c3d99d72c9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "337b25da-df07-4ac6-b6a8-e2073705620b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf9fd7b-81c3-4006-adb8-084e9f556cc6",
        "cursor": {
          "ref": "bbb5b7a2-3a5a-425e-b88a-dd4872c51713",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b7da5901-a1be-431a-9a86-18765f59d289"
        },
        "item": {
          "id": "1cf9fd7b-81c3-4006-adb8-084e9f556cc6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "062228e7-5a53-49a4-a89d-4585fd2a9af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a512412c-34b7-4030-91be-54a5344256f7",
        "cursor": {
          "ref": "68e09bcf-cfa4-4d5a-bda4-5f74a86c5eca",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cb4b0072-cb08-437e-8c51-d3a1ad2391bb"
        },
        "item": {
          "id": "a512412c-34b7-4030-91be-54a5344256f7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "205a9b1c-0b1d-496e-9a1e-3ebd1c6ef0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f304e0-3c92-43d1-bc24-e26b577368c5",
        "cursor": {
          "ref": "80f6ae89-37ab-4caf-8817-f00e960540a0",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "65d9049f-0de4-4c75-9803-15c2ef749247"
        },
        "item": {
          "id": "51f304e0-3c92-43d1-bc24-e26b577368c5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "77e007c3-46c4-4c48-b9b0-85be366a21e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13c322a-a39b-40b3-9755-e827d1efdc97",
        "cursor": {
          "ref": "44be77a9-b1e0-4894-88d9-65d862bab0e3",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2533e5fc-0a94-441d-bd74-56c70c3d48e1"
        },
        "item": {
          "id": "d13c322a-a39b-40b3-9755-e827d1efdc97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "69c90426-7902-4ef5-a787-e6922a1af5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdab10d3-9423-413a-96f9-712db6378035",
        "cursor": {
          "ref": "08c9cfbc-f434-4247-9b03-73ae525a83f6",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5ccd21ed-f59c-479b-9427-0a5c51a1fba6"
        },
        "item": {
          "id": "cdab10d3-9423-413a-96f9-712db6378035",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0ef96ddb-ffe3-4611-a49b-a94ea75462e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4bbc3e-e097-480e-b8c0-91d635f92e0e",
        "cursor": {
          "ref": "ae08c618-7707-476b-bdc7-5c5ffe6cc197",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f09594af-b173-4ddd-9bb1-d0b781d917dc"
        },
        "item": {
          "id": "aa4bbc3e-e097-480e-b8c0-91d635f92e0e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7dc09c5b-10d5-4f35-a316-ea31328e4530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3375b8e8-a299-459c-9f50-94edd975a770",
        "cursor": {
          "ref": "05acdc73-96bd-4a88-bc4f-dc15ef0a2765",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f3e2162a-834e-40b5-9e07-806399f2f572"
        },
        "item": {
          "id": "3375b8e8-a299-459c-9f50-94edd975a770",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5260255d-ef34-4669-8764-4d0a3b295ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a1c1df-d573-498c-8106-38a39bd28250",
        "cursor": {
          "ref": "510e13bf-9acb-4ecd-ad62-a74582bf739e",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1003727b-8545-4aa7-acff-ca3c12bcaec6"
        },
        "item": {
          "id": "44a1c1df-d573-498c-8106-38a39bd28250",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "74dd412c-24cb-42d4-aa5b-6c1553d6fd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7ff110-88e8-4019-a4f6-178fda5185a5",
        "cursor": {
          "ref": "e54e73eb-1821-4c15-8eb9-4388c41ad900",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0dee26cb-59de-45c1-bc8a-245d8b4efd62"
        },
        "item": {
          "id": "cb7ff110-88e8-4019-a4f6-178fda5185a5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5e62e4d9-db36-4506-8f73-04529a88c9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b8f40d-8e6d-4f46-9b1d-51678142e698",
        "cursor": {
          "ref": "247a65c7-1ee4-44e5-8631-074088101f2a",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0f7af9f4-db72-41e6-99a8-d0304164760b"
        },
        "item": {
          "id": "54b8f40d-8e6d-4f46-9b1d-51678142e698",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a94b8410-06b1-4d75-a1c6-eb04980fe26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f838f4-bb54-4d84-b22e-936f27edad56",
        "cursor": {
          "ref": "ab963163-4a68-461d-a56e-ca91bc7d8a3f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3f22b3f0-8959-44ee-9e96-5df1cec51332"
        },
        "item": {
          "id": "34f838f4-bb54-4d84-b22e-936f27edad56",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "39ec5933-2165-4405-b631-d712ddab7b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367f07ed-19b6-44a9-8f7f-7a8725f2fb3a",
        "cursor": {
          "ref": "49c7599d-c9ec-482e-b2d4-f489eb10a2d0",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8fd76ed2-4369-44ad-a40a-e3d855b833b7"
        },
        "item": {
          "id": "367f07ed-19b6-44a9-8f7f-7a8725f2fb3a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6fb1dc56-43bd-4d94-b156-010e2d94d927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407c5e75-3bcb-454d-9ccf-536c67139e28",
        "cursor": {
          "ref": "73e7af24-d676-4757-90be-10f39e9c9347",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0f98c38b-c7e0-48dd-bb9c-292055f4b7be"
        },
        "item": {
          "id": "407c5e75-3bcb-454d-9ccf-536c67139e28",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ecfd831f-4029-461a-9293-0bab880e2f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc7361d-8a22-47d8-8848-ceab4ff0bda1",
        "cursor": {
          "ref": "a63f8879-4e16-4d41-98ec-67eb5ea515f1",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "29cd9bdc-0dce-4543-bc8e-b2db5cd328fe"
        },
        "item": {
          "id": "cbc7361d-8a22-47d8-8848-ceab4ff0bda1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6a710b5a-6795-4075-a60a-728975886a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5341d119-7f5b-42e0-8715-ed70d01c2e4c",
        "cursor": {
          "ref": "760ad161-272a-4c75-b29e-9f871849a971",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a3d0fb98-0912-4036-817a-ec615d7be27e"
        },
        "item": {
          "id": "5341d119-7f5b-42e0-8715-ed70d01c2e4c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "aaa6be6a-9d20-41b9-9cc4-849dcd46c8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbb9f98-7b9e-4fc1-8742-e074b29dbf89",
        "cursor": {
          "ref": "8010ab7f-d25a-450b-aab7-0c52af630464",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fe26fdeb-d97c-4cba-959d-81f3d32d0770"
        },
        "item": {
          "id": "8dbb9f98-7b9e-4fc1-8742-e074b29dbf89",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "626387b8-e013-4a4d-8c2e-c60187b89eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc31e69-55f3-47f0-a528-93ffb5fcde0b",
        "cursor": {
          "ref": "b124ed9e-979a-43f0-8ea3-d68dd771eb03",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "57ac1ad0-5307-4f48-93bd-2c5a145aabce"
        },
        "item": {
          "id": "bbc31e69-55f3-47f0-a528-93ffb5fcde0b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "308feba7-3423-4c2a-a18f-fc9f52647f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e204f7a4-242c-47be-aafc-b730f5f52d2c",
        "cursor": {
          "ref": "df556613-cf43-4f9e-a123-1535df78b451",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c6701d64-164a-4154-ac36-e2a777d6123c"
        },
        "item": {
          "id": "e204f7a4-242c-47be-aafc-b730f5f52d2c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "25e8758d-8268-4ca7-81dd-cb5dfb0fe023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643a2ea4-f860-4fc1-aa95-fb7b4c951e03",
        "cursor": {
          "ref": "c668cc6b-a78a-470b-86d4-c24185698593",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c33fadf0-d68a-482c-becf-684cdb029e50"
        },
        "item": {
          "id": "643a2ea4-f860-4fc1-aa95-fb7b4c951e03",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cffb867c-9a89-4cdb-ab1d-706253335139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b171ed-32e5-40c3-a4ad-66c60f45ebbc",
        "cursor": {
          "ref": "717085dc-af3e-40b5-9b92-58c0a30a6b26",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "08fcf58a-7a08-4018-8d74-8fbee8ef5e89"
        },
        "item": {
          "id": "34b171ed-32e5-40c3-a4ad-66c60f45ebbc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "95cd09b6-6cb0-407c-9981-d8d909be0f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54a8b77-360a-45c2-98db-3cc90ac31da9",
        "cursor": {
          "ref": "7b23f4fc-85bb-459a-95b0-09dc9344ba59",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3bdda87b-d5e7-448e-8e1e-c1b10032463c"
        },
        "item": {
          "id": "a54a8b77-360a-45c2-98db-3cc90ac31da9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "48b2da35-1288-43bb-a07e-471bf9b51cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467fb018-85e1-4f95-85fc-9e1f1974f411",
        "cursor": {
          "ref": "a2228d24-80b4-43c8-ab9b-68063062d248",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "de549eaa-03fa-478f-966e-f90a36943ac5"
        },
        "item": {
          "id": "467fb018-85e1-4f95-85fc-9e1f1974f411",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "df8ec7f6-881c-4085-b02d-144ef6c934c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d166d56-442f-4e82-bf61-19668b9616e3",
        "cursor": {
          "ref": "977fc55d-7037-444c-ab8d-b1c1d031271a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e8e3cb7c-f6d2-4b7b-981c-892771301d89"
        },
        "item": {
          "id": "0d166d56-442f-4e82-bf61-19668b9616e3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c0182ae8-e1d2-4ffa-869a-04ec6b95d48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f6b2d3-3b01-4bb7-8a69-7e483b3e1359",
        "cursor": {
          "ref": "8f550d1d-5c9b-417e-95c5-74b6540f5631",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bd8d5a05-8fb0-42a5-bdb7-6b22cf60af7d"
        },
        "item": {
          "id": "38f6b2d3-3b01-4bb7-8a69-7e483b3e1359",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "11a14d66-2954-4410-97de-4b13788dafbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ec62ba-6ea1-4a20-94b3-5f2d9a897b8f",
        "cursor": {
          "ref": "9b2ac29a-728c-414b-8620-00970327bf08",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "69acf3e4-ab78-447d-a6d2-8bc21648f1f4"
        },
        "item": {
          "id": "34ec62ba-6ea1-4a20-94b3-5f2d9a897b8f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "74492668-10c1-43d3-b8d6-0bdb65c4cae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a30349-f431-4946-a992-e0d805f68fd5",
        "cursor": {
          "ref": "7ff8d9c9-d8fb-4caf-a76b-eabacc240531",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1747f42d-0b36-46c1-8d61-9cff44ab446f"
        },
        "item": {
          "id": "40a30349-f431-4946-a992-e0d805f68fd5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ea46da69-fd0a-47a5-91d6-3c728a818662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab6745f-a934-479d-8b24-6ca487d0d506",
        "cursor": {
          "ref": "1a46cc34-8f4d-4159-934b-91222f7830e6",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a0d99f99-d821-4145-9ee1-4d9848181e9f"
        },
        "item": {
          "id": "6ab6745f-a934-479d-8b24-6ca487d0d506",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a389cc57-5df6-4d95-94e6-0b86858fb496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce99b5ca-a2a9-46a3-b5ba-f508289d21a0",
        "cursor": {
          "ref": "5fd1d4e7-097d-46cf-a3fc-e40811e0150b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ad436082-4a4d-48e9-8f5e-2f23922c54f9"
        },
        "item": {
          "id": "ce99b5ca-a2a9-46a3-b5ba-f508289d21a0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "34f98830-7523-44b6-b820-e70dc8548900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3df0a7-9528-4ca7-949a-3a1a508aabf9",
        "cursor": {
          "ref": "c62aba4f-581f-4eaf-81ee-7ff380bd3196",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "45610f12-e4c2-4a50-8c66-de0326d08c7d"
        },
        "item": {
          "id": "3b3df0a7-9528-4ca7-949a-3a1a508aabf9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fb2cb653-a5eb-46f7-996c-5f43b68de78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62251414-0c7b-42ae-9aa7-76e5abed22b8",
        "cursor": {
          "ref": "cbcd0dd8-9ac5-4083-a88c-dc87f8e9cdef",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1e5574be-7aa3-4774-8a15-6209529675ba"
        },
        "item": {
          "id": "62251414-0c7b-42ae-9aa7-76e5abed22b8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "045e8294-9e65-44e7-abf4-e97fe85a63b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acbcf96-0181-4ded-883a-051fa97d57be",
        "cursor": {
          "ref": "af4b934c-07f3-402c-809d-e8edebe039d8",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6d2b9745-752b-4c24-b6c3-ad6f09c1352c"
        },
        "item": {
          "id": "5acbcf96-0181-4ded-883a-051fa97d57be",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "58bd3772-5864-4126-ba87-f2e439c7eed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c824576-e789-4218-a7c9-527beea10034",
        "cursor": {
          "ref": "0ba80ea7-e45f-48c0-a339-ab059e3cab1c",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "eeed687e-b177-4821-a050-8e8909f009c2"
        },
        "item": {
          "id": "8c824576-e789-4218-a7c9-527beea10034",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0a70dcb6-c024-4347-be8f-de65914bb99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8202c83e-887f-403e-9da0-3c2be9231615",
        "cursor": {
          "ref": "5022f540-6f2e-4176-af93-e4d907fd4aa3",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "efe94f54-7bc6-4abe-b5b8-1ec59f1b38f7"
        },
        "item": {
          "id": "8202c83e-887f-403e-9da0-3c2be9231615",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a480adbd-23b4-4769-bfe0-ab0d76d9fb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33daee2f-9f73-4b8d-9e86-a54e9d22a58a",
        "cursor": {
          "ref": "e0a8350f-da35-489e-a646-9d045cba22e7",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f7cb0e76-b9a5-4065-8c10-a336ed4a231e"
        },
        "item": {
          "id": "33daee2f-9f73-4b8d-9e86-a54e9d22a58a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "9ada4960-13ca-4e73-91c1-9043bb42ad96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b5a857-05bc-4c6b-bc47-f577203faeac",
        "cursor": {
          "ref": "1fd9e2b4-a61a-4408-9b33-86253d0dcd6f",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0203847b-a6b3-4311-bcc4-44580a944358"
        },
        "item": {
          "id": "65b5a857-05bc-4c6b-bc47-f577203faeac",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "40fa12ed-c3b1-4166-830e-5ce6de4b7780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00aab810-a194-47ef-ab94-04051d035608",
        "cursor": {
          "ref": "9673190a-14e2-4c5e-9df1-bc2685746197",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3f2f9ef0-59d8-48ad-9ec7-6819d96e9400"
        },
        "item": {
          "id": "00aab810-a194-47ef-ab94-04051d035608",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6c52c0e6-ab7a-44b5-a6a0-e41f0f48cad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5967575f-6d05-414d-9841-ebc61b83a3a4",
        "cursor": {
          "ref": "9a7cdd7f-e10d-4a2a-a9f7-0968cee35138",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5940b925-3a3b-41a7-8619-d8ea3da05910"
        },
        "item": {
          "id": "5967575f-6d05-414d-9841-ebc61b83a3a4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8972a087-647f-4b8e-9181-1b306fd42e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9721826-9d6c-472a-a2f6-0caeb6bff9e0",
        "cursor": {
          "ref": "790163c8-fd58-48f0-b150-fdd297857774",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b2574cd6-814b-4e19-aafb-5f5ba85f3e16"
        },
        "item": {
          "id": "f9721826-9d6c-472a-a2f6-0caeb6bff9e0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f1750ee0-3ab2-451a-85c7-e32efa87ad96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed849a2-fff5-4e2c-9d4f-e43e69bd978b",
        "cursor": {
          "ref": "50116f89-121d-4259-809b-601fa24a0903",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "69059430-c945-4139-9a74-40535a16b564"
        },
        "item": {
          "id": "5ed849a2-fff5-4e2c-9d4f-e43e69bd978b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "791b423a-4f40-4fb2-823b-bebbb580cd12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66ffe7c-6769-4dcb-a977-60664cd9231d",
        "cursor": {
          "ref": "8b101cef-3365-42ac-86b0-334872cc8564",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6eb29a2a-5677-4e91-b1c8-d21069ef6287"
        },
        "item": {
          "id": "f66ffe7c-6769-4dcb-a977-60664cd9231d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "290c61cb-41a0-4843-9d35-d485eea53577",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb34a77-5552-48f0-a501-10aa82e33509",
        "cursor": {
          "ref": "f5368c37-3de3-42b7-978c-d80b1b8fefa9",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "450bcc70-f6ad-40e3-9954-f6d66926b47b"
        },
        "item": {
          "id": "feb34a77-5552-48f0-a501-10aa82e33509",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d8fb04f5-22d2-42d1-bfb6-a9269f2d3feb",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aaddb9e-d471-4969-a172-780ae7fac21e",
        "cursor": {
          "ref": "8b225a14-73a6-40cd-9c30-6c3f53a0e8c7",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a887e5ae-67cf-4522-b71f-82d19a5ef657"
        },
        "item": {
          "id": "0aaddb9e-d471-4969-a172-780ae7fac21e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "62a9a045-6497-4242-9479-c47a12b35e65",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "94538cb7-2039-4096-b1ba-b0ba78b6ef95",
        "cursor": {
          "ref": "a3be4a8d-1153-4cf4-8739-535cd8f676a1",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f40c651c-01ab-4675-bc66-7ad6a68ca9ac"
        },
        "item": {
          "id": "94538cb7-2039-4096-b1ba-b0ba78b6ef95",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "324242a8-c701-4aaa-a18e-c593038a4f19",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3021e83d-b287-43be-9c3b-ba0e20579d72",
        "cursor": {
          "ref": "2c8dc427-286b-4979-b850-14f589446bac",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "45b8ebfb-6c3e-4689-9208-cc01f7f1ba41"
        },
        "item": {
          "id": "3021e83d-b287-43be-9c3b-ba0e20579d72",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "013e4f5b-2ad1-4305-bf55-1331318802ae",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "523602cb-6b82-40be-91fb-25795a5eddd1",
        "cursor": {
          "ref": "11ff3a1b-f150-475e-9cc9-0bc2e2780798",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "32f804b1-690f-443a-8f6e-55c5b0f43400"
        },
        "item": {
          "id": "523602cb-6b82-40be-91fb-25795a5eddd1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bcb11424-2b40-4a2d-adea-9a530f0304a9",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963cf504-5970-4af7-9e82-5e9d3020a518",
        "cursor": {
          "ref": "5dba1d2e-f781-4f1a-a908-5d91a7b389f9",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ed85400a-a939-4fd0-8da5-83b7eff2de51"
        },
        "item": {
          "id": "963cf504-5970-4af7-9e82-5e9d3020a518",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4678a211-6427-485c-aec1-1a605c785886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bbbdf9-c9c3-4819-9a7d-3646dac40717",
        "cursor": {
          "ref": "46ca62d6-62ea-43e4-a704-8402603da221",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "102fadbe-e671-4657-b588-a07f0d44f1a2"
        },
        "item": {
          "id": "c2bbbdf9-c9c3-4819-9a7d-3646dac40717",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "88232103-ab2b-4060-ac68-373b12ffbc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d9944e-ccae-449e-9317-9acb7c9b86d3",
        "cursor": {
          "ref": "8b87fbde-5a06-413b-8381-fca42044ed62",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3e95aef6-dadf-4297-9370-ce8247e13538"
        },
        "item": {
          "id": "68d9944e-ccae-449e-9317-9acb7c9b86d3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c32b8dc6-f772-4e69-b6cb-cbb40c6f7fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0666cc9-2d40-473b-835a-bca4effc3821",
        "cursor": {
          "ref": "c0b1aba7-6d12-420b-a377-aac15d7933b5",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f8ccf503-d2dd-4979-95d6-324bd17f94ab"
        },
        "item": {
          "id": "a0666cc9-2d40-473b-835a-bca4effc3821",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8133e32b-0944-49d8-99a8-f80b9f1b2d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43240be5-31e9-4d0e-9061-3d0959a1b259",
        "cursor": {
          "ref": "e718ab8e-90e7-4a2b-998f-13889d344737",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c2f243c4-9abf-4f88-a60c-8e85f5b1747d"
        },
        "item": {
          "id": "43240be5-31e9-4d0e-9061-3d0959a1b259",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1029a120-e05f-4245-b023-283edfc06e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec5031e-2fd6-4578-a717-f6e9ac148521",
        "cursor": {
          "ref": "e1e7b716-11af-41e8-b25b-3129207b2891",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "39fd3314-34d5-44aa-a58b-14c61141a151"
        },
        "item": {
          "id": "8ec5031e-2fd6-4578-a717-f6e9ac148521",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "758f7825-cf0a-4d88-b701-b7bc52e27af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fb9a3c-f2dd-436a-84f1-45e4871c9b9e",
        "cursor": {
          "ref": "92271367-792a-459c-b50b-74a6ea5d9ae9",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4ceb17cf-14ff-4b9e-9d10-82098152500d"
        },
        "item": {
          "id": "43fb9a3c-f2dd-436a-84f1-45e4871c9b9e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8f69d2e8-a2ea-40e6-a0bf-30529ee986b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac42c2f9-1990-413f-8ef3-8c0773ac11a2",
        "cursor": {
          "ref": "a512d5b9-588a-4cae-9ea9-ec264d8b1ea4",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "59d1c75b-147a-4962-92b4-6b600430bc96"
        },
        "item": {
          "id": "ac42c2f9-1990-413f-8ef3-8c0773ac11a2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8fc05cae-5abc-46ff-b248-fbdd8b924855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aeb6e36-88c5-44a9-8f86-03d006653338",
        "cursor": {
          "ref": "cb3a9a06-6796-4820-9699-997eb50110e6",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f42c3569-c2d4-4bb5-a977-7bdf4b4d061f"
        },
        "item": {
          "id": "7aeb6e36-88c5-44a9-8f86-03d006653338",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "223686f6-1413-4f00-aebf-11852a34cf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cad956-edeb-498c-9510-dd41d0454e6a",
        "cursor": {
          "ref": "8822ca3e-c209-43df-9efe-40bfb775879a",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3a2175c3-7103-4a8c-8967-9b1795ebcd9d"
        },
        "item": {
          "id": "33cad956-edeb-498c-9510-dd41d0454e6a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2db95ba4-8198-4b75-ad4b-442998eb5b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b79ca0-08b4-43e6-9f60-3d0e504c9484",
        "cursor": {
          "ref": "b8b1a41d-a9df-4da0-8e38-f53a67e48fe0",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9e567a56-5e33-4d8a-86ff-43182258bb4c"
        },
        "item": {
          "id": "d3b79ca0-08b4-43e6-9f60-3d0e504c9484",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3f8125fa-ca35-4711-9e43-c512b7b80dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc259dd6-6e47-4309-a640-21e6f5524288",
        "cursor": {
          "ref": "40098461-3004-4f44-ae5f-965b6c21061c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3a29bafd-256f-4f80-a199-ca8925dc1653"
        },
        "item": {
          "id": "cc259dd6-6e47-4309-a640-21e6f5524288",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "adea49f9-bd6d-43f9-b825-f394b8b407bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e1bf43-9edb-4cb6-827d-37a744231132",
        "cursor": {
          "ref": "32af5f6b-a5f8-484c-99a0-44f926ddf0d5",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d863226d-ffb2-4636-ad8c-32a8db8ad94e"
        },
        "item": {
          "id": "e4e1bf43-9edb-4cb6-827d-37a744231132",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0aa787da-4870-4a23-b5fa-e0d4487b928a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1584727-661b-406c-8d79-ea2213d40f63",
        "cursor": {
          "ref": "15fcba56-0dd2-4c10-b0f6-078e9224a51a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5891a6bc-1cfb-496b-84cb-055a1d285a02"
        },
        "item": {
          "id": "a1584727-661b-406c-8d79-ea2213d40f63",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "91d81453-6ad8-44e1-9cf0-8550b61a8dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1f27a3-d3df-46a1-a826-d8377ff28f2e",
        "cursor": {
          "ref": "e3565424-b49c-465f-a552-79365e409ea3",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1cd015f2-8616-4a67-8d65-c2527059cf2d"
        },
        "item": {
          "id": "ae1f27a3-d3df-46a1-a826-d8377ff28f2e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b7acabe4-cb7b-447e-9168-0eb4f4a1f243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e269afc0-c75e-445a-9980-aa42bb5b06fa",
        "cursor": {
          "ref": "2ddada34-b10e-4895-a619-f04f3a43ddef",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1f3126e5-5904-4ca3-910f-2c8df3d81d46"
        },
        "item": {
          "id": "e269afc0-c75e-445a-9980-aa42bb5b06fa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3e520c18-17fe-4e15-855a-1cdf1390c88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bf915e-98e7-40e7-9a47-eb43e27b098d",
        "cursor": {
          "ref": "f79637d7-48a3-46a8-848c-3c6e88845d88",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f87c2ef6-15c2-4a25-b986-19e848d96dbc"
        },
        "item": {
          "id": "a0bf915e-98e7-40e7-9a47-eb43e27b098d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d7f8d5ea-5fcb-4562-9b12-bac21ec9a7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00cc128-44d4-4385-ae36-c2bf998368f7",
        "cursor": {
          "ref": "bd89e608-2879-4f1d-991a-e362ad48ff80",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "14269f0d-9c5a-408c-95e8-bc4343b10e16"
        },
        "item": {
          "id": "f00cc128-44d4-4385-ae36-c2bf998368f7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9968fd80-7539-45b7-94af-684aae14cf22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60a4ff5-16ea-4e2e-9e00-8c2da488cda2",
        "cursor": {
          "ref": "c702d070-b2db-4629-b132-4bf5b76c0251",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "384577fe-0e26-4070-8b86-36565d69fd80"
        },
        "item": {
          "id": "a60a4ff5-16ea-4e2e-9e00-8c2da488cda2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "559924af-9028-40a7-94a7-18e8cf323fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51216b74-7ba7-475b-a358-fad9b8d041fe",
        "cursor": {
          "ref": "5e625980-2d15-4886-a13b-82c2e6741ec9",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c2d18f57-3c24-478a-9978-de1ce6f15e76"
        },
        "item": {
          "id": "51216b74-7ba7-475b-a358-fad9b8d041fe",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "30f3e7de-c78b-442a-a6e5-766e013af313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be33ae27-a652-44b6-a42b-bccc1d830278",
        "cursor": {
          "ref": "8eae9bf4-c8bd-4643-ae6b-f80b00f7a080",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6619278f-4d34-4825-b58c-812967d700a9"
        },
        "item": {
          "id": "be33ae27-a652-44b6-a42b-bccc1d830278",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c07cc4a4-ec3f-45e4-8993-c5dfdc925a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb3488f-b188-47d4-aef5-1f848abb0827",
        "cursor": {
          "ref": "bfc39f65-1cc5-49f0-b3d3-1fd5d591978a",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f535b1a6-c968-48f8-8ae1-c411439c5e1f"
        },
        "item": {
          "id": "bfb3488f-b188-47d4-aef5-1f848abb0827",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1db429a8-c538-4bc1-b438-595228a9f04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89d0b34-43c2-4d35-8a7c-032c1a23e79d",
        "cursor": {
          "ref": "61f75bfd-d13b-418a-9e81-c38a8004b9fc",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7f0f56f6-090f-4c16-a15a-f3edf0304f90"
        },
        "item": {
          "id": "f89d0b34-43c2-4d35-8a7c-032c1a23e79d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "74a925ee-6a54-424f-bca0-04202d3546b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753c6e96-cad9-449b-be85-e5868e7f0e17",
        "cursor": {
          "ref": "f88a42fd-46ee-4ed5-92cc-9a4c52e4829a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fbbb889b-4008-498d-a6b5-8300fb64c1de"
        },
        "item": {
          "id": "753c6e96-cad9-449b-be85-e5868e7f0e17",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "30738364-9feb-435e-b8c6-860723e25712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa91ad98-0391-40a7-87ad-d2acbf601edf",
        "cursor": {
          "ref": "8d2c3cde-0277-4ef1-a51b-b08fd5dbe6a6",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "80eb6005-da81-4436-bdc9-cc352574d93d"
        },
        "item": {
          "id": "fa91ad98-0391-40a7-87ad-d2acbf601edf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "91873afd-5d37-44c7-8095-a2e608bf5d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4b83df-6638-4832-99f7-0c4d256ce3e9",
        "cursor": {
          "ref": "3368978e-8ff1-4171-9231-4d4f08a86c14",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3bd908ca-08fa-4a57-bf7f-95c8f4b37943"
        },
        "item": {
          "id": "6d4b83df-6638-4832-99f7-0c4d256ce3e9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "80049e39-5627-4d4a-9830-e3111ec20a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3265b09-4529-437f-a10f-cfebe728647e",
        "cursor": {
          "ref": "84362be1-f047-41be-83a4-40fed119d540",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e4c4bf4a-d87c-4e88-a1ce-0758e6dab450"
        },
        "item": {
          "id": "c3265b09-4529-437f-a10f-cfebe728647e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5389712f-9586-4354-8932-690ef13aff85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf604df-12dd-46d0-8c19-e2863b1bc882",
        "cursor": {
          "ref": "45d0ddb4-e964-4de0-9807-cec2c65bdb6c",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "184dd4bd-dff0-4ceb-b398-6a5f6609eb9a"
        },
        "item": {
          "id": "edf604df-12dd-46d0-8c19-e2863b1bc882",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e00d05c6-0331-4f49-861e-47c5fc960a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3f1eb2-003d-4ce1-a212-de7fe92fa309",
        "cursor": {
          "ref": "150ad3f9-8c46-4558-8eea-46b18fa44182",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3add536a-a7df-4fe5-b2e3-849a0db6857c"
        },
        "item": {
          "id": "3d3f1eb2-003d-4ce1-a212-de7fe92fa309",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d6d824ff-79e7-4e54-86c4-5249dd62a738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07823ea8-d026-44b2-9467-09ce51fd46f2",
        "cursor": {
          "ref": "a83f0062-a19c-4888-8f03-118f58b59e92",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a1ef634c-50f6-4b49-b42f-bc41bc8c4b72"
        },
        "item": {
          "id": "07823ea8-d026-44b2-9467-09ce51fd46f2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "415994a3-56c5-4ff7-94b6-a26180b39aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39162f9-38c4-44cb-b5ae-9f74ac8b4a91",
        "cursor": {
          "ref": "8a182ae4-c140-47e8-8431-9e13aca35aec",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f89aeb7a-5662-4ae8-a512-88e670b6ef24"
        },
        "item": {
          "id": "e39162f9-38c4-44cb-b5ae-9f74ac8b4a91",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "678fba19-0666-4baa-b1e1-8dd1b8199f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be47e6d4-7e19-4a6f-9e80-ae9290e2b8a1",
        "cursor": {
          "ref": "4170cbbb-7537-4844-b12b-2084cae1f7e1",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5a8c3fbd-27a9-469c-8f27-cfa64baeef0e"
        },
        "item": {
          "id": "be47e6d4-7e19-4a6f-9e80-ae9290e2b8a1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e26f64c0-6bf2-43b6-b124-320887ac4033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b4750c-99df-400a-a05d-ec88d89483c9",
        "cursor": {
          "ref": "604d0883-648c-4c85-bfd7-1027e4e565fa",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7b9c3e92-d425-477b-a135-1dac72d1d475"
        },
        "item": {
          "id": "c3b4750c-99df-400a-a05d-ec88d89483c9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e6cf9ec1-8387-45a8-9b43-8442b0fdadd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b1db37-f4b3-4600-9f79-38b0b0b95ee5",
        "cursor": {
          "ref": "62d6e62b-1cb4-44db-9d91-4df0515f5067",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5c749176-dbad-4311-867f-a0d2f37ac3a2"
        },
        "item": {
          "id": "91b1db37-f4b3-4600-9f79-38b0b0b95ee5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "edd513fa-c8f0-4f03-b7fb-70f2d6b18a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9ccea9-fbb4-4665-a02f-51598fe5fe8d",
        "cursor": {
          "ref": "6a4d1bac-6b82-4098-bea6-cd64dcc2070f",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "29b10cb7-e7c8-4bab-b053-e992b1c6b125"
        },
        "item": {
          "id": "0b9ccea9-fbb4-4665-a02f-51598fe5fe8d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2feda0ad-3c01-452c-b833-231db1c529b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c1e33e-5954-4bc8-a363-57a73910915c",
        "cursor": {
          "ref": "d9d89943-a1d7-405b-bcc0-8e9d4541e53e",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "69dd2d42-94bf-4380-ae9b-4f84d123ad4e"
        },
        "item": {
          "id": "60c1e33e-5954-4bc8-a363-57a73910915c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "165b5988-8aa8-4f03-81bb-3b00e8c275a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78762fff-c478-47fb-9235-c1db900064c1",
        "cursor": {
          "ref": "71825a34-c3f1-4520-a49a-8f6678fa2ef6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "42cedee3-c422-49a4-b3eb-1732420efc48"
        },
        "item": {
          "id": "78762fff-c478-47fb-9235-c1db900064c1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "917c5f1e-3bd9-468b-9240-ca84a185b05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb660f34-9a90-4f09-977c-b2cff33bfd55",
        "cursor": {
          "ref": "9f7ce80e-4eab-48e5-83c5-39fd78307854",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1f9515fb-f628-453d-b0e7-5b91ff472541"
        },
        "item": {
          "id": "fb660f34-9a90-4f09-977c-b2cff33bfd55",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4ebef96b-14d5-4c73-a7b3-0aaac59880ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f28100-2ce2-49f6-96cd-46406af2af0c",
        "cursor": {
          "ref": "ddc0c34e-4e5b-4a3d-98be-edda0ad9042e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0bca95b8-b5e7-4cd9-be14-468a4b675af3"
        },
        "item": {
          "id": "92f28100-2ce2-49f6-96cd-46406af2af0c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "61e24d1d-89ac-48ff-be21-a62fa4c7b59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad3f64f-c992-472b-9a61-5ec555e67531",
        "cursor": {
          "ref": "f532b454-014b-44a3-92a6-55c9c42bb8a0",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2232185e-5e39-4eac-acb2-2cc86d3e1eb6"
        },
        "item": {
          "id": "dad3f64f-c992-472b-9a61-5ec555e67531",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ccde598a-3665-4c26-9376-ff8ac336c2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a90e44-f8a7-49ea-9e07-5d16536ab993",
        "cursor": {
          "ref": "313edf26-d543-4cfb-8c26-ca878260892e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9d06a131-9929-4291-beec-635b027f445c"
        },
        "item": {
          "id": "b5a90e44-f8a7-49ea-9e07-5d16536ab993",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fd41704b-07dc-476e-a2b6-39b641480c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1eade80-31de-49e4-a038-1eb47b420e2f",
        "cursor": {
          "ref": "7636cd4e-ce3a-4694-b82f-2a16f9a66b30",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c6e97516-259e-4436-a15a-1afde01de8ea"
        },
        "item": {
          "id": "a1eade80-31de-49e4-a038-1eb47b420e2f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1b50ada3-1030-4fdc-ab27-0c02ffbd6d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee7811d-6f24-46e8-8149-d88e326d85be",
        "cursor": {
          "ref": "f4e2f47b-1159-47c2-b4e1-1073c2cf82d4",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ac6c9ae3-33ab-421d-ba4e-9bfd492521c8"
        },
        "item": {
          "id": "5ee7811d-6f24-46e8-8149-d88e326d85be",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "aa8464bb-e095-45b2-8d31-777b3c18937c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56fdc74-c381-4246-aabc-bc847d20aafd",
        "cursor": {
          "ref": "0c0e72f6-4a77-40fa-b274-9b4bd34944c6",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7a61ce99-385a-45ef-99c8-2e44391b501b"
        },
        "item": {
          "id": "b56fdc74-c381-4246-aabc-bc847d20aafd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e68bf810-cc7e-4de3-8bb0-0ad243f92fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d641c0fc-443e-425b-8072-e6c92cdd21f4",
        "cursor": {
          "ref": "b62299b4-1df7-434a-bc8d-207e38b1dff4",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d006ea46-ce73-4881-9fe8-cdf75a9baaf2"
        },
        "item": {
          "id": "d641c0fc-443e-425b-8072-e6c92cdd21f4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "50b3416e-f4d9-41a2-b0b3-975451d1a890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c52636b-27e2-433e-9b60-e09a06efad05",
        "cursor": {
          "ref": "92090611-8425-495b-9214-60ac85c4f431",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f615ae5a-68bf-4e7d-8cee-eb4387af6664"
        },
        "item": {
          "id": "5c52636b-27e2-433e-9b60-e09a06efad05",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "25383c9c-9490-42c6-b5d6-80cc5af22171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c549b6-7ce4-434a-b6c4-8917424357b8",
        "cursor": {
          "ref": "5082167c-3c3e-40d4-bdde-fe4f6ef70926",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e58c8d1a-9045-4b7e-be24-579d56cbcdc6"
        },
        "item": {
          "id": "33c549b6-7ce4-434a-b6c4-8917424357b8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "03ebe1ba-15f8-46e3-a1eb-0933239827ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43472813-a315-4763-9a38-d09ac2c8a8e4",
        "cursor": {
          "ref": "f6b1753e-3c9c-4980-b720-e1efbb514a91",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "03aedfa5-5002-499e-a5c9-692681b0e48c"
        },
        "item": {
          "id": "43472813-a315-4763-9a38-d09ac2c8a8e4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "93ffcde3-3578-4913-a366-2262ae3e1b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce829d0-06f1-47da-9b6d-36ebbd5f57e7",
        "cursor": {
          "ref": "976f3805-8858-4e4f-a9a1-ceba7b3610e3",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a8fa2f95-e225-4153-b1a2-dfd2646f8d9a"
        },
        "item": {
          "id": "2ce829d0-06f1-47da-9b6d-36ebbd5f57e7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b119044c-719d-4fc3-8297-3d24cd33434c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be27d7b-403d-4f17-a0ef-045a4692f2c5",
        "cursor": {
          "ref": "879a9f38-c1b1-4997-ac7f-6a60c9dfa629",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f64aef03-24f7-4a8d-8f23-f6643c155484"
        },
        "item": {
          "id": "2be27d7b-403d-4f17-a0ef-045a4692f2c5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cabc103e-a11c-4892-8ab3-be4cf312e3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b88db5-679c-4ee0-9c83-1558e4d0dfa4",
        "cursor": {
          "ref": "02dfd9d8-b49f-4bc9-a9fe-1c36d8af9fe1",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bace9d8e-ba8d-45c9-9ee0-8593713a5563"
        },
        "item": {
          "id": "99b88db5-679c-4ee0-9c83-1558e4d0dfa4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bfc6be2b-3c07-4e19-b352-53f8146ccbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4806158-5a4a-49b3-b7ee-ff737cb72232",
        "cursor": {
          "ref": "a037207f-8cf8-4309-991c-5becd9998467",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "efcb9fb7-b588-4e2e-b974-21803359d161"
        },
        "item": {
          "id": "b4806158-5a4a-49b3-b7ee-ff737cb72232",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "93f5e914-c62f-413a-964e-2c8fa4dbd523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9f0c62-32a8-4700-976a-7cebc84c9afd",
        "cursor": {
          "ref": "70f89fa5-e241-4aae-8090-6d1233b5ee31",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0b5453bb-79d3-4a0e-bcb4-957ef7728869"
        },
        "item": {
          "id": "bb9f0c62-32a8-4700-976a-7cebc84c9afd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e5b0a891-f32b-41d0-a0ff-5806656aa2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1f8628-fece-4fc8-a977-471c78bdad19",
        "cursor": {
          "ref": "bb120e85-d23a-44d1-b987-37041f96358e",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f40715d5-c899-41ae-88c5-adc788f3582a"
        },
        "item": {
          "id": "4f1f8628-fece-4fc8-a977-471c78bdad19",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cdadfafe-7fb9-4e10-8e33-8dfed998b457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db40e61-3cef-4712-a4ff-0c0aaedc8ff3",
        "cursor": {
          "ref": "e342688b-f078-402f-a44b-31f868fa6459",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "005f54f9-b6d9-4b54-b9ba-4886a5dd9023"
        },
        "item": {
          "id": "2db40e61-3cef-4712-a4ff-0c0aaedc8ff3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7f9e238c-8ed6-4c74-a048-cbe6f8163a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063c08c9-3e48-40b0-87c5-905059d992d2",
        "cursor": {
          "ref": "7b464bec-9cb1-480d-8262-b2d17766ca27",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1b3b085a-a7a1-43ea-8aa6-63076a903707"
        },
        "item": {
          "id": "063c08c9-3e48-40b0-87c5-905059d992d2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c58fc087-4a89-465c-a72a-02d6053d9c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194811dd-7335-4d0d-8a21-a861cf5daefd",
        "cursor": {
          "ref": "daec31f4-d7f8-4327-8135-efc8528f2cbe",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d4228190-4cd2-472d-80de-e2b0c3489c8f"
        },
        "item": {
          "id": "194811dd-7335-4d0d-8a21-a861cf5daefd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "01115dad-56ef-46fb-bb67-4a0708e32113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbdb638-0615-467a-8326-d86f7de0e6b2",
        "cursor": {
          "ref": "3e91cc5d-30a5-44dc-a1e7-df5f923ca486",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "857cadd9-2e76-44aa-9526-8b1474a1c6a3"
        },
        "item": {
          "id": "ddbdb638-0615-467a-8326-d86f7de0e6b2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2a062ab7-8cdf-41a1-bffd-73b1e5b26f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414f6dce-c8b7-48d7-a0d8-0082bb3c5198",
        "cursor": {
          "ref": "58843c57-0b0d-42ae-ba17-b0d587c176ba",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0097f044-cb3b-41d6-b25c-362469be109a"
        },
        "item": {
          "id": "414f6dce-c8b7-48d7-a0d8-0082bb3c5198",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b16c0b2b-7a73-4390-b2a7-df9e7456d2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae151c1-b16d-49b9-a074-4f27eb8282cc",
        "cursor": {
          "ref": "b84bf36b-0451-4835-ad95-8fbbed29d865",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "622244a4-98ca-454d-baae-f8c58a361b05"
        },
        "item": {
          "id": "3ae151c1-b16d-49b9-a074-4f27eb8282cc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7c8fbd4a-1601-4602-8ab4-b760f6a342ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677b6519-ffb5-4b48-a3e2-aa928d2a8290",
        "cursor": {
          "ref": "fa66a3b2-2b04-45a2-8464-7656725bc0ab",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dc22c529-5763-48cd-a3cd-91bd30c08677"
        },
        "item": {
          "id": "677b6519-ffb5-4b48-a3e2-aa928d2a8290",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7847947b-6843-43d2-b906-223a593347c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0400f422-c411-48e1-b58f-08be89480a06",
        "cursor": {
          "ref": "20d93631-a7e1-45d8-a084-541ed7521110",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "73db91fb-4f19-43a8-bde2-2d2495d5b51b"
        },
        "item": {
          "id": "0400f422-c411-48e1-b58f-08be89480a06",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "17ca4035-9b78-4ba3-9a20-061e5f70d554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3a62a3-fc4b-4e9f-bd05-b2cce20990da",
        "cursor": {
          "ref": "4a071a48-8615-45fe-9025-f9e9fba67354",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "79ed1887-8ed7-42df-b3c5-9454982743a6"
        },
        "item": {
          "id": "3e3a62a3-fc4b-4e9f-bd05-b2cce20990da",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e8728c72-3ea0-4e5a-997e-7b5df00e0c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589016f3-47f1-4ed0-a49d-95fe7d3fcdfc",
        "cursor": {
          "ref": "92c9b1f0-1785-49b3-87d5-92a8c75bb6e9",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "84fd8483-009b-4452-a64c-dfef00076c10"
        },
        "item": {
          "id": "589016f3-47f1-4ed0-a49d-95fe7d3fcdfc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "44d7dd1d-8900-47f2-8c09-b4a8accb4560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3dbbba-d35b-4c7b-b7f7-c5857e81b0de",
        "cursor": {
          "ref": "77ccabf7-16f5-4143-9677-6709a22b03ef",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "aa2abfbb-ea84-4798-82be-e272760e3800"
        },
        "item": {
          "id": "dc3dbbba-d35b-4c7b-b7f7-c5857e81b0de",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1aa2b262-8595-425d-9324-b741ec275c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586ebab2-f554-4650-af66-4c5eea7b95fb",
        "cursor": {
          "ref": "64e7dde9-33eb-45ce-9e79-9c2e293eea93",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "00a2c6a8-daee-43c9-acc6-83c7ee1d13f4"
        },
        "item": {
          "id": "586ebab2-f554-4650-af66-4c5eea7b95fb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "216089e2-0447-4697-8850-fd9dff77f887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9384fe-5bd1-4ea9-8b48-f473adb6b737",
        "cursor": {
          "ref": "0f33a55b-6560-4753-b7b5-21769276dc6b",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "34f31e3a-7332-4623-9c41-16fd686d45dc"
        },
        "item": {
          "id": "1e9384fe-5bd1-4ea9-8b48-f473adb6b737",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6b9eb1a9-4f8b-4a0a-aaab-da0e03ab19ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9b5d64-e3bc-49f3-ba1e-e4d2f5a0638a",
        "cursor": {
          "ref": "bdf53e04-ecae-4942-ad43-9f825240fdd0",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c9fb524b-5ba0-47a7-94b0-7efb27f4f801"
        },
        "item": {
          "id": "3c9b5d64-e3bc-49f3-ba1e-e4d2f5a0638a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5b5690a7-46d2-4aa6-957a-25ebd1262826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35e902e-1ca3-4602-8efd-5e93f3555676",
        "cursor": {
          "ref": "7fbd3288-2fe0-4744-94e1-bcaa718cb94a",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c71f3b0f-9ebf-4f1c-b846-418998413ee4"
        },
        "item": {
          "id": "d35e902e-1ca3-4602-8efd-5e93f3555676",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "284aa8c7-b948-4132-80da-a61f2e1ebff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a0b914-cc4c-4bb8-97c6-2cf1cbf42374",
        "cursor": {
          "ref": "9c43aeab-333c-46c8-80c6-57cb0318a809",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "753c219b-ec40-4b57-87fe-cfac89299488"
        },
        "item": {
          "id": "c9a0b914-cc4c-4bb8-97c6-2cf1cbf42374",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "aad3aac8-a218-4b84-a94d-f295d8260689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16f5af8-00cd-4cfd-9668-6b0202e8f09b",
        "cursor": {
          "ref": "51fc5bde-040a-4449-9451-3a09800ca3f8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0c14e524-3ddc-4028-b8e0-3914628cb2d4"
        },
        "item": {
          "id": "d16f5af8-00cd-4cfd-9668-6b0202e8f09b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d92b9670-2f52-4081-84c7-864100b6fedd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f089a8a-067c-4d67-90b3-a67d1cb886ee",
        "cursor": {
          "ref": "5078bbee-0770-4133-9c7f-502f9bf0e73b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "16c3eeda-6087-48bf-9ef2-a63623f9f158"
        },
        "item": {
          "id": "9f089a8a-067c-4d67-90b3-a67d1cb886ee",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fd7b2e78-c04c-458e-a049-0419821fee97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08264186-6d00-43cb-925a-a5ff92a06125",
        "cursor": {
          "ref": "93be031f-a65f-41fb-aab2-231df145ba6f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "91e3a5cb-3f8b-4103-99b0-c8d4d82e1135"
        },
        "item": {
          "id": "08264186-6d00-43cb-925a-a5ff92a06125",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d07a6d90-cac2-41f0-864f-23f4f697106c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ec5648-4095-4a3f-b25f-f82ba5f0d647",
        "cursor": {
          "ref": "692d50a1-39ca-4ed7-a341-8f7ab902daab",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1761b4b8-bf4d-4f85-86dc-2b4d5a1b8579"
        },
        "item": {
          "id": "57ec5648-4095-4a3f-b25f-f82ba5f0d647",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b94a2b88-33d5-433d-8d99-78c4b30658c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d4c69b-6c28-486a-8e61-9ed69e942a51",
        "cursor": {
          "ref": "cb4f9677-a203-4a7f-acc7-b98947f51bf1",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c91458a0-5538-4ef1-9f23-ca438aaa9241"
        },
        "item": {
          "id": "80d4c69b-6c28-486a-8e61-9ed69e942a51",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ad104f8f-2858-4478-99b3-c2d91bc4be4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca95f7ca-838a-44eb-9a74-b368de0743ff",
        "cursor": {
          "ref": "a2268ff8-23b6-4722-bdd5-cb23f175a3c8",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3f4cab06-fcbd-4768-9640-92146e65fd88"
        },
        "item": {
          "id": "ca95f7ca-838a-44eb-9a74-b368de0743ff",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "15d658e4-1e01-4a88-a837-6e7ca747965e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee779a5-7a41-4290-b628-a25110b525ed",
        "cursor": {
          "ref": "bd6830d3-7f46-4e49-bb4b-1f1b36c833c6",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "de3acf2c-11a4-4eb7-a34b-72e8d9d7e983"
        },
        "item": {
          "id": "eee779a5-7a41-4290-b628-a25110b525ed",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "941d8c66-3999-40fb-a3e6-2e2ebd5852c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af76697-01d4-47f7-84f1-f0770618ec37",
        "cursor": {
          "ref": "06b14187-ce82-4bee-aef6-49099bd10129",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e0db6299-027f-4118-9a0b-41c9f5d82638"
        },
        "item": {
          "id": "7af76697-01d4-47f7-84f1-f0770618ec37",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6fafb491-3aa1-45e9-8375-56d0c7d17870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a298bae3-f3a5-4e33-aa49-0fccdf96ec21",
        "cursor": {
          "ref": "4084d989-38d5-4ef5-b1c3-13f2c14ea9e2",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cab0c122-b254-41a5-b798-9ae547ff7c47"
        },
        "item": {
          "id": "a298bae3-f3a5-4e33-aa49-0fccdf96ec21",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4838e822-cc11-41c4-b398-8706e3bbbc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ed1598-e9be-4199-bc8a-1ce0280b717a",
        "cursor": {
          "ref": "f18feba4-843a-4692-85f3-30a1a1014121",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d97b2ae5-be5d-4b5c-8198-c70a719643a0"
        },
        "item": {
          "id": "93ed1598-e9be-4199-bc8a-1ce0280b717a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a8a560ba-cf7c-42b4-822b-e56b639127dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d775b615-c732-4e00-9b37-c7605aeb2245",
        "cursor": {
          "ref": "81ac8494-b5d8-42a8-9d69-745901c56ddb",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c1ad5bc1-0b4e-4768-9df7-bcae4f1520ba"
        },
        "item": {
          "id": "d775b615-c732-4e00-9b37-c7605aeb2245",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "193af87c-edb9-404c-847d-106ecb232a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0941fdf3-673f-43e3-9053-1bc849f46d7c",
        "cursor": {
          "ref": "ef2d0e3c-4247-4704-8127-f2dfeb740615",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0287fd29-45d8-4d60-8b08-3509da87b6ea"
        },
        "item": {
          "id": "0941fdf3-673f-43e3-9053-1bc849f46d7c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "082296e1-e69b-459d-9ffa-243af143bfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66caabac-7c99-40d1-a13b-1be552a9bcce",
        "cursor": {
          "ref": "d01ea057-da7b-4079-9ac5-b3e988d80471",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d7d7c2a5-550c-40e8-b147-4fccd5b67c9c"
        },
        "item": {
          "id": "66caabac-7c99-40d1-a13b-1be552a9bcce",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1c2507c3-a487-4d0e-a2c6-1a3a02f237d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb94fe1-b39d-496b-ac47-2a9291af541e",
        "cursor": {
          "ref": "4c46078a-85a3-47e6-9151-562c1f77e994",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6655e6d3-ceed-4ce5-a72a-dcbe05bd60d0"
        },
        "item": {
          "id": "feb94fe1-b39d-496b-ac47-2a9291af541e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9a52a961-47c7-4a9d-ab2d-c9517a9d0102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e0034c-9da3-4221-9322-685d83d44725",
        "cursor": {
          "ref": "8432df69-8eb1-49d2-9b02-72eaccbc39e9",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d55477e7-5fe0-4764-a7af-0b519835a6a5"
        },
        "item": {
          "id": "36e0034c-9da3-4221-9322-685d83d44725",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9ed2244f-b6f7-4a79-a153-f4ce41c2eb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b989af2c-25ed-4469-a78b-24362a274586",
        "cursor": {
          "ref": "3ce14447-c9d3-48d5-907f-826c391f3c44",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ba9ff881-d595-46e2-88f3-1f4a09314b85"
        },
        "item": {
          "id": "b989af2c-25ed-4469-a78b-24362a274586",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "61b14616-36e9-4234-904b-a7bf66fdce36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d18468-17d4-41e1-8bc5-229691a23028",
        "cursor": {
          "ref": "55e9b4ce-9e23-4b43-95ca-c9da17a89b71",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "aa838dcd-ea2d-427f-a60c-f8dfa75c7196"
        },
        "item": {
          "id": "c0d18468-17d4-41e1-8bc5-229691a23028",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "01fe0d71-c33c-419f-872e-d2ba76592bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fb36ae-f53f-488d-9be0-6a117756448a",
        "cursor": {
          "ref": "168af8f8-7b8f-4bdc-95c2-e3d0b4f34164",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "93689376-d915-43ae-b1c1-69961feabd27"
        },
        "item": {
          "id": "a2fb36ae-f53f-488d-9be0-6a117756448a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9e17a9ea-2c9e-4292-97c8-236d0dc46811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fa188c-bbf3-4d93-bf00-5ca6a7dd87dc",
        "cursor": {
          "ref": "d4547a3b-d1b2-4ead-8bcb-d78197bd4fa5",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "77168c09-a1f9-40f5-94ff-a3e80e951154"
        },
        "item": {
          "id": "a1fa188c-bbf3-4d93-bf00-5ca6a7dd87dc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0d9a8d81-6dd0-4efa-9736-64c3a1531874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff946d6-ba39-4cdb-ac0b-40c8e87b1449",
        "cursor": {
          "ref": "603e50a0-de57-43df-8553-7973a74e389f",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "29fad618-f6bd-4c51-bd8f-6eccb26c723e"
        },
        "item": {
          "id": "6ff946d6-ba39-4cdb-ac0b-40c8e87b1449",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2abff8b6-c2b1-456e-aefb-99ccf10b3bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e62382-1da1-4cc5-a1a0-908c486d100b",
        "cursor": {
          "ref": "33745c06-6cfd-48d8-8d91-4b7b94a571ca",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b85b2fa3-614f-4057-a9a9-cf6fd81efb19"
        },
        "item": {
          "id": "62e62382-1da1-4cc5-a1a0-908c486d100b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8d1f4203-03ef-44fc-8e84-64c728e4a456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8426da-380e-4aca-81bf-04db50bc74d1",
        "cursor": {
          "ref": "06597a9e-3578-46c9-98e9-a0f13c3c0a3a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ed5c8154-236c-4fb1-9dcf-b5ccf95c009d"
        },
        "item": {
          "id": "bc8426da-380e-4aca-81bf-04db50bc74d1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bc41eee2-8748-465a-9c89-5bfb5b7144ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55674cf5-22af-4aa2-a522-e94674eb98e5",
        "cursor": {
          "ref": "4e8e4eff-664c-4a8d-bc70-dfe50749b3f8",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c80475c0-9e3c-4fdd-a3be-ca3cac7ab45a"
        },
        "item": {
          "id": "55674cf5-22af-4aa2-a522-e94674eb98e5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "787599cf-a3c9-4860-82c7-0443fab94d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee52b11-59b5-48a5-88a1-614ddd3e1ff8",
        "cursor": {
          "ref": "2ee1db35-13bc-4a58-b1e2-23958fbcb5a2",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b11ea1ca-5a3b-4be0-94d2-d13d901b54a8"
        },
        "item": {
          "id": "6ee52b11-59b5-48a5-88a1-614ddd3e1ff8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1dee40f5-88c6-43ea-b663-1b4a11ed374e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34617c90-25cb-4c5d-b307-2016aeeeb34d",
        "cursor": {
          "ref": "3859be12-55f5-47c3-a4c5-4b421156b370",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7b80859d-d25b-4688-8d95-a5e9ee6825ec"
        },
        "item": {
          "id": "34617c90-25cb-4c5d-b307-2016aeeeb34d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d902fe0b-4a95-487b-ac33-8b2bb342646c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7dcffc7-7944-46f5-a8bb-c9f5b28dd165",
        "cursor": {
          "ref": "0389ad4c-36a0-4ec8-a8de-287470459b25",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "274c7eae-e612-4bed-8b4b-20228d0e319a"
        },
        "item": {
          "id": "e7dcffc7-7944-46f5-a8bb-c9f5b28dd165",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ee5cab16-0619-4060-a338-c8dded050261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091b1d09-4756-4657-a78d-32dd7497ff37",
        "cursor": {
          "ref": "9709a267-86a2-43c1-9ca9-64b9a6a80b43",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4809915e-9b96-4e08-96b1-3b314b225674"
        },
        "item": {
          "id": "091b1d09-4756-4657-a78d-32dd7497ff37",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1101424f-f3c5-4a31-8307-7a21ac8c1315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c781cc-fdff-4034-9508-ab7628013159",
        "cursor": {
          "ref": "fa14397e-6c03-4922-9172-4c638c592a3d",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0c5bb656-6496-4c95-a935-c188fd0f1d2c"
        },
        "item": {
          "id": "91c781cc-fdff-4034-9508-ab7628013159",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bee4e34a-01b4-443b-b003-c940a8c317de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cae3e8c-16fb-4df3-93a3-7f866eb53e04",
        "cursor": {
          "ref": "b870d125-c159-45d0-a042-4a89c3a1c7d8",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "46a043e6-c50a-400c-b5ed-59520b75887f"
        },
        "item": {
          "id": "6cae3e8c-16fb-4df3-93a3-7f866eb53e04",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "175971d8-6a1f-424e-b1b9-4aeb51b3c4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f10344-b227-41f3-ab0d-4adcf346ccb3",
        "cursor": {
          "ref": "132cbaeb-a835-46e3-bc6f-e27188cceeaf",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4cf5e0a9-ccfd-4cda-a1f8-ef8c1715c8db"
        },
        "item": {
          "id": "d4f10344-b227-41f3-ab0d-4adcf346ccb3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6037e150-6422-4c8e-89f2-aeb6f22010e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3681217a-1efc-426e-86b0-260a35493357",
        "cursor": {
          "ref": "fbc8c350-b830-403c-adf5-9be6d627db76",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b444548a-b99c-4145-908c-81b3b594fd18"
        },
        "item": {
          "id": "3681217a-1efc-426e-86b0-260a35493357",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7d793b94-ad5d-4add-ab00-6c7677c9abb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45391aa-dccd-45ac-be13-ede442dc36c5",
        "cursor": {
          "ref": "f32e18de-1d0c-40b7-9161-8068f10376fa",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d5441206-a3a3-4364-8227-27f6680df989"
        },
        "item": {
          "id": "a45391aa-dccd-45ac-be13-ede442dc36c5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "88beaa02-2cd3-4f66-8850-0b6213ff7ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c2e35e-883b-4c7b-a52e-6f4f3975c3a3",
        "cursor": {
          "ref": "9bd305bb-bc46-4cc6-a7c4-51a252e58abc",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f16a4799-2846-4172-905d-a5d4bbccf116"
        },
        "item": {
          "id": "c2c2e35e-883b-4c7b-a52e-6f4f3975c3a3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7f812217-f133-408f-a8f2-de37b0e45369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ea8919-72d5-47c2-965f-ef7c48bbb80b",
        "cursor": {
          "ref": "47d3bf5b-4a3d-4a83-a694-d266a6c1b6a8",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4ca1920f-e3e6-41fe-86c5-7b6b635fff4c"
        },
        "item": {
          "id": "78ea8919-72d5-47c2-965f-ef7c48bbb80b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d9c8d684-7592-4929-a956-b650a320a865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcae34f-cfe4-4300-aa32-e7dd99896860",
        "cursor": {
          "ref": "133c6d9a-c9be-4a26-9cb5-7ad236dc327c",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5396b558-b2ac-4d63-ba32-0f98527e56b8"
        },
        "item": {
          "id": "0fcae34f-cfe4-4300-aa32-e7dd99896860",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0a98c466-7d6c-45d7-adb4-4ae3c653ce89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a856528a-b032-4fb3-9aa9-d8fbb0099952",
        "cursor": {
          "ref": "d5073e0b-90bb-4edc-b427-b55ae829ac4f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0f94d8ce-b8b5-4749-93a3-0731c2d8dd79"
        },
        "item": {
          "id": "a856528a-b032-4fb3-9aa9-d8fbb0099952",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2f60c379-df7a-4d56-b2f2-6dd1236e63d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b7cb93-c36a-4c1f-bd14-d054ac5b15c8",
        "cursor": {
          "ref": "ccb4dfcb-9db6-4c4a-b3f9-80067574d300",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "88ac1d58-8111-4456-b311-e3c1e0645aed"
        },
        "item": {
          "id": "49b7cb93-c36a-4c1f-bd14-d054ac5b15c8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8a5b9c61-dbcc-456e-8ccd-45b9a7bb8119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7977fb06-4056-4003-8a02-ff6fac36789a",
        "cursor": {
          "ref": "675b9fd4-b00e-4251-8392-42c7ca3eac53",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "508558fe-ebf5-4806-a888-02cc681f7e57"
        },
        "item": {
          "id": "7977fb06-4056-4003-8a02-ff6fac36789a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a3ba71da-9e0c-4653-940e-6cc28d5dcc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a579ccc9-8cb1-4bf9-8273-698bb22ae53f",
        "cursor": {
          "ref": "d1872ead-fe61-4074-ba6c-afa51e222719",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "18c580d2-5a37-4614-b0f0-4f8e031b89bf"
        },
        "item": {
          "id": "a579ccc9-8cb1-4bf9-8273-698bb22ae53f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "337f01e3-b00f-4f4e-b2c4-7070ae9fc034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b2ffcc-ad6f-4933-ba67-07e146b7210b",
        "cursor": {
          "ref": "b7db3dbf-7924-4eb4-a240-6f290fe0f9fd",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5261cf72-92e4-4f5a-9447-f1a5f79b47a6"
        },
        "item": {
          "id": "e4b2ffcc-ad6f-4933-ba67-07e146b7210b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "89996129-78a8-47c8-a068-85c0a30cf7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96126ed-9e6e-4417-9227-ed6bdd0a27bd",
        "cursor": {
          "ref": "9dc7f4c9-f693-40ab-a950-30db9da6033b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6c892113-f98b-47dd-8750-20b961637b91"
        },
        "item": {
          "id": "d96126ed-9e6e-4417-9227-ed6bdd0a27bd",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2ad72623-e682-4151-a529-46678094a68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace2da15-1527-4cb7-b056-ca24e2804f8c",
        "cursor": {
          "ref": "c988f2fc-fe97-43c1-8c40-fd09a7ae9d1e",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2e850061-a261-4c13-aa83-4daa7bfb3d6a"
        },
        "item": {
          "id": "ace2da15-1527-4cb7-b056-ca24e2804f8c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1b1eff25-fca8-4c4a-bcbc-2c33cde7063b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dad979b-c825-48c3-9cc4-535bea4ec656",
        "cursor": {
          "ref": "b74cdb7c-4fde-47ff-bd66-2eed35a023ea",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d277f915-9904-43fd-8156-4b233587f0b8"
        },
        "item": {
          "id": "1dad979b-c825-48c3-9cc4-535bea4ec656",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8046d5c2-b04f-4852-934a-07784f1934ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecf7eac-4d70-4124-b121-30b4fbf8416c",
        "cursor": {
          "ref": "6351ccfd-175b-4165-be1a-6d5bd8d1ad84",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "441074e3-a293-41b6-9784-41400a6be998"
        },
        "item": {
          "id": "fecf7eac-4d70-4124-b121-30b4fbf8416c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0f32f680-38e1-4eea-88a3-26e334775ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187776a1-0b2a-4abd-8c27-8a4b274d606a",
        "cursor": {
          "ref": "696133cf-7f26-46e6-b20e-fb9502300527",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "63ebb352-796f-4029-a146-c23d7d5e79c6"
        },
        "item": {
          "id": "187776a1-0b2a-4abd-8c27-8a4b274d606a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "877ee503-305d-4f1e-bdce-20218e53c6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3c908a-58a4-4674-b5ed-3e1d3b467b2c",
        "cursor": {
          "ref": "c8787870-ede7-4e55-b8d0-f741283603f5",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "467075eb-6c67-4ddc-8ddd-c03f44448e64"
        },
        "item": {
          "id": "7d3c908a-58a4-4674-b5ed-3e1d3b467b2c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b3258676-71cb-481c-a682-7771ebd36186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509c4fc0-94ff-45a3-a74d-6392cea42cac",
        "cursor": {
          "ref": "727ccf41-cfe5-424d-b445-f44e553e52d6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "db132089-bcc6-46ec-a2c1-30e11f60c5e0"
        },
        "item": {
          "id": "509c4fc0-94ff-45a3-a74d-6392cea42cac",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f3c94b4e-1c85-4249-9b45-6a8244545043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dccfce-5b74-4831-b724-9d291e84cb07",
        "cursor": {
          "ref": "fd298115-d277-467d-b1e0-1d92160a6b45",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "090f00b8-215c-40df-9a8f-d1bf7ec1809a"
        },
        "item": {
          "id": "d9dccfce-5b74-4831-b724-9d291e84cb07",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "16b8a5b4-ae6f-4971-b10a-651826427a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b4f0b4-a8d8-4e5d-9575-b56225980db1",
        "cursor": {
          "ref": "afae19ae-0430-4233-ae36-2d6669fabbfd",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8cf067ef-01ae-4d2a-87c7-7546ae380843"
        },
        "item": {
          "id": "38b4f0b4-a8d8-4e5d-9575-b56225980db1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a9372ae2-ca02-4df7-a368-47bb3bdf4236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096e8c6f-f036-4c5f-bdc0-a1d0f525a45e",
        "cursor": {
          "ref": "635bd138-145d-4596-aabe-4b514a5714b0",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "676c2be1-3d40-4d69-8a99-42289b11fed5"
        },
        "item": {
          "id": "096e8c6f-f036-4c5f-bdc0-a1d0f525a45e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7a370374-f58b-445c-8dd2-2f17cc9e538b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ca7190-2dae-4433-8bd5-68ff08385634",
        "cursor": {
          "ref": "fde5b4e7-e9e3-4eee-8e89-1247fd076b9a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "12f348b5-cf11-4e89-aab3-a764af00707c"
        },
        "item": {
          "id": "78ca7190-2dae-4433-8bd5-68ff08385634",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3a65a177-d4bf-4435-8e30-f3f368c89cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49301f07-a415-403a-8771-0a709d7fd0a3",
        "cursor": {
          "ref": "4518508e-034d-46f1-99e8-dbfeca4d489a",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8ca41a70-e679-4040-90c8-bf8d04c8321a"
        },
        "item": {
          "id": "49301f07-a415-403a-8771-0a709d7fd0a3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4268ea93-8f14-4f80-bfbb-738c80cc7f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6699ab-05df-46d9-b662-c17200671b99",
        "cursor": {
          "ref": "741d2cee-ff84-41a0-8949-ff3115fba086",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3a0d6715-9928-4986-ba58-73e5892efd11"
        },
        "item": {
          "id": "1a6699ab-05df-46d9-b662-c17200671b99",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "da1717b5-c012-419b-b77b-d43b9a9b1add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c5169f-3202-4ab2-b912-4371f9ad50d2",
        "cursor": {
          "ref": "b74473d9-04da-4ac3-997a-4936a0473b05",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "71750f23-f07f-45b1-8938-a3a11e3c175b"
        },
        "item": {
          "id": "91c5169f-3202-4ab2-b912-4371f9ad50d2",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0b330980-7d50-4924-b393-acfa8e441670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76434183-d51f-4bec-aa9b-02e2ffb038f5",
        "cursor": {
          "ref": "f3627a55-3440-4b1f-82ab-29870393f5d4",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "02200235-0e61-4979-855a-ab06c9e0a36f"
        },
        "item": {
          "id": "76434183-d51f-4bec-aa9b-02e2ffb038f5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c1936550-8f0c-4f99-bc5a-7b83768a4460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa5ea15-0a14-46b4-be2c-123d7434fc6c",
        "cursor": {
          "ref": "afadc6e3-c0ef-4365-bd07-945a0f7a9746",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bbb80e2b-19b9-414a-9569-85b614fd4ad5"
        },
        "item": {
          "id": "1fa5ea15-0a14-46b4-be2c-123d7434fc6c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e8980f54-aaca-4292-bd3f-97b7785591da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87543515-a41e-46ff-bb09-e2acb9ee6977",
        "cursor": {
          "ref": "38e40167-957a-4798-a27d-4abc0e42c0cd",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "db2ebfa9-1579-4450-969e-33ed3406b890"
        },
        "item": {
          "id": "87543515-a41e-46ff-bb09-e2acb9ee6977",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6a197134-986d-43f3-9834-b9fc4897538e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12694d3c-4a5b-490c-ad2a-4be7234716d7",
        "cursor": {
          "ref": "c4b4aa66-104d-4a62-a0da-cd1d1241d4b4",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1be91231-0a0f-4dab-a90d-6089958838d8"
        },
        "item": {
          "id": "12694d3c-4a5b-490c-ad2a-4be7234716d7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "493720b4-5c1b-4c3f-bcbc-5033a3baafda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20e1213-b96b-44b1-901d-692a77c64d58",
        "cursor": {
          "ref": "1b1aa770-af11-4b6c-a3ef-df14f65152be",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "771447a6-5cd7-40f3-b5bc-4289fcf58357"
        },
        "item": {
          "id": "f20e1213-b96b-44b1-901d-692a77c64d58",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d42de68e-538c-4bf5-a2b6-8463968ce052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f58462-e5c5-413f-a590-87f4e42a5e11",
        "cursor": {
          "ref": "ee1604ae-101f-44b3-8297-94a1edb12240",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6ede64f0-7390-4713-b222-dc389b40dba1"
        },
        "item": {
          "id": "75f58462-e5c5-413f-a590-87f4e42a5e11",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8417fb10-5182-4d2d-8d33-91483f47310b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbc3f19-e8c2-41ef-9736-40004b30900c",
        "cursor": {
          "ref": "69bc237e-7dee-467e-be53-83aceff093f1",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "009fd6ee-aa13-4ad7-8001-dc167cd01615"
        },
        "item": {
          "id": "3dbc3f19-e8c2-41ef-9736-40004b30900c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7f6618e9-869d-45fa-826e-13f8c51f31ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11757b7-62f1-43af-aef5-739fd67774f2",
        "cursor": {
          "ref": "948d458c-2ae9-47c9-92d3-8fbcb7ecb31e",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4fe7f904-9783-4bce-a02e-a9e860a74763"
        },
        "item": {
          "id": "c11757b7-62f1-43af-aef5-739fd67774f2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b10d5939-9245-4509-91dc-0238af5f6b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0124c5e-8e04-46ed-8252-2f860fd74d1b",
        "cursor": {
          "ref": "a739b76d-c714-4e21-a973-7ace5e61f94a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3d1ea6d8-2bf1-4681-89a3-e5a96b2a6517"
        },
        "item": {
          "id": "e0124c5e-8e04-46ed-8252-2f860fd74d1b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b8bba85c-e5de-4471-aa6b-573afaff5fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce40e324-2626-4975-9751-7dba1fb3c4ad",
        "cursor": {
          "ref": "954fee12-b111-42d1-9ee4-070be7ec1eeb",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "87840f6d-3894-4675-85c1-e125afefc823"
        },
        "item": {
          "id": "ce40e324-2626-4975-9751-7dba1fb3c4ad",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f4ed905c-07b6-488f-ac8f-51983d3372ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7aaaede-8b6d-4bbc-bd1d-6e111107697f",
        "cursor": {
          "ref": "ddcdf49c-80dc-467d-9b2f-dba34508cd66",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "190cdc0b-9f37-4d84-a1de-f251b665c601"
        },
        "item": {
          "id": "a7aaaede-8b6d-4bbc-bd1d-6e111107697f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "870f505e-54bd-4d2b-8e27-15895ec171b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfae385-b889-4496-8172-f557e098cc05",
        "cursor": {
          "ref": "69a8401f-702c-4c12-ad44-e28dceba401c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "87d04971-6a29-4acc-9b06-52057f546886"
        },
        "item": {
          "id": "9bfae385-b889-4496-8172-f557e098cc05",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5eba5636-5359-48c0-94fd-1d8cfd30c653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3443dda8-8920-4c39-b4b9-d47ffcf4dac6",
        "cursor": {
          "ref": "ab287ed5-0eb9-4c0d-b115-32c703996e24",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9ea32ffc-e607-41d5-8f12-681c06cc9040"
        },
        "item": {
          "id": "3443dda8-8920-4c39-b4b9-d47ffcf4dac6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e9b195f7-0529-4b9d-9d3d-3c89cae9b2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca86870-34ab-41a6-b5cb-e3535b719a72",
        "cursor": {
          "ref": "c9de4c02-dc0b-4c56-8742-60dc383dc99a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e28bb737-3575-460a-b4ff-32ae52fd40ac"
        },
        "item": {
          "id": "3ca86870-34ab-41a6-b5cb-e3535b719a72",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "163e7bfc-45ea-4afa-a999-6cc5d047d0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553f3af2-c1b4-4e65-abd4-d23ce155c7a6",
        "cursor": {
          "ref": "b30d5f5e-1fc5-4f88-92e2-94252e8aa7e8",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e8589088-1a5b-459e-8e86-3f42ae5b7f56"
        },
        "item": {
          "id": "553f3af2-c1b4-4e65-abd4-d23ce155c7a6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "210e6bde-f89f-458b-adbf-94aec7e2a0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb839450-81f1-4863-a712-8b0d733eb970",
        "cursor": {
          "ref": "82308a2e-b604-43d5-9d3f-f2f41a16b174",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c9aa26b7-ee2b-4eeb-bb04-f8b9f5ff2cef"
        },
        "item": {
          "id": "fb839450-81f1-4863-a712-8b0d733eb970",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4f3ce0f2-0add-4be1-8256-43cd2698872c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9a66a4-504a-4249-bc8c-f57574cd49c9",
        "cursor": {
          "ref": "3446454e-1764-4a6c-8d04-a0d80b887ee5",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "02bf3fd7-364d-42d4-8928-c3e804f440c2"
        },
        "item": {
          "id": "5d9a66a4-504a-4249-bc8c-f57574cd49c9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cd589c20-e37e-46ca-a712-6dcdde69a657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6f4247-3b04-4a48-8006-f6a115037f53",
        "cursor": {
          "ref": "5bb23469-1edc-4abc-bd00-541ccbc568b5",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "becf9bb2-d38b-470e-8c85-3316c89cbc25"
        },
        "item": {
          "id": "7a6f4247-3b04-4a48-8006-f6a115037f53",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bc092b79-93ac-46bd-82a5-6d0be0f435f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4a9f3d-5f21-4c4e-a4cf-f9f13dab12ce",
        "cursor": {
          "ref": "dbc8bae9-2051-491b-b2c8-c26729906276",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "647b7f8d-22a3-46cc-a658-25454f7df6c4"
        },
        "item": {
          "id": "9d4a9f3d-5f21-4c4e-a4cf-f9f13dab12ce",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a10d97f3-8cc0-48f7-83f5-895375193ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b56728-d367-4b6f-9496-38388d73a823",
        "cursor": {
          "ref": "a20db01f-799f-4047-b480-c1cc5868c926",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9e0391b3-32dd-4f55-a449-37d45f4bed47"
        },
        "item": {
          "id": "25b56728-d367-4b6f-9496-38388d73a823",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "99519e1f-e56e-461c-be6d-4b1b8ac14422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bb86ca-39fb-49bb-a6ac-678f970f4707",
        "cursor": {
          "ref": "0ec35496-aeca-46de-9d7c-2532b36db3dd",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "163c2ec0-515e-4a31-a1b2-6b727ee18119"
        },
        "item": {
          "id": "50bb86ca-39fb-49bb-a6ac-678f970f4707",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ef13dbda-f0a9-491a-ae95-c45a115d5687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883be18d-f036-4da9-b99a-8d23085edcb9",
        "cursor": {
          "ref": "3fe35194-3ba5-4377-a6a9-58ec294f1d68",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "17496e88-c9f6-4f60-97b5-a3e44cd60359"
        },
        "item": {
          "id": "883be18d-f036-4da9-b99a-8d23085edcb9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7e7a54a5-437e-4ea5-8632-9889880c2532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d7426c-7aea-4a82-847d-f6826d727018",
        "cursor": {
          "ref": "99fd33bc-79e8-44be-bd52-48a3ae80e3b3",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8af83d6c-6a0c-4112-90a6-cd30cbf737ef"
        },
        "item": {
          "id": "d5d7426c-7aea-4a82-847d-f6826d727018",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1aa9882d-7b6d-4180-9b4d-57ecd6245f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6b7034-7ed3-4a2a-a589-d9093236aedb",
        "cursor": {
          "ref": "a99c76bf-9653-4260-9f1f-a9b93eefde6d",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b856e7b0-9fd4-4b60-96d2-5cce88ad4131"
        },
        "item": {
          "id": "1b6b7034-7ed3-4a2a-a589-d9093236aedb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "71fc096f-7f02-46e2-a388-f49099815f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0893784d-a09f-45c1-9600-e055ec29ceef",
        "cursor": {
          "ref": "ea97334e-2a81-4eee-af67-a440fe4265fd",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c5c23979-c7b0-4af9-9795-6853346fb115"
        },
        "item": {
          "id": "0893784d-a09f-45c1-9600-e055ec29ceef",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "87dd532a-be4f-4bec-ab43-9f1df739288d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff60884-6bea-422a-b300-e45ac3fd1509",
        "cursor": {
          "ref": "d772cb75-307c-47a3-b71c-9de4a3276ed7",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8dd3cfe1-fe62-4856-b5a2-6267070332de"
        },
        "item": {
          "id": "fff60884-6bea-422a-b300-e45ac3fd1509",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "578ebc86-31cb-4f16-ae25-79857b73bfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0631ab-0701-4cd9-aa6f-97d9861b5b0c",
        "cursor": {
          "ref": "8ce8f52c-e5ff-47d3-bd0d-17f066a59d59",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c1358a02-1aa1-494c-9d4c-67cbc125723f"
        },
        "item": {
          "id": "4b0631ab-0701-4cd9-aa6f-97d9861b5b0c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "75a4271e-c1c6-47c4-b040-18a7914cb06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ee0ec8-bda9-4e73-96af-b2ce59b621c9",
        "cursor": {
          "ref": "06e14905-e8ac-4f9e-bdeb-f2c886130835",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "669dd266-c110-48bb-b1f1-7f0d9d3abe8e"
        },
        "item": {
          "id": "04ee0ec8-bda9-4e73-96af-b2ce59b621c9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ae95375b-0ecd-49f2-8a7d-2bfc80a1c489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75add6a2-6583-432e-bb5f-5d3ef00185cb",
        "cursor": {
          "ref": "fbb2d1ff-6a4b-4190-9897-9875d8f837d8",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "58a121d3-3c30-4bdb-a4fc-9d5db9566580"
        },
        "item": {
          "id": "75add6a2-6583-432e-bb5f-5d3ef00185cb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6f7f3f71-3683-4c97-b553-691c304492c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961f1862-da9c-4f72-8450-b3d385a25ee7",
        "cursor": {
          "ref": "369a8ab0-7efc-48e0-9a86-a3a342ddc43b",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2dcd0282-4ac2-4868-90cb-945cfd7c3077"
        },
        "item": {
          "id": "961f1862-da9c-4f72-8450-b3d385a25ee7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e06e896d-f19c-42be-8896-9007e541e950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97acadd6-fc6a-4957-ad67-9ba73b88748a",
        "cursor": {
          "ref": "7dd038a8-5357-41c3-bcaa-5e6698e30856",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a24f3736-4ecf-4aa1-a3b3-6130754ef4b9"
        },
        "item": {
          "id": "97acadd6-fc6a-4957-ad67-9ba73b88748a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f3578ee7-9eb2-414b-b833-15445a421678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018a1b45-df6b-4544-89a9-f223149f84f9",
        "cursor": {
          "ref": "fd78352d-30c7-433d-a8ea-9b80d118bedb",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "621935b9-6148-42dc-900d-3b709e4a8b3b"
        },
        "item": {
          "id": "018a1b45-df6b-4544-89a9-f223149f84f9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4d8cbc9b-12fd-4c75-91af-5992e955907b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9ab885-fe78-42c5-a3ee-16b55d923667",
        "cursor": {
          "ref": "d1f978e6-22ef-4212-bfff-0f1fa85abef3",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "db214e16-2fbf-4de4-988b-719ded2f9cbe"
        },
        "item": {
          "id": "de9ab885-fe78-42c5-a3ee-16b55d923667",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9dcf4525-970d-46d8-8e3b-4dda9ec90fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725a3263-00a3-4417-8395-d4d15d5c4265",
        "cursor": {
          "ref": "e0baa256-2959-4b16-aec6-a193258c5381",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "631334e9-91a4-4df8-8cd9-bdda746e1199"
        },
        "item": {
          "id": "725a3263-00a3-4417-8395-d4d15d5c4265",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "52fcd558-f3a8-478b-b326-dac29a886a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeb0731-c709-49dd-b4de-c6092bcb6ad9",
        "cursor": {
          "ref": "75f00d94-cca8-4fcc-be0c-3e6974e5a3b2",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "687f813c-3cf6-4b17-a23e-46161fe05256"
        },
        "item": {
          "id": "4aeb0731-c709-49dd-b4de-c6092bcb6ad9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9c704bfe-5947-452c-b1c9-efe6cae13da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67d722a-cb3e-4b7d-9905-f318f6c2336c",
        "cursor": {
          "ref": "ba3d79d4-8438-4523-8010-23b1b089e889",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "603c873b-2948-4b10-b0b7-e8c00c7fa9a8"
        },
        "item": {
          "id": "f67d722a-cb3e-4b7d-9905-f318f6c2336c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c8e5cccb-0b51-48a7-8b7d-d65a05b237b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cb53ca-9e81-4a62-b855-cc9dfcece57c",
        "cursor": {
          "ref": "3c944778-bacf-47c5-9552-df8febbebcf0",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "52ef2bb3-53f7-43c6-a92f-007ef8914a0c"
        },
        "item": {
          "id": "e8cb53ca-9e81-4a62-b855-cc9dfcece57c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7fb869e2-5fdb-4bad-8be0-eed827fea32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2957dc82-445d-411d-86dd-fee64140b6bd",
        "cursor": {
          "ref": "5417ea4c-6562-4efc-849c-711f23e66f94",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "6f8a18cf-c9bd-4409-bf37-ffa18f42bfe1"
        },
        "item": {
          "id": "2957dc82-445d-411d-86dd-fee64140b6bd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8f7b4a5a-fd21-4efe-92f9-e30aada0723f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841cd905-18a6-4d0a-bee3-9cd2e98d13eb",
        "cursor": {
          "ref": "31b01712-fef6-444e-abec-05e2d1fd0596",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ecb5674b-587f-4b49-af1b-ce5c43609491"
        },
        "item": {
          "id": "841cd905-18a6-4d0a-bee3-9cd2e98d13eb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "248cf577-fcc8-4f90-9a5f-4cd2fb7a9103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce436b3-12e6-4c6a-acd3-2f1aac671c37",
        "cursor": {
          "ref": "24cd22ab-412c-474e-85f1-c2c7075bba5a",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e1d6e304-0b0d-4a7f-8f8d-20288e17dcc3"
        },
        "item": {
          "id": "bce436b3-12e6-4c6a-acd3-2f1aac671c37",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c87c2ab9-e79a-445d-a7e3-539ce6705e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e6ebd1-01a8-4738-bc8b-52c88d594b24",
        "cursor": {
          "ref": "6e5ee5c5-b947-4fed-9ed4-12becdb5f3e2",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0e7afb1e-cdf6-4bf7-9e4f-da36be26972a"
        },
        "item": {
          "id": "74e6ebd1-01a8-4738-bc8b-52c88d594b24",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a43c50a9-9196-4d90-8204-d31b7b79638e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa14580-b9b3-4b43-b775-e83807e136e1",
        "cursor": {
          "ref": "569226d4-c61e-4094-96fe-0d5b2760e583",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c9e489d7-486d-4610-9ac1-750ca84bf94c"
        },
        "item": {
          "id": "8fa14580-b9b3-4b43-b775-e83807e136e1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0bc25b9e-3d78-44c3-8014-e02151fedb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c62b33-17f0-4969-b55f-3a1b83dbbce0",
        "cursor": {
          "ref": "26e1d273-bd88-4402-8ae1-c5ea8fdd1358",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "10699d5c-4e47-4f6d-a7cd-e2b454959e4c"
        },
        "item": {
          "id": "a5c62b33-17f0-4969-b55f-3a1b83dbbce0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7b4bad55-b1b4-4750-9c2d-883e473e5401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2a63ac-9bd6-40c7-a852-c88ae04ca442",
        "cursor": {
          "ref": "67b533c4-bb1e-41e1-8494-75f8807eb70b",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3e534cb5-e7ee-4ce3-9f3b-e7cde18a868e"
        },
        "item": {
          "id": "ab2a63ac-9bd6-40c7-a852-c88ae04ca442",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0efe809c-42e8-4720-8dc5-b5965cb2ce72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ba3acf-2ddd-4049-932c-d69bdc206364",
        "cursor": {
          "ref": "0c630c16-6c1f-4948-af56-ab70a1ece480",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d5c646ca-354a-4022-878e-16ea9912c0f2"
        },
        "item": {
          "id": "36ba3acf-2ddd-4049-932c-d69bdc206364",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "cbdb64bf-8a37-4fd2-bbec-d78ae45eade4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f84fadb-b598-4e36-af8c-bddedfd9e5ff",
        "cursor": {
          "ref": "40220617-3329-419a-ab58-07d35b7c8621",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3ce769d0-073d-483c-aab9-196f636e890b"
        },
        "item": {
          "id": "8f84fadb-b598-4e36-af8c-bddedfd9e5ff",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6144b3f5-bbd6-465e-acc6-bdea9604aa1d",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6639817a-24a0-4191-8105-8f94c8ea98eb",
        "cursor": {
          "ref": "817c67c0-9bb2-4712-93cd-259b5707b4fa",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a69dec6d-1dcf-4144-941c-66aa95a91259"
        },
        "item": {
          "id": "6639817a-24a0-4191-8105-8f94c8ea98eb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ee9a080c-4edd-4b0e-8537-8e6cca76f45f",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "75897cc9-4033-4b9c-80c8-28f46a486702",
        "cursor": {
          "ref": "90814d6e-788c-4ea7-98ec-8112c21fde1b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2df1c2cd-38e2-473b-9ca6-38b61906753d"
        },
        "item": {
          "id": "75897cc9-4033-4b9c-80c8-28f46a486702",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8b628927-d7f1-49e5-a4e4-d523ff0e6061",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0a5a57-20d5-4026-8efc-62f7e9327cde",
        "cursor": {
          "ref": "7b09a3d9-c455-4c73-ba75-4d83a4b6554b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "07b2b51d-8527-4b9d-be35-a7e43435c661"
        },
        "item": {
          "id": "ab0a5a57-20d5-4026-8efc-62f7e9327cde",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e539723d-3395-4432-9abb-308dd3e5f314",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0a5a57-20d5-4026-8efc-62f7e9327cde",
        "cursor": {
          "ref": "7b09a3d9-c455-4c73-ba75-4d83a4b6554b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "07b2b51d-8527-4b9d-be35-a7e43435c661"
        },
        "item": {
          "id": "ab0a5a57-20d5-4026-8efc-62f7e9327cde",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e539723d-3395-4432-9abb-308dd3e5f314",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1defec6-39da-480e-84d9-75752bc086e3",
        "cursor": {
          "ref": "ae84007d-5c24-4366-b111-52d43f480c7b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "24f1a6cd-2e38-4411-891f-d54adad053bb"
        },
        "item": {
          "id": "a1defec6-39da-480e-84d9-75752bc086e3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9071caf1-b808-47bc-a363-7aa2492dc516",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb642f9-ac86-45d8-b89d-af9307771082",
        "cursor": {
          "ref": "04166f72-079b-4077-b3ba-6b4888f10907",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3d7f3ab1-6973-4807-8660-a6c448cfe899"
        },
        "item": {
          "id": "eeb642f9-ac86-45d8-b89d-af9307771082",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f6e74d79-6bb5-4803-b9e7-f732a216dffd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}