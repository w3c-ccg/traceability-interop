{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bc7d2ea9-784a-4439-bfcf-aedf644a0851",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2264404c-4f14-4086-9f99-977623178560",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9ebce3bb-c330-4237-adcd-11d90936dd85",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "28105543-6c35-48a8-a6eb-2213eff2f27f"
                }
              }
            ]
          },
          {
            "id": "a1a14377-0e41-43a4-8b5a-b05c8da6e3f7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af8c317d-fbde-43de-ad94-a20ec51a1c43",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "12f7dfa8-6a60-4760-b853-04ed73ffcca6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "829081b4-0a62-498e-9318-c797b70888ff",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0b2ae85a-96a4-4769-90e6-6fbc72c945c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c7ec8f05-3ed0-4b84-bf62-b18c3bfc39cd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8e4c37d-521e-4e0c-b924-01692c61816f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd6f3d4c-c250-4a50-ada3-88831be5a1e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80178ed8-aaf4-4548-90a1-a7fb62503ea7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3bc15197-7798-42ab-b6b9-73fd608fea70"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea8f1fb3-0b48-4329-8ee2-c3cc79baf679",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "004d1296-cffe-4318-95d6-5c83256fe1a4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0d6bc64-05e1-4980-93ec-6c95056c293f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6c544ea2-39b1-4854-a1d9-658f4b0aa054"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fc67b97-312b-4b0e-a0e4-ff93175f2833",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5089718-50a5-4bdd-85ea-aeb79973aa41"
            }
          }
        ]
      },
      {
        "id": "5bf48834-1cf4-4a3c-8e7c-04cee74f1b14",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a382e62e-2f55-404a-ad12-dd7df8ea4f3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "013a817b-fd7d-4efc-be26-58f5a6e166e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6ec9f9cb-137e-4b31-89c3-90104f887da6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304fe5ba-f58d-4778-ac05-0bc264fbdf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d4b4ad1-33ac-436a-9ebf-2328260aff15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfea4bf8-8d4e-48c3-ba6f-14528a5a74f3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de24923-1313-44d3-ae34-a45cd88f165f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a2d1917-b7ab-4149-90e3-7e369698e36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae642e74-9a77-482e-9e66-b3af82eaf25f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4085542-4fb7-4c10-a95f-41de37e26daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cc6abc4-5f66-4e75-8756-a8b6db64ac33"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a21c9b1a-0179-4f2c-a781-a06216af8486",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8eb2e3ec-8e8d-403a-9ab6-1cdc70fa5488",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b695050a-c730-41df-9859-d23b339a0f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5dc42a5d-4285-4a05-832a-cb516dc78654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef2eb06-8185-42a3-aac6-276566d45099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a41f52-9309-4d00-94f8-378871e96985"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e5fd04bc-c12c-49ea-a78a-30f06203bb49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d08468ee-0494-41aa-b743-5e45352fcd9d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "965dfe15-b978-4e51-bbc5-584b70d6b98f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "22e4c53e-9f11-4c0d-bca1-edc6b9945f8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26de5a82-9d9f-4e35-a976-80ee46746c92",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "759f3b49-8650-4468-9f54-a663adeef9e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e04820c-bf76-4961-857f-3f91f293eb3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "196e75be-a26d-4cea-aeab-a6c03647ac35"
            }
          }
        ]
      },
      {
        "id": "b011bd73-10c7-4545-a316-118dd6786013",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "74c1e82e-e391-443f-8e79-5959d916e004",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e870e736-d1cc-4462-ad67-f10e98f02225",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "09026591-632b-45bb-a643-ca501b9f9665",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc6af39-950e-42a7-bd03-6a7687f312bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb6abdf-aaf0-484d-88f4-584b4f20c8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8701dbb8-0b3c-4e81-b46e-ff9491d5549e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90c106a0-22d0-4757-bd98-8d474e39fca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb92dfbf-9bfc-4513-892b-fcbd9f4bdd4b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c59042-6bc8-431f-8c93-612028307903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141abdb3-295a-44a3-b514-26a4f337b736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b01d460-f6dd-4baa-a292-3d5b2500ddc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d07cc39-2d31-4ac8-b654-64b65d05ad67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5711efe-895a-4934-8c91-864ed7c3639e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f52b5f-4615-41e3-bad9-00807b9ba53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9fa888-766f-47e9-b238-8fb9d9a2bfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76671da-72e1-4269-ae99-5e8f61e527d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d3af11d-9608-4ee1-a0e5-3ba53987846a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9d936d-c4db-410e-b1e6-5fe06edfbb23",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef168e04-2a3b-4e11-8a40-30ce20a1a89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cd0c16-bef4-43ea-99ff-1cbf66040a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8ebc9c-dfd8-4086-a7fe-03108b6072c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a534f232-24db-4fb9-b585-b3bbfce68864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b84257-4c58-4b7a-a027-82efcf64b0e5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35772cf-8fd4-40d1-a30a-d654b65b9f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53ca165-15a0-47a3-9ed1-fcdc0aa8af3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02961837-6ad2-4298-8571-8530dffe0074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c06e6e7-ecfb-4b76-baa5-47faa34fae30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a87221a-bed7-4000-8319-22f3c58a12af",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf5eb71-7534-4cc3-83a4-dcdf2b733053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e70a95-d730-483f-9f56-ca0328a6ce2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151b351b-fe9c-40c3-b214-fa20671f2987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e618403e-c226-445e-85d1-559ad4962da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb1f58b-f2c8-40a2-9ebe-959e0ed1f2eb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa993182-e900-4190-8083-823964419238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a764ae-a1f5-48c3-a734-8859d87325dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56363884-2b83-4df5-a755-ec201996f7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e0f6383-fded-49d2-b7a0-467ab2182a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d003ac-67f1-4af6-bf03-b3e5656c7958",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0175516-feaf-4b00-8414-48bfd46463df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5dd9f4-0916-4a76-b245-f6eb3017e6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916b2cbe-4e5e-49ee-868b-9fdc270ef7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d6fc042-0aab-43c6-bc93-a73a9f30933d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533912bf-666c-4ff0-b332-3380d1df5476",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae4f46c-383a-4aae-9f52-d100112a533d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dfbb2f-e29b-459d-8543-99dd4bc6baa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f758a21b-52ea-4fb2-8742-d11a05b9bcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "068c66e5-3526-4e17-b8ee-7512efdffd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9150b0-3c54-4237-bcfe-9b889c3db7e2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90015d52-a0ae-4272-a330-0d74e1f0cdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "046c4e38-c1b1-41f1-8d5f-09bef3fd426a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24a906c-9af6-4abb-bfbf-506ce4086cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47eaf101-cdb7-429f-92c9-67b6edc6d32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67424ca0-f6ae-422e-8f39-66f260e9b40a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b9fb03-547b-4b2c-9b76-2793596815e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f33bea9-3973-4476-98af-e7df0852ac70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b068e35-8bbe-469c-94a7-e24896f4f446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6072305e-2123-44d2-9f0a-dd61baab4c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6401e385-4a68-4953-8c83-d3b526387718",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751a3e16-a846-4974-8cf1-b611167a2ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2ede9b-b661-4a01-8b10-088181387fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211a4695-c074-4c16-b79c-fe88cf79a0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e43cd434-77bd-4f77-ad5c-46853d05750b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e55af4-6dc4-4e9b-91a5-365339d6e781",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5cf83e-753d-4296-87be-103ac1486088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d32dc24-8501-4574-aa39-c38690144931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce28da74-5892-4afb-acc8-3c66ee128234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4acaaf2-7a9d-4792-a681-bd308f738b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc4ba00-5d0b-46cd-9868-fe8a51ee9441",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e788e7f3-42a2-4d6a-a909-1c803ca390e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e408944-21cc-432b-91a6-0dc204b61563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7525ab6-9cae-4c31-a221-df2ac7e055ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c284361-b152-451b-8952-f9770c9cc0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78eff34f-51da-43ca-a4de-d0925d6047cb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e57d45e-d1b6-410b-9897-69f1de6ed179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58925ac-229c-4650-9ad7-f3dd0e290669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da29e39-07e3-4c87-93c8-e27bb5c7fd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca549f11-af49-4e9e-911f-9bbdc727eab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a0fb53-82bd-49a1-826f-0cb39db627df",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5460df-77dc-4041-a789-812b571c5d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cfce06-e6fa-4ffc-9228-75cc1f0b2225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf26be7-0a62-4bdc-a1c9-cd09936d1d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82c7992b-23c1-4981-b142-2139c617d687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0f11a7-34bb-4b99-a8ff-de66c3db7df4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bdb5dd-0d1c-4ca2-89f3-568869154b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a586f4f8-643a-460e-84b7-7520e046f676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b7c616-4aa7-45fb-8555-c1d8658e1896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a7405e7-9a10-4c0b-8ba4-7c8ad3fbb909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab48631-66ab-4ca0-bab6-b6ba3d3537c6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1370c68e-e628-4571-8abf-085f1a10ba08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4f1393-1c9b-4b3e-9760-6704f6c4dcc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a76dd6-062d-4035-a74f-c24bd8b62b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4f46c0-c159-4937-af61-7dea91bdc796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9755095-b867-48ce-915f-eeefd7b7ce74",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937848f4-cf9d-4688-bfd9-f95e6608c7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b21b40-14e3-4cd3-9981-5ebbfdd2ff85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315d1165-44ad-4763-930f-176f6ebdc1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ee90c8-2a44-40bd-aaa4-d3c1aa790a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49ff2f7-9ab7-4161-9dcf-f62491a54f05",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa6654a-9b17-4ad0-adf7-dc5ba26715e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156d2a85-caab-408b-9d69-8e09c1d5c1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f000085-5b6d-4f96-aa0f-b79ff7715ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e264210-8e76-4cfd-a0d0-000ffd1212a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604540ee-d935-4fac-b481-910778e6c749",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd73518-8fc1-49f5-812e-9d35624e6e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a82bf8d-4565-4ac5-8249-fa3933d57950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a420736f-87bb-4dd0-88c3-bcb82cb26a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84555bfc-e112-4c0d-a413-2c1776e2fcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5c00e7-84bf-411a-8efa-783be93d0c72",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4198b1-f6a9-492c-843d-97dba04c9076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62b6de0-f86f-4e07-b6a8-4db0a648c207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f3d7ed-7c83-4b70-9175-af1c70ef0c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "200dfcad-53a2-446b-8eae-3773459d4df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b526345-2bbc-4288-9c8e-85b3f663620b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb1f9c8-7cfb-4812-b74b-19b259ba6efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24b6ba2-d788-4996-8871-d3d5c3148532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7784cf6-0375-4bb6-96dd-d623bd4f8e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abecc730-f13f-44dd-88b5-40d7f5d8ce13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efeb7e6-98a2-40ac-8f7e-cdeaf384bd25",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798928da-ce27-44e9-9e00-7090f0789086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1aa6f93-f16f-4a47-b513-e0ea9b36b394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ab9e30-b256-4e55-93c5-4bde1b1890d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd12ba6-ee4a-4ca7-8ec7-df500671cab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4655220-e2e1-4a2c-8826-5c6851eba13b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fa9513-dd93-4eae-9c5f-31c885e70ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce51ed90-8dfe-42c7-8469-a0f55010fbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aaee3c4-1e41-4d39-9749-8aab395a2f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1984103e-5a69-44a9-971c-e6727697a94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db10997-f14d-458a-a8e0-63584d3ed8e7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3410a6-e78b-4da3-a8c1-3e87376c55b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72536746-707c-4c65-b87c-20ce90239f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85628bae-b8eb-4de1-99ee-bed49b051a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae278323-8b80-4705-8432-9cddb7b7ae5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402481eb-6173-406f-ac7e-e7130081244f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5bb81f-c6ef-464e-b363-b2fc68366cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28dda336-8a40-4a19-8717-5a9358558fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1989e4-ba29-4046-96e4-6d67dfd30db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a794a8d-18f6-4a80-9b17-2dd0e39665e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec74f72-c77b-4123-adff-3588ededa09d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b83193d-f11b-41e9-9d29-ef7b720a3cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194c8e5d-ea5f-4e7a-a398-472f38d1af70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663c84ca-23b6-45b6-82b8-4a4c9e1361d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1893412-25bd-4d93-b3ce-8d09f0385c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7c649c-3497-4796-a2bb-65486bd3c24e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4761702-6e3c-40fb-b212-a7f04355335d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641a3d45-2c62-410e-bb50-40bdd72cbfa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4d8ffe-af08-47d1-810a-c5f4e090c8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd955047-0c50-46d7-bf21-5332ce3b98e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c10ef9-bb52-4014-a779-574db40b5e68",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dded2f44-54b2-4aa5-b418-b5ce51012cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06170385-9b4a-43fe-b21e-489efd4a2e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006cb237-cb28-4394-9d19-1d5efbc297ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f75a337-10b0-40bb-8a3f-a6da0c1fb2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e1cc14-0f47-4e3b-8da3-a9dd0c2e8122",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91608c8b-f662-4d24-9aa9-8bad142604e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30544ab8-008c-4f4e-b876-95bbfd07385d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4eaac49-005f-4536-a246-e625d4c263fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d74fb93-4224-4694-97e4-54ae6257f048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb19bda9-8a06-4117-8f34-ea6afe2a3191",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0577c67f-fff0-459a-8f73-4ac004fa0fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43499a15-1ac0-427b-942e-f6d5e1a01c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60319ee0-b8e1-41bf-b0ce-cc5756c74e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9259e191-56b3-4612-af3d-1f045ce3783e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e0848d-1df4-433c-82a3-7519854936fe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c31fd20-a9d5-42fd-aadf-6fbe4fcd9599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c6e105-3820-475b-9d8f-64975e4131f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea946e1-9493-4e36-b8ec-cc29b1716e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb24634-6a74-48c0-9110-2a804a160789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93a70c9-d7c4-4cf9-8c0a-2eba43f4be3d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63682777-37a5-4be1-9e3d-7c0e641899a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88c3cfb-f1cd-453a-89e7-c995b8f9a731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731eb154-892d-444d-b8da-5d974af285c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "232ca21e-270b-47fa-9852-9645fdf4172d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cad76a-bb14-4be2-b03d-94426233719f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c53ca1-8dc7-4eed-9036-b036ae455815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4695307e-113c-4e71-9f2f-34faea38a7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c90b16-a9e9-49cd-81aa-a7b2f3ee3643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e7b55e-7d6f-491e-9f5f-c07539824da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7228852-1925-42b6-85a1-738085245db4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ea9d17-8463-440f-a876-20ee56180b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e392226a-cbec-48c0-8cba-af1ba4bbb95e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f9ec19-4576-4197-9311-75020f5899dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "998799ae-8f07-4a4d-bfaf-e1fd30d404af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64c70f8-de5f-4519-8f66-e6995b9b93a1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcb13ac-0e97-4e21-859e-f7c347b83c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf55e41-5eb9-4443-ab37-6a2df141a985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e7787c-ebed-4303-b1ed-0fe826c1c517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a504ed52-89d4-4c4b-a027-983c1d1ac4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d733ef-7d7d-4367-a132-815bd21e0744",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17af63a5-06a5-4a94-a53c-9d17b829381b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e79ed38-cb4a-4c9b-83cc-83dfb14750fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8d36bc-8109-4f9e-b130-c8cd9f68462c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5fbffd-f962-41b4-9200-7d9a18643170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f089d1-8bd5-49a3-9a5c-8bd5fbac5bc6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6729b291-7487-4127-bd48-023ff97c8e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fdfa837-d1f8-4f29-9be0-0ef7bcee9496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbc972f-4ab3-49a1-ad08-519c73515a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e671727-fd42-4035-a042-d2fd9323141a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fcb957-53a6-46d8-a11b-99620af554cb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595a5471-cba0-4ebf-8cd7-07be86a8fe44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2575811-6cb7-4dea-acaf-9f8162bdc747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4156e530-b450-4624-a0c2-4a7eee2cef27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1da1ced-7c88-4720-b01e-bb0e9505c3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a7f39e-897f-40fa-a112-27e1285bb162",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18aac52-39c8-4537-83cf-c6f9a744d14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bcb8b6-0933-4bb6-bebc-a81184ed2446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1441fb80-2455-4205-ad72-458e0da3f0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "39290fef-65b4-460e-bf48-048c9491ea3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e19570-af7a-4d60-9b23-ab60bed67ced",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65febac-71bb-4cce-87cc-5cc2954772c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcfcdf4-9b41-4bf1-80bc-f044f93f7e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6b36c0-0e54-497c-b42c-ce7bde92c238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "78f218a8-9e99-470f-94c6-0b1c7706e734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a209e3-57ec-46c4-9555-01967d71a9c1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6127ca-eb2f-4fb1-bbb0-a337adf4d141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4f46df-3659-4f87-8479-bdec684a70cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cc7cc4-99b5-44b1-ae58-a8a0fe3e933c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9d2c6c-11dc-4632-b210-0fb3d39f397d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8ad72c-10c2-4dc8-bc0e-3f67e7cb160b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed821a13-f202-4050-a6c3-38b5d4c4763a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5428522-d467-4f91-abc6-4822e8f66cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c283cf37-9e21-488c-ac43-e5562239f4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa5856c-03f5-4e1a-9284-5c94fb7fb53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbac401-19c2-48dc-9bfb-282808366a1b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2cb7d2-071d-4764-8624-e1b9b4f0a917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7f2ae1-06e0-4ffb-8a2e-55d2b17115a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09293b49-d672-434d-9948-d08af389ab8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb29b6bf-7d14-4230-a710-609dc5292cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b07f3c-cc49-43c0-85b9-3f015fafb0d6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18c524c-0080-4b15-ad23-a3623516c27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54498a5e-5dcc-426f-a609-104203553cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc395908-adc3-4832-a334-3967dc11194c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d68df81f-49cc-463e-9c81-476e89499a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41197a30-0d94-4199-93d2-825b6bd99e8f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8058a16-fcb8-42e2-8281-45e29e477f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848d5e9f-1ba2-49db-9e94-6b622f4d7e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ed7761-d53f-4e37-ac6f-94805d7eb019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb06bf9-0458-404a-9dea-3d348bc56e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4665f1a9-0dff-49c4-89fc-d89dce434951",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0470b505-e83c-46ca-9b60-ba46d679e073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9592d20c-6a6a-453f-8718-f38cd6af79ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b192f6cc-0d61-4e07-816d-0766db348b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2918b96c-7a82-401c-8f6e-b0021619e8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e56709-c7a5-496b-8fb2-897c77019ddf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da2d7c8-2c8c-46a7-9cfc-bc8c3349cfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07031ab5-7a16-4156-bb1d-c2779fc09f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1dab591-18fc-4089-a762-7f67d5061cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eafa0a4b-d690-473a-9945-bdc5512a5493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1abace4-3694-4e9c-9b7b-2944255fe14c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8b882c-fefa-49d4-beaa-86b0961b3dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6929ec9-384d-4f09-9a22-825d7be9a096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef7cfd5-bc7e-44a6-9c7d-30a2a775c2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab6ad40-8220-4a55-b77c-9d1a3778027a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebaaf52-e27f-4173-a600-d8f5000fbf33",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee46a51e-c54c-4370-8a32-7eba5d4313a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac722c2-827e-4704-bc30-2ad4fa38ebb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78eb1c6-20c4-41ee-aa1d-d703a45e1a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbdfc93-7240-46cf-bcb8-2ecd6712116d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e3b1aa-97ed-4abf-877b-5e8204b5737a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d202123-b2ef-4066-a716-13f593bd3aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9e7cb6-c251-4cd5-8d5c-0f2df78f38e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2c249d-411c-4100-a18e-787843983c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d51549f-1234-4cfb-af5f-5f9b5c3f4fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ab04a2-3320-4af3-8585-0a28e40386d7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58db46f2-cd06-4974-8aab-e95650bfcf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450b7583-2d5d-4bbb-bf63-962d00ef0b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91825f1-b59e-4937-af61-b9f66b44bc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70db6438-bb21-4b64-a85a-ed4fc747d220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230d6204-ab1f-43e7-affc-a03cf7974571",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef388d0-bef8-46aa-af00-5ccf3f608512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c63bfc-a07e-456c-8caf-71e14a28986f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0ab046-8b3e-482b-942f-5dd8e1888009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d615d70-145d-4103-b070-8157086b0e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02d665b-a5d9-46cd-b6a3-2c6530690b62",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9757fe9-fb02-410a-acb5-c56a34ae180e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c82717-98c6-4f96-9f49-1736b78a4b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782c5f1a-2065-4616-b65c-e0f342c93889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e29fe52-f70a-4c25-9820-2887c22ce930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ba391f-9f06-451a-927d-139127b3e988",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9b609b-d36b-40b8-9084-4dec07274954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6699fe8-cb3b-4680-b377-c43d7a0e0bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51ca94c-30de-4c72-a857-f82e29383cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "05a9d594-5d44-4870-b6dd-708817d9230f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7b6651-5e0c-4e7b-be91-d71512c64270",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3566b5-fcab-4d41-8cbb-3dc3ab018dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90be16d-48bf-4f6a-b169-0d5d78a19d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5824b3-de9c-46fd-abff-7f870cdd2e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d2f37a8-3796-47c9-8d56-f59feacaffe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d505a2-7f1f-4940-b634-18c530bb6130",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf565e9-a1d0-45f2-9a18-ac8a0d3de401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f423babe-c1af-4710-a264-0d299ce74e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c18eab-d603-4317-8833-eb96df25ae19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3825563e-869c-4a08-872c-e76c37c4f02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591d9f07-1e1c-45e6-8317-8437830d1462",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0227f2f2-8c86-4b0d-b413-23ba8dc82c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7a2f69-80fe-4e2f-ba3e-8bb06b2059e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0d52ee-b7ca-419a-b677-73ccc2654660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e837249-603b-40c5-a5b1-14bb3d64c948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6291b40a-5552-48ab-8f87-e118ceabe1a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2653a62-1a3d-4a56-b9c5-27f357abdc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371adb1d-a2c5-4812-9c76-e428a255c171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3d52fa-c51b-4443-9975-07946589945f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b95189a3-c89b-49d6-9f2a-0afa916c9e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5545d7e-ac63-4ae4-b54f-1d53bd948e50",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a53a706-3e09-4f4e-8334-537c3cfe5449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e4d48f-6ba8-44f7-8998-bc19d146edca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17b51ac-ad71-4c16-a4b0-c5f3254028b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b98cda-7223-4505-b737-0eaf257672f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0b3a0d-7cbd-41a3-9307-388017e8505b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b613d6-1118-4eb3-bb56-2ee03f054b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c8e06a4-257e-45fd-a437-1d2b7529a7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7deb92d5-89ac-416f-b2a7-5771ba456af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb7fbb5-9015-429a-8e65-68b0e62cf5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5e422a-06b6-4533-99ec-5ad932b1e0d9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d7c07e-7d7d-4632-907c-424e364bf7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec72b5d-8f28-4745-82d4-8feb83aa7b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5fcfe0-44e2-4e74-95dd-1cdfda56959c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8685b58c-1d31-41de-a9ce-72d3b22e9de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc71bcc7-9f58-4300-a1bf-5842e3fa8700",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4ff5f7-6b66-4912-995a-170da62cc605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92350d1-12af-4fe2-9655-86882b619868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bdac94-d85d-4f75-85d3-7fad180b55eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc82eec0-c4b6-4506-afb7-0d8a90e8a219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d451c5-714b-4f3d-884a-c57fb4b760ac",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaf5f9a-2869-4c5a-bb0d-918658c1ff23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedf951c-c13f-40b8-b785-b38c6549a429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27836061-21a9-4482-bd35-9c30cc917871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cc6129-5816-4877-9e91-2ed3eb0c3208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4e34e9-3552-41fb-ae98-762ccb5c45e3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227a2eba-7e4d-4940-8fdb-576219f8ffdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7a43e8-8cde-45f4-aa3a-7178fc814a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d933a3a3-b11b-4654-a881-ab0be04fae0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a906e03-7618-4d1e-8e41-8e3f298052dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe61d72-f816-4b67-b055-7576fba652ff",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639fa3aa-e7d6-4576-8a40-d27a300b672a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff17f7b-c948-46c3-afe3-461c6721174c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b16c6a-a67f-4aba-8ca2-50e510c847f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d23df62-2d36-489f-8098-13e53b9a8650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1c92b3-b8d8-405d-a401-2d7b3ad717da",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3259e4-f6e9-4c03-8518-1bf96eab9286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05e1739-54f9-4a87-83c5-40e703aebd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4132807d-f21f-4888-9702-4ab9c9314e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8e5171-a63c-4eaf-8e17-2447f3f95415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9096a1ea-2500-474b-af5a-6c09983fb090",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7319fbea-b2e0-4863-a2a4-531a32c008f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6a0dd6-1890-4ed5-838d-0b651914c64e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f203c5ec-603b-47a9-9167-7732d1363a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "edae01a4-8613-4c79-af61-9be79b7e76f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12110a9d-2e57-41f0-9452-2ad3eb6710b7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50e7986-8b31-4ff3-b35d-cc3abd703f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74761b1-0b3e-49ee-8049-e3a047bca8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46c2fc6-d8bd-4337-8da6-5ef47ee4179b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d54a4d33-e185-4d43-8ae3-525cf55c1bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991c9e86-8bc3-4051-b634-28213443e010",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80027039-5f5a-473d-9208-5137fe06eede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22333ec6-5668-44fb-a6b1-5a167847e392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbb8878-c3e3-4dc0-9508-8cfa912ffdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c656f01b-7111-4c2b-8860-1d1a2076e0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81a273d-8515-4365-8431-bfabd095b9ab",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a12a2c4-05e1-4ca2-9025-ba6ba8b3f18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce27292e-7d27-465d-baee-3d78d07effb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b4dac0-862f-4f0a-bfa8-182b8834ddc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbf683a-5d45-4ed8-bcac-fe9a59aacabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d0f72a-f009-4f66-9b46-37242cdb7914",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec298be1-c276-437c-96a6-5916e52fb4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a32feea-1009-4d2e-82e6-9a4e8f16534d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac954f9-ff15-41b3-9425-692df05dc7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83d2738c-1d1a-46c1-8d25-281b83dfd6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2830aae1-07b2-4e1d-a5f3-1fcb110ecf33",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef45114a-8260-4a40-9c6e-11c62c0a2a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1509e54a-7bc1-4989-ad3e-4f374d8b390a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aefb776-4a9a-4d45-87d9-ac9079bfd5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9abddd13-78ae-429a-bb74-14f11e339899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a21d0e-35eb-4c30-a917-c1fae8208c13",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f553e8fb-637c-4f56-8f78-beb06b5b3d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a407ac2-7234-4020-bda3-eb88ca0005c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f615ac1a-1427-4441-ad0c-4f041137f8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6494e336-befd-4241-8a24-c70f5ad769aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1c6c16-6654-401e-8253-8aa5bbc94c66",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cce19c8-66b8-45bf-9b51-b50281032c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0c561d-9c24-498d-a4fd-7570f44b4772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47407cd-2a7f-494b-a7da-48517b1803e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d77b43-6535-4ae3-bdb6-e6c0b8bd25de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40874906-4f9b-4075-8609-836376edabf7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc739de0-a02f-4653-8f38-091e5f000c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205a931b-307b-47a9-82c9-5129fdb75a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d07faeb-eb94-4c18-9b54-3d788b782c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4adc00c8-db21-4d9b-ac5d-7f43806043c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ffa2e1-2b27-45ac-a4ca-12d28689c72c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba70066-0bab-4207-8cc6-38ede8d205ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292c4596-15e3-4ec4-a7ec-73b70f2c18c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea997a69-0384-4a74-bc40-8e709bba975e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d7517e-1440-4225-bed8-15581c657ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e4006d-b951-4ba2-afea-24e7ea63c1f0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7182c0c-31a2-4f50-91dd-368765e99479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d3d57d-8d69-4629-8b24-e002003fde56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7f8af0-0aea-4968-8cf9-fc4cd40bdc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50b6a91e-b19e-4d14-a19e-a43b714ea7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13ad52b-cd25-4046-9f54-3c9c53227f42",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8b09b1-dfb7-4344-8577-51ffc80155cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793c417d-a3f5-4805-8a87-c69655e59a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb168a8f-43d4-4d96-a194-c1f084bd21b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59af27c8-08d1-48dd-8960-ceaa92ebd033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b006130-6839-4945-8e51-edcaa76ea0a7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7547ad-8938-42e3-ad3c-492082ec09bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89885c1-2f69-4722-8ae1-cc9cb1f49d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8addea22-c1c8-4b6d-8053-dd0b7de39f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7b988d-14bf-4928-ba80-80e507624e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434769ae-8037-4d3d-aa1a-6e3b41424ac3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9baee90-aaea-4cfa-bd4a-0552eaca9c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c17bad-0330-4560-8335-74c6ed3f599f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc18a7f9-3f15-4b02-8766-e33d27c6a625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0bfb23-ed7b-4f9d-bcba-5bf75a9f9d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e252e4d9-cf37-4649-8645-67a18ac0af41",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2405bd3-dc2c-4413-ae1a-83e0ec402256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3487cf-96f5-4afb-80f5-dc2f387cb00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf47ad1e-0df9-4980-a1b2-03835e00ad66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78aacd2a-6ca5-4a68-9220-2dda066e0906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ffe9af-ba51-4604-b0ff-e9b44cea26d8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808f9c26-b726-48cb-bb4a-90a5a0cafcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4876f2-ef22-43bc-bbcc-258ebda3c615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150db957-4a3e-4967-ba2d-1eb8c575ebe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c94d24c9-f20b-49b0-9c0f-55c8df045642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c36806c-2142-4a2e-b821-02f99573ea19",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acad92dc-9e7f-4ebf-9515-57b041f0aeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e137dd2-f7ad-45b6-bd4d-8568c5a16cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320b49fd-c449-4d1b-af8f-dc50f34d8f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b8bedc4-36c5-45f0-9aa1-f14211097dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ad4fe2-d1c8-4524-87db-441e937bb543",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d2add6-8e6e-4bde-9fa6-37ac8fec610e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0720e6-236b-41fd-9db3-635bd138c53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a60d81-3b6b-4e24-abc6-aca2a12cc6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b055951d-7d73-469e-a2d0-8194d5b4f30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fac2d7d-4066-4afa-9c27-9627a2786cb6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef76331-ab0e-4673-90ef-f19c232c3143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fd9043-b011-4694-bf4a-15e58ca97490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f92f50-cb41-4472-baf9-917000b895a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "25fc690f-9879-4bfe-939b-eb14215e11ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dc6c27-1a1b-4b1e-8837-6d0d82d3f40b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf976ba-b2a8-433a-9a0b-8b6662f1a1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db68393f-bba0-4aff-8211-518cb284b4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e543af-486a-4794-8b16-d2a8ffa0b314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aad53a43-11aa-459d-a205-e43fa88f0d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bf8a02-9cdb-4240-825f-d8e5b21dda6a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b727695-cc95-4d26-aad4-5745ac4128e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3ec2b4-2297-4648-96e5-60eaadf660af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64a0dd7-0c7b-49c1-95a6-a7ee55ffab6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb8a795c-24b7-4ff7-868e-5f0feaf5de6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86b613d-8424-4393-a895-8337914250ee",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8075f1e0-472c-4e7c-8c1f-960756d03668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5618c218-2dec-4891-9ab0-9059bd96e88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b9f1ef-0e97-4401-938f-8225da13a03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6edc4652-64e0-47ac-8e67-c90016c291b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3655e68-1de0-4e74-b096-6ac5035adea4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36755846-039c-4a33-9628-72e21d8f5026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2965b678-967a-424a-adba-e87c636875d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289c18f4-9192-400d-a05b-c99b573f3de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3413ff91-0357-4737-ac9d-f3f30d906707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc71afc-9ef8-4e1b-98eb-70de6a79cc4a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f469b9-f368-46af-82aa-d6381e2d629e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a90829d0-cb72-42e5-8d24-b672cd824eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9512e3-7f5b-4e33-9e32-33ae2026990f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "de1c9ffb-7f26-46cb-9066-3d4886e724c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2c4047d0-3b03-415f-a143-10dc2e7e955e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6c50bdd-2c06-48e9-9364-6416608d49ba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a776ae2-1aa5-4556-b517-8ba42946621e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f681f3d1-bae5-405b-a038-f5fe906ec4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be559cc9-835f-4cb6-a435-e2997c7208ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfe21c8b-52d8-4fb7-9989-29e30161cdd0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e27e9781-1b4e-46b3-8de0-7d5a19b33f7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f4142cb-5a98-4b9f-bfbc-7c8a69e38bd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edbeb0b6-3719-4f38-b224-fbefc31f3956",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ca167a3-3610-4c1d-96dc-9343371346da"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4bf00a3c-360b-4cec-8a60-5e3245eeb489",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7993e8f3-7c94-4fdb-8a79-8c64ad74bb21"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c813381e-239d-48be-a321-9d75b81d6eaf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40628d41-d51d-46b8-a8fa-ac917fcc6122"
                }
              }
            ]
          },
          {
            "id": "c38304b8-3c06-4da1-b077-f893ff76f0a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60988011-02b5-4a47-a634-4fb37eb73354",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "352e6332-1256-4eb1-bc84-664b12fa57fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc13c5a6-1648-4ee5-b81d-1905a8693efb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bd55d50-7eea-46d4-bcc8-2710016deba0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a8e4ad61-b682-4a50-a2d8-706a05d16647"
                    }
                  }
                ]
              },
              {
                "id": "493e68df-b2af-4046-b67d-9e53fc7b6e28",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff8f095e-27e9-4268-ada6-268106786705",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57e2e945-ae05-4a13-8fc1-83c0eec578cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf5c7e85-6856-4b32-b830-f6634d866cc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20233048-a3e7-48b8-9f03-3074959b773c"
                    }
                  }
                ]
              },
              {
                "id": "73962d6b-4e85-4780-b080-8a6d61c8c4d3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e8f94fc-35d4-498f-949c-26bae58eab12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c31b6541-da99-43ae-adc7-84594d8145e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52d59920-d217-4381-ac67-a2481f6be8aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b386b040-6bd5-4d5b-b2c2-16229dac1552"
                    }
                  }
                ]
              },
              {
                "id": "07fff70e-d1d6-48c3-ad57-3ce0495aadfd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c45eeacb-8a7a-41d9-8a82-c10faeb0e12b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ce053b8-5c06-4e54-90da-3471e8b4eff9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ef3c8bd-51da-4b43-a2ec-bff71bbcdedb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0f6ab00a-2340-4629-a445-ae041f8ff44c"
                    }
                  }
                ]
              },
              {
                "id": "c0da09ee-a947-43a4-b44d-dbc7ee0ce315",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3dd86d4-58da-4518-8167-b28c23059fba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32f895fe-a341-460e-9705-e0c54af5c586"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40afd96e-2712-4a34-869f-2abe2f03d32f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c5b714ec-aa2b-4ead-8828-2ed740a75808"
                    }
                  }
                ]
              },
              {
                "id": "1d9e0855-b42c-4ace-8e81-62c451e4c129",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "995fa7e2-3a82-41c9-8207-f0db0c9e20d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11db3f9c-b7d9-4b9f-9344-67f5329036eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7397ef40-2cde-4f7c-8c30-4c78774e6324",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e749a808-4b84-45e4-be31-52f55a33ca98"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0f0d0eb9-c80d-47a3-a6e4-e98a410f91d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73744b76-1599-4947-bb8a-1926a859a0bd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e1d9580b-37c1-4f20-beaf-49c07d2f357b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "017deb78-e430-4c0b-8b74-066642780884"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb1d97e6-52a3-4adf-a18e-cb803b6c5afc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "abcb15ee-9334-4291-88c9-497d88c92deb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32966e77-6db8-4376-a7d5-129a6df588b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2753fc35-afdb-470c-ad38-012268de8659"
            }
          }
        ]
      },
      {
        "id": "12f089cc-1d4f-400c-9a6a-2f3709e1bd12",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f296ffcf-548c-4166-b659-d9f720cb32ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5cbebf65-54af-4332-abd8-88b0b9ab006f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90d8a189-bbef-4f1d-9169-b7e22c7d26a2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8819d18-be21-41ba-aecc-e713040487a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45944668-4a67-4d9b-afd6-8adada8dee79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d608b13b-966f-4471-afc8-de30237dabd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d22c25dd-ee78-4630-b92c-5bc0a1970365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52e9152-d4a3-4d6f-904d-5a860f83e363",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fbc8cd-730a-4a22-b71a-6398b19df176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd6e0c2-b11b-4065-9b3c-df8a271218ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b8eae4-7bcd-4068-89d0-451c03e02cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84900232-2a86-4884-95b0-a7025ec45679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496e7e93-57e5-42a4-a841-4c323361c792",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1339c524-7ea2-44de-871a-00b0d9120fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4d5b86-2842-4e25-8f51-5a1a8ac0e412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fea7fe-4951-490b-9573-e855899c1bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4161d71a-6de5-495d-b434-96d3676013eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13445710-eeec-4f82-b857-ddf0cd67686d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d038d263-dbd4-4bfd-8e75-542f84f561b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5f59ae-5ea3-46a6-a4f2-af3edb365fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d4bc4b-f01b-49fd-9c87-d44d7f9ebf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2227501-4765-4f73-97fd-bcdce839ab7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292c84f6-f68e-4f9c-8ed1-7711189eecd5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0afadcf-95a0-4284-8e7d-07311af5526e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f845d109-fe76-4b16-a2d9-4d1761879d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a456b5-51db-4c4a-aa48-33bfdacb8ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f123054-783e-4512-9c03-7d11fcc46797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195f0a7d-9576-4460-8ba9-f688d0f1f63b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddbf127-a8e2-4dc6-87d7-98a4b54fc2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb6a6be-02f0-4d47-84e0-775c06fb502f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269c23e9-9ab5-4421-8cd4-bdb8db6d620a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31747fda-fe26-4477-8850-aec6f74a4e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276245f2-2572-4071-a7f0-9b8969a6141d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca3b4f6-8e28-43ed-9cb3-becea19fce09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ec0e9d-87f4-476b-b867-43b2fbbb2f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4a849d-d7ab-4630-ae3d-8e5e2f5d0f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "19b18c16-82fa-4d84-a5aa-0b6b4159e50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eddbfbf-6d2c-44f1-ade6-d9f3b12c685d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666162e7-4190-4e7b-87a0-b686e085d060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e99fb1c-92d7-444a-9311-185b2dbe5f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e87b2e-a2a7-4083-9293-a37a662119c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "054bbe57-9747-4923-a5ec-ea97becd602c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04fa906-e792-4909-837b-3936d8006353",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687539f9-7d76-4b28-80b4-f6c93e4cd126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bedfe79-675d-47ec-a888-c0bd69122ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d38e129-3084-4b49-bdb1-2a61abb206e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ba8713-ec56-4716-8c46-78230d0fffe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0426cbbb-ed7f-4655-b259-80ec7ba4098d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b63b55-1173-4d4f-af82-843e2a059aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488a2bcb-7c89-48a7-a93f-29acb5b1b978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871f624b-2bba-4889-a68a-504aa376a272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b828ce7f-1bd1-420b-bbb7-2103a95b68eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae0cd82-3d6a-43aa-a85c-fcb9cd49c3e2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd59db11-f227-4a90-9adf-6b3a5fe5de28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c867d2a4-6d1e-4e16-b59e-54f82308ce2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935bef26-75e0-47a0-89e0-7ffa699605f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4accc7dc-8c1c-4522-b238-409f21ee8cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721a46da-a6e1-48b3-bb8f-b95bc10b4ec6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4103b9a6-00e1-48a6-87f7-5556cfdfe09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fff9948-8ee5-4017-bb8a-eacccd09105b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df9b7d0-5f52-42b8-bb58-221726c9191c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ffa907-40be-4136-8f10-a0c5c9c004c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f1e5fe-f43e-4781-8644-5fae4f3ef0d3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a306e9-7b81-4161-98f3-dd954dea35d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a37d83d-7b7c-4876-8a0f-35171f2dea0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42f20cf-df5b-4ed6-ac25-7bdafc435710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f25b3f6-a935-4a05-b122-8b23be5dbdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29df617-c66a-4b25-9278-29c3fde1eb42",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a03fdf7-7e8d-4325-b4ab-0699d78f20db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d64e77b-d3f2-4ce2-9816-37bcf054b462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eebad81-6c3d-4d70-9f08-abde2ba0f6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "94d17adb-ef19-4819-9704-490656a4d33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157e0f49-b475-4b8f-b862-655db51d89ac",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ddc8e5-b7bd-4542-ab6d-0bccffda4ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70bc1100-ad83-4f04-a53d-34d861233448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a6c0e0-4052-4b8e-bd73-88e48026c478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2c7a39-a36b-45c6-8ad0-e98223bb97d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6034c1e5-ed72-447b-9600-20471b4bc951",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e12bc2-8051-4a9f-83d1-3783194a3ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbe1341-a481-4897-aa11-27403078dc55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8110d37d-be8e-4b14-8fe3-d361e371e941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bbf6d50-0720-4c2f-a2ea-351338919609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4182d231-80cb-4d60-84cf-3b68aaad6b31",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7551ca7-b109-4266-bb34-b817d2a4829f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3b0234-e752-4c5b-a96f-5c5c41ae52a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e4c426-d937-4b75-a76d-a17b1bacfe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9436c3c-59f0-47b4-bdfd-4f0f0f7e26b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5d6206-9494-4833-945f-7d0d83ca87a1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13ab3a7-d9a5-4f23-8aeb-23511ddfb33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59389314-c581-4341-ba3d-e732b782616f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658547cd-395b-407c-850a-dc4d2aa464bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cdba027-fd1a-47b7-82a7-0c436e2d78f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039f5ba7-c247-4fba-84c4-d7f8d4de964e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ee2717-9f25-484d-a300-2f297d222a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63577eb5-6a55-4812-a2a6-192a53c9e54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517d1b3d-542a-4ea3-9cd5-be036e70cc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fed3a6d7-980c-4106-b076-b0cf97fe1811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029eab99-3ab4-4048-adca-c5bb73dc83fc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe79fe9-cf71-46d9-9c21-134acac6e0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c1f701-a698-4dce-8f3e-2a0b74be0a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22701fdb-0f96-4159-9f23-7bc88de7df39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa665f4-631e-4804-8091-78a1dd07aed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f93a62-4c1b-4b64-888e-13f02d8ce203",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0d2aab-3ca6-4512-aafa-ad7050f9c277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e174d104-d19a-486d-af68-d488e6d7531a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e618a3-f82d-4ba5-b9d4-c695bbc79b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2509a5-9a47-4fb2-b87b-e749898aac60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40acfd0-0e3c-4143-a7cf-77f919a09804",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb86a00-fc53-4902-aeb6-8bea6072728c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d8d9ab-a652-4473-8d5d-c8aa597004d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37afbf4c-6918-4de6-86b6-35dc2837a1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7ff3aa-b0c2-4739-b89c-1dcb2b715814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45aa7c40-0e88-4e41-aeb8-05e4d6a628e5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4440b05f-3957-4157-a2e1-661170123b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472f9f85-9be6-4321-9a6c-44bdf5596fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5fb024-11dd-46af-90c2-78d13c5d1d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a84f3718-36dc-42d2-bf5d-77dd0c0818fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c69ac6-3e17-4c8a-a441-523b30fda2c3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845c3f74-d7dd-4831-ba68-41eed857b209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520069ed-552b-477d-a299-a4325a442fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8f0a8e-1427-47b5-bace-aeb6cecec167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81d4f8fc-5df2-4375-bc6d-c09211e6363f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2548cb16-78db-4dfd-885f-395adeff838e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbab77d5-ee47-441a-bc75-d5d9ea4ddedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e51425-8bb4-4940-bb25-62de06a4a29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcaa5df-3dbd-4209-a4d3-e691daeb9a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4de0a924-cc03-401d-af4b-a9e5882d9711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050cc2c5-4476-4cc4-8f63-ca452ee6daab",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b695425c-b16d-42ac-b1f8-f420a2d562b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f88dd0-f20e-40ce-b641-3e5e82a1fdcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a68f9c-1df9-44f2-aff1-367489275804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b138ce-26fb-441c-aeaa-ee469c56fb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e7579d-f225-44dc-99e3-1f13586f6b1e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f8336e-093f-48cd-8324-0878a0d24b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f467ed-4035-4eb0-a1b0-741d5531d941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3e2be8-627d-4aad-b992-6ccec7678491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71b220a2-79d4-4d06-b192-3eda93276687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9596f64a-6d9b-478e-8eb7-289fab1bbb37",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177b1e0c-2acb-4e55-b489-948f34c43fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64702fea-9c29-416f-b008-ac2596f99d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce872e0-5931-4bdf-b452-d8e9d6a5a77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b8854c-12bd-4f48-940d-f5f6767cc385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9e3a49-0f7d-4d80-bf65-74be004e9042",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a35fa0-16bb-4d65-9615-7d8b7cccfede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea5d819-081e-4594-bd88-1eceda10c2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4389d69a-29e8-4f44-9e5b-a96850596b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d95922da-304c-423e-be89-f0847673db1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf25381c-dbe9-462d-94b9-b0f06869781f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a05bbc-6cb1-4a0e-95e8-803e0dacbe1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6084d160-e6a9-41be-961b-6468f5e9999e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49688375-7247-48dd-b2ce-0a76a30c57c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1dc68c-e2ba-4517-a360-3b104436a574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ecd73d-d722-423e-aefe-6e2bc59c23be",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ce0e3c-3041-4fb9-bfbe-35bf050777f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c9799c-9b34-4dec-8f24-21d7c5cb4cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354b7c68-4c18-4e8e-aa6e-0404ddbd3e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c365201d-f518-4116-8ba4-f27bc4ac8d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b102b0-0027-4a58-8685-5f399d5997c5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c054b398-c15d-416e-982e-381767ec6325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414a1553-bb9a-402b-8ffb-c35ec364011f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87af904d-bd5d-4c0b-b2a3-6e712dede719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60c0ef55-e00b-401b-9261-0c5eb312df05"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "550387dd-f444-4c23-b18c-e2feca48b574",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43ec8d1a-65f8-44e8-a7e6-880ac9e208a8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf72cf48-bc27-4206-9dd2-63586c62fe07",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a8b1ea-0d11-486b-9249-281a1b0f11ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a149f2f7-ff3b-4995-a2d7-fa8c23e2dc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e66e9de5-3717-42e9-b4b5-1e5637f5e167"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "975a22ef-5298-4a21-9df1-dd96e759461e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49413e25-2785-4d94-b2ea-6cd243cb304f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8935f3d-dd0d-4044-b79b-ec1c9d5026c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19035a4c-ccc4-4be2-9a10-8d74673e5239"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5018295c-e385-47b4-9191-b2a5ff0034b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bb8f4cfd-cecb-4dc3-aa5e-e8cd74ffbb8d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d881696-6624-4836-b632-3ef88ab827e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6595b8b2-08f7-4a74-9dbf-c5cc7cab61b5"
            }
          }
        ]
      },
      {
        "id": "19c234f0-e8d1-454c-a3a9-06a1a3327390",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ccaa1186-f4a3-450e-a747-05aeb7729a06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1eb7de8-9828-4d93-bf7e-cc828f35bbdf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7b9f1e5c-f68f-42e3-8044-e85350b3255e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5992f728-0fc9-48fd-b1b1-5e9086f7bc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad0dd29-8759-4ee6-b5f2-e1a9ad3760b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7405fef4-84e5-427b-9e7f-db6efbf265c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed53ca4b-3355-46b3-a112-6c1afef629a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a17b6d-a6a4-4cf0-b0e7-101dfe708c98",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09ed827-a940-479a-9258-c1a45ecf4750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebbb9fa-32dd-40c3-99d3-b6267bf6b451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134ade90-17a2-45fa-9eb3-f315802c52a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "088eca1f-3e63-48cb-98c5-73d642cc6043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5798787f-2a70-497e-8134-5a7f5d1f63d5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f324f8-eead-48c9-b664-7befe79e0b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5423559a-d098-4a86-9dda-6d664451dd3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111bb6b1-c8ea-407d-b0a7-5c7e4fdcce7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36f40330-f105-45de-8001-1a6cf462be3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d195094-c3b2-4f43-9c3a-2dfd8c1a9d06",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb9e4d7-6fd0-4f68-820d-dda69fcc6820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793e18e7-91b2-4f4e-8b92-51e41ef3c70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0658fb-9373-4992-8300-750ae9b1d1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a43a799-b098-49e2-a1b3-a2d284dfb657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17db8a44-5bb9-41b0-9bd5-2cdff4aa9777",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bb293e-28cb-482f-a955-c0f8c98b7a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ddf642-6c98-4ff5-b119-243fd73ea1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ab1c5a-e022-449e-b0a1-b218cda030a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9540ce7c-5b07-4e5a-9b04-26e374fc6a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41eff599-aaa8-4e9c-a4d8-fbe5a8bc6580",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20ac466-4a5a-4c6a-bf27-609f129328f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321200c8-2b61-41f1-b941-6146493c4f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a262d38-8e3f-4e6a-b098-cbd97543a2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fca7f4d-9e4a-484b-a5ba-5b178ca51e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e08ede1-7698-4f5b-bdac-7311edc6088c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e9a4ad-97f1-434d-8b8c-e867de508ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76301aca-8122-47e3-a6fd-3d96341a1e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7330a4e9-d894-451e-9cdd-b2b9a79915a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5188c6b2-a266-46d0-9fb4-8baa3bc52830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0675bdaa-c028-4b1e-8e15-de82c04e0f05",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067a4ded-6c28-4bb6-a6e5-c0ff8267d70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e850a5-d863-41ec-b3e8-1b674313a06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b02e64-b0a8-4490-832e-29af0e18ebbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52077c61-0614-46f6-b408-4eea86f8004c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6784dce-2f45-46eb-9d79-16b345ae175a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc0890f-9bef-4665-85a1-6e2cf91c7526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488192f2-b397-4a0e-9747-a04dd662f577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d736e16-1307-4d43-ac80-02378ad77661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "982a34fd-bf56-4af7-b684-1fd38c1c3990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bc4ef4-fd8e-4acc-8d1c-93d89ceb4445",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b83e28-b8ad-4ceb-90f4-9909f5228f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb796757-1e53-40cc-840c-6a95713c1825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967c89bc-b0ad-4b6a-bf60-6bd907df8ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd497795-c96d-4c33-8c67-7ce973c7f69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395186fa-c3d4-4d7a-94a8-d522b5a3e9cc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c569ca-34bb-4f19-a76f-9d0294bb37fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e61e954-94ce-48bc-bcf6-b6c2855dcf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fb3bb7-8606-443d-aef4-067f193d9a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1a95930d-023d-4760-9bbc-1e9a850659ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df62c769-dba0-4a74-a6b9-9699e979c73c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536e8ebc-85ee-42b6-a09b-d73ca18803dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d476a24f-bd35-494c-9d3b-800f1b9a6315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30eba311-b3c9-4997-af59-3452a6b4a8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bbab282-4718-4011-91ed-a6680db044e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a00f9d-dce1-4a59-885b-7f8805921f9d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8571e745-d9c7-4ee1-8ce6-0e7751a1575a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17734ac-c7cc-4e44-9486-8af8f8c633aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af94719c-db9d-4124-b6e4-c02e17503266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc0bc13-9750-413a-a5f1-8c2dea7d17d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e0083e-390b-48ab-9068-7899f667dac3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58fdabf-79c7-4964-b135-d66f7c850896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d67ba1b-4ba3-4f45-b693-198b1674835e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8b2595-5f81-40f3-8495-e0b3bf43eaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e966842-0cec-4aed-a7c9-b9ffe6ae7a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8597087-417e-446a-b2ae-109654b494d8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71dff4d-0007-424f-8012-a8812f017558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45704cf5-3391-4bb0-b746-63db3deaaa7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ac3e5d-1880-46aa-9330-2b69f444e89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5867631-1a34-4261-b449-8d1e9fe41ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266fd142-ed39-4b89-be0d-c6ac3963d7a4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58ba405-3c34-44c9-bc60-5a0604ee5c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53753d24-e279-4fa0-8b67-9476d300246e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449a7fc2-57a5-4e1c-a3ae-33b01cb5b80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "04d04d8f-11ee-42cc-b8d5-4ae0b4b3d4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69db81e5-bbdd-4c30-af18-4ee255b5f8a7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99015bff-2546-4cf8-b33d-0bf9e1284fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f92fa4-ab86-41c0-bdf6-06d804948333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfcdf45-7c64-4dc2-94e1-0933407109e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2f275a-d788-42eb-bb60-c84f71fd1d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59b4a67-3144-46a1-a47f-96cce1c2499f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f0a3db-0709-4892-bd08-a2ddc87d466d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619318d6-5c70-4a34-84b0-10d4c42d895b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb79b221-c50b-41d4-9cf1-8d82267e610a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7317359-d4ba-4306-aed4-1477af799543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ce7f3a-9aa0-4ac1-9d27-78533b466502",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc85eb7-68f6-4093-ae3c-a15a942f0fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fecad534-b9ba-428e-abc3-999b9c654505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8050b13-f76f-4069-aead-c1285e096919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7505ba-fc34-42d2-a00e-126813fd2e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea2ec95-8dba-45f3-b070-b96006f00bb1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65cb448-c312-4f91-85da-a8b58c05f70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102e36e3-68f6-48cf-8c87-d88ce9f9f546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf4e87c-4f35-4f04-88f4-3098ac9aee09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc96fd7-5437-4daf-aa18-98509f290a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a02d48f-5d91-4e0f-8c11-2137a909d961",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a531432d-e11b-49d9-b248-051e0b91ef80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4cadf27-7d7e-4e08-b4ef-d6edd1d54c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5b2715-1ddc-4823-a344-bbed0f54e1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da25ab6b-b56c-4bc2-ba60-2f35d1535bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1b6da5-3e07-41e6-bebb-dbf57e460b83",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab31158-aa6d-4b12-be0d-5da0123da117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e438b413-9deb-4595-8304-2631e3cc447f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667697dc-d425-4a51-9c03-47c38afbf3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88e6c984-a5b5-473c-bde7-5ad6043026a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f4f1d7-1103-4ff2-853c-f0f15f4990ab",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e9c56a-0240-48ce-9cfa-b01270724927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2f98d5-ce44-44eb-a1da-4f79295bf05b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b8c29c-79ee-4d1e-91d1-f602ca4981fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9647b622-e988-4271-8c20-48d4ca77abe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d649f61-1af9-4911-bb5b-9a05f7a14cf4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2df531d-6c3d-4914-89e8-18720694ad00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a84f96-7d3e-4384-b672-11d31ec9e89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccb2be5-6e8d-4f8c-849a-312a667032d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9713bab1-b721-444a-88bc-e905eff71e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe31da2-231d-428e-a4a2-7c6e557c8acf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3a1c67-0173-4f6c-92ad-d3401df18bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d56219-0de0-4d2b-b7b4-1e8ebe3e7e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddb79c8-145d-46f9-99f2-a447d8b3616c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "694dacb9-bf54-4c6d-83ea-f87dcdb77422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a5529b-089f-4b7e-8033-2f86ecb6bbde",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f6bd48-b4c0-4878-892d-e7e3cd01dcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4dd329-4d1d-4028-a150-202fe855b5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622ff0e9-18fc-42ef-8ad2-0f3edced1f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "930460b3-1d36-4f20-8fb9-b10727f471c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b543349b-5474-4e5a-81e0-a21bbb112b76",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36e003c-4690-41d4-b719-4eb8d6cd554c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f632d179-56f3-4924-a2ab-c396306209b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acd97c1-73e3-4144-9eec-8486f7bc3045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05a89b14-d424-42de-af6d-65978f45515b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020b15b3-d484-43b4-aa21-013a94d73b44",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4b2c0d-c076-4686-b7ad-e58e5ca0ff34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870baca3-1765-4f09-b771-66980d32d7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63585b6-74bf-4a05-b252-aa54d3f5b15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9397194a-c42f-4cad-b6c2-6a88867e7c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f081354d-a10a-4e67-8718-9b5b98383cfb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258bf741-0876-4d16-ad01-64da311d7d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a35050-d54c-4504-a3c2-70087c1b2b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d44090-c055-4270-94ec-4cb501373574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0684c558-c170-42bb-96ad-0b0a7db311d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29694f7-f354-4f55-88bb-a8d37b7dcb16",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13af0ba0-ee8c-4798-9655-931cda0c3828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4b1ed6-1a63-48b1-b874-a2ae187dabe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fc3329-bd55-4d07-a7e5-c165bd208a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef920c9-064c-49c0-8031-7ff41f3a1463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df52978-9e77-47a7-b2e7-ec3dfe6809cc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c228a69-e8e9-4eff-9df6-0e8f83d8757b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c572d58-37d3-43ef-a46c-e7264fc50888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c80fb0e-bbe3-4436-b207-d719f512cad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f223b505-ee20-481e-a1ea-934e7ba92909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bea383-02c4-4cc7-a0a2-4ef68cd214bc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afed08d-bcf4-478c-a0fc-ca319dd45bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b41264-bc04-405d-8bed-6bb45f006cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5929336-ed14-4988-a2f9-6f0438eeb049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2138549a-ee33-4c2a-976d-62b78f6d0551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807802c8-9c0a-4598-89c2-a406d69b0733",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bf2baa-145c-4e1d-b283-c0cf7063b870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34097f6d-007b-4803-b304-edb57ca774c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3c6e62-189f-4744-a520-e72ce6ed592c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1daa8155-8e36-4212-a0ac-ae9b48b58ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbfcbdd-462d-4293-9935-3393bfc88e15",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329c6f10-83ba-4a00-b64e-b2e51caad4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a303dfd5-bda7-47a5-83bd-1092bff4dc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1d6669-34ea-4f72-ab36-d260fdab38d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28f333c5-9549-4a2c-ae96-69d55d91cb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165a2ce5-18fe-4e08-a374-b29d76ea3437",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b717b45-45e8-4d01-b7f1-646188832796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38166401-fe35-423b-b965-20b70e4d231c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbc9075-359d-42df-9b30-4ad837ab3d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af79b388-99a2-47a2-b84e-05de76b835c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c87bc4-458a-47f3-9bdc-ebc67d209a24",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656345e3-33de-4653-9741-add30e71ecb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c338b966-2129-4157-9885-e63c30692fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701e4030-1388-4c0b-8a20-4545d48f959a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a34b645-57e4-4d4c-926f-fa2a667ea15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9309f4d0-04de-4af6-a33c-422628d952d9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33f436c-9f0e-4f7c-a1f5-73a95535926d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9869f2-67a6-437a-b62d-93461fce1289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22841008-66f4-4ca5-a49d-7f422ac811c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa06070-d0c9-4289-b9cd-e9e239879f27"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7aadef55-230b-433b-9556-0ada4f224768",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6ce86a2-00b9-41a1-8135-7c00f9673175",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a930d716-5ff7-42c0-912c-741747de3bd7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "54373e69-baf6-40fb-ae16-75adbdc115dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea8896e-15d1-4cbf-9e3b-e563bf18d49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8432ab9f-67ce-4afe-9780-476120be6e98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4696fed3-d2e6-4c1b-9fa4-2cc6da26c1cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b3a0acb-eeb6-43e8-91e0-584407a38d9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c09b04f-7600-45a8-b035-925b2ef005ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7673aaf5-75cb-4449-9acd-d34917c3d833"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8759bff-102b-472f-a284-644ac0e623cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "777a6729-48e5-4e69-9945-de120440368d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "635ef5a6-302b-419f-9548-262328b1f8e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5af02657-cc6c-474c-a094-76a526bf695e"
            }
          }
        ]
      },
      {
        "id": "d0bb10ba-9771-4532-a771-4fc94501f1d5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "79620107-a486-4a01-a8ee-2c70b68b057d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45305002-fde0-4c2e-b2e7-3062036cf106",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2eef027c-0c04-4862-9769-20a66b098f7a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e988425b-ce9d-412b-a2ae-d44bd256bdc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df39ac28-ce37-45c5-96e7-06dee881b0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668e02f7-6968-441d-9e41-5ac18352cf95",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efb8700-44a9-4b40-9154-2d216dc02d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7610cd0-6af9-4850-96ab-797e4dd5a1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010b75b4-9357-4ac2-b459-334b3db116e1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbe94a6-0db5-4530-a299-fc859fb83b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf9ea95-4b10-49f9-9db2-2421a69e7c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf77a18-79a5-4338-bd58-d4a603b223bc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb216274-1fc6-40f7-a259-39a1fb026f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130a94b8-8bb2-4642-9a2f-026a6a759856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd67ef6-2c5b-47d1-bba1-6c4e3c366839",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65618003-6229-4e03-aa66-46ce037ade1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fc791e-5ff9-47df-ad16-f48e9336338a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f9df14-49f5-4f1e-a021-ac6df6af83a2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b307422c-00a3-4090-8a1e-d0c726557082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a094f9-0e71-45c6-bee6-df41bda96813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1712db-910f-4ef9-bb0b-9bbee3a2b418",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8ca42f-5576-49cf-907b-9a7f0b17a44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598ecbab-103a-419f-94d5-35d9611ccfbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6f7e62-fec6-4562-83c6-ce5d44ce0ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03547e66-15ce-46a5-8eac-a23d04dd2290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4aae00-56f0-41bf-bd47-9ee7c4c52f6b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66d3248-706c-4d08-801c-e7dbc45118f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3693c6f6-bd36-45d0-9b3b-bb24294d0cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4be7339-7ef9-48f4-9f12-b9711c15c891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b833397-08c0-46f0-a3e6-a9c23f6cf6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbdaae4-944e-47ef-b2c6-3c316488e843",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee06764-5ccf-4fb4-97fc-664f83bcfddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54ea9078-affa-4086-91ba-be23c2affd3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ee9683-ca29-490d-9dc9-d8ba1c64142d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ffdb53-813d-43ac-a0a1-13fc34d6aaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497f630b-bbaa-4fd1-8188-3d147ba22d4a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9c39dd-08d4-4ffd-b4f2-beef3946cec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bca3ae8-5263-44d5-b904-cc9cabf5ac3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c584bf-4678-4f1f-b24b-ec9e38b170e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9a0e71-5fb1-4cdb-84a2-b61df75ffe37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5c81d5-70fc-42a3-a1fb-04a5dd5a84d2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a463a2-52c3-4abc-b561-1adc51a2b93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695740bd-162f-48e1-b7c3-4dd10113ea8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c58fe3c-0e7a-457a-8442-fe5b2b33dc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bc641b-7acf-43e8-acc6-0811dbe6b99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fbd067-58cc-4ff5-8d2f-63b297457b93",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35170728-f67d-4af6-a653-72a0e0af982f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4aa78e-2699-45db-b6f8-b974a4747d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff4823a-4b1f-48c9-beb0-ff23ea42fea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8337d479-9706-4585-96fa-0e722bb8b3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd21634f-fe52-45ee-bd5c-1527e482b9e3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa85a4c-b7a2-4d1d-8dfa-0c47fae8d21a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8146268a-be8e-4d18-8c48-b16f7261a68a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487d714f-0fe2-4302-b33e-97406204c70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "171b1853-8774-486f-b11f-c87eb7c899d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a079fc75-2fe7-4949-8de2-86947b5a40f8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b984d2-2ba6-4b66-b44e-9d8133e8e08c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b06fac06-567a-4a59-ae11-5206e1bf5119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806fde6d-88ed-4665-a0cc-8e45adc69d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bedfb9-165c-41aa-a970-e3d3b853f131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75efa69-b6a2-4dbc-b801-688737ddb64b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9669c4-7810-4cf6-b02e-09229db58841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7899b842-b9ea-437d-9218-dad332cfb704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58a089b-03b0-4b4a-969c-8eda1723a180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d43225-2163-4e10-8358-fc577bd2d7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4a20cf-e33d-4d08-9fb7-a708221c25d0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "becdc063-c279-4a3a-8076-dad5fb3e177b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e86274-5381-4d0f-8aae-fd2f645c6460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "435ee3cc-b342-4e8c-b792-dc5a929e5a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e853152c-6928-45df-85ff-ea77353b037f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9f34a9-8f49-4793-916e-71f2caab5377",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01e7fde-0c83-45ba-9ab7-49f7c227fd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b4cd77-56d2-45e6-bf5a-384991f60610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16485aa-8e62-43e5-b782-9dff69727839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1077e945-d3ce-4dc1-9bd8-1e7057ce0b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3087340-5d7a-405d-bdd0-5ead135bc9de",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b00b36-d700-4317-9d28-b0e4b47f1d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485a5085-f66e-4f1b-be5e-609140a383ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369bbeef-b1d8-4eab-a4d3-9eb4bfd76e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe02a907-d986-4a5b-9db9-bfbf8adb0d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2617fca3-abaf-4001-b7c3-e7ebd6837ef7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3a6fe7-da4e-4db5-a1f6-c72365aae0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebfdedf-77a3-46a1-88a0-9659d26dcb80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76b0dac-42f5-4123-be16-7f61232ea06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cf9439-843a-4ef1-8dff-1fc41362e7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9589045-7242-406d-b5b8-924c192309df",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875031f0-a85c-419d-ac54-1e25a8b227fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d7aea6-2d93-4448-895a-40b468ad4355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1802b0d-593b-47df-8364-3e7cab5b12c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf702bf-d8ec-446b-8af5-e134ced88153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df4ec18-2483-4bb4-9022-b6ef69696657",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c581e1-512c-45e8-b8be-b9fa02d3e5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5e8d87-40cc-4627-bdf2-f40231269879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986e8b99-e201-43b1-b8d5-145b8049d171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c724a426-0d4f-4697-a35d-36a11445545d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad365598-84d0-46bc-8e94-38475219f12d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a147b6-8b94-419d-bf71-f55ccb754f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ea4e90-82ba-4853-b12f-f437be8bf258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90b23c9-d57d-4dec-a659-eee67213823b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8425c9c-5a0d-4dbd-8106-3567076614d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ea2f18-603d-41da-9cd5-88d561bb4501",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf374f7d-f11f-42c7-b5bf-51c9a35e8348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4a716a-3eec-437a-a8cf-6a72f9598c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8324f912-8c32-4760-b98f-b968168f3878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868288d3-8fd7-4289-b5f3-4917742f6651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d7e7e0-8a35-4e72-89e2-199f764e101b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2bf548-c7ab-469d-9552-793232db4c0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad9589a-90ea-4f37-aae1-0d90feba9ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720e929f-0974-4d92-a547-57e23102b328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d143cd-74f5-4206-ba00-b1fbb912523a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2a176d-b940-4f40-b279-5f5f50aa261a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabd1fe1-b18b-4f49-afd2-86f09f051ebe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a038deb-f096-4d71-868e-9f7c8cb57683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2458d3d3-15e3-4c28-ae36-46f9a299005d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f30ceb-7691-4bbe-bf40-fcd391ff04a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78519532-9456-4e0c-9166-ac96d1a16a12",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08762f9-a3c5-4d02-aa8d-a9a19ae064e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d1dd9ea-f3ea-4e8d-a092-22275d84ea5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c946fd7-e448-4173-aac5-0b9e03bd6e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6152458-0951-4058-9d1f-7b9f13bbede4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a242abd-dac0-4072-be1f-837843cc9938",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0b1493-8889-4792-8f2a-b90110dbd32b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b987f171-439f-4087-8c81-d8e8513c9678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e72488d-68fd-48d6-9b34-cf6581adc923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ed03eb-c9a7-44f6-9a5a-fea61bbe8101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d76269-39fa-4853-a3e1-ecbf94ceea4a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f5e8f4-d972-403c-af30-4f8890ed3a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a467c6-a33b-40c5-889a-5eb2c433a0aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3719e9b-8679-45b0-811a-bd1665e05e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c2e7ff-bb05-44d1-b2a1-f7b2e0826f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99253dbf-cf56-4c7b-96fa-0e0a4b8f1fff",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bc99ce-226f-41b8-bbcd-7fcba4ad1a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a40ca828-b00b-4eaa-b193-44cd3daf547a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417460b5-37c7-4b52-984c-5fba86633f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c3ef49-7c01-4a97-94b4-ded5ea964863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37ed9a6-5eac-4752-a864-f49deeec415d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce1b207-b818-4034-b5d2-16079df3850c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d2015c8-5ad0-4172-9559-b1824c485d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc7a724-5677-4886-852d-5525d4c04024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d8aad1-6aad-4f7d-a274-77ea516a017c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b150cb91-39ec-492f-b920-595bad812794",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11bc289-2594-482a-a4da-a3e07efb3b52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eabc3272-1774-42fd-a0de-baa06b0af7a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f062078-80cb-4613-bbf0-88cbb5a35f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2a3cf3-f0b3-4fff-9a87-63675e1b1a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219f0197-2664-4e64-85d7-a8274b04fd21",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b76b716-ae38-4032-ab3a-afe71b83f0ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d476b704-36fc-4625-b380-b18a8b526ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b1362e-55e3-48fd-943d-2967c7afe957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e9ec6e-e9e1-4064-9138-49fd1b1f7d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c757a3a7-9101-4501-a1c0-28fde0be38b4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6137bc0c-3386-4259-9079-12bc6fd82fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3089fa7-fb8a-4d00-8299-60658b4a82dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d93b840-3745-4561-9990-aaccfa98e88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ea94d6-12da-4a33-b05b-10bd321be19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d2eff7-700a-423e-bb50-5fa37f73e8ef",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1713b44-f146-4ab9-a61a-65606f6d7b49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f47eb3f-114c-4443-80db-c71fc3678432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c0b26f-1d70-4eb6-8627-74de13e20075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf4573a-b462-47e5-8adb-603f1b4e40a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfbe711-ae17-4e66-9c28-a3d603ef716f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84de059-b852-48e9-9ebd-ef2350876b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36299a0-ebb1-4a93-aa2e-c86e2cfcfb41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f914bd5c-0acb-4ec7-9e6d-f7e2aa77c33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b7369a-9e42-4b88-a8d2-b87d8d3fe69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1a7133-156f-4427-a2c4-efd53f5417c3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c497b2a-5d3d-44fc-b245-20fffd999ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9db9e3-54b7-464d-b1dd-769c3fd5af77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fa98f5-3a97-4bdb-b0de-78bb6fb7e694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14014e8-52ec-4343-ade3-f84859f3fe62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3501535-67fd-4aef-bc9c-e7213b3f88ba",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6bdfb7-b269-4e0d-b83d-ef6d58378266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6c675f-fb23-4605-8a56-01e2d508711d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3abad47-d4e2-48b5-b737-207fdc032d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e8f6c0-38c6-4c83-93e2-e260238ebd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a048b067-fc96-4441-aa4c-e01a50b0835d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639f8d87-7766-48cd-813c-6091f8b7a91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4297b7e0-62a4-4374-95be-3a5d24958d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63dcb76f-5090-4e7f-abb7-0b1a5cab508b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a220b4-3531-4a77-a0f1-96bba2ee0702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9fbedc-ba4c-449f-91f0-afc8bc1d6438",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a3f696-1aa4-4d4b-aa72-987b8c6f4f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c16a24-8a92-4969-9814-d4c3b9ddff73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aef511d-fa69-46e7-9c66-901b1a4aef33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b3b355d-abac-44e2-afd0-8544c640222e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f05655-c5a7-4978-b269-6ea6d6ce525d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa6e0e3-4251-4641-8efa-7f4f3e589b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d270c6c-bcf3-4a4a-9922-169d0033ff9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e66631-ff06-4a1d-8b9c-fbc2222681d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfe450e-f675-46de-b041-9fd1f2d0c500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42807fad-44a3-4c45-85b6-c75fe78ef39f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e19c26-e988-47e5-8dec-1a5de9b735c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0e982c-62ab-43fe-a28a-66200f470c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13be2218-52c6-462a-a2a2-24bfe04e4ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34beaf7f-8029-400b-a1c3-4eda992eb2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e4aa2a-37c7-451f-b49a-4620f92db8af",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac99734-129a-4afd-b272-c61a31cdff06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f31915b-603d-4ef6-87fe-d46ede55e08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2b27ba-8c60-4ce1-b2e9-6e18fd0f287b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd4b119-2313-49c6-87a6-e0b86f69d316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a59707-8227-4152-b077-8627647f85f5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ae55b7-79d4-4024-96c3-892cf903c626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec4dc22-e90f-43d5-ad12-49c47eb38547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4f8e9f-c8ab-4bb0-9afc-7336523e0777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6836d4c8-8cf5-4568-a815-2ed51ee213c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2db8606-f027-4906-b484-c9a34aec4183",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86873fdf-ee43-4002-b268-4de14434ec9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12cf0522-0099-45e9-9062-496e881e8204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d24cf66-0d3a-40c6-8f35-3aa74e3b0fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3ffe70-67f4-4ddf-985e-5b5a93f7a31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c46732-4d13-45c2-b061-7561b9e0622b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67427455-b61a-4093-8f26-9d728741f21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c171ae02-eed2-410f-b54d-d24b7657f62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f13e78c-2971-4c30-9df7-58c71c616f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f0594c-74ca-4e16-9d14-44692d4ee10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdb2d37-c928-42d0-bd9b-016bde511d5b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4399465d-dd85-4342-8035-18e0cef0fced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c77086b-a60f-4657-8268-8f697cd3e8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd5ce59-478c-4056-ab04-66a2aa5b670e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9507853-bb61-4316-9b2c-c37fac342218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e2b6a9-98d2-4d01-bfaf-caa329d55660",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ec6c88-9bee-4815-b2e5-f40a02724db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6c1b25-6166-439a-9a12-5af1cd450ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543d808a-0c64-4a88-8186-feb5743f4f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0e1bcb-2287-45ba-b391-37f7b10e28a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0b1a38-b374-4bba-a3a6-80b2c9cd841a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7285bf25-ecf0-40ec-9332-09f15a51f02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a3d029-93c8-4007-a9e2-6f0a18f1d7bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efc8a0c-4fd9-4e87-a66a-5117c14d2dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825e1b63-af27-40cb-8263-2c445792ff83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d03d10-77ba-40f2-896e-b6fd44ee0553",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110691f6-598f-480b-a740-ccfad07d4b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3edd36-0bf9-4ec1-bffb-bcf7245d312a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feedc6e5-a3cc-477e-a08d-c8ece490be16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbd1f15-111c-4334-9bf8-9c9e1e257ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0835d274-2f45-4aab-8ba6-eb85aed917a2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e9b198-cb63-4211-b4ca-d1349d1e621c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e7e81f-d13e-4be0-a2ec-f5e26dc81f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0800969-b98b-487d-84fc-af432edfb06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c92e2d9-13b5-4d0a-9eea-c178a24f9a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce22e394-ad78-42c7-9025-54ccd9cbebe4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef137d7-b9ef-40d5-947a-0eccc658963a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea12c71-47ba-43c9-8536-d1e558ae14ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60149d0b-7d5e-48a6-892d-e3fe1d1b5702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6d24cd-0dff-4698-90e2-cb23d2cf565e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a2a949-a541-4491-a3b0-176f5feb27f2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d858193-eb5d-48e7-8f84-799649fd2f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f95fcc4-9ad7-4b85-b0b4-6e8538b4b9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055aa679-9d29-4ce2-baef-975abdeadeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade7122a-e0ea-4764-97fb-b5dfa74d1087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d0ef93-7a9d-4d2c-955a-acd5a5ae0185",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64410e07-0078-4edc-a5c9-a0411cdacc6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911fef6b-1135-4485-ac50-ee1b50578853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a5c7f9-74dd-430c-90be-20cca361fc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ffe922-aa06-4117-9308-5d32137b3376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4a8569-d869-4e0a-99b7-b1a44db34511",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c51828-2a63-44f7-840f-2fb1775ba35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9993fc1-80a8-498e-bad0-19414e867f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc21365-2aee-4fd5-a82a-11c65a992930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0780a4-e1c5-42de-9879-077c36ad9361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415e7e95-91b2-44e0-8b10-e98367403aa8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0963946-f576-49a0-9963-41b306317294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824219d4-7049-47e3-8010-70e60976c952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3569e45c-ebed-4269-b56d-c3b36d822e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65ea5f6-12fb-47fb-a2ed-1a3619089e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cf6592-8b6d-49a9-b2ec-43d0719b7102",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e4fef1-988f-4c9d-b8f4-22fc6fa30f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e8a347-c43e-4e52-92aa-fa2d5f14975e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9a6458-25e9-44a6-bf25-90fa32e527fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11a936b-a8dc-4aa4-b768-af7eadd764f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676d0d7d-a1ed-4cb6-9e82-d4a1e25262e0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1e2f48-afc9-4d70-be2e-26bdf4c4bd55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4095b2c5-4857-42e9-8b3f-aad2617d9092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef14bc65-79bd-4b42-9fbc-5a1c878f65c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b764cfc0-cf32-424a-ba5a-c74fbc0dca75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80784ee-4c04-4f3a-ada3-1c304808d61c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25a5fa0-ead8-4b5b-801c-0970a04a50d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9600729a-36f9-49eb-8cb8-2177a729140f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fcb4ed-7bc0-49a2-9e7a-e0bc3b853cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129b2a1e-3e35-44e1-8715-e17128084735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ddc863-4a90-4633-8b6b-4ec2d96c0855",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cb8d02-1d88-4c7f-851f-34cdbb502cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b67ca2-abb3-45b9-b050-a86bca25c48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1838c70-2bce-4cc7-8c17-3be3da6118f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522c0fad-926c-41b4-aef3-b4de1c3d3379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfb7cb5-3b93-4813-a09d-022e35a2178e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb2aa57-0ed4-4e03-a5cc-d45a40fafd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ee88a4-8005-4cc2-a398-6c7dcbed94ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ded276-bd18-48a0-aeff-1acf8d4a8b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7174c005-c13d-4b00-94e2-3ffa00034e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cd1d55-9896-4796-abd8-813a462fe85c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2829ef3-058e-4692-8e63-47793d6b30f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4124594d-e32d-4039-8046-3e5a852fcd7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaa775d-28c5-45b9-82cb-f7e813204646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515bfcb8-e38a-4e82-abe4-06bffb8fa75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1ee303-e271-4f76-9a23-6f9d5788f356",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb3fad7-9375-4b39-948e-0bcb92c7fb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0e6858-8401-406b-88ef-1167957adf65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d62d930-a1dc-433d-9c0e-c7c82ef47342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2794a154-313f-4311-843c-e6fe5e101cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06804e40-471c-436d-8d23-46be4e6b9cc4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018a4abc-e058-4e7e-a2c7-578424fb22c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5237e4-7436-4568-9f05-9fd515d7a403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a22ba8-fef9-487d-8d83-04d1361e7bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b3f95a-9d96-495c-aee7-79c4bcba3f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c094f13a-f908-4c3e-8659-a0c20f6d714c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cf9318-5706-4573-b84c-a582564edd32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c80e286-7d8e-4173-b4de-24c705bee83f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6baf496-2748-47ac-8c7b-e0ed38583075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba52b2c-c656-4f0f-822e-2a87da818420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5fa286-703c-44eb-a8ca-c4512b21f9b0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef4b2e6-9c91-46da-97f8-0e0b6165a9cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af7ed24a-b1fd-4f9d-9571-ba82963300dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edca080b-c3fd-49e0-96b0-c61372355c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c100d2-25de-472a-88bf-dfbff770c6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3022e362-40e1-4494-b1ce-ee2629eb1688",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c73536e-9bcc-406d-a8b1-eb1f267b4390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1846d9c-1ebe-4424-9d0f-dedf6449295b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978a7d6a-e389-432f-b36f-d6946bdb9cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab0f19a-61e3-4aeb-9825-d6ad15f18bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f1d209-9ef3-408b-b62d-6db043e9242b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff48535a-566a-4804-9452-c136d3275b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "678edac6-9e40-4330-a5c5-4adc861c7090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ca5a69-9771-408c-8b19-c5065f86d77e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd287f26-7fcb-4b7b-b704-1cf3c5051959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8b4ea5-6866-4495-912d-324ad6cc6cdb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b928c074-1d8a-4176-a55b-4469387479e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7989f7c6-4fa5-415b-b184-12cda5688967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0df99ad-b1c5-4694-a052-68a7463e8e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6968b4-086a-41dc-a8be-777f29c3e141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad15398c-0fcd-4112-8087-0f2093f9304e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eefb8a2-6525-4e9c-bf8b-7f39f8270764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a941ae4-3fcb-48a0-9765-8e2ce574f878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88164e39-bf95-4cff-920c-05c5ed37228c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2dc9354-8825-4a9b-8bed-1a9cb10f804a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0137833-a0b1-4625-a0d9-9d30f16da617",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96266e91-0821-47a3-a2f7-1928b4b53923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04725888-adfc-45c4-9461-53b0ec7dff0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430073d4-a108-4d72-8ff1-ede2a23de5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6414dd4-9206-4cf9-812b-8b20a455fff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a61d09-3479-4bb5-a5b4-53141ccdb3ce",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39ed56a-231e-4645-9b88-3189285d157b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959124bd-f3b2-4a87-8486-3fa726fd1205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd214aa-5580-4d52-9f53-1f04fe6fa8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b82e20-1d7c-481e-9e3e-b3031c1485e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd54d02-0c6c-4ad0-a530-c9429b5028ba",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69d8d22-f602-4ddd-84d0-d1d89196e87d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3254dd73-0b9b-4eee-a383-8340b6965991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2528bc48-5541-4913-ab11-ef92cd9f9ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea5b0ac-7e84-4a76-b120-373c953a2006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c3c17a-75ed-4e76-b61b-f729fd0b7d37",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5ea3de-5be7-41fd-a852-210099646d89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e838be95-6b08-40ea-8410-5a2f7ffd06bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc2cf19-f448-4eb0-81c8-a42e4cdd0950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5bf6f1-5330-4bc3-a127-98e262af4467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48de3c3-8b8c-488e-81cc-af7a6cd49feb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4efdd09-2c4d-46be-9ead-77f6a204ddc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f292cc52-440f-4e52-a3cc-ceebdfd090ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f4581b-e902-4c00-9d97-869276758822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3a062e-081e-46f6-bc7d-4f420e60fd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a09574d-f655-4a34-a033-415d79bedba3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38353c31-7672-4156-82fe-f5ea837471e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25d8d67b-cf7b-4618-b3b9-48f24e11b671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6691e2c-8983-4ff0-ae0c-9a6b966056cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fd4848-f661-4ee0-8076-152d1b4920f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ad93c6-9577-44a5-ae71-8061509f9bbb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f975d7cb-cb2f-40b7-b1ed-46f0fa9e825d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f34096d-bb9f-4a33-9742-203af5fcf2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df71055-7056-402a-be9b-bb9843bc0687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ca684b-758d-4ce9-b461-d78f19558b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69467f6c-bd2a-4e36-a370-9d7436fdf6cb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c3b424-e861-494f-9b3e-1cd42120a41b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d30aaa42-299a-42c8-8225-65a04432b51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e8a829-8299-4df8-9c81-32db5d2ab729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b524021-c98e-4e90-b63f-4793510b092a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af71cb95-8ecd-4da6-b6a6-e2959ac37079",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5941002e-895a-4f55-aabd-1a22954be243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60324f45-66ea-46e8-833b-572fdac63f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65cdb3e-858e-44e2-8c04-9300a4efd255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1ee714-a021-4b50-ab8d-96eed1000e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29beb80d-23f2-4bde-88bf-d1b728484143",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5d7997-72e4-460a-8d18-a663f70b3c22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a557c65-918f-40e8-a618-c0cdcbd710fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48a2d4a-79b6-42ce-a006-c904861f82cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c897c0-aeb3-429e-a011-00ef895870d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f16db1-c943-48a2-9dce-fdb1df476254",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7fea804-45ef-4e44-a5c1-09d433d45cb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ff7df6f-0be5-4926-898f-001b1ef5b320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8694bce-251b-4814-825a-7e30285a945b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d190d4ae-d1c6-4610-a7a5-660a3356c617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29df704-a370-4446-b818-5026f2796fca",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc8cc53-8cb6-44b9-a816-8f114baf85d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27de2f63-13e9-4bca-affe-6ef229ab2687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7683b730-d014-40bb-872f-c56b07ba0dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f9edea-00f2-4b30-aaea-9b89092e4f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23b93e1-a5c9-45f0-961d-9228f8b6391f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5862818-5be0-4c03-b301-25d2a027d249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be2f080-a155-4abd-bfd2-a7574e389322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82f3b04-945d-4fab-9c31-0fa4aa8e550d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcd75ab-0bfc-4467-b629-ecb53e70fcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5c6605-bbf0-45bd-b279-07cccc65c18e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fd62bd-12c1-488e-9557-89816180da2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d05c55b-203d-4c90-a3d8-107980adc836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1778d68d-2850-49c6-adb6-f0c0f79f4131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b94cae8-2422-45fc-98af-50bf45e95025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed13f70-8249-436f-a82f-6b7eb49f8988",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa49194d-af71-44e2-a7d6-2b1f423fe218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4064596f-efd5-4bdf-ba6f-88f62a608e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2df7710-a438-4ded-94d1-a4838986cada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba18ed6-d8e8-47da-a6dc-44f04f31ea29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717f192d-687d-45c8-82ce-7b35beaccdc9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bae7f02-1bb7-4724-908a-b4342a57ce13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f200187f-f55d-4da3-bdae-d4eca9b52fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282b9b03-5aa6-4131-b751-12c8e9fc5eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1fb74e6-72f8-4b4a-9f4a-e7780230f709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb73f07-8be6-4328-b291-a8084026a6b1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5d7ce9-6d84-4060-b3ec-b053d7583523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a407b6d8-2a42-482f-801b-2d5967a85cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304681e1-89dd-4fa0-881a-0245c4ac7630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8a08f7-ee25-4d3e-86db-6e113f16b3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854fb0d4-f592-4d4e-b808-deae1d9fe82b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5feaef1c-926a-41e9-b737-7b453a4a9e59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a768ba-b752-40d1-8f7c-edc2bafef161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "464a9abd-e85b-495f-a33c-04a4b59f0069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ede7a6c-f9a2-4c31-9a95-e2641c7801bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab3fbdb-920c-45ed-bdce-700345d90617",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f09fe0-6271-45bb-858e-45ca2f4ef1dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64261d8b-ecd9-464b-a65e-e67634bc3711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f244a16c-4980-40ba-808d-eda2fc398856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d149665-0dee-48c2-b51e-1d9e62707b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405b4473-2321-4d7c-b544-4227bdcdad29",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686ad3dc-280e-4458-88c6-461bbdcd5f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d485c6e-6dee-4259-9aff-d09c60d926fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782c105b-b56b-4fb3-a9f9-fbfca5536ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc7d2ea-d1ff-4c1f-a532-27b6cf10af89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fa807b-2848-4f4d-9861-e130bcf365bb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae706d9-7be8-43d1-b126-a6bf6f9bb78e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3765173c-d89b-4cac-b018-ebae09bcfe90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e4b28c-984d-497c-b706-bad22a3d5a8c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01085bd6-f234-4138-bb6b-bdd696b0572a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d1cb1b-6f8c-4f97-bd62-7b63385eb626",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5ddd1e-ae2b-4161-9d46-b1da96b36c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43d30d93-5650-4d49-a0de-59f983cf6e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab57a73a-1b5a-4a2a-b8eb-9d561788a93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8561c05d-a4cc-421f-bda4-635263ff814c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161f0f97-0855-496a-8355-0d4b18780cfb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125d6f1f-abdb-4d0a-874b-485c3abb4a9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73848eab-19c5-41dd-a53a-55a3849e32c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd6c67f-973e-4fd2-a4df-8d305eb4feb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc22591-5d5d-41fb-9169-213012075eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da73745d-a55f-40e1-8cec-f416b23a02ec",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b53ba3-c585-405d-a9db-8de81d6333ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb7a736-117c-4922-a5bd-9f15276ac6d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512aa3dd-bde1-4d2c-b1b9-dedd9f9111d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54b7de8-f316-4000-9dc9-e40ebeae0e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bee201a-6d8c-45c6-8e4a-31f22ea60716",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898d1c6b-5e02-4d2c-a9ab-cc5aa1ed0f29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6732128b-09a8-412c-9620-fd119032d37d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4727c6-ef9f-47bf-bbd4-7c66c05df4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ed8114-2416-498f-96e7-6b691b786bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb84ad8-2d17-458c-bfa5-c946ad9cc54b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28372b2b-01fa-4cc7-b149-a22df23a4245",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7ca8a69-68ef-468c-aec1-b8c05da8a791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ffea2a-e674-4e16-ba96-efacc9e67c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e216f3-01fe-49cb-9dbe-36d80afdf668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0caf12e-90a2-4272-9b31-f89f55c7d6d7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19c4003-0ac3-4056-877a-cb130094d754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1176197-50b7-4554-9df9-46f171eb3e2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3a3b15-1980-4bcb-8794-fa23f774386d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72180c9-1b82-4236-92b8-641560bd2411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d81c6d9-1d56-4553-8af0-6d6a7aea6c12",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3194bb7b-ed04-4f4f-9a3b-e9dc501bb919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f67fda4-afee-444f-a976-848497f5fbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca15973d-7910-4491-aad0-aaa052bfc787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf784a14-1413-4980-9c84-37fb48ec3432"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8397ca78-9324-4f61-ad1b-4f316f35a017",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "885a6728-b84f-49f6-8544-fb8509501829"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddad2307-375b-40b9-8a43-aa04e77ed521",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32592f09-4f65-4475-8a72-fd414ceeae1a"
                    }
                  }
                ]
              },
              {
                "id": "3ff619c9-bb45-4181-8ec0-f4627f855557",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06c4a417-f056-41f1-a27a-800b4279356f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9765313-cacf-4e29-82e8-9f769689e407",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "21892690-7639-4c1b-a911-94aa2345a50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42daf8bf-7bdf-499f-ab0e-99f6dc83b487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dccd472-ed98-4b39-b0f7-1134e5aa8389"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa86a729-3c68-48e7-9145-c8197ea3cf08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba072438-52fd-46a0-889b-127bdd228291"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e6c85b8-7c4b-462d-a799-b62267bc5eac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fc6fba6-4b06-4ef3-adec-985f6c2a50e8"
                    }
                  }
                ]
              },
              {
                "id": "84fad176-6436-4d2f-8516-b7c0d75d5291",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3f8792bd-913a-4f40-a2fd-4975bc9da411",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95517196-967a-4ce6-afcf-bbae1162c962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "751a568a-d9eb-402b-9f4a-8c492d6f5b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf93c9e0-9495-4a71-86e8-a4eaaeebddb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4278bfa-7169-45e1-b697-7ebf9f40d822"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7b1d85d9-e40e-489a-914d-5f7a20b5bd9d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f49acfa-4765-4026-87eb-c6a9f7107e71",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da4e472a-bb4a-4d3d-ac8f-31f71a9b65f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b04bb7a4-6637-4246-a6c8-2f931a803066"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b906b1ab-c9f9-4144-a642-54bd681d8a53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a49ae216-414d-431d-b875-7c81bca2e351"
                    }
                  }
                ]
              },
              {
                "id": "bd7e0103-5579-4536-ace7-7822fa38581a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f2a8856-069e-485e-a4db-0f08cec6e9f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "86aea8ce-068a-460c-99da-e7c650a507d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db9bd829-c748-4c3e-9bad-c5e62b22580e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3f941b9-3f38-403b-80d1-cce4e48d9114"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ba745d6-84bb-4d6e-920c-f69e9f956bed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1c84a645-deb2-4571-b599-2a3cb422ceaa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4c51c99-480a-4912-90e3-f4d9c2c8a895",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49fac5d3-34ec-46b4-b7cc-94b3fd3cb44e"
            }
          }
        ]
      },
      {
        "id": "8ed27380-39bd-4c18-9e8c-aceb3dce929f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "185dfdb6-8301-42bd-8276-ebce4a693cdf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "baf5bd42-3c2b-4060-b20b-21425a68eb37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77edbbed-6ec2-474b-980c-ae9023c59331",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04bdf98-815a-4250-8643-f6528af3ab2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "97f6ac74-e4b1-453c-abf2-6d10afbb49ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d79e44-7bfe-4a22-a728-fd56507409e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3df3d8d-74f0-4dd5-947b-6973925dec59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1a658d7-f134-48ed-b772-46502494c503",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f9e2ad7-8e99-4228-aec8-81769f02b9f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd9430c9-3a8e-4f3e-88f3-8865d27352a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b371e844-4821-47ff-b151-285af0eac508"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba28e3ce-570c-4ccf-a193-bec59be3a016",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "083207e2-1f7f-4cf1-b5f0-29745099227f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9a45b3a-9059-43bc-9974-d80ec7f2d189",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b6e4cf6-61c1-4e0e-b700-d7016af6041b"
            }
          }
        ]
      },
      {
        "id": "36961f4a-d60c-4722-8250-3c041acf52c4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "575935e6-7cc3-478f-8660-0818d1ec6a23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f21bece9-44b0-45b4-a752-3d6658e1abb5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1717aa7d-1eb8-4bcd-965c-b6c9de7f9b13",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a56f86c-9a74-4427-b47f-22d0e124f76d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cda9b58-432c-46b9-b899-da89e35af15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9d2eb6-444e-46d4-949f-3f70e651832e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5030b7ba-eb83-4bd8-b200-9ab156dd4351"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce2dd585-4ff0-4c36-ad5b-a8ef0ecccf6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "497c4b28-86a8-42d6-b53d-fd2372b73645"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c63984bb-942b-411b-b203-4f67a1b921f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1bd5a16-b492-4dbd-8813-094259bac1fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bec58f0-a9ad-4070-a4cc-bc2ced2427f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b22fec16-f381-4a26-bddd-37609edd903e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50d8be18-4ae1-4ec8-8a22-fa478324af14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f937735-4353-4b2c-bbaf-94b8ec264bc7"
            }
          }
        ]
      },
      {
        "id": "ed07d616-5544-48c1-8172-7ef8bda0d0f3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ae8acfdb-c25e-4732-b4a4-d9d4a8b6b975",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c32458d6-2d26-4b2d-b289-bf60d385a37d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7fe01c3-4045-447a-9377-e22a075d42c6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790e7718-b7eb-4148-8589-0e8282272540",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc6c5fd1-dbce-485a-9664-e4c1ae0bcbd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955c0321-ffa9-48eb-86d7-962a24267ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1128335c-5c8c-4216-988b-ba734b8037e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9c91d08-5ce2-4a42-a079-cab8b1d56cb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a82d051-2aa9-4c37-bebf-755c232b4e23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "659d9a0c-a78b-47dc-b9ff-5cd44c962de2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5417e8bc-9ea1-4a80-bd92-815c8d425b64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd2a377b-1b64-4e21-9494-9002c721ec90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "de3faa80-baac-4546-bfbe-6c83a9b4590c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7fd1fcb-029c-4929-8120-8aa722325e2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f90a8b7c-3ab2-4006-94fe-14a1cb161659"
            }
          }
        ]
      },
      {
        "id": "528e2116-8744-47d6-9dec-2040e3dff2ce",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a900dc6-2d2b-4524-9339-53cf9b0d6e8c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c016714-9537-4008-addf-1d20934da413",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "176bfad4-cf69-4dc8-934f-1f0825c71dc7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c83a72e-6c33-4887-9334-9556a2e83532",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ff6b5a4-65c8-47b4-9b29-a053a4ab6e79",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.92957746478878,
      "responseMin": 8,
      "responseMax": 360,
      "responseSd": 25.561345125211936,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692577920224,
      "completed": 1692577952859
    },
    "executions": [
      {
        "id": "2264404c-4f14-4086-9f99-977623178560",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e2ae2d4c-aac0-4ad5-a12e-e5b6f6475415",
          "httpRequestId": "c92080de-d04b-490c-9cdb-73f76a0489f8"
        },
        "item": {
          "id": "2264404c-4f14-4086-9f99-977623178560",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cd4dc6f5-83be-46af-b806-d8fda0a8b4ae",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "a1a14377-0e41-43a4-8b5a-b05c8da6e3f7",
        "cursor": {
          "ref": "74482e6d-7c47-4340-b90b-860591d76332",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2117a619-7f42-4795-963e-1266b4421edc"
        },
        "item": {
          "id": "a1a14377-0e41-43a4-8b5a-b05c8da6e3f7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b9cee0c1-a336-478b-ac6f-0b20b7eab290",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "c7ec8f05-3ed0-4b84-bf62-b18c3bfc39cd",
        "cursor": {
          "ref": "eb5befdb-bea4-484b-9c5d-6cdf4520098d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "04fa962b-1500-4e57-8c79-9c23613e78ed"
        },
        "item": {
          "id": "c7ec8f05-3ed0-4b84-bf62-b18c3bfc39cd",
          "name": "did_json"
        },
        "response": {
          "id": "ebcb0cd8-55e7-4be3-b8bf-679ed4031d28",
          "status": "OK",
          "code": 200,
          "responseTime": 217,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec9f9cb-137e-4b31-89c3-90104f887da6",
        "cursor": {
          "ref": "fa75b9f3-1611-4e7c-8be8-e767d3fc7f8b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e04236f7-320f-459f-ae96-703791d38a8a"
        },
        "item": {
          "id": "6ec9f9cb-137e-4b31-89c3-90104f887da6",
          "name": "did:invalid"
        },
        "response": {
          "id": "7bedb7f7-434c-453d-8580-f546381e0565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec9f9cb-137e-4b31-89c3-90104f887da6",
        "cursor": {
          "ref": "fa75b9f3-1611-4e7c-8be8-e767d3fc7f8b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e04236f7-320f-459f-ae96-703791d38a8a"
        },
        "item": {
          "id": "6ec9f9cb-137e-4b31-89c3-90104f887da6",
          "name": "did:invalid"
        },
        "response": {
          "id": "7bedb7f7-434c-453d-8580-f546381e0565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfea4bf8-8d4e-48c3-ba6f-14528a5a74f3",
        "cursor": {
          "ref": "47e679d4-bab1-4ea7-81aa-80f877b3a98f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b561f3d6-63d7-46ec-b9fb-3330229ca4e6"
        },
        "item": {
          "id": "dfea4bf8-8d4e-48c3-ba6f-14528a5a74f3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7d408c56-2f44-4898-9232-b899a1f61c85",
          "status": "Not Found",
          "code": 404,
          "responseTime": 110,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae642e74-9a77-482e-9e66-b3af82eaf25f",
        "cursor": {
          "ref": "f2bf9337-56f9-4816-a6b8-bfded82ea789",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ddc038d6-fdd6-4b98-9fd9-81449354d167"
        },
        "item": {
          "id": "ae642e74-9a77-482e-9e66-b3af82eaf25f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "020887d2-7750-4f1e-8cf4-8ef0c3ef9edc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb2e3ec-8e8d-403a-9ab6-1cdc70fa5488",
        "cursor": {
          "ref": "d1c568aa-1893-46d0-9f35-b0c1421796e6",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4dc14634-9c9b-439d-8461-21fd54892076"
        },
        "item": {
          "id": "8eb2e3ec-8e8d-403a-9ab6-1cdc70fa5488",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f8fb467d-4a3b-4bf1-8e3d-fab742c7e972",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08468ee-0494-41aa-b743-5e45352fcd9d",
        "cursor": {
          "ref": "8d69141b-1749-45d8-aaac-ea582e12e2d2",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "21ff18ed-36a6-48d8-8d02-141d1c3bf5f7"
        },
        "item": {
          "id": "d08468ee-0494-41aa-b743-5e45352fcd9d",
          "name": "identifiers"
        },
        "response": {
          "id": "959b39e4-dc7e-4be2-8424-0973d01172ab",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09026591-632b-45bb-a643-ca501b9f9665",
        "cursor": {
          "ref": "7fee61b8-3023-4281-bec2-6705edf44620",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5e19daa4-723d-4256-a518-7882985863f8"
        },
        "item": {
          "id": "09026591-632b-45bb-a643-ca501b9f9665",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f481e0e1-42ff-4d93-a303-05d763964826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb92dfbf-9bfc-4513-892b-fcbd9f4bdd4b",
        "cursor": {
          "ref": "b0d16fa6-9d30-41a8-a4ac-87c685b13822",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b323979a-cbf6-48f9-89e7-269dfad250a5"
        },
        "item": {
          "id": "eb92dfbf-9bfc-4513-892b-fcbd9f4bdd4b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "364ec70d-50ef-44d4-b47c-b742bcd80f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5711efe-895a-4934-8c91-864ed7c3639e",
        "cursor": {
          "ref": "a12fafa3-1484-4e87-ba35-3b524534188b",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dcd07496-90b7-4335-bade-8f90ed856665"
        },
        "item": {
          "id": "d5711efe-895a-4934-8c91-864ed7c3639e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ca14efea-c8c5-40e1-bd64-4c96dccbd920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9d936d-c4db-410e-b1e6-5fe06edfbb23",
        "cursor": {
          "ref": "bf2ddc14-0dbf-433a-817f-734e0bf2a2a5",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e8a78dfa-cd15-41b0-b353-ecda06a493a6"
        },
        "item": {
          "id": "2f9d936d-c4db-410e-b1e6-5fe06edfbb23",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bd00c68c-1700-44c0-a707-12bf6034dac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b84257-4c58-4b7a-a027-82efcf64b0e5",
        "cursor": {
          "ref": "d4a9a94b-bf98-472b-bc1f-8105ecfb3ba1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "24b414fe-db62-47e1-9577-0342fd3a74c8"
        },
        "item": {
          "id": "19b84257-4c58-4b7a-a027-82efcf64b0e5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "78613a0a-46fe-4af9-9a75-b2b873f6c9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a87221a-bed7-4000-8319-22f3c58a12af",
        "cursor": {
          "ref": "36819b99-e97d-476c-87f7-63dc3a5b811d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e5ec57e1-ee05-458f-b99f-325d0f39a192"
        },
        "item": {
          "id": "8a87221a-bed7-4000-8319-22f3c58a12af",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "aa0703e8-51e2-4b5a-93d7-1736e6aab82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb1f58b-f2c8-40a2-9ebe-959e0ed1f2eb",
        "cursor": {
          "ref": "3a953ae9-9b23-4534-b10b-c5807694e9d2",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e52aa15d-ede5-4289-b322-d62b61b7b0cc"
        },
        "item": {
          "id": "beb1f58b-f2c8-40a2-9ebe-959e0ed1f2eb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a4036f41-4f84-427a-b285-1d020f489d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d003ac-67f1-4af6-bf03-b3e5656c7958",
        "cursor": {
          "ref": "3daeeaae-f11f-4eba-bdd8-8f6a42fa17fc",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "58120521-b5f6-4bea-b7de-0a0da9bbc40d"
        },
        "item": {
          "id": "b2d003ac-67f1-4af6-bf03-b3e5656c7958",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ac079604-fd69-4be0-a39b-bf8222fac13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533912bf-666c-4ff0-b332-3380d1df5476",
        "cursor": {
          "ref": "5f8c708d-87f8-4e09-9044-b30a31e569f2",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f9d22c49-ee4a-4533-9695-016206e92be0"
        },
        "item": {
          "id": "533912bf-666c-4ff0-b332-3380d1df5476",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ee4570c9-cf27-47c4-a375-68ce7cf3cb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9150b0-3c54-4237-bcfe-9b889c3db7e2",
        "cursor": {
          "ref": "487a5756-62f2-40af-838a-5d0293ce2571",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b46bf3c9-b7eb-4f08-933c-ffc22ac97aa9"
        },
        "item": {
          "id": "6f9150b0-3c54-4237-bcfe-9b889c3db7e2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a17a4a17-7dfa-4ef0-8843-07a137275d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67424ca0-f6ae-422e-8f39-66f260e9b40a",
        "cursor": {
          "ref": "fca7bf45-e92f-4eea-a0a6-df8079e31876",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "20f1e4c1-bfc8-4437-b664-22ba9d2cc423"
        },
        "item": {
          "id": "67424ca0-f6ae-422e-8f39-66f260e9b40a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "897f6300-e10d-4cac-bfaf-4ce7e8ea8344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6401e385-4a68-4953-8c83-d3b526387718",
        "cursor": {
          "ref": "e47fd3d6-aed1-44c6-ab41-bdc03764296a",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2e39ed04-1a7d-41d0-b7e9-2010db056b03"
        },
        "item": {
          "id": "6401e385-4a68-4953-8c83-d3b526387718",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c6e48a9c-8b5c-41cf-8ba3-33b8bf398170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e55af4-6dc4-4e9b-91a5-365339d6e781",
        "cursor": {
          "ref": "09c11d8f-5fbe-4f04-8afb-4be21b6b4bdc",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "29f417b8-effc-4ca2-a94e-f5d588f3ae75"
        },
        "item": {
          "id": "96e55af4-6dc4-4e9b-91a5-365339d6e781",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "385f3c6f-63cd-4565-b61c-54d32136b72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc4ba00-5d0b-46cd-9868-fe8a51ee9441",
        "cursor": {
          "ref": "f9eaeaab-19e6-4e89-8e53-8125697047a3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d63b63b3-f7cb-4faa-a7df-d166dfb78577"
        },
        "item": {
          "id": "0cc4ba00-5d0b-46cd-9868-fe8a51ee9441",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1a03457e-d9e7-476a-9a65-4deb5c9cb158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78eff34f-51da-43ca-a4de-d0925d6047cb",
        "cursor": {
          "ref": "e69670e6-6602-44ee-9fee-503217c5a9a6",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5a38800d-9db9-4893-9ed0-902598e0b02e"
        },
        "item": {
          "id": "78eff34f-51da-43ca-a4de-d0925d6047cb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c890dc75-b7b0-45c3-9313-4c5b837e684e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a0fb53-82bd-49a1-826f-0cb39db627df",
        "cursor": {
          "ref": "251d9272-e272-4fbf-a1c8-fa663dacc894",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "061c6f29-da48-4a67-9819-0cb0aecfb84e"
        },
        "item": {
          "id": "c0a0fb53-82bd-49a1-826f-0cb39db627df",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "01274d2c-2f27-456a-83c4-772b29eefa96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0f11a7-34bb-4b99-a8ff-de66c3db7df4",
        "cursor": {
          "ref": "8e5a0dac-c9f4-45c4-95cf-f2d2cbda1c4d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b569898b-19a9-4c71-88ed-323d2907520e"
        },
        "item": {
          "id": "1a0f11a7-34bb-4b99-a8ff-de66c3db7df4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8beb0c0c-8b76-4320-8941-7aa02406901b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab48631-66ab-4ca0-bab6-b6ba3d3537c6",
        "cursor": {
          "ref": "fc70ded5-8035-48f6-9a25-a3789dfe5ccc",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "830f93ec-e9cc-4877-b1b6-0d633d8818e1"
        },
        "item": {
          "id": "cab48631-66ab-4ca0-bab6-b6ba3d3537c6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "89684b50-6611-4721-b243-3a86a5bb08b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9755095-b867-48ce-915f-eeefd7b7ce74",
        "cursor": {
          "ref": "8543ae53-53e1-4993-a238-345988002c9d",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "93067606-13c5-4cf0-9093-5657235f7bd0"
        },
        "item": {
          "id": "a9755095-b867-48ce-915f-eeefd7b7ce74",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ef11bd14-bbe1-4d3a-9c17-1aedfdd59256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49ff2f7-9ab7-4161-9dcf-f62491a54f05",
        "cursor": {
          "ref": "69502b8d-4a68-4f68-bc15-988ae1392ef5",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "68a8459a-74c3-45e2-9d9f-f4729beb93ff"
        },
        "item": {
          "id": "d49ff2f7-9ab7-4161-9dcf-f62491a54f05",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "977f070d-0b6e-4336-90e9-f2221c9c9d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604540ee-d935-4fac-b481-910778e6c749",
        "cursor": {
          "ref": "763ee74a-a4fc-46c2-9f92-95f6ea588fed",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f7af2ca4-5c56-48fc-b8da-d0bbe2c2200c"
        },
        "item": {
          "id": "604540ee-d935-4fac-b481-910778e6c749",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5e72759c-cdc6-455e-a6d7-bb85b85c2a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5c00e7-84bf-411a-8efa-783be93d0c72",
        "cursor": {
          "ref": "d49d259e-1803-4b7f-8e98-f647fe4f34b4",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "db49cbd9-77fb-4334-b115-1494bf455eb7"
        },
        "item": {
          "id": "0f5c00e7-84bf-411a-8efa-783be93d0c72",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "96baaed0-2db0-41c9-8fc9-f405dca06c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b526345-2bbc-4288-9c8e-85b3f663620b",
        "cursor": {
          "ref": "961215b7-7b5c-4032-ad07-a75d33eb7930",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9c1929ed-77ec-4aaa-b5e0-acc4b88ec6b0"
        },
        "item": {
          "id": "5b526345-2bbc-4288-9c8e-85b3f663620b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "504ea799-67be-4ee9-ad0f-3ec7dd4383cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efeb7e6-98a2-40ac-8f7e-cdeaf384bd25",
        "cursor": {
          "ref": "0f7bc9cc-e936-4416-80b4-f568220d061c",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "943c7802-3f7f-499c-beb3-33ee998ac04b"
        },
        "item": {
          "id": "6efeb7e6-98a2-40ac-8f7e-cdeaf384bd25",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "660b8e58-f269-4a1c-96a9-21d13cb402b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4655220-e2e1-4a2c-8826-5c6851eba13b",
        "cursor": {
          "ref": "c823bcbf-3b03-4868-8431-546791d13ded",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e2b5b792-41c0-4a37-a023-d77428f6571e"
        },
        "item": {
          "id": "a4655220-e2e1-4a2c-8826-5c6851eba13b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0bfbbe84-40cc-487f-a3e1-98d99ea464a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db10997-f14d-458a-a8e0-63584d3ed8e7",
        "cursor": {
          "ref": "d7c02298-2c0a-4654-ae90-0405837464f9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "08bc3bb4-3989-464a-9c99-4854b977eef5"
        },
        "item": {
          "id": "7db10997-f14d-458a-a8e0-63584d3ed8e7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2e3ece9d-87de-4802-844f-92e66ae398ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402481eb-6173-406f-ac7e-e7130081244f",
        "cursor": {
          "ref": "842d419d-5cba-47ff-8333-838768a70bb1",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9fe156bc-bb56-4b74-b1c6-f7655dfb6420"
        },
        "item": {
          "id": "402481eb-6173-406f-ac7e-e7130081244f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ecdeca85-e126-42fe-bfe7-664f908dc000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec74f72-c77b-4123-adff-3588ededa09d",
        "cursor": {
          "ref": "4bfe3c1d-9d40-433a-a54f-3bea88d18c44",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "918d72bf-6485-4f4d-bfe7-6cacd946f030"
        },
        "item": {
          "id": "aec74f72-c77b-4123-adff-3588ededa09d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5fe3fdb1-26d9-4395-9844-04026e093720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7c649c-3497-4796-a2bb-65486bd3c24e",
        "cursor": {
          "ref": "132e7788-c43d-4df1-bd29-4000fab3c6c2",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bf89dd02-d567-47dc-9e02-05e354c2f28c"
        },
        "item": {
          "id": "2f7c649c-3497-4796-a2bb-65486bd3c24e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a1f62507-21e6-4df5-8fa8-8e72560d0fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c10ef9-bb52-4014-a779-574db40b5e68",
        "cursor": {
          "ref": "d359386d-6959-4a2e-ad59-1714046f362e",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d5728c3a-834b-4c6c-9939-5cb370d44ab8"
        },
        "item": {
          "id": "b6c10ef9-bb52-4014-a779-574db40b5e68",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c3df14a1-f53f-4f9c-bc7c-38097f738938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e1cc14-0f47-4e3b-8da3-a9dd0c2e8122",
        "cursor": {
          "ref": "35ab8838-2cf9-4447-94e1-de001320cf70",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3b2356d4-eacc-4fcc-8f82-6c52a98535c1"
        },
        "item": {
          "id": "a7e1cc14-0f47-4e3b-8da3-a9dd0c2e8122",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c084c1b8-51db-4b08-b4b6-12acfdc1f8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb19bda9-8a06-4117-8f34-ea6afe2a3191",
        "cursor": {
          "ref": "3c0e5e00-dc94-40e1-8b07-3d026b265e69",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "323052a6-4255-430b-91ed-5d0a9bdf05c9"
        },
        "item": {
          "id": "cb19bda9-8a06-4117-8f34-ea6afe2a3191",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a4bc8b80-a41b-4393-a18a-6f35730e8d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e0848d-1df4-433c-82a3-7519854936fe",
        "cursor": {
          "ref": "32088125-c2af-41af-b083-099f9466e41e",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8065e740-903b-4770-9731-9d0518c6a97f"
        },
        "item": {
          "id": "59e0848d-1df4-433c-82a3-7519854936fe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "808f9099-5a84-4109-8519-acf6f31d13d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93a70c9-d7c4-4cf9-8c0a-2eba43f4be3d",
        "cursor": {
          "ref": "fbdab468-ccf6-4fe6-b78e-d49986f7fe9c",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b3c4a57d-74c4-4e8e-b21d-efe84be7bda9"
        },
        "item": {
          "id": "a93a70c9-d7c4-4cf9-8c0a-2eba43f4be3d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cb7ed2b6-bc08-4bb0-a61e-ed0a6a8e019d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cad76a-bb14-4be2-b03d-94426233719f",
        "cursor": {
          "ref": "1df9ca59-b92e-4550-923e-2cb36fa2478a",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7a033300-3b9e-44e8-a487-9d421dc9536a"
        },
        "item": {
          "id": "81cad76a-bb14-4be2-b03d-94426233719f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c8e43b7a-122c-44b4-8f43-3e692ff3a570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7228852-1925-42b6-85a1-738085245db4",
        "cursor": {
          "ref": "9154e55e-f085-4dd0-99f9-a3e1f5c663fb",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "655563d6-4f86-43f1-b88e-8282a580f912"
        },
        "item": {
          "id": "e7228852-1925-42b6-85a1-738085245db4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d59dcfbe-0fda-4e8d-9ef8-c1c7ab32f917",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64c70f8-de5f-4519-8f66-e6995b9b93a1",
        "cursor": {
          "ref": "fef677f8-c5d0-442b-9475-16e67054a928",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "41610000-b1cc-4db5-aa2b-6ec000c034b9"
        },
        "item": {
          "id": "c64c70f8-de5f-4519-8f66-e6995b9b93a1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "41551d25-14d2-4c39-8048-77f6d6fb45dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d733ef-7d7d-4367-a132-815bd21e0744",
        "cursor": {
          "ref": "9e2ee137-0bc8-479b-9f5d-35466cb070b5",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7aaa66f6-c6f4-4086-b9b3-f15b9798c6bd"
        },
        "item": {
          "id": "33d733ef-7d7d-4367-a132-815bd21e0744",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d09cc2a1-5fec-4b92-9ad9-609419f11b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f089d1-8bd5-49a3-9a5c-8bd5fbac5bc6",
        "cursor": {
          "ref": "7f7441fa-a1ab-4b3b-8a60-d13905148e3e",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "40480f25-22c2-429e-aa4b-13747c1914db"
        },
        "item": {
          "id": "91f089d1-8bd5-49a3-9a5c-8bd5fbac5bc6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "33102d90-5388-48ba-9a58-692092e0765c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fcb957-53a6-46d8-a11b-99620af554cb",
        "cursor": {
          "ref": "829a6ffb-6100-47e4-9c78-6c5cb0fa8136",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9c9b7bbd-ee5e-4252-98e4-77a86e9aca7b"
        },
        "item": {
          "id": "95fcb957-53a6-46d8-a11b-99620af554cb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ee280e60-f8e1-4f40-8a46-32b8c4bbb78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a7f39e-897f-40fa-a112-27e1285bb162",
        "cursor": {
          "ref": "99d670d2-55de-421f-8ede-250e8f312cb9",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2b9b178e-46ea-4a7a-9f51-24717b9ace41"
        },
        "item": {
          "id": "33a7f39e-897f-40fa-a112-27e1285bb162",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "885b5733-c4a7-4c59-9a77-272cb39a3e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e19570-af7a-4d60-9b23-ab60bed67ced",
        "cursor": {
          "ref": "a4512511-88d1-4bff-8483-1bc9065f749f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "29bda1e5-2414-4805-9ce0-194087de2e3d"
        },
        "item": {
          "id": "b1e19570-af7a-4d60-9b23-ab60bed67ced",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4002773d-803b-4002-a4e3-c0623c3fc002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a209e3-57ec-46c4-9555-01967d71a9c1",
        "cursor": {
          "ref": "c93d4a76-13ee-4866-9dea-cf5c14565ad5",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b77be0f9-9443-4e26-a22e-39e6af759c99"
        },
        "item": {
          "id": "18a209e3-57ec-46c4-9555-01967d71a9c1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f6aecbea-ffbf-47e2-8788-26c7df331971",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 78,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8ad72c-10c2-4dc8-bc0e-3f67e7cb160b",
        "cursor": {
          "ref": "d4ba27bc-f40d-4ad3-bbaa-a5a10fa15b67",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "50937bef-1954-41da-9394-3290b6a203b7"
        },
        "item": {
          "id": "fd8ad72c-10c2-4dc8-bc0e-3f67e7cb160b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "388e01ec-945c-479a-9bd7-b7b2fc09c7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbac401-19c2-48dc-9bfb-282808366a1b",
        "cursor": {
          "ref": "22ed2a3a-64d6-42d3-90b4-4a76ea47cb00",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f1c7f08c-3a4b-4167-a03d-a32bc398b967"
        },
        "item": {
          "id": "edbac401-19c2-48dc-9bfb-282808366a1b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2924c610-7835-4486-b6aa-c81d836da889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b07f3c-cc49-43c0-85b9-3f015fafb0d6",
        "cursor": {
          "ref": "94c4acd3-e960-445f-8f23-56eb77157767",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "571fb75b-c126-4841-a668-633021992dea"
        },
        "item": {
          "id": "24b07f3c-cc49-43c0-85b9-3f015fafb0d6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d8ec254a-643b-4eed-aade-510d3abddf05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41197a30-0d94-4199-93d2-825b6bd99e8f",
        "cursor": {
          "ref": "cc60d55b-520e-4679-91f0-a4999b52561a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e0d9c485-b492-48f7-bb05-c3025e7e6c01"
        },
        "item": {
          "id": "41197a30-0d94-4199-93d2-825b6bd99e8f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9594cdba-83b5-4d37-86ae-05474d1e09cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4665f1a9-0dff-49c4-89fc-d89dce434951",
        "cursor": {
          "ref": "a4a7b7ec-3485-4a5b-9ee7-0575a2ddd933",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "851d597a-2819-40d8-ac99-371263fbf59d"
        },
        "item": {
          "id": "4665f1a9-0dff-49c4-89fc-d89dce434951",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6ac2113d-28e5-46db-99c0-5707625a478a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e56709-c7a5-496b-8fb2-897c77019ddf",
        "cursor": {
          "ref": "970f5fca-0e7c-4295-834b-50bab5fd8ffb",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e7257c5f-6987-43ca-bb74-1b52b13823ac"
        },
        "item": {
          "id": "d7e56709-c7a5-496b-8fb2-897c77019ddf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8835a8cf-b00b-4e37-9906-062c95cb99af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1abace4-3694-4e9c-9b7b-2944255fe14c",
        "cursor": {
          "ref": "19c6e41f-d2ea-4b1c-ab58-aa0db99db6b2",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "12821b4a-03da-45f5-a95a-c741888006d2"
        },
        "item": {
          "id": "e1abace4-3694-4e9c-9b7b-2944255fe14c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4c2b3c90-e8f6-48aa-84ea-f286b0dab34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebaaf52-e27f-4173-a600-d8f5000fbf33",
        "cursor": {
          "ref": "9d94dcc1-b76b-47dd-9f40-6e100fe4fa8f",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "33904348-cf4a-4a38-ad76-14d8705f46b8"
        },
        "item": {
          "id": "cebaaf52-e27f-4173-a600-d8f5000fbf33",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "193cb2e5-af6b-4196-b978-8b4cce839e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e3b1aa-97ed-4abf-877b-5e8204b5737a",
        "cursor": {
          "ref": "6df283b3-90e3-4315-b0e5-94c04cc84a15",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9dcd2400-9105-4387-b5f6-dd3cb467fad8"
        },
        "item": {
          "id": "47e3b1aa-97ed-4abf-877b-5e8204b5737a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0ce5d199-4c6c-48c5-b589-2942f5e9532f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ab04a2-3320-4af3-8585-0a28e40386d7",
        "cursor": {
          "ref": "565f92ac-a2ce-4332-af16-b65c95bafdeb",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ecc30fa3-bb26-4b16-b7eb-f8ecc48eb81f"
        },
        "item": {
          "id": "c4ab04a2-3320-4af3-8585-0a28e40386d7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3e5122bc-9e20-4c99-bbb8-3a89e5e96ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230d6204-ab1f-43e7-affc-a03cf7974571",
        "cursor": {
          "ref": "5cdb8630-c8c6-47dc-8910-90fb2fcbf974",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "66e5697e-1636-4ed3-bd75-70c8795fa0cf"
        },
        "item": {
          "id": "230d6204-ab1f-43e7-affc-a03cf7974571",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bc957de3-001e-4747-8c38-6f10b0676895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02d665b-a5d9-46cd-b6a3-2c6530690b62",
        "cursor": {
          "ref": "6b93ef6b-07ba-4b44-910b-39808c25073d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "978e93d2-d33e-4dcf-a4c1-5dc9c6b0b247"
        },
        "item": {
          "id": "d02d665b-a5d9-46cd-b6a3-2c6530690b62",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c02f72ec-e255-495f-90dc-8b47330b05d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ba391f-9f06-451a-927d-139127b3e988",
        "cursor": {
          "ref": "637e4e25-7ca2-494a-b9ae-e28e3c9fd6ab",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9173be26-ebad-42e4-ac2b-505bd2757465"
        },
        "item": {
          "id": "c6ba391f-9f06-451a-927d-139127b3e988",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e5a0d195-0228-44f1-9bed-3b74e1d8c1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7b6651-5e0c-4e7b-be91-d71512c64270",
        "cursor": {
          "ref": "d3070de2-c966-4627-95a3-b1d6fdb1539d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "996db778-828a-4c44-bc77-40c346d83ced"
        },
        "item": {
          "id": "2b7b6651-5e0c-4e7b-be91-d71512c64270",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "40cfc53b-b0ab-4d8d-b376-09be4ed747ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d505a2-7f1f-4940-b634-18c530bb6130",
        "cursor": {
          "ref": "3daae6b2-16f5-4fb9-9ca2-a023008b68aa",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "22a6bf1d-454b-4539-a56c-d80faf6624d6"
        },
        "item": {
          "id": "54d505a2-7f1f-4940-b634-18c530bb6130",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "77d44ac5-47ed-4c90-8d66-535e73a2e558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591d9f07-1e1c-45e6-8317-8437830d1462",
        "cursor": {
          "ref": "0f2d46e9-fa42-427d-93e6-4126f4b4768b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ae49a626-80cf-4c0c-b9b7-c8a4ebed23b8"
        },
        "item": {
          "id": "591d9f07-1e1c-45e6-8317-8437830d1462",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ac8431e1-6a9e-4abc-98ea-1cd7d697f66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6291b40a-5552-48ab-8f87-e118ceabe1a2",
        "cursor": {
          "ref": "3c60dc20-edbd-4d86-abfb-b14073912bef",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "752baabe-7624-443f-81a4-09a4cb4371ea"
        },
        "item": {
          "id": "6291b40a-5552-48ab-8f87-e118ceabe1a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "dfc03ed6-d229-4b5e-812a-14bb4abcd722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5545d7e-ac63-4ae4-b54f-1d53bd948e50",
        "cursor": {
          "ref": "0d5132e2-9b62-4ee5-9112-69a719fa6adf",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7ce4bce6-4b85-41b4-ba54-950d4ffe857a"
        },
        "item": {
          "id": "d5545d7e-ac63-4ae4-b54f-1d53bd948e50",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "08f051ba-aeb6-419c-8891-e4c5b9da8dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0b3a0d-7cbd-41a3-9307-388017e8505b",
        "cursor": {
          "ref": "c82aae76-3f0b-4f67-aff0-758bfeb6741f",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b435c9a6-dbef-4311-be6b-74e2ffbfdeb2"
        },
        "item": {
          "id": "9a0b3a0d-7cbd-41a3-9307-388017e8505b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b5c32337-3da2-4144-bbc3-96c39a10b2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5e422a-06b6-4533-99ec-5ad932b1e0d9",
        "cursor": {
          "ref": "82d781a9-ac02-4de7-9786-42e5d063dabd",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d3b375dc-fc54-487a-9a95-7f0f068f8bf8"
        },
        "item": {
          "id": "ae5e422a-06b6-4533-99ec-5ad932b1e0d9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "81f38b23-eab8-4ed3-a271-8a3810bd38fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc71bcc7-9f58-4300-a1bf-5842e3fa8700",
        "cursor": {
          "ref": "455823cd-31d3-4db5-9120-15011ed80635",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "641a2533-4bc9-4a66-8c89-5ec1c1f0ee5d"
        },
        "item": {
          "id": "cc71bcc7-9f58-4300-a1bf-5842e3fa8700",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1a51326f-5f8b-4549-9e40-1d52e4012a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d451c5-714b-4f3d-884a-c57fb4b760ac",
        "cursor": {
          "ref": "3c1d39c3-0c74-4709-98eb-6c2918cbb662",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3557038a-1a31-4ba1-aded-ff01dbe6548c"
        },
        "item": {
          "id": "82d451c5-714b-4f3d-884a-c57fb4b760ac",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ddb7d9e2-3837-4970-87a4-75c1a023f5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4e34e9-3552-41fb-ae98-762ccb5c45e3",
        "cursor": {
          "ref": "32728ad7-6b6f-4020-887e-c834ce7f1f0d",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f26300d4-857e-48e9-b9fa-515ff3905107"
        },
        "item": {
          "id": "fc4e34e9-3552-41fb-ae98-762ccb5c45e3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "538bcee4-e866-4ce5-aa33-c5b663f2ca9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe61d72-f816-4b67-b055-7576fba652ff",
        "cursor": {
          "ref": "dcea86fd-88cf-451d-aafc-71f6bf85b62a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ea82e6bc-fcf2-416f-a9ed-f56cc31d003e"
        },
        "item": {
          "id": "efe61d72-f816-4b67-b055-7576fba652ff",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b20ba1e6-35a2-42c5-bac2-3e687bef6ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1c92b3-b8d8-405d-a401-2d7b3ad717da",
        "cursor": {
          "ref": "34a0a323-bb8a-4c44-b3a1-d1890622d305",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "416030c0-b5db-43c0-b72b-f85060c0ec2d"
        },
        "item": {
          "id": "1d1c92b3-b8d8-405d-a401-2d7b3ad717da",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "60fa4ce4-e3d3-4769-a22b-116c4bb94b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9096a1ea-2500-474b-af5a-6c09983fb090",
        "cursor": {
          "ref": "cc9df390-692e-4646-972f-870fc75591ff",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "43ad3eb7-0c3c-4544-ae20-65dd1f18b4a5"
        },
        "item": {
          "id": "9096a1ea-2500-474b-af5a-6c09983fb090",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b8c16028-df6d-48b5-8bac-f2c4f8fbffa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12110a9d-2e57-41f0-9452-2ad3eb6710b7",
        "cursor": {
          "ref": "5a97e677-64ca-4eb9-8835-a8b41ee600ed",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1dea746e-ed16-4711-b7bd-e8e8511fc2a7"
        },
        "item": {
          "id": "12110a9d-2e57-41f0-9452-2ad3eb6710b7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "30d83652-a24b-4b6b-9cca-06e0c1e7d7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991c9e86-8bc3-4051-b634-28213443e010",
        "cursor": {
          "ref": "130b0559-8a76-49ee-9cdd-08325b6413f7",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c903ab34-c4f9-48db-94be-1860a6e272be"
        },
        "item": {
          "id": "991c9e86-8bc3-4051-b634-28213443e010",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a689056c-29b8-4f6a-869b-e156fb75c8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81a273d-8515-4365-8431-bfabd095b9ab",
        "cursor": {
          "ref": "bf2efe02-b564-41db-b573-63faa157c069",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3a7eef1c-527b-4960-bde1-2bb4a4f5eac8"
        },
        "item": {
          "id": "e81a273d-8515-4365-8431-bfabd095b9ab",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ce85b084-adc8-4932-a27c-a5a09b7a6dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d0f72a-f009-4f66-9b46-37242cdb7914",
        "cursor": {
          "ref": "cbcd952c-385b-4970-b883-69c3205a7589",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ea574754-6819-45dc-966a-6f59f7ba6223"
        },
        "item": {
          "id": "60d0f72a-f009-4f66-9b46-37242cdb7914",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "563d4db2-1c2c-44fc-9ed5-1f53bf4d3ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2830aae1-07b2-4e1d-a5f3-1fcb110ecf33",
        "cursor": {
          "ref": "ac991df3-58d4-4fc3-814b-b00efb94dcc7",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d0df1755-2d37-436e-8f40-61f38a46e269"
        },
        "item": {
          "id": "2830aae1-07b2-4e1d-a5f3-1fcb110ecf33",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0e120fad-9428-44f8-8089-2d93a466637c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a21d0e-35eb-4c30-a917-c1fae8208c13",
        "cursor": {
          "ref": "70bdda65-41cc-4e04-865a-4d684b7175be",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1b17c882-8713-481e-84ba-8e3df41c1b04"
        },
        "item": {
          "id": "16a21d0e-35eb-4c30-a917-c1fae8208c13",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2407c701-a8b1-4ac6-bd7e-fab10f6ebf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1c6c16-6654-401e-8253-8aa5bbc94c66",
        "cursor": {
          "ref": "d2c680ae-d107-4aa2-8e2a-c214254b52f1",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6a1dee19-fd87-403f-848f-e2bb79e33f7a"
        },
        "item": {
          "id": "bb1c6c16-6654-401e-8253-8aa5bbc94c66",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8382c0b1-a4a2-47b8-9b57-04023e75e4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40874906-4f9b-4075-8609-836376edabf7",
        "cursor": {
          "ref": "d29101c3-d25c-44c2-a796-ddf51deedbeb",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "918d4e6d-643f-4358-8b1f-f5a1aaef74b1"
        },
        "item": {
          "id": "40874906-4f9b-4075-8609-836376edabf7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4f5ebdee-5b04-468f-91d7-06c253858ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ffa2e1-2b27-45ac-a4ca-12d28689c72c",
        "cursor": {
          "ref": "04d54668-181c-4c5a-80b9-b91d155336c9",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "59811775-a012-4dd8-92b4-93a7859160be"
        },
        "item": {
          "id": "50ffa2e1-2b27-45ac-a4ca-12d28689c72c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "52fa7c1b-8c9d-40ce-aa24-82e0afcbd3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e4006d-b951-4ba2-afea-24e7ea63c1f0",
        "cursor": {
          "ref": "8bbe14f8-182e-4c56-baef-1710209a3cc0",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7e5bddfc-f9d8-4fe6-bb3b-7d5d449cd65f"
        },
        "item": {
          "id": "e8e4006d-b951-4ba2-afea-24e7ea63c1f0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6b0efb36-1fe9-4906-a723-25c2088d60d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13ad52b-cd25-4046-9f54-3c9c53227f42",
        "cursor": {
          "ref": "d38cb022-cfeb-43ff-a1fa-8d52c0879d4e",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "73c075ad-e652-4f3e-b973-669c66c38852"
        },
        "item": {
          "id": "b13ad52b-cd25-4046-9f54-3c9c53227f42",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c5cd450f-2f84-416f-a276-dcfe578e9203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b006130-6839-4945-8e51-edcaa76ea0a7",
        "cursor": {
          "ref": "07d5018f-3071-43a9-961d-2df82162179d",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5d13b75a-86e4-4792-a077-d699c8521f6e"
        },
        "item": {
          "id": "2b006130-6839-4945-8e51-edcaa76ea0a7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f8d49845-7bb4-4e56-b801-16631adb4f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434769ae-8037-4d3d-aa1a-6e3b41424ac3",
        "cursor": {
          "ref": "3923b040-a3d1-4199-8241-f10e0b3e8c05",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b7df1354-d41a-4ce5-832e-f5cfbc212ea4"
        },
        "item": {
          "id": "434769ae-8037-4d3d-aa1a-6e3b41424ac3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c1851333-2e91-4ace-a48c-d4655b347147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e252e4d9-cf37-4649-8645-67a18ac0af41",
        "cursor": {
          "ref": "584dc222-0475-4d27-93d5-ad7ca26e15d8",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a8b60c0f-ea3a-4527-be8e-f8cab1b8907e"
        },
        "item": {
          "id": "e252e4d9-cf37-4649-8645-67a18ac0af41",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2217d087-8cc4-4ffc-beef-1061c517eaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ffe9af-ba51-4604-b0ff-e9b44cea26d8",
        "cursor": {
          "ref": "dd12fbaf-5f93-4143-ae4a-c90d17fdcf2e",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7861c34d-5ee2-47fe-b804-849f987e246d"
        },
        "item": {
          "id": "76ffe9af-ba51-4604-b0ff-e9b44cea26d8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "93940db1-51c2-4153-b77c-25ac2f46be55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c36806c-2142-4a2e-b821-02f99573ea19",
        "cursor": {
          "ref": "210a9227-871e-459d-8b66-bb634addec8d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fc2b5307-34e2-45f2-b313-3e9245967eba"
        },
        "item": {
          "id": "0c36806c-2142-4a2e-b821-02f99573ea19",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "af72795c-db10-42ef-9923-4bdeb07c0360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ad4fe2-d1c8-4524-87db-441e937bb543",
        "cursor": {
          "ref": "c8f11427-27d8-4c7f-af7b-878221a85b26",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d1d8a0e8-9c75-4840-9c66-a19cf6bd2747"
        },
        "item": {
          "id": "93ad4fe2-d1c8-4524-87db-441e937bb543",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "87a4fb63-10f2-414b-a538-a2008a0b262f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fac2d7d-4066-4afa-9c27-9627a2786cb6",
        "cursor": {
          "ref": "0306ecd2-d212-4461-9b85-cb850063c46e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ea1a0886-cac8-42a1-b317-ebd1d09250bd"
        },
        "item": {
          "id": "7fac2d7d-4066-4afa-9c27-9627a2786cb6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bf73f61c-a266-47e8-88e4-ace9135616cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dc6c27-1a1b-4b1e-8837-6d0d82d3f40b",
        "cursor": {
          "ref": "d6d86136-bcc7-4bec-b7d8-1e60cc562008",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "eb709518-f600-42da-a840-7917c3964c13"
        },
        "item": {
          "id": "83dc6c27-1a1b-4b1e-8837-6d0d82d3f40b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "814f4d5c-8964-4712-a1ca-6386e012d8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bf8a02-9cdb-4240-825f-d8e5b21dda6a",
        "cursor": {
          "ref": "db0782db-ca38-4646-9aa8-2a2280ee1771",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "411a4937-29e3-4f11-aac3-79243078a222"
        },
        "item": {
          "id": "42bf8a02-9cdb-4240-825f-d8e5b21dda6a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7b70cc2c-693c-4cdf-9355-e065510b72ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86b613d-8424-4393-a895-8337914250ee",
        "cursor": {
          "ref": "b8ee1c10-77ca-457b-a176-dca2521d36fd",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9dbeeb2a-c063-4491-aff2-b44d419085b0"
        },
        "item": {
          "id": "e86b613d-8424-4393-a895-8337914250ee",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "443032cd-4cd5-4c6e-bcb2-b297f0d654e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3655e68-1de0-4e74-b096-6ac5035adea4",
        "cursor": {
          "ref": "0d1b4a61-377a-4ba2-9404-830b886ba416",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e943ba52-ed5b-4d37-bc67-65f9f692b8a2"
        },
        "item": {
          "id": "b3655e68-1de0-4e74-b096-6ac5035adea4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7eed1d8b-c99d-43ee-870e-710ceb5b5b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc71afc-9ef8-4e1b-98eb-70de6a79cc4a",
        "cursor": {
          "ref": "5e75d99a-a37a-4b32-9ee7-f3b0c0e2c47d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "11659b3a-b41b-49f2-9917-783933f7b7a8"
        },
        "item": {
          "id": "dcc71afc-9ef8-4e1b-98eb-70de6a79cc4a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9d3632df-18b9-4585-830f-255319fa4bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c50bdd-2c06-48e9-9364-6416608d49ba",
        "cursor": {
          "ref": "7c95a01e-3cf2-488c-bdc3-bb102cd9ffb1",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fad9d273-818a-4266-9437-e0a41789ae44"
        },
        "item": {
          "id": "a6c50bdd-2c06-48e9-9364-6416608d49ba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1d22cc73-a291-4be9-aea9-b84450e670e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60988011-02b5-4a47-a634-4fb37eb73354",
        "cursor": {
          "ref": "7e038fa3-8675-497f-9ccd-e9499ccb2a86",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e43b254b-0818-4021-9a3a-bfff0c91c731"
        },
        "item": {
          "id": "60988011-02b5-4a47-a634-4fb37eb73354",
          "name": "credentials_issue"
        },
        "response": {
          "id": "25141b27-04e6-431d-b5da-228324f5ccfc",
          "status": "Created",
          "code": 201,
          "responseTime": 105,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "493e68df-b2af-4046-b67d-9e53fc7b6e28",
        "cursor": {
          "ref": "8407a0a3-2e54-4bac-b70c-c113f60b5d2e",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "192fa0d5-e5a1-4b9d-b7ac-cade83e9249c"
        },
        "item": {
          "id": "493e68df-b2af-4046-b67d-9e53fc7b6e28",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "31d3ab4d-67e5-45a2-83b5-71431502712e",
          "status": "Created",
          "code": 201,
          "responseTime": 234,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "73962d6b-4e85-4780-b080-8a6d61c8c4d3",
        "cursor": {
          "ref": "bc33c9eb-14fd-43e6-b7ec-323478588fa5",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "20c6aca2-94ba-4400-939a-bd5dd97ee90f"
        },
        "item": {
          "id": "73962d6b-4e85-4780-b080-8a6d61c8c4d3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "87e460d2-b820-4859-92d1-37ac436b26c0",
          "status": "Created",
          "code": 201,
          "responseTime": 130,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fff70e-d1d6-48c3-ad57-3ce0495aadfd",
        "cursor": {
          "ref": "b35b6968-4acc-46c2-82b4-3b200a926b9f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3d612d2b-a42c-41ed-8f53-7fb747ef6ea7"
        },
        "item": {
          "id": "07fff70e-d1d6-48c3-ad57-3ce0495aadfd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "36653832-55d4-4999-8d40-aa0219ff0615",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0da09ee-a947-43a4-b44d-dbc7ee0ce315",
        "cursor": {
          "ref": "8b3a8867-13b7-41e6-a3cb-bc5cec8b7e0f",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "02f9369f-24a4-4dd3-bd73-60c6d1b8a575"
        },
        "item": {
          "id": "c0da09ee-a947-43a4-b44d-dbc7ee0ce315",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b58b17f5-90b2-4437-b131-7076060aae10",
          "status": "Created",
          "code": 201,
          "responseTime": 94,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9e0855-b42c-4ace-8e81-62c451e4c129",
        "cursor": {
          "ref": "f999473a-ca4a-4ea4-af01-5595a0c31537",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "941f4194-6040-451d-95c4-d045219f4116"
        },
        "item": {
          "id": "1d9e0855-b42c-4ace-8e81-62c451e4c129",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cfe6152b-fa10-49c8-a2e8-53ed834529e2",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d8a189-bbef-4f1d-9169-b7e22c7d26a2",
        "cursor": {
          "ref": "bce42cb0-ad25-4252-904c-e4d95e9e4ab7",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f7e709cf-3123-49b2-a24e-379e15028bd9"
        },
        "item": {
          "id": "90d8a189-bbef-4f1d-9169-b7e22c7d26a2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f79cab1c-554d-4267-8a8e-72c189a9009d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52e9152-d4a3-4d6f-904d-5a860f83e363",
        "cursor": {
          "ref": "2c36991e-6a7c-42df-b045-06a0bc713b9e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c86562f6-f6f7-4841-bbcf-6eeeab092e45"
        },
        "item": {
          "id": "c52e9152-d4a3-4d6f-904d-5a860f83e363",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6b82cef3-4602-4826-8131-83c3d7fd3a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496e7e93-57e5-42a4-a841-4c323361c792",
        "cursor": {
          "ref": "bedcd1e0-4735-445e-88b9-e2ca2df2a7b2",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "66e7b4d9-6cb0-436e-bd55-f00ebbd323fe"
        },
        "item": {
          "id": "496e7e93-57e5-42a4-a841-4c323361c792",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fdb7d0af-a4b1-4911-af4e-fd10153f272a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13445710-eeec-4f82-b857-ddf0cd67686d",
        "cursor": {
          "ref": "a5a3ba7c-1b9a-4eb0-afe1-e5fc548d543d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "646ea1bb-f7c7-46d7-90f1-b862f14db5cd"
        },
        "item": {
          "id": "13445710-eeec-4f82-b857-ddf0cd67686d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2d1685a6-5edf-4a8a-a438-71527396b0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292c84f6-f68e-4f9c-8ed1-7711189eecd5",
        "cursor": {
          "ref": "0a15bb33-52f9-4c8b-a4e1-436c8413eeb5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e070f2d8-4220-4e5c-8d7a-02b84dec53b2"
        },
        "item": {
          "id": "292c84f6-f68e-4f9c-8ed1-7711189eecd5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b3fafc90-b013-4574-ab0a-31d71a627be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195f0a7d-9576-4460-8ba9-f688d0f1f63b",
        "cursor": {
          "ref": "a19ed47e-b373-4aaf-a1f8-14b36611f8e8",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "874a5416-361f-4b6a-989e-e9a22375a2b4"
        },
        "item": {
          "id": "195f0a7d-9576-4460-8ba9-f688d0f1f63b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "91748f5f-efa3-4e3a-8d95-bd06f2d17f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276245f2-2572-4071-a7f0-9b8969a6141d",
        "cursor": {
          "ref": "6b047a7e-ce22-43b4-82d7-9269a30df96d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5c0d0c75-5d66-466b-953e-b2f20b9ae7b5"
        },
        "item": {
          "id": "276245f2-2572-4071-a7f0-9b8969a6141d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d5fd6d54-3da3-4965-9747-6a5444d2644f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eddbfbf-6d2c-44f1-ade6-d9f3b12c685d",
        "cursor": {
          "ref": "30394902-5f58-445f-a8d0-ac93c72a6bec",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e1241c9c-8922-42c6-b43e-f23e73cedfe4"
        },
        "item": {
          "id": "4eddbfbf-6d2c-44f1-ade6-d9f3b12c685d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c7e93026-cf15-4da6-a58e-d8e17d1b8e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04fa906-e792-4909-837b-3936d8006353",
        "cursor": {
          "ref": "a7825715-724e-45dc-8638-6ccfc709f835",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f8b34fb4-5023-41b3-91e7-4b0763b08c72"
        },
        "item": {
          "id": "e04fa906-e792-4909-837b-3936d8006353",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3c4d858a-3cbf-4219-b004-67668664ed85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0426cbbb-ed7f-4655-b259-80ec7ba4098d",
        "cursor": {
          "ref": "86a45c35-be19-46ea-8216-d7f12ca483e8",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4676b0e6-8ae5-4818-b9ea-88200d0b9568"
        },
        "item": {
          "id": "0426cbbb-ed7f-4655-b259-80ec7ba4098d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e03dc8ed-4cf3-4ac2-a285-57ca353b7f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae0cd82-3d6a-43aa-a85c-fcb9cd49c3e2",
        "cursor": {
          "ref": "4516dfe7-2367-437e-8a77-de2a83c6399b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e2c80715-8e52-4354-a28a-bc4ea2d365f3"
        },
        "item": {
          "id": "cae0cd82-3d6a-43aa-a85c-fcb9cd49c3e2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0594abd0-bde1-4eec-8e93-1e447c21c785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721a46da-a6e1-48b3-bb8f-b95bc10b4ec6",
        "cursor": {
          "ref": "1ea84f2f-5228-4e6b-8f8e-8a4e3eb94a60",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0ed1a6bd-1c0f-4588-ba61-d011f15c9a88"
        },
        "item": {
          "id": "721a46da-a6e1-48b3-bb8f-b95bc10b4ec6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2ce8d90a-ba3d-48c7-b1bc-999c2c2e053a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f1e5fe-f43e-4781-8644-5fae4f3ef0d3",
        "cursor": {
          "ref": "cda6ea6a-57a7-490a-8cc8-82e66a5a606a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b3092b55-2a62-4b1f-93bf-8fc793f9f2d0"
        },
        "item": {
          "id": "58f1e5fe-f43e-4781-8644-5fae4f3ef0d3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "026bd4f9-c802-4bc7-b31a-5b675d98bc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29df617-c66a-4b25-9278-29c3fde1eb42",
        "cursor": {
          "ref": "d4e38e1d-1352-4381-8dc5-4dc5626693c0",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5448c14c-3969-40e1-a49d-ba12cf479a7d"
        },
        "item": {
          "id": "e29df617-c66a-4b25-9278-29c3fde1eb42",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "120feeba-fce3-4952-8b93-9b1ca2cd33be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157e0f49-b475-4b8f-b862-655db51d89ac",
        "cursor": {
          "ref": "a9b7e2ea-7890-4149-9fe1-076d43da5c31",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "efcf0b3c-5306-4649-a704-fc99af3ef27e"
        },
        "item": {
          "id": "157e0f49-b475-4b8f-b862-655db51d89ac",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "88a79eec-e789-4077-b3e2-0e1fa32f4719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6034c1e5-ed72-447b-9600-20471b4bc951",
        "cursor": {
          "ref": "9d1d1f42-573a-4548-8816-4178d93dcd17",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "efc7e2e2-790c-4cc4-8c25-a282020e056c"
        },
        "item": {
          "id": "6034c1e5-ed72-447b-9600-20471b4bc951",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1b9749b0-c9fe-4ef1-b9c5-45bbfb786d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4182d231-80cb-4d60-84cf-3b68aaad6b31",
        "cursor": {
          "ref": "26ceb777-f132-415f-a503-210f392da9eb",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a8fb8b82-b177-47ef-af39-de475e435c3c"
        },
        "item": {
          "id": "4182d231-80cb-4d60-84cf-3b68aaad6b31",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f61106b8-101a-4360-8fa1-9c8b40d0a464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5d6206-9494-4833-945f-7d0d83ca87a1",
        "cursor": {
          "ref": "f5e61bfa-7d29-4ab6-9f6b-7d39ff0be8a3",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4f01c337-9c40-4370-9692-67cc2fe6c823"
        },
        "item": {
          "id": "ea5d6206-9494-4833-945f-7d0d83ca87a1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "70cfb9ec-25d0-4909-b3c0-0baade3423de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039f5ba7-c247-4fba-84c4-d7f8d4de964e",
        "cursor": {
          "ref": "e81ec236-fbc2-4fbc-8676-afbc383326d0",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9cdbaaca-bf85-4d62-afbc-604368272ed3"
        },
        "item": {
          "id": "039f5ba7-c247-4fba-84c4-d7f8d4de964e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "90c616fb-14a0-4e3d-b934-b00ae6bbf6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029eab99-3ab4-4048-adca-c5bb73dc83fc",
        "cursor": {
          "ref": "9c0772d0-7b23-4a64-9967-356fd93e56ca",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ac444645-bfd9-4fd0-8c0b-5d9dd0762a4c"
        },
        "item": {
          "id": "029eab99-3ab4-4048-adca-c5bb73dc83fc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "504568b3-c9e8-4562-8236-a58a22a41f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f93a62-4c1b-4b64-888e-13f02d8ce203",
        "cursor": {
          "ref": "26ea9941-d7a8-4130-84ba-3fd3b1c5fa6d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "48f2966a-55a5-43ea-9e30-a8f1179c5f57"
        },
        "item": {
          "id": "30f93a62-4c1b-4b64-888e-13f02d8ce203",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "162b8dc4-b30f-4297-8a35-27f3dd797697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40acfd0-0e3c-4143-a7cf-77f919a09804",
        "cursor": {
          "ref": "65557a2d-78c5-4d0c-8b15-f68674df2547",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "731b2a26-6cf5-4967-8687-df6481dc086c"
        },
        "item": {
          "id": "e40acfd0-0e3c-4143-a7cf-77f919a09804",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c42d4713-586c-4c13-8b5e-d64f73360ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45aa7c40-0e88-4e41-aeb8-05e4d6a628e5",
        "cursor": {
          "ref": "74177389-1847-4ead-97ba-4610986c444d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2b890627-942a-4674-82a2-d5df0f9343fc"
        },
        "item": {
          "id": "45aa7c40-0e88-4e41-aeb8-05e4d6a628e5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7aceb57e-663f-45c8-af88-7f4892944801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c69ac6-3e17-4c8a-a441-523b30fda2c3",
        "cursor": {
          "ref": "3914dbaa-e164-4032-b079-0c0ed1c4fc80",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4f7b92e4-e7fd-48e9-ab03-4e5d934b80d9"
        },
        "item": {
          "id": "d1c69ac6-3e17-4c8a-a441-523b30fda2c3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "351ec884-e66d-428c-8a62-053de868a00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2548cb16-78db-4dfd-885f-395adeff838e",
        "cursor": {
          "ref": "f046cca5-cd8c-4147-b7e5-920940302771",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "be88973f-c4ba-4cba-89b6-8f35cf8a129a"
        },
        "item": {
          "id": "2548cb16-78db-4dfd-885f-395adeff838e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8a071ee2-86a9-4b27-886c-d7933f6b572c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050cc2c5-4476-4cc4-8f63-ca452ee6daab",
        "cursor": {
          "ref": "c9034c9a-fa70-487f-9785-24da4da205be",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a44d517a-e3d2-42b4-941b-fc3802fb5afb"
        },
        "item": {
          "id": "050cc2c5-4476-4cc4-8f63-ca452ee6daab",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "55c492ff-f395-4e3a-bbc4-bd13e4966034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e7579d-f225-44dc-99e3-1f13586f6b1e",
        "cursor": {
          "ref": "a98c67e0-6d15-4adb-a280-25cb759f65df",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e7d36518-9eac-4601-a98e-e9b8b2715f07"
        },
        "item": {
          "id": "88e7579d-f225-44dc-99e3-1f13586f6b1e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0b1ccb9c-f982-4b79-ae78-3e6341c926ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9596f64a-6d9b-478e-8eb7-289fab1bbb37",
        "cursor": {
          "ref": "5432edbb-984b-4804-8776-e030ca7ed0d6",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "76b51ef8-e611-4b8d-a3e9-05e5cbfd2097"
        },
        "item": {
          "id": "9596f64a-6d9b-478e-8eb7-289fab1bbb37",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4b797491-2096-4a35-a8b6-8392eeef796f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9e3a49-0f7d-4d80-bf65-74be004e9042",
        "cursor": {
          "ref": "ec5cafa7-882b-4780-9821-ada79e295a36",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e2a8c0b6-8b61-415c-9933-771184d715d1"
        },
        "item": {
          "id": "8d9e3a49-0f7d-4d80-bf65-74be004e9042",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "afa28b74-8463-4fb6-8227-9fbfe299a09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf25381c-dbe9-462d-94b9-b0f06869781f",
        "cursor": {
          "ref": "2b6a1be5-5396-4d6e-9b6b-f22b436d4f63",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bc8bda22-7f52-43dc-9492-ae11efc3e81d"
        },
        "item": {
          "id": "cf25381c-dbe9-462d-94b9-b0f06869781f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f9bdb257-96b4-4a56-b157-fd99845c30b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ecd73d-d722-423e-aefe-6e2bc59c23be",
        "cursor": {
          "ref": "adf8b41c-5e1d-4c97-8e37-96f677fe97ce",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b0b049b0-5cec-458a-bf2f-7d989681caa1"
        },
        "item": {
          "id": "d0ecd73d-d722-423e-aefe-6e2bc59c23be",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "15a2e995-895c-493a-9c3d-3da235f40254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b102b0-0027-4a58-8685-5f399d5997c5",
        "cursor": {
          "ref": "028d56c3-d7a0-426c-a881-2ec27c0f4e1d",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3adeff03-30de-457b-8e33-6cc66a4fea4c"
        },
        "item": {
          "id": "c9b102b0-0027-4a58-8685-5f399d5997c5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "72d106ae-7ec6-4f3c-a6b2-5114694f143d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ec8d1a-65f8-44e8-a7e6-880ac9e208a8",
        "cursor": {
          "ref": "497692b9-93e6-4900-8b15-052ec643d747",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "61bdfc0b-573a-46a2-baf7-44a673020ac0"
        },
        "item": {
          "id": "43ec8d1a-65f8-44e8-a7e6-880ac9e208a8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8ef29502-d191-4afb-8511-e1593b885001",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9f1e5c-f68f-42e3-8044-e85350b3255e",
        "cursor": {
          "ref": "76eb7760-49d5-4495-8b30-1cb94ca75b36",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b5ea657e-9a90-4bca-a85d-9873219644ae"
        },
        "item": {
          "id": "7b9f1e5c-f68f-42e3-8044-e85350b3255e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "28bbb30f-e9f5-47c8-b22a-1b08c5bb0fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a17b6d-a6a4-4cf0-b0e7-101dfe708c98",
        "cursor": {
          "ref": "051a1197-fc5b-402e-b9e4-4468f09cfcf3",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e02997a4-5962-43e3-8f32-b25c0e9af461"
        },
        "item": {
          "id": "14a17b6d-a6a4-4cf0-b0e7-101dfe708c98",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6d7b875d-5b2a-4874-8e3e-d12e0ab8be35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5798787f-2a70-497e-8134-5a7f5d1f63d5",
        "cursor": {
          "ref": "c1bfdc9d-58da-4149-a525-1f11dfadd315",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8154de5e-c307-4d33-b9d1-720ac2b0a631"
        },
        "item": {
          "id": "5798787f-2a70-497e-8134-5a7f5d1f63d5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7e607d31-9a7b-4d4b-996e-f203b54fe6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d195094-c3b2-4f43-9c3a-2dfd8c1a9d06",
        "cursor": {
          "ref": "254c39a4-d2dc-47bb-85b2-5f4a129a7869",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "aa8107f2-6744-47c4-962a-96a7f633d55f"
        },
        "item": {
          "id": "2d195094-c3b2-4f43-9c3a-2dfd8c1a9d06",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0bc42738-d2d3-4e2c-940e-d4353f2fdbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17db8a44-5bb9-41b0-9bd5-2cdff4aa9777",
        "cursor": {
          "ref": "f62d0d0a-e1d7-49c7-a54f-278b58e7c71e",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6517b665-5801-4800-8a1e-d74275f0b997"
        },
        "item": {
          "id": "17db8a44-5bb9-41b0-9bd5-2cdff4aa9777",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a0b7db17-107e-4931-a862-ab153be56222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41eff599-aaa8-4e9c-a4d8-fbe5a8bc6580",
        "cursor": {
          "ref": "79c53dc3-eb03-41e6-b431-77f72473283c",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ddf5a297-1a8c-43fa-900e-8c334f1bdbc0"
        },
        "item": {
          "id": "41eff599-aaa8-4e9c-a4d8-fbe5a8bc6580",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c3730541-33a3-4037-badc-f0d1d583ddc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e08ede1-7698-4f5b-bdac-7311edc6088c",
        "cursor": {
          "ref": "eed5ae94-9b89-4eea-9fdb-7e10094ca468",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "359a845a-7c80-4595-b551-04eb69bf7902"
        },
        "item": {
          "id": "1e08ede1-7698-4f5b-bdac-7311edc6088c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e1cd1365-6f1b-431d-bdfd-fbeac8ecadbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0675bdaa-c028-4b1e-8e15-de82c04e0f05",
        "cursor": {
          "ref": "7ca6ed07-64f9-4cde-8d8c-33918a75ad53",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bd74f884-6f68-4735-8dc2-8c76a54d3c93"
        },
        "item": {
          "id": "0675bdaa-c028-4b1e-8e15-de82c04e0f05",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c6c311cb-5583-48cd-9e92-e4ff1e3694c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6784dce-2f45-46eb-9d79-16b345ae175a",
        "cursor": {
          "ref": "504412fd-2621-4747-9d4a-84e5e87bfd57",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "11faa999-0c81-4890-9f89-06400a3f6445"
        },
        "item": {
          "id": "e6784dce-2f45-46eb-9d79-16b345ae175a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6acefb61-eb52-4d3d-b135-7f93bceaa08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bc4ef4-fd8e-4acc-8d1c-93d89ceb4445",
        "cursor": {
          "ref": "4288d049-92c1-4380-89cb-251da06277c3",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "72562599-eee9-4132-a5fc-5b46223095a9"
        },
        "item": {
          "id": "00bc4ef4-fd8e-4acc-8d1c-93d89ceb4445",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "99b7ca52-b14d-43c8-8cc9-1c6ac1cc0027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395186fa-c3d4-4d7a-94a8-d522b5a3e9cc",
        "cursor": {
          "ref": "ad7c921a-23dc-485b-9575-4fa385d84a59",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d3307b7a-b159-484e-b3c3-dac22986e588"
        },
        "item": {
          "id": "395186fa-c3d4-4d7a-94a8-d522b5a3e9cc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "970b5a22-554b-402e-955e-f3d9add31f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df62c769-dba0-4a74-a6b9-9699e979c73c",
        "cursor": {
          "ref": "a151cc7f-48f5-4903-a14d-6e89280402a0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "01425f70-b5c0-4e1a-9960-ae55e5f0da9d"
        },
        "item": {
          "id": "df62c769-dba0-4a74-a6b9-9699e979c73c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f772d160-eec7-4e2c-aa1a-f2d38828cb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a00f9d-dce1-4a59-885b-7f8805921f9d",
        "cursor": {
          "ref": "8446fb9e-979c-4ef7-a714-485782e37d91",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6125763a-caa6-4868-b675-38bbfa7afc98"
        },
        "item": {
          "id": "57a00f9d-dce1-4a59-885b-7f8805921f9d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dbd3d422-61f8-4889-bdb3-23c4becb2c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e0083e-390b-48ab-9068-7899f667dac3",
        "cursor": {
          "ref": "dd576e1f-1db9-47b1-80f9-590d9b4c1c3c",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "058271a2-511c-4e5a-9261-0787875163f3"
        },
        "item": {
          "id": "b1e0083e-390b-48ab-9068-7899f667dac3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f817dbeb-d825-4577-89ad-347e95d3cdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8597087-417e-446a-b2ae-109654b494d8",
        "cursor": {
          "ref": "ab467bbd-b111-451d-9208-d9b54baf56c3",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "23031344-431b-46b7-b80c-a63660fb21b3"
        },
        "item": {
          "id": "d8597087-417e-446a-b2ae-109654b494d8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "25bf6936-91e4-4ac2-89ae-332531c5f528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266fd142-ed39-4b89-be0d-c6ac3963d7a4",
        "cursor": {
          "ref": "aaca3fe4-8222-4f11-a095-3eb08ba2e5db",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4f446351-b066-41d6-821a-f239a7be168d"
        },
        "item": {
          "id": "266fd142-ed39-4b89-be0d-c6ac3963d7a4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bfd22623-0931-4411-aa2c-65b7a539b950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69db81e5-bbdd-4c30-af18-4ee255b5f8a7",
        "cursor": {
          "ref": "f414519d-d090-4fe3-b94f-0a3bf1357ea3",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "15f635a4-923d-48f8-851c-6c3b4d861ccc"
        },
        "item": {
          "id": "69db81e5-bbdd-4c30-af18-4ee255b5f8a7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cb6c5761-4335-4e48-97f3-44a57cb1e2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59b4a67-3144-46a1-a47f-96cce1c2499f",
        "cursor": {
          "ref": "458d2002-2409-41b3-972c-49cc4e357339",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "646a4e77-88cd-4714-ad74-4f9f5b07604b"
        },
        "item": {
          "id": "d59b4a67-3144-46a1-a47f-96cce1c2499f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d24b4f58-040e-4722-9d89-562ce696ea1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ce7f3a-9aa0-4ac1-9d27-78533b466502",
        "cursor": {
          "ref": "b9a324bc-b42e-457c-a790-fe440eb82202",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c487ac13-973f-4422-ae5c-b6bb486b4177"
        },
        "item": {
          "id": "d4ce7f3a-9aa0-4ac1-9d27-78533b466502",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "24661648-d170-4d11-b2ac-42ea4a971242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea2ec95-8dba-45f3-b070-b96006f00bb1",
        "cursor": {
          "ref": "39161c87-77ce-419a-ad7a-b7f6b831545d",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d3be2cbb-bb8f-495a-8600-67a1e06029c7"
        },
        "item": {
          "id": "cea2ec95-8dba-45f3-b070-b96006f00bb1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "57a2073a-fb05-43ce-9ab0-388c2bba9858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a02d48f-5d91-4e0f-8c11-2137a909d961",
        "cursor": {
          "ref": "2747cf9f-82eb-4276-a41f-7118f90e4888",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2932a5a5-3334-4ab1-bde1-19df3a4eea40"
        },
        "item": {
          "id": "6a02d48f-5d91-4e0f-8c11-2137a909d961",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "efe55f0c-10b6-4c3b-8c27-2a71fa62ad19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1b6da5-3e07-41e6-bebb-dbf57e460b83",
        "cursor": {
          "ref": "12ed2b34-b1ee-4a7c-9e87-1704663a46ef",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2712e49c-5cb1-417a-abc5-c7de4f21a6ca"
        },
        "item": {
          "id": "3d1b6da5-3e07-41e6-bebb-dbf57e460b83",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f9bd1b51-c4a0-4c8a-bc91-27d509f934f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f4f1d7-1103-4ff2-853c-f0f15f4990ab",
        "cursor": {
          "ref": "0242050c-369f-4404-932c-047eeb1c05fa",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "890697bf-3b9f-4e82-ac05-fcf823619109"
        },
        "item": {
          "id": "a5f4f1d7-1103-4ff2-853c-f0f15f4990ab",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7edef4d1-79f9-447b-875f-a9c745a424f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d649f61-1af9-4911-bb5b-9a05f7a14cf4",
        "cursor": {
          "ref": "b6c07855-5c89-41e3-94ff-7d685ce9f334",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a3f06bcf-cde2-4d84-9e86-498854900187"
        },
        "item": {
          "id": "0d649f61-1af9-4911-bb5b-9a05f7a14cf4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ad5928d6-c7dc-409b-84e2-d3a094ed1a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe31da2-231d-428e-a4a2-7c6e557c8acf",
        "cursor": {
          "ref": "baec3dcc-c8df-4d2d-af45-6ef7f8f96667",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9198fe13-3cc2-4225-9e19-ad8f0697a213"
        },
        "item": {
          "id": "6fe31da2-231d-428e-a4a2-7c6e557c8acf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4b91edd8-d6b3-4e3e-988b-0951f9008376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a5529b-089f-4b7e-8033-2f86ecb6bbde",
        "cursor": {
          "ref": "d0b1b895-1db2-4971-b1b9-be35188335ed",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c694e1cb-1d56-42ff-a0bd-3ac751b91d51"
        },
        "item": {
          "id": "e7a5529b-089f-4b7e-8033-2f86ecb6bbde",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6dc9dafa-cc3b-4329-8560-fd06e6c1163a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b543349b-5474-4e5a-81e0-a21bbb112b76",
        "cursor": {
          "ref": "bf3c2c6d-3c7e-44df-9acf-64e0cf3c4487",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "143863a5-8cfd-483c-8a66-70b3bed1f5a7"
        },
        "item": {
          "id": "b543349b-5474-4e5a-81e0-a21bbb112b76",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "640742af-f4ee-4c57-8f8f-4b4e7633877e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020b15b3-d484-43b4-aa21-013a94d73b44",
        "cursor": {
          "ref": "c137b20d-ff74-47db-8bfe-178ad34a4b84",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "028c4fe9-0208-43b3-980f-9d7df308f08d"
        },
        "item": {
          "id": "020b15b3-d484-43b4-aa21-013a94d73b44",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bf9fb658-33eb-4930-a977-d09136ca662e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f081354d-a10a-4e67-8718-9b5b98383cfb",
        "cursor": {
          "ref": "8a98c093-69ec-4389-91b2-308ff2d6d019",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cafc6bea-e277-4501-ba2d-fc4fbabcbd0a"
        },
        "item": {
          "id": "f081354d-a10a-4e67-8718-9b5b98383cfb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cf8a983e-acf3-4ad2-901a-39543d733c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29694f7-f354-4f55-88bb-a8d37b7dcb16",
        "cursor": {
          "ref": "8b11e197-c64d-4265-8d91-1a416af40aa3",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c3444682-81d6-4b4f-a363-b6fd21add0cf"
        },
        "item": {
          "id": "e29694f7-f354-4f55-88bb-a8d37b7dcb16",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a48c4327-195b-49ff-a747-dd669a2aa91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df52978-9e77-47a7-b2e7-ec3dfe6809cc",
        "cursor": {
          "ref": "dbf7b923-7b58-4fa4-9a5b-34f2f9339692",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f449b281-2ebb-416d-9aaf-1c84b36ef35c"
        },
        "item": {
          "id": "5df52978-9e77-47a7-b2e7-ec3dfe6809cc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "480a2725-b797-4f61-9484-010db5ae9ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bea383-02c4-4cc7-a0a2-4ef68cd214bc",
        "cursor": {
          "ref": "a6c431bd-58f7-4804-a3bd-929cf3837b62",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8735a3d0-0ace-418b-bb8f-de2e45d41b1e"
        },
        "item": {
          "id": "a8bea383-02c4-4cc7-a0a2-4ef68cd214bc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f1cd9c52-78b1-43aa-98c7-63293c6981d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807802c8-9c0a-4598-89c2-a406d69b0733",
        "cursor": {
          "ref": "f8b989d8-31a2-4b93-927c-b2f295d0f1b7",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b373d554-b8e2-426f-85d6-867198a55a0d"
        },
        "item": {
          "id": "807802c8-9c0a-4598-89c2-a406d69b0733",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6eb57fff-a159-4899-b60b-8a19f97f51d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbfcbdd-462d-4293-9935-3393bfc88e15",
        "cursor": {
          "ref": "20f1a8e8-acad-492d-b65c-90bbf7a574c2",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "777b21f3-39f6-4454-aee7-9049d7b8b80e"
        },
        "item": {
          "id": "cbbfcbdd-462d-4293-9935-3393bfc88e15",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e8c383e6-41c5-48ba-a4cf-9d7a668295f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165a2ce5-18fe-4e08-a374-b29d76ea3437",
        "cursor": {
          "ref": "ef21cc39-1df1-4f6f-a729-35833d0b20d4",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "71192711-97cf-41aa-80f9-3bb2f3dbcabe"
        },
        "item": {
          "id": "165a2ce5-18fe-4e08-a374-b29d76ea3437",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9975bbbc-ece6-4ec5-9aca-c7f6e28917cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c87bc4-458a-47f3-9bdc-ebc67d209a24",
        "cursor": {
          "ref": "26710ccb-529e-4184-aa99-87c33ccca1e4",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f0896812-ee40-4e74-a696-c0e3395cdd1f"
        },
        "item": {
          "id": "43c87bc4-458a-47f3-9bdc-ebc67d209a24",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f2ae3b8b-ede8-4607-8390-9cae710ca31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9309f4d0-04de-4af6-a33c-422628d952d9",
        "cursor": {
          "ref": "d465a0e6-6b78-4080-bb01-25e836079527",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "636a4601-b67b-459a-a9b3-4a478e92be50"
        },
        "item": {
          "id": "9309f4d0-04de-4af6-a33c-422628d952d9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bec7e599-80e4-42e5-8c41-e320512c7de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ce86a2-00b9-41a1-8135-7c00f9673175",
        "cursor": {
          "ref": "eeb335e3-408f-4eb9-afa7-7bcb0d507971",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "632f38c6-b87b-45f1-9f89-487e87e2a28c"
        },
        "item": {
          "id": "e6ce86a2-00b9-41a1-8135-7c00f9673175",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0f6069de-13a6-490f-b66c-e6a073b203e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eef027c-0c04-4862-9769-20a66b098f7a",
        "cursor": {
          "ref": "0f6492a5-d759-4e72-af15-1ccfa5c54cc0",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d19718ac-a282-4744-8ccc-93e58a0ab6f5"
        },
        "item": {
          "id": "2eef027c-0c04-4862-9769-20a66b098f7a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5965cf26-d569-4067-9ed8-5937b01ff584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668e02f7-6968-441d-9e41-5ac18352cf95",
        "cursor": {
          "ref": "ac5a58d3-f52a-4985-8bc2-7a4f720bd71f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "661eaeac-3d65-45e3-b5a3-f5da82d053ae"
        },
        "item": {
          "id": "668e02f7-6968-441d-9e41-5ac18352cf95",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "601072d3-451c-4d70-ae33-ac017be544b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010b75b4-9357-4ac2-b459-334b3db116e1",
        "cursor": {
          "ref": "7527187e-c018-471e-9565-f1ad9841da6c",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "346f22f8-b294-4f0f-ab9f-25c477acf0d5"
        },
        "item": {
          "id": "010b75b4-9357-4ac2-b459-334b3db116e1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8a22aed1-7036-4f4b-ab59-43c31fd5eb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf77a18-79a5-4338-bd58-d4a603b223bc",
        "cursor": {
          "ref": "7c11583a-d5d6-40d8-8861-3c082348bd0e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0e8afada-6c68-4fa0-aa27-d0b971ca35ed"
        },
        "item": {
          "id": "5bf77a18-79a5-4338-bd58-d4a603b223bc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bfd5eca1-e61f-49da-9f91-bf5316f2fadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd67ef6-2c5b-47d1-bba1-6c4e3c366839",
        "cursor": {
          "ref": "9f407b6f-24fa-422a-a448-8fc8b7157ff0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1f82fc6b-8979-4b2a-ad57-896544d60641"
        },
        "item": {
          "id": "4bd67ef6-2c5b-47d1-bba1-6c4e3c366839",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3c2e8d2e-f3de-4ad6-a212-a682aab87f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f9df14-49f5-4f1e-a021-ac6df6af83a2",
        "cursor": {
          "ref": "b82bb2f4-0b3d-48df-a018-f9e57bdc29eb",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "56e404ed-d64d-4748-942e-ec11578909cc"
        },
        "item": {
          "id": "c0f9df14-49f5-4f1e-a021-ac6df6af83a2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c0afc93d-c29c-4c70-a22c-8b0cd46d5d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1712db-910f-4ef9-bb0b-9bbee3a2b418",
        "cursor": {
          "ref": "956ba444-324f-4595-8a5d-337b9756357e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ed30657b-7ad1-4e96-bc12-b551a5e98401"
        },
        "item": {
          "id": "ce1712db-910f-4ef9-bb0b-9bbee3a2b418",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3ed46ebf-a44a-4aa6-bda5-6cf3c4601292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4aae00-56f0-41bf-bd47-9ee7c4c52f6b",
        "cursor": {
          "ref": "9d66da14-2a04-4085-89d8-193e26b34b27",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cb3b5d5f-1089-4d08-9adf-af275952f97c"
        },
        "item": {
          "id": "9b4aae00-56f0-41bf-bd47-9ee7c4c52f6b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2aac3c53-724d-4270-b6d4-96506c63ceaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbdaae4-944e-47ef-b2c6-3c316488e843",
        "cursor": {
          "ref": "e2793f9b-4416-44bb-92d8-c0eebecdd7c2",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7d9c6499-42c4-45b9-a7c2-27690d900f67"
        },
        "item": {
          "id": "4cbdaae4-944e-47ef-b2c6-3c316488e843",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "18711351-eee8-46f2-8354-207c7551c85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497f630b-bbaa-4fd1-8188-3d147ba22d4a",
        "cursor": {
          "ref": "21b4a5d3-4fc3-4777-9bad-129eecb3c371",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "da9e8547-2fee-4615-a6b7-a2f540af94c6"
        },
        "item": {
          "id": "497f630b-bbaa-4fd1-8188-3d147ba22d4a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "681eb9e3-b89c-49ef-b781-59284deb9871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5c81d5-70fc-42a3-a1fb-04a5dd5a84d2",
        "cursor": {
          "ref": "ea488efc-5d3b-4a1d-a0fa-d5da3951c796",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "16fc5749-d57e-471c-8e45-948c25cf62cc"
        },
        "item": {
          "id": "ff5c81d5-70fc-42a3-a1fb-04a5dd5a84d2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0d9c181a-9cd9-48e1-94c4-159ea70804a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fbd067-58cc-4ff5-8d2f-63b297457b93",
        "cursor": {
          "ref": "85eee2e9-8e5e-48b2-a02c-9f2aeadfc095",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5353b427-a870-4ae0-a612-b93dfa68d262"
        },
        "item": {
          "id": "b4fbd067-58cc-4ff5-8d2f-63b297457b93",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "51ab817a-fe59-437c-bac4-cb3d24fb3dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd21634f-fe52-45ee-bd5c-1527e482b9e3",
        "cursor": {
          "ref": "74052508-3b53-4569-bfc5-00b0ad8c5915",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f333ca7e-cb66-47c7-90a0-ab6d9ad9b25e"
        },
        "item": {
          "id": "cd21634f-fe52-45ee-bd5c-1527e482b9e3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "427a6186-a5df-4ac7-8e24-83c7b9bf0a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a079fc75-2fe7-4949-8de2-86947b5a40f8",
        "cursor": {
          "ref": "8030d5c4-cb7b-4251-bbb0-ac83eb121f67",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "35f7e981-f4d6-41e2-9b7b-b063f5963e6b"
        },
        "item": {
          "id": "a079fc75-2fe7-4949-8de2-86947b5a40f8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "808c29e5-c9d3-4ba3-b33f-aa53b2ed8b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75efa69-b6a2-4dbc-b801-688737ddb64b",
        "cursor": {
          "ref": "97534e91-4202-4606-9eec-010b1b30e3ea",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9ab2090d-06ac-4459-b01d-2774e6fbf874"
        },
        "item": {
          "id": "c75efa69-b6a2-4dbc-b801-688737ddb64b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d2910569-6835-4603-9185-1937121b3e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4a20cf-e33d-4d08-9fb7-a708221c25d0",
        "cursor": {
          "ref": "34e683bb-9311-4d01-b2a3-c5fa51441e26",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3067042d-1e3d-48a5-b5dd-efe852a1663d"
        },
        "item": {
          "id": "4a4a20cf-e33d-4d08-9fb7-a708221c25d0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "273bd70d-8ff3-4cd6-89fc-f820a685ac72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9f34a9-8f49-4793-916e-71f2caab5377",
        "cursor": {
          "ref": "6510c7db-1226-48bd-b7c0-fd30cb49a117",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "11b19b87-a7e3-4827-a816-71b797a73882"
        },
        "item": {
          "id": "7b9f34a9-8f49-4793-916e-71f2caab5377",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2b2a164e-9f80-4412-8e95-c9ef5df479c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3087340-5d7a-405d-bdd0-5ead135bc9de",
        "cursor": {
          "ref": "e7bbd584-d899-471e-ae22-2089140b40fa",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "aaf6413f-c7e6-4be7-a781-15920447e978"
        },
        "item": {
          "id": "c3087340-5d7a-405d-bdd0-5ead135bc9de",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "57dfae58-345e-45e0-9704-a190005def20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2617fca3-abaf-4001-b7c3-e7ebd6837ef7",
        "cursor": {
          "ref": "f64b0925-a2a7-4a07-aa5e-fb64b890ac9a",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "297fcd94-8c7a-46ee-ae0f-c48266d161ec"
        },
        "item": {
          "id": "2617fca3-abaf-4001-b7c3-e7ebd6837ef7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c4d698e7-b7cc-497c-aa55-6cee8707c091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9589045-7242-406d-b5b8-924c192309df",
        "cursor": {
          "ref": "946ee2a3-b8d8-4da6-bb02-4e0f9cbee4bc",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a3b03644-5e6c-4eb8-ba63-59c081ac1139"
        },
        "item": {
          "id": "c9589045-7242-406d-b5b8-924c192309df",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "21473489-1b9e-49f6-bcca-9d20368b0020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df4ec18-2483-4bb4-9022-b6ef69696657",
        "cursor": {
          "ref": "d2681cca-5fe1-41fc-b63b-70714803eafb",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3b77fff9-75a7-4490-a141-9e79c9a8a712"
        },
        "item": {
          "id": "6df4ec18-2483-4bb4-9022-b6ef69696657",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a3d81d3a-3369-430c-a6d7-d4c63800cce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad365598-84d0-46bc-8e94-38475219f12d",
        "cursor": {
          "ref": "680826ea-eecd-4be8-848b-f8514bb129b0",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "19622884-5c50-4634-a7d5-691ed90b8d7a"
        },
        "item": {
          "id": "ad365598-84d0-46bc-8e94-38475219f12d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "22cac531-92b3-441c-8787-39953d485c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ea2f18-603d-41da-9cd5-88d561bb4501",
        "cursor": {
          "ref": "fc5c616b-082e-403c-9e7e-965223538b1e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "70bfe38a-51ce-4b3f-9086-f21f69b77a41"
        },
        "item": {
          "id": "60ea2f18-603d-41da-9cd5-88d561bb4501",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3088dbff-14c0-4f3b-88c0-276e1b422965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d7e7e0-8a35-4e72-89e2-199f764e101b",
        "cursor": {
          "ref": "3dc024eb-7455-4c12-9c2c-d05bf97f850e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ef252404-cf4b-4159-9749-8a43bcb627d2"
        },
        "item": {
          "id": "c5d7e7e0-8a35-4e72-89e2-199f764e101b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "da748639-fb48-4ec2-b595-930b7a80adb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2a176d-b940-4f40-b279-5f5f50aa261a",
        "cursor": {
          "ref": "e15267ac-1b4b-4ad2-96b8-58884082b3a5",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b1988204-d36b-4de3-a311-9005d3da9c39"
        },
        "item": {
          "id": "cd2a176d-b940-4f40-b279-5f5f50aa261a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7d234dfd-63c3-4f48-aff2-3d6118540766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78519532-9456-4e0c-9166-ac96d1a16a12",
        "cursor": {
          "ref": "63d99b87-2ba8-41d9-a478-867f34d43d3b",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "faa2598a-273a-465f-80ba-9c2674772720"
        },
        "item": {
          "id": "78519532-9456-4e0c-9166-ac96d1a16a12",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3e27d52d-d8cd-40a2-bb3c-14dced443d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a242abd-dac0-4072-be1f-837843cc9938",
        "cursor": {
          "ref": "da516d11-5727-4a03-aeb8-dc335b5721a3",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c67d9132-1dcd-4286-8af8-d607ee935271"
        },
        "item": {
          "id": "1a242abd-dac0-4072-be1f-837843cc9938",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2c8720a7-17de-4cec-a8ca-71c61798b7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d76269-39fa-4853-a3e1-ecbf94ceea4a",
        "cursor": {
          "ref": "c69191d9-004f-41aa-ac34-88f633f54082",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7530dd1f-df8f-4baa-b0d3-cc9f941e9d3f"
        },
        "item": {
          "id": "62d76269-39fa-4853-a3e1-ecbf94ceea4a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "884fa152-f310-40f9-bc95-7ecf0e5f2594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99253dbf-cf56-4c7b-96fa-0e0a4b8f1fff",
        "cursor": {
          "ref": "59be9d90-e83d-469c-9d18-61af69488c0e",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c9f7adba-0dbd-4609-8144-4ad75aa70ba4"
        },
        "item": {
          "id": "99253dbf-cf56-4c7b-96fa-0e0a4b8f1fff",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "523717b5-4f19-46f3-84ca-8f462fd9cc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37ed9a6-5eac-4752-a864-f49deeec415d",
        "cursor": {
          "ref": "b4850b54-8d3d-4507-be50-8311422f591c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c35544a1-88ad-4d6b-9488-888e403bb54b"
        },
        "item": {
          "id": "c37ed9a6-5eac-4752-a864-f49deeec415d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f266756d-8d70-4883-90bf-9748955b1be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b150cb91-39ec-492f-b920-595bad812794",
        "cursor": {
          "ref": "62a3d251-8c7a-40e3-afee-753153d5782b",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "65c8891f-17d5-4407-805b-7c265a601a54"
        },
        "item": {
          "id": "b150cb91-39ec-492f-b920-595bad812794",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b2dc7509-d8fd-45c6-a509-d642c4207977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219f0197-2664-4e64-85d7-a8274b04fd21",
        "cursor": {
          "ref": "ea862559-74d2-4e2e-a9e9-02420fe7c2a5",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "28622496-9726-4f57-8411-b31cbf239e7a"
        },
        "item": {
          "id": "219f0197-2664-4e64-85d7-a8274b04fd21",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "92c895bd-44dd-4239-83f9-bbbbbb2a6035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c757a3a7-9101-4501-a1c0-28fde0be38b4",
        "cursor": {
          "ref": "35a72634-10bb-4ece-af08-ba463eb1396b",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2c7f5cde-7077-4650-85db-84bac9f67603"
        },
        "item": {
          "id": "c757a3a7-9101-4501-a1c0-28fde0be38b4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f86b749f-9d29-400a-9eb4-bec8e886284b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d2eff7-700a-423e-bb50-5fa37f73e8ef",
        "cursor": {
          "ref": "17fff357-4d22-4dde-af82-039fdad63e05",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "077395cb-4cfa-450a-9974-834150477924"
        },
        "item": {
          "id": "c2d2eff7-700a-423e-bb50-5fa37f73e8ef",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "168b42bc-56c4-4360-8c6b-ade90c961473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfbe711-ae17-4e66-9c28-a3d603ef716f",
        "cursor": {
          "ref": "c4d6c10d-5c22-410e-a6c0-c621ab493925",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "948581c4-f2da-44fc-92d1-4b79fdf2f2f9"
        },
        "item": {
          "id": "cdfbe711-ae17-4e66-9c28-a3d603ef716f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dea78f1a-8456-49a5-91bd-97b960dc5c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1a7133-156f-4427-a2c4-efd53f5417c3",
        "cursor": {
          "ref": "da818082-13cf-493f-9f56-af29bae8ce30",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "88f694cd-cf0a-4286-a199-a6f2d83ae0e8"
        },
        "item": {
          "id": "ef1a7133-156f-4427-a2c4-efd53f5417c3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "456fb1b3-9c5a-425a-a0ff-417fc66956ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3501535-67fd-4aef-bc9c-e7213b3f88ba",
        "cursor": {
          "ref": "d7f4aea0-da88-456b-994b-e4f73f78df9e",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "23b191ae-10cb-4d1c-9fb2-20ff7239106f"
        },
        "item": {
          "id": "c3501535-67fd-4aef-bc9c-e7213b3f88ba",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1dfc564f-edd4-4ace-8484-3c8c630ba32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a048b067-fc96-4441-aa4c-e01a50b0835d",
        "cursor": {
          "ref": "1048c207-0044-45a1-bdfa-797d734ba7f1",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "72dda7dd-0c7a-43d4-a5e1-826191b9f013"
        },
        "item": {
          "id": "a048b067-fc96-4441-aa4c-e01a50b0835d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a77b9b52-92e4-43d9-a2ca-f9aa2a3683e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9fbedc-ba4c-449f-91f0-afc8bc1d6438",
        "cursor": {
          "ref": "b63de643-b493-46a8-a978-f3d98f82bfc7",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3310bb35-fe19-41e4-9009-d40b6a023650"
        },
        "item": {
          "id": "7e9fbedc-ba4c-449f-91f0-afc8bc1d6438",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f1853dcf-eaf7-41c3-b46a-b02b77e8df31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f05655-c5a7-4978-b269-6ea6d6ce525d",
        "cursor": {
          "ref": "da4f5d3a-13b2-46a8-999a-b38e8ce5aac6",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "968732a3-97ae-4a6e-9426-c312eccba3e8"
        },
        "item": {
          "id": "67f05655-c5a7-4978-b269-6ea6d6ce525d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "925eb85d-bd84-4d1d-aed7-f99d4560a62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42807fad-44a3-4c45-85b6-c75fe78ef39f",
        "cursor": {
          "ref": "95bb3fb9-fc57-4ccb-9d3f-19cecdd9ca24",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "67ec6841-7575-4d7f-bca3-8454ec795a2d"
        },
        "item": {
          "id": "42807fad-44a3-4c45-85b6-c75fe78ef39f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "86855966-5a4d-473e-8b77-d9b354b3a171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e4aa2a-37c7-451f-b49a-4620f92db8af",
        "cursor": {
          "ref": "4ea09910-0b36-4892-b256-754138d944ae",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7b9a9a31-8018-47d3-bf4c-f6d97a4940a4"
        },
        "item": {
          "id": "27e4aa2a-37c7-451f-b49a-4620f92db8af",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "44d7b7f2-b917-4988-9aa6-4296909a2361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a59707-8227-4152-b077-8627647f85f5",
        "cursor": {
          "ref": "1af5609d-0c5d-40e9-ac89-fc6e14a8e78b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "36a951ec-671c-4be3-abad-1e2185c0b918"
        },
        "item": {
          "id": "70a59707-8227-4152-b077-8627647f85f5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a7c66f2f-4e8c-43d6-887d-3aaf233f8375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2db8606-f027-4906-b484-c9a34aec4183",
        "cursor": {
          "ref": "08ae8294-a0b3-4e50-a45d-c32279a77ab5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9e366e6d-c77f-4f24-9030-a3aee85727fd"
        },
        "item": {
          "id": "c2db8606-f027-4906-b484-c9a34aec4183",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b845d438-40a8-450c-b37c-36ef15fc7d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c46732-4d13-45c2-b061-7561b9e0622b",
        "cursor": {
          "ref": "bcd3165a-c0a6-4f44-8e84-ec041a4bb140",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0a4ac3a1-fb56-4c54-acce-bcf4ab61493c"
        },
        "item": {
          "id": "c3c46732-4d13-45c2-b061-7561b9e0622b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6c52dadc-664e-4fd2-adcb-298e81df8ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdb2d37-c928-42d0-bd9b-016bde511d5b",
        "cursor": {
          "ref": "a540da7a-7ba2-43dd-8383-65aea6028ca1",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7400e27c-4b13-463f-aedc-6830860e5198"
        },
        "item": {
          "id": "8fdb2d37-c928-42d0-bd9b-016bde511d5b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "10e7067e-ffe8-4be8-9746-b55da28c3d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e2b6a9-98d2-4d01-bfaf-caa329d55660",
        "cursor": {
          "ref": "e92bfd1a-1f9b-45aa-aad0-f768ff979d79",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "51cf85be-60e8-44e0-adbc-1da6490e1db7"
        },
        "item": {
          "id": "c8e2b6a9-98d2-4d01-bfaf-caa329d55660",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "444d4e2d-9dd5-45d6-bff6-14cdc27c8716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0b1a38-b374-4bba-a3a6-80b2c9cd841a",
        "cursor": {
          "ref": "a642066e-90f0-49f7-b274-524beed0fff6",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a3e93d20-c1d1-4b10-b0cc-53d467c25ba8"
        },
        "item": {
          "id": "0b0b1a38-b374-4bba-a3a6-80b2c9cd841a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ad979061-8253-4120-a01e-ea21cbf81995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d03d10-77ba-40f2-896e-b6fd44ee0553",
        "cursor": {
          "ref": "0aa82636-a460-4da9-bae4-b2007c74d10d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3c105384-c1a8-404a-bd96-30e4330a58fe"
        },
        "item": {
          "id": "17d03d10-77ba-40f2-896e-b6fd44ee0553",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7a088690-3a6d-4ccd-9944-a5a60a373de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0835d274-2f45-4aab-8ba6-eb85aed917a2",
        "cursor": {
          "ref": "d56d5d18-c62a-4adf-be5b-36d4c0925a1f",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "52608370-1a02-4917-8990-3b364bde35c4"
        },
        "item": {
          "id": "0835d274-2f45-4aab-8ba6-eb85aed917a2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8ad68f70-e7e0-433b-860b-ea63b5ee4066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce22e394-ad78-42c7-9025-54ccd9cbebe4",
        "cursor": {
          "ref": "933e04a8-f8b3-4b28-9bc5-5fa93b3e4aa1",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "08cb2382-f860-400f-a5b0-bccfffa9c1a4"
        },
        "item": {
          "id": "ce22e394-ad78-42c7-9025-54ccd9cbebe4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a8e2e380-7758-47f8-b6a2-a3aed19b176f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a2a949-a541-4491-a3b0-176f5feb27f2",
        "cursor": {
          "ref": "e39a67d3-cc12-4038-93a6-eb34d7124a5d",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "455dcb91-7439-4d78-99c9-55e717bf2ac9"
        },
        "item": {
          "id": "46a2a949-a541-4491-a3b0-176f5feb27f2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7f44a927-c056-4a99-bfdd-c2a88692a97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d0ef93-7a9d-4d2c-955a-acd5a5ae0185",
        "cursor": {
          "ref": "7b0dd517-2074-4b5c-9287-f460ba2bad90",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "18bab607-69a0-4bfb-a512-4f7c6e1ae05d"
        },
        "item": {
          "id": "e5d0ef93-7a9d-4d2c-955a-acd5a5ae0185",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4fef2a51-e2cb-4e55-ae8b-1d8695a81fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4a8569-d869-4e0a-99b7-b1a44db34511",
        "cursor": {
          "ref": "c82feb5d-7358-496e-aa75-65a6ff79ea10",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0fd551d8-f945-4928-bd1f-7fa7f16a909a"
        },
        "item": {
          "id": "1f4a8569-d869-4e0a-99b7-b1a44db34511",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4d8d7520-d824-4b4e-ba92-78d776a7524c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415e7e95-91b2-44e0-8b10-e98367403aa8",
        "cursor": {
          "ref": "1ca9482f-19f6-45ef-b7d5-239f168d7282",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f4d33926-1675-4443-b855-6ad766fd228e"
        },
        "item": {
          "id": "415e7e95-91b2-44e0-8b10-e98367403aa8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e63a20de-c1af-4468-9578-1457567b1e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cf6592-8b6d-49a9-b2ec-43d0719b7102",
        "cursor": {
          "ref": "f2484129-c1da-487b-9d55-9fa9f028f615",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3017f90e-432f-4adb-b78b-8dc1b6bc5319"
        },
        "item": {
          "id": "26cf6592-8b6d-49a9-b2ec-43d0719b7102",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e9d15c56-f999-4a01-96cd-a603cf30047a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676d0d7d-a1ed-4cb6-9e82-d4a1e25262e0",
        "cursor": {
          "ref": "2a453554-48a9-41ab-975e-92ebc1415056",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0b3f2643-9abb-437d-af6b-f41d76c05646"
        },
        "item": {
          "id": "676d0d7d-a1ed-4cb6-9e82-d4a1e25262e0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "db773c02-303b-4318-89dc-a907c3d0c0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80784ee-4c04-4f3a-ada3-1c304808d61c",
        "cursor": {
          "ref": "4577094d-3166-4357-b95a-f2b94e9f8d42",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "23c931d5-7618-4852-8d71-2d1fe54871a1"
        },
        "item": {
          "id": "e80784ee-4c04-4f3a-ada3-1c304808d61c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "949501b0-fbd8-4b80-87f4-e98b2fe42c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ddc863-4a90-4633-8b6b-4ec2d96c0855",
        "cursor": {
          "ref": "cd6cd819-fa3a-4ce4-a92d-5648d42df79f",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "83e318aa-a494-4be2-9d20-75d6615586c1"
        },
        "item": {
          "id": "88ddc863-4a90-4633-8b6b-4ec2d96c0855",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3d5602f1-f51c-46d7-aaa7-b7a96d9be6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfb7cb5-3b93-4813-a09d-022e35a2178e",
        "cursor": {
          "ref": "fd98e181-430b-40c3-be31-189a29561455",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1c7217cd-6984-4843-892b-ff1ab771a034"
        },
        "item": {
          "id": "9cfb7cb5-3b93-4813-a09d-022e35a2178e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e499d3c0-4f67-416b-859a-8ec333a4a20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cd1d55-9896-4796-abd8-813a462fe85c",
        "cursor": {
          "ref": "de09c125-47db-411c-8b57-cecfd6a3e249",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0001945d-6401-4b74-9bbb-4a0dd3a083f5"
        },
        "item": {
          "id": "b0cd1d55-9896-4796-abd8-813a462fe85c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d631593d-b130-4278-bc00-1d80ba504189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1ee303-e271-4f76-9a23-6f9d5788f356",
        "cursor": {
          "ref": "e05289e4-f555-4fbd-b25a-a8ea80516449",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9736da73-1f9b-424f-971a-1dfedd7a1801"
        },
        "item": {
          "id": "1b1ee303-e271-4f76-9a23-6f9d5788f356",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fe6c8179-7eca-405c-ade0-4b70c93809c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06804e40-471c-436d-8d23-46be4e6b9cc4",
        "cursor": {
          "ref": "192f797a-db2f-4dfa-97b9-1ac675a91015",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c62bce39-df9e-42ce-a515-92457eb61c9c"
        },
        "item": {
          "id": "06804e40-471c-436d-8d23-46be4e6b9cc4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "832beeed-4588-4e06-8386-4f89121275d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c094f13a-f908-4c3e-8659-a0c20f6d714c",
        "cursor": {
          "ref": "d453b261-e490-4f58-a433-fb2a2538f09b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "64eeb21b-2c57-4892-90ad-c2bc9dc5298f"
        },
        "item": {
          "id": "c094f13a-f908-4c3e-8659-a0c20f6d714c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2f55175d-9f55-42d5-81d0-0da3f5365ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5fa286-703c-44eb-a8ca-c4512b21f9b0",
        "cursor": {
          "ref": "729def15-e702-4f70-9357-38d75bfdd617",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2746041a-33ad-4a70-9d74-efec20218ce6"
        },
        "item": {
          "id": "5f5fa286-703c-44eb-a8ca-c4512b21f9b0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e2bb9a50-9436-4b22-ac9e-5f481db56439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3022e362-40e1-4494-b1ce-ee2629eb1688",
        "cursor": {
          "ref": "69dfc8ef-3642-4e81-b526-5845ffc95334",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8a82c5b9-e672-4477-bac1-03c02b931e8c"
        },
        "item": {
          "id": "3022e362-40e1-4494-b1ce-ee2629eb1688",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dd779686-2955-4ba1-be2c-c8ac6f4c92bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f1d209-9ef3-408b-b62d-6db043e9242b",
        "cursor": {
          "ref": "721b8933-50cb-45ca-92c5-64a6b3209554",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fcd37453-2b48-4be8-9370-275abcdf8233"
        },
        "item": {
          "id": "15f1d209-9ef3-408b-b62d-6db043e9242b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "61c787e6-4ec4-4bfc-8b01-84ea7bc97687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8b4ea5-6866-4495-912d-324ad6cc6cdb",
        "cursor": {
          "ref": "18db78de-deba-4775-82af-78ac42684b07",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6f61c3f2-442b-4d12-8c00-e81232474f0c"
        },
        "item": {
          "id": "2f8b4ea5-6866-4495-912d-324ad6cc6cdb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d2c2eabb-61d9-4990-8943-08bab2b5ee32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad15398c-0fcd-4112-8087-0f2093f9304e",
        "cursor": {
          "ref": "95ecb967-851c-4737-9747-570c9dcfe490",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ac676488-b34e-47c4-89ec-2a94c2120e0c"
        },
        "item": {
          "id": "ad15398c-0fcd-4112-8087-0f2093f9304e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9389c384-6b5a-4d75-83d9-89256ccf9973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0137833-a0b1-4625-a0d9-9d30f16da617",
        "cursor": {
          "ref": "2ef3ae9d-cdeb-4ac0-afce-21b0a9ff4cad",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e7b02908-ae22-4d90-a0ab-8ec4d2202827"
        },
        "item": {
          "id": "e0137833-a0b1-4625-a0d9-9d30f16da617",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6ddf13ac-021d-474a-8472-7859fc9c454d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a61d09-3479-4bb5-a5b4-53141ccdb3ce",
        "cursor": {
          "ref": "a8521cb6-d82a-4f50-b3e4-739f79f032a3",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dfbeb4f3-ca3a-40c7-8f91-8ef5bd95aab4"
        },
        "item": {
          "id": "81a61d09-3479-4bb5-a5b4-53141ccdb3ce",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b9fa4510-05ea-48a9-89b8-b795c0ad5da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd54d02-0c6c-4ad0-a530-c9429b5028ba",
        "cursor": {
          "ref": "7e120244-a01f-4e12-b008-b7947341cfb2",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9a1eea3d-d3b6-4100-aebd-e7f92901d6cc"
        },
        "item": {
          "id": "abd54d02-0c6c-4ad0-a530-c9429b5028ba",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ce57bbd3-bd78-4845-b1af-5cbfc1ebc821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c3c17a-75ed-4e76-b61b-f729fd0b7d37",
        "cursor": {
          "ref": "d41d3d22-4ec2-4c36-bb14-081533bced23",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a690bbd1-617c-4777-9b01-5529ce05d08b"
        },
        "item": {
          "id": "75c3c17a-75ed-4e76-b61b-f729fd0b7d37",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7def9243-fc89-4b77-8a31-4ec717cdc45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48de3c3-8b8c-488e-81cc-af7a6cd49feb",
        "cursor": {
          "ref": "765c223e-56db-4d9b-a0a0-2a6aecf8c4bb",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d4e67f91-8139-4256-a416-7de50dc2a9a1"
        },
        "item": {
          "id": "a48de3c3-8b8c-488e-81cc-af7a6cd49feb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "228466ca-e0aa-43ba-a05f-16e67db7d3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a09574d-f655-4a34-a033-415d79bedba3",
        "cursor": {
          "ref": "757ed318-4d85-4982-a153-4a10209b20d1",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "891cf35f-f330-4f27-be88-eeb585ad458f"
        },
        "item": {
          "id": "6a09574d-f655-4a34-a033-415d79bedba3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6f4901d3-b7ee-4ac4-984f-efb48ab7276c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ad93c6-9577-44a5-ae71-8061509f9bbb",
        "cursor": {
          "ref": "455c2fe7-1572-405d-859d-5ebb57e6ceab",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4e41dc93-66b6-41e5-81e1-59e5c7e590ba"
        },
        "item": {
          "id": "b0ad93c6-9577-44a5-ae71-8061509f9bbb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f14a80ce-e0d6-4e44-831f-14089e89ff40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69467f6c-bd2a-4e36-a370-9d7436fdf6cb",
        "cursor": {
          "ref": "76cbc5f3-1ba8-432e-a4d0-9d2a27469f08",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c47cac96-d50d-4ee0-9e30-d2806f4d440d"
        },
        "item": {
          "id": "69467f6c-bd2a-4e36-a370-9d7436fdf6cb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "70c8976b-0560-4f98-9483-6e8d59889ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af71cb95-8ecd-4da6-b6a6-e2959ac37079",
        "cursor": {
          "ref": "8e476622-6000-4e74-acb9-bbb41b392b50",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c3291f6a-3873-4990-8f90-b5cb71016813"
        },
        "item": {
          "id": "af71cb95-8ecd-4da6-b6a6-e2959ac37079",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a731fc9d-6244-4ac8-9d26-ce29412cf347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29beb80d-23f2-4bde-88bf-d1b728484143",
        "cursor": {
          "ref": "b1095092-caa0-4f0a-91c4-49c0dbe6b661",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "cb5df501-7e2a-4373-ae78-ee1410ed67ec"
        },
        "item": {
          "id": "29beb80d-23f2-4bde-88bf-d1b728484143",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "502a335a-c85d-4326-aa3d-d2e98d3200ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f16db1-c943-48a2-9dce-fdb1df476254",
        "cursor": {
          "ref": "a531b069-fa5b-4f0f-a9e0-b33491328141",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a3fcfdb2-2ae2-4b7a-902f-3d4a83e316d8"
        },
        "item": {
          "id": "a0f16db1-c943-48a2-9dce-fdb1df476254",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "96253346-5225-41a4-8e52-cc56b0582d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29df704-a370-4446-b818-5026f2796fca",
        "cursor": {
          "ref": "e367d461-9839-4247-8d4a-b1f713969c14",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "82d0812c-eef7-4b31-baff-6963534b4947"
        },
        "item": {
          "id": "d29df704-a370-4446-b818-5026f2796fca",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0878564e-179f-423f-9ee7-600ad22b56fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23b93e1-a5c9-45f0-961d-9228f8b6391f",
        "cursor": {
          "ref": "9c870f16-dd78-47cf-9e5f-f17ebdce9017",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a32cdd14-aab8-459b-b12c-80b456f42994"
        },
        "item": {
          "id": "b23b93e1-a5c9-45f0-961d-9228f8b6391f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "08dfd219-7379-41fc-951e-6e68881fd2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5c6605-bbf0-45bd-b279-07cccc65c18e",
        "cursor": {
          "ref": "b12eeba7-f11f-4022-8823-a728480cda9c",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5d05c14c-5d84-4f0c-8e0c-8c5ddd377f9e"
        },
        "item": {
          "id": "6f5c6605-bbf0-45bd-b279-07cccc65c18e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "100aa981-1381-453f-b635-4f72b4b75eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed13f70-8249-436f-a82f-6b7eb49f8988",
        "cursor": {
          "ref": "c3f35b6a-2337-4516-aa90-d4b5c6e27f7e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4f8cf822-39aa-435a-a8d2-5de99cd7ec8a"
        },
        "item": {
          "id": "0ed13f70-8249-436f-a82f-6b7eb49f8988",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4b802062-8e36-4bc1-a772-fb10d06ffb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717f192d-687d-45c8-82ce-7b35beaccdc9",
        "cursor": {
          "ref": "1cfa72a3-0f81-47d4-a20f-480e767d69c7",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "dca68d9c-542f-4959-8b51-6f9e0b905be2"
        },
        "item": {
          "id": "717f192d-687d-45c8-82ce-7b35beaccdc9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4e4aa16d-2aa2-4708-b537-29a3b1f4e213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb73f07-8be6-4328-b291-a8084026a6b1",
        "cursor": {
          "ref": "5d3d5b29-3db3-407e-b6bc-ba8327d2ab50",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5924966a-71b4-452d-88a6-e8a7f2b2f211"
        },
        "item": {
          "id": "efb73f07-8be6-4328-b291-a8084026a6b1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "849c507e-fc81-406c-8c51-717652ea1ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854fb0d4-f592-4d4e-b808-deae1d9fe82b",
        "cursor": {
          "ref": "ba0703ae-02f2-4cf2-957f-59e75a494c29",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f0c2acdf-02d5-4deb-b4bd-a9581914a136"
        },
        "item": {
          "id": "854fb0d4-f592-4d4e-b808-deae1d9fe82b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7879b18c-eea8-46a0-9a37-13427144bc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab3fbdb-920c-45ed-bdce-700345d90617",
        "cursor": {
          "ref": "c7c1fb39-2809-42a2-a21c-5c62ba2637e1",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0c28a51a-b906-4d1e-9bd3-5ef82f210692"
        },
        "item": {
          "id": "8ab3fbdb-920c-45ed-bdce-700345d90617",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ef90119c-dda6-48fa-adba-d669d29bf144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405b4473-2321-4d7c-b544-4227bdcdad29",
        "cursor": {
          "ref": "3f74090e-ac58-4d81-95ba-491b0898929b",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "723d0706-a0a8-4122-a97d-dd288db352a5"
        },
        "item": {
          "id": "405b4473-2321-4d7c-b544-4227bdcdad29",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "34435bf7-4a47-4894-a2c0-4999faec76a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fa807b-2848-4f4d-9861-e130bcf365bb",
        "cursor": {
          "ref": "ccb67b4e-bff2-46f9-a543-2b20301c4d22",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a63a3df3-d4ee-471d-aa65-0a24e22f1fc7"
        },
        "item": {
          "id": "43fa807b-2848-4f4d-9861-e130bcf365bb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e1e0d5d7-1d53-4e45-91e2-6c92afcd07a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d1cb1b-6f8c-4f97-bd62-7b63385eb626",
        "cursor": {
          "ref": "275b5c60-c230-4f8c-b675-142e7b2458b1",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d28fea9c-3366-4d4a-a1a5-e0eb8e028f7d"
        },
        "item": {
          "id": "f5d1cb1b-6f8c-4f97-bd62-7b63385eb626",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "088d2253-97be-4c5c-ad9d-698c401f8090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161f0f97-0855-496a-8355-0d4b18780cfb",
        "cursor": {
          "ref": "ffffd311-2798-4e1d-852d-005a9b677fd3",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d71260a7-5009-4f5a-ab85-58335930554a"
        },
        "item": {
          "id": "161f0f97-0855-496a-8355-0d4b18780cfb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "de8adf00-2b64-4ae1-9ee0-7b8814553ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da73745d-a55f-40e1-8cec-f416b23a02ec",
        "cursor": {
          "ref": "de458cd8-d6c1-431b-9af1-100c286ce765",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "25a4a82c-7031-4f71-b8d1-ff1ceba31dd9"
        },
        "item": {
          "id": "da73745d-a55f-40e1-8cec-f416b23a02ec",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "babb9f3f-aa4c-482a-8526-c5b3583836dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bee201a-6d8c-45c6-8e4a-31f22ea60716",
        "cursor": {
          "ref": "381fcb35-2a20-43e0-b481-3686c65eb8e6",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "995926b6-fbec-46cd-8676-035d82d71eba"
        },
        "item": {
          "id": "3bee201a-6d8c-45c6-8e4a-31f22ea60716",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "acaecaeb-6d16-4ecc-9d49-13b8f54c9fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb84ad8-2d17-458c-bfa5-c946ad9cc54b",
        "cursor": {
          "ref": "bad8431f-e0f7-4333-aae3-e78ecb716fcd",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "968997ba-5652-4e23-819e-e626208354e3"
        },
        "item": {
          "id": "fdb84ad8-2d17-458c-bfa5-c946ad9cc54b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d44fa7ae-032b-45a7-9a7c-ed39a404be3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0caf12e-90a2-4272-9b31-f89f55c7d6d7",
        "cursor": {
          "ref": "58ef5104-6e75-4b7d-9726-6a42340ff4d4",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2244041a-aae1-4d2d-a0fc-92174b8e62b9"
        },
        "item": {
          "id": "f0caf12e-90a2-4272-9b31-f89f55c7d6d7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c3a50c9e-af4d-409d-b0e2-f68e1e553289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d81c6d9-1d56-4553-8af0-6d6a7aea6c12",
        "cursor": {
          "ref": "7409976b-47fc-4829-a060-4b476dcfbf7c",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4641983d-ba5d-4bed-89ae-670349a2c502"
        },
        "item": {
          "id": "8d81c6d9-1d56-4553-8af0-6d6a7aea6c12",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6ccb8fb0-f3ce-49e7-93cc-dd3dddda4672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c4a417-f056-41f1-a27a-800b4279356f",
        "cursor": {
          "ref": "11212f26-068b-4638-a89b-542da8f88c8b",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bdeb3aa3-f829-41c6-92fa-b58c776040e6"
        },
        "item": {
          "id": "06c4a417-f056-41f1-a27a-800b4279356f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "658b2575-00b5-4d41-ad75-1293ea835834",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8792bd-913a-4f40-a2fd-4975bc9da411",
        "cursor": {
          "ref": "9f58e219-51da-45f1-bb23-89ed3a0df99e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1a4776a4-0253-4c0c-8bb8-839ac4c3f1f9"
        },
        "item": {
          "id": "3f8792bd-913a-4f40-a2fd-4975bc9da411",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1dff59f5-3f93-4af4-aef5-391e2dfae9bb",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f49acfa-4765-4026-87eb-c6a9f7107e71",
        "cursor": {
          "ref": "48b8eb36-c6fe-43af-adbf-4cd670d12d2f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "32df8864-ada8-45fe-b6d7-e152266d9c9c"
        },
        "item": {
          "id": "5f49acfa-4765-4026-87eb-c6a9f7107e71",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2cf45eca-72d3-42dd-9087-bb242c577782",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7e0103-5579-4536-ace7-7822fa38581a",
        "cursor": {
          "ref": "26fb2cd3-20f8-451e-9624-15348e40dbbd",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f69d544f-1db7-404b-a754-471cc7cd6cab"
        },
        "item": {
          "id": "bd7e0103-5579-4536-ace7-7822fa38581a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c86198ab-18aa-4a2b-9578-fe8af05562a1",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "77edbbed-6ec2-474b-980c-ae9023c59331",
        "cursor": {
          "ref": "a645127b-e85d-40d0-a31e-57ba210a6f6b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a5461310-0619-4c36-8b25-e8472751da1f"
        },
        "item": {
          "id": "77edbbed-6ec2-474b-980c-ae9023c59331",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8635460-b4aa-484e-90a1-418355e8c697",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77edbbed-6ec2-474b-980c-ae9023c59331",
        "cursor": {
          "ref": "a645127b-e85d-40d0-a31e-57ba210a6f6b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a5461310-0619-4c36-8b25-e8472751da1f"
        },
        "item": {
          "id": "77edbbed-6ec2-474b-980c-ae9023c59331",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8635460-b4aa-484e-90a1-418355e8c697",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1717aa7d-1eb8-4bcd-965c-b6c9de7f9b13",
        "cursor": {
          "ref": "400d7474-1970-40a4-9905-451051631f67",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7f3bd3b9-22f3-4612-bd37-8b7d2ab9ea0f"
        },
        "item": {
          "id": "1717aa7d-1eb8-4bcd-965c-b6c9de7f9b13",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4e18ad55-5e81-4363-bcab-682facb797ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fe01c3-4045-447a-9377-e22a075d42c6",
        "cursor": {
          "ref": "ac0ed1ef-bbb7-4f05-a469-224bd54bc467",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ef6c748b-cf88-4b0d-a2cf-6e8052a6386e"
        },
        "item": {
          "id": "d7fe01c3-4045-447a-9377-e22a075d42c6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d5d68e8a-c684-4073-b908-7c969163b11d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}