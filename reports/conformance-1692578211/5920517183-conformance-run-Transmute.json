{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6e29648d-72d5-4487-ab3e-7c544aca10fa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "70f3b85c-7024-439d-aab5-a05b16c9328f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "210952b9-59d0-49a1-be28-1e67ca1c68ab",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "179b533f-6b44-4c6a-ab9f-1d197d23af5a"
                }
              }
            ]
          },
          {
            "id": "2d6b1a26-60bc-4f6f-b7ee-0380997fa0c1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef0589a3-729b-4702-beed-1ea2f769e422",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "39b2ced9-4139-420c-946f-0c9441cc710b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a46323fb-2961-4fc7-9a55-ed669723b946",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "80afada5-5432-427a-aeca-7da0e4404734",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a59ef28-7f3d-4e78-a7a9-1497667db08c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fc47e8a-2c58-4680-9e97-2930eb9057b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f48e09db-9721-4322-95a1-94bea3580537"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef62958e-b19c-4420-9f86-1062d2817379",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd6ff8fa-b77b-4f3c-9f2c-9367a474b52f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed963dba-963d-4c03-b35d-55a5c7fb6d30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b9d79ec-6256-4ab1-b9be-f97068fcaa10"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4aab88d1-a308-470d-a066-d29d5bb43ff0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2c389d34-a032-472a-baac-89afb3816a7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f297fba-9049-49b7-9950-2232624ce5d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "142b3956-ea03-40ae-b357-ddf0375c4a5e"
            }
          }
        ]
      },
      {
        "id": "5d258af6-7f6b-4cba-a806-947cd3a0a8fe",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "eca20f1e-59af-4c89-814d-64924cbb09c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c9ddf80-9064-42f4-afcc-95eaf36789b4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8976d058-20ac-4526-9e92-69588aca2a75",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73876777-d1b8-4579-9705-267b72307bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1274866f-6343-4e75-8d2d-6695e2f37ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4def1cb-8cd7-42fb-b609-40dc54a85403",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dc2bf6-30b7-4d47-82d3-c57269a0e74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2284d8f-4ad2-42dc-9742-9e9136155219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5333e4-6b23-416f-887f-afab811ac68d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bf6bc5-854e-4cd0-ade3-89fb939c1ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11e9fc01-a8c7-46e8-a269-cdcce624d399"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a8a4516c-6727-4d54-951f-7e032a4de105",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b4115da-5a48-47ff-876d-635264073b54",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb1d2dd-d26d-44c2-ad2e-26aefd62d729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b99f968-4ecf-48cf-a756-3fd6ac7f80d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43a209a-e54b-4aac-aa9e-d0e78e7e9b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711f5fb3-b09f-4675-b032-d5aef6d9c751"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4792edc5-4c21-47a3-9d7a-28ccde5ca3ec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a96c1206-22e6-486f-849e-e36c0ec0a20a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e285478a-f979-483e-81df-cabbca99f212",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "11b2c13b-fceb-4351-ab99-52e9732c85c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb8e9b69-8dd5-4a47-aacc-ff6398913a45",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ef78079b-1388-4c8c-a440-df67909e5b5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a1d14d3-03fa-43e5-afeb-6d700a7cf3ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07b21cdf-446c-4188-879c-37183d1053f0"
            }
          }
        ]
      },
      {
        "id": "487ae233-c92b-4c46-9733-41111df8403b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0551c8ea-b8eb-441b-9819-6f40e2190443",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7376d32-e4ee-4d0d-8fdc-034345415aea",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d70d1544-5f3e-449b-829f-ba7b9698fe18",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178c0838-84f2-4973-9d77-1098a0fea5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be38ce2-b959-4948-81b3-91e8c2fe4624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7509a3e-c47d-4513-886f-3e95579b0f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d1b183b-4bbe-4099-9e91-a779108a00d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4f5312-75a9-4ce2-8d8d-bef97eabcb5f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a84ef01-9c36-499b-9eb6-ce7a094b2278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d8b060-eff6-4d48-ab65-9d21ab87c8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cdd9d0-e2f2-4975-9591-1678eefbdde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ac339f0-1fbd-45ee-b057-6c51e60ed62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c5fc1e-16b5-40c1-9ae5-ced5536df0b2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3b7bdf-9bce-49de-b4e8-7db7d29030cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2050cbc-6693-4afa-af73-78dd38ab2ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0a8d82-e895-42bb-8a57-b816f7bef3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "874e9a5e-be6e-4c11-ad6a-d6f342039d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512bc428-463e-4b22-b724-f68dfe28ed9a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51787664-929c-4b62-9b58-67d433783f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c4685e-ba05-403b-9ed5-685007642114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2143d0e3-a0ca-4f70-b832-35066f02427e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "854e953f-a30d-4c1b-9e7a-42bf0f325772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a996fa9b-d34d-457d-aec9-f644eef9a577",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ad0e48-fb56-4a18-9f26-4ea9b0458948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14250874-6d2d-4332-80f3-d5741b09be04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2efd08b-f46a-4ce7-8090-406c6d3fb4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70f6612b-220b-468e-8e0d-1e5bc385164c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd0e91f-2781-4d35-89e8-bb39489f3ca0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbb06bd-d1ee-4582-a452-c293b714f3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc95bae-8805-4efa-9963-a89f25d56b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae71700-260f-4a53-bcfa-27da19e0f7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7558d64-654f-40d2-aeb9-f9cbc4de9f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f96e48-234b-4923-9dec-c3607bcb024c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd1bcff-dc42-4fd3-a3a6-1d8c018460a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94bfac2-07d8-4d03-8f85-88d959ec482e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf2cd52-1383-40ba-a69c-30c4372d40b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3010fc76-ef4e-4e00-8c30-0a7b4ab11181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4a2a28-2390-45df-bbc8-0a335603b482",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfb3241-d637-43d3-950a-edf6a01b8ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b08743-ff09-4de1-9264-956761eabed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802e3925-24f7-4291-bb61-1abd6d3334f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "416f94d1-00d9-46b8-bafe-e0cb72cc68f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaf9cbd-6dca-41e8-a8bb-5249fb22d682",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02b8fb8-cda1-4688-bb66-f4611fd5727d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c8c8c7-c30a-46ce-b5f8-62b3bfcd2f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6e68f3-76a5-4c5a-9d39-2732e2cb6446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b1e0362-ec3e-4c1f-956a-6be64b641c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec018e2-c473-431e-b3bf-d00872842696",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb90124-c8ca-4b6f-aaab-39096277de55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25404ac-9373-4dd1-aadc-a5ca31a51e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f09a07-3257-4917-bed9-721bf237f602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5369935-80ce-475f-9825-a9d634d4a527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098fc4d2-79b0-440e-9e9e-b068697868ac",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1186c868-f1b3-4c58-8bee-9ec850282130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434c7c66-f648-4253-a06c-e228f12c0cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34900770-0947-4d03-9d4e-e708beb44bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "754b8301-e237-427a-8bf8-12e7e0170c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf40da3-9d5e-4373-8874-8d5e9db69b36",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a168745e-9b79-4e15-8847-eac1eb10ed06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e818cf67-8f28-4a18-96a4-63df64dfb1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa38977-9991-4c6d-bb03-41e053f903dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e43e546c-47b3-4ac0-9b10-2c1dee831c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f96dbe-59d0-4c58-9abb-b3968f367e5d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d8ca50-8ad1-4f40-beca-1ceb6fc5e8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c266268-f770-4478-b7d9-a1922311ddc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a971fafb-ca84-4e4b-a19e-7ee0fcb0ab73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df0e81a3-9a5f-4582-8147-b0bbd9e70c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa31ba5-0116-4192-afb3-bb7672f4fa09",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c776a7c2-452c-43ce-a575-14a26897f26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b6d13d-683f-4d6b-9522-5f1b37f94495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac960c5-9a98-4aa0-8b7c-f75e273c791b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f25366d6-e7e3-4bdb-b92c-af3f5ac09a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440bab95-3dc3-4db1-878c-388c33262b35",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4233bf99-6be1-4095-bc4b-2a9223c7f6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11d06fe-c89a-415f-a757-b86c43e0bc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e155ef2-caab-4fe4-8eb0-d24381c67a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6703e8fa-7a44-4f56-82ca-9b2ac56fc708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cca31da-7c61-4730-b24a-9a36b863e19f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f9ad38-84b8-4ec3-a6f9-7ce8fc00f2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32195a19-f0c9-4a7d-aed8-cd55e433bdc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3138e5-82ee-4f7c-a589-a915ee891482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8232e36-228a-461e-8f1c-bd87f8dd6630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e0d39d-54ff-49e4-a2d5-20f19b9837e1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe6aa3a-2a88-4deb-829a-5d162b403485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6dfbbb-b3be-4464-a412-f7f504c7b780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211dfbb1-799c-44d6-ae86-b2e5654d1664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0b3e47f-1397-4d4e-baa0-27aaf431ce6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0572a5-e2fc-4566-99ae-f937228b6dc4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5406b0-45ba-464e-b7cc-837dd1ddc76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2f4b44-42cc-46cd-ae10-8767cb583160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ecdeda-a3ed-48c2-8b86-342830ad6919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e589d1bf-280f-408b-a947-f318ac650d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6407559-6ff5-4ac2-b239-fd8f94d81d2f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f534af-cf34-46e7-967e-262976df8768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3cbc9c-2433-4674-a55f-e9fc03979b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390a1bff-bb9c-4e5a-a147-3b2e53f44ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a02332bb-8ed7-4676-ab0f-ae1989ae34e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343d0cc3-1037-4a21-8fec-c7917b8e57ee",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96f6d70-3822-437e-9937-5e5f1a356df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41fd8922-1f06-447c-8cb5-960d50bb5e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7d8c07-f759-497b-aac8-6534f56fa95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82d6d645-2e4e-4d70-b8e7-351decd44ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e798db14-ccab-4e19-bb47-ddd5d1fc9477",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d40fe86-6702-4002-b876-7a9a249cbde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d66caf1-bde5-4453-a96a-ce2fbea2e6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed986b9-ea4d-4b39-992f-6e0e8c45cc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "110a5506-b998-49c9-9523-92ebe08a21c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe624786-a982-4d5e-8370-6f9732c24fe1",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062a7538-829a-4cc9-bc40-5d3654c58582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827baec9-bd8a-472b-ab3c-30a7a7c04671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea58626-7a92-4413-825c-56fc404a40e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1cc5eb-ad68-4900-84f7-d7bfb5f3470d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa51a404-e716-4409-b72f-0fedafc18323",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a0c398-7070-4422-94a7-58407aced722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30b32b1-c8c8-46d4-b92a-4cfc9769ab6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e3cac9-26eb-4fbf-80b9-47f533725bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b22f76e0-a0a2-48a8-85a4-4b0cc6e04362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b630fc4c-4c7e-4a7b-98cb-68d162892c10",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3fb384-4ff8-402e-81a3-551fb4e9a7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc1c756-861a-4adb-9f20-7793fcad7a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab6865b-60e2-48a3-892e-d39ee8a69f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "53379a57-8f55-49cf-ac80-3ac9c7c93ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84c0edb-39f4-4895-be83-b1228522a0f5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495b11bf-d17e-492a-a340-b9e9ea7304e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d9bb58-8f8a-4767-aa80-2fd2e47f9565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e701a24d-0f9f-4b3c-85c0-e9043e7479e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04071e19-69d2-489d-9511-fe1be8443f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f2e6a1-2c45-466b-a55f-58a603af3ef4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63f3e33-96cb-46e2-a773-4e7a14537b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f715e0c-5240-41b4-b00b-5a9e9166363d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ad1231-5270-4e39-b657-86a6fc571bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "17955bdf-86be-4074-9b4b-3df4a3d9f209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967d9e02-3bad-4627-9fdd-2a5484b69404",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b161d7b-5dfc-46bf-a185-faf11298fef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0e592d-0646-494b-92d1-8b90615cd6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca9b4a4-e6db-4525-b2de-5919dce27206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2401ca2b-2169-4c7e-90ee-b4bbae34d96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900c7c9d-2be7-48c4-a824-29432a2b60e2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a3f9a0-c441-48e6-9080-7b8e3a0d29fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc35a16-14ea-477f-a792-447baae765ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86353e9f-717c-460d-a2c3-e484dd5cc143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a44cc6a7-304b-40c6-b1ee-09b7b09bcb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3c797b-adce-4ec5-8159-edb651187c10",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6295ff38-0d1c-429d-ae3a-b072ce88b25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb90ce9-86d1-44dc-80fb-ee330def03d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722c8059-1b86-4640-8797-f02435c703d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "057b6b3f-8ac4-49c5-81c7-4e38736331bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbfc026-af4f-4267-9c68-4bc3d5b4bbfe",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebec18ba-f9d5-4d43-9508-bddeca4e10e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da06a150-9559-43dd-b882-953af456d59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9c11b6-5d53-43d0-9672-011e212a2296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b63151ba-9d29-4726-ac0a-a2cffd1125d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cb1b04-d470-4c74-bb41-1eda4c970b04",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d542ead6-fa98-4d88-9508-ed181d465af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e962abc0-b410-459a-bcb0-74c3713b0b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca299d0-6e56-41d1-a26a-fc033b49b743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ffc779-7602-4c15-95ce-34f78d2695c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c6b1ad-5b05-442f-a01c-32fd23633d1a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52c9cb1-23f0-4fdf-9b27-7821c0cfd40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7819f2f-9247-4be7-8d3b-c816e2ed1872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444fb7b7-1505-4707-9086-43865c7a8397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32877710-5a17-468d-816c-d72865c5bf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5831e0-1dca-4c3c-85d5-c02926ab8aea",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb03cb5-153d-40a2-82c4-23979aa90f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71625b1a-a09f-4f8f-9385-2e89092d64de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8f90d1-ada9-46c7-95af-8f8e9b8d95a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8556f4bf-7c64-4fe7-a8fb-81469b62409f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3926325d-68b8-4e72-84f5-d5e470dcb3e1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9d0808-cf7d-4d97-84b5-8274cdd6241e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a894de-d585-49c8-b417-cd17eddf2041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb86bc37-16b1-4ee3-b761-18b8b0a6aef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa3b99a-21af-42e8-a11b-d7c9a599dbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f96608-231b-4f46-a62c-6ad841d4acfb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abdd551-96cd-4876-915e-5be351d2762e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c7c0bb-38e6-461d-8f35-b6134d928401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b146e5e-764e-4583-bbac-bdbc99cfcf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5a688ad1-d744-4c43-a7a3-7e7583b4b9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e545854-d2f3-4f70-8e9f-0e3d70a6d0e1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac16a0ce-e363-4ae9-8b4f-3e27709024c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdbbc1f0-17d5-4524-ac05-adc08d0fe774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bafe5f-fda9-4bd1-a4de-f5a55fbf7df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07fd147e-37fd-4353-9785-7d2de2e8ee49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64f9353-19cd-4296-921b-dee0f76d2761",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46c1037-e1ac-4d82-9c30-31b07f5b423f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55337bfa-f50c-4f29-b11f-6bbabc340c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb162ab-f726-4de8-ba1d-8e6e730e78ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61ffeb14-adda-4ba5-8393-6925d4f322ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b6f9e6-277e-4923-aea9-34765fa88cac",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abdc91f-d83b-4c12-b36b-6e415ea18508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fee26e2-d6f6-4863-86af-8134aa2da812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31804f8e-eb21-459d-9c22-01dfe609d80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "915378e4-8151-4732-be3a-2bb1ee9c882f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df594ec-035b-42f7-8ed7-f421c248ddf1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c25d9ab-30ac-44e0-9866-5c8e59dc9a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ea6165-bde9-486c-bca2-b7603f50c011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394f6b51-8962-4c70-8007-26b6dc827a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a2158f-da97-432a-8558-980df8536356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cc3343-7a28-4730-992a-68c10b37c265",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2966b80f-99cb-4d7f-9334-fc230bfd1e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e490d0-22d7-4e25-a2a0-95b80f71d05c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3aef136-12ab-4abb-bc90-693ef06d456f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c904dc4-961e-4d14-baed-9b65f30cc4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c29cdc6-2ca1-42b3-a824-3a14db82767e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea4730b-b7c2-4d2b-952f-4e3977e6874f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d810b16-3144-4137-88bd-30457e79444b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a267582-482c-43cc-86b2-d1fcea4dcc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f32de454-649b-4527-8d9c-9da4bad5e852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504a2e4c-d7b3-4399-94d0-fb774a2aef70",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09798d62-44fc-4bbb-991b-305f428d682b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76536f64-a305-447f-959d-2ad70d9e4f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206bdb5d-a0a5-466e-b46f-3fd169793c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6ffaba13-93c9-469a-bd86-51d601b305e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f480ec4d-9bf7-42c2-90aa-c5a4be4172e6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542512e2-6aab-4637-9b9c-1efea383b88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffb325e-7f7a-4fa5-a593-ac981b74d8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55eafb9c-af9f-41db-936e-aca82703d14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a85eef91-836c-46cb-be31-7ea085447a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abd795d-1abf-43f9-9364-12ff4285766c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d74b2cd-9783-4ae3-810f-0c3ee6364f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc6c361-1f71-4cd1-90be-2073428b9f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28fff97-bffc-4336-93eb-f704c49a98e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccba878-e402-46f4-a112-1a2f934e5b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de168736-de3d-44d3-8c70-0e0ab7ef41c3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd23f27-5df1-4fd2-84e1-a3766bb3a686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472f9251-8801-4029-8d0e-865c661ac29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414eb81a-c4e2-493d-966f-b11379bf91f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71c660b7-38aa-437e-bfdf-f7e760b289e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ae144e-a9aa-439c-858c-3b0d0db8a262",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5809e655-13e9-471e-8f8d-f54d33a6cd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6369729-8049-4482-8b66-b8ec959fae48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26334e68-b37a-47fc-9ea8-0c1f00425e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc778b33-66aa-4d9b-970d-9810fa2afb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1edbe90-65da-4a47-b5a6-d47d31a96604",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf47981-37bf-4a7e-ac99-00527e65d754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d244977e-85cf-4336-be79-e61bcaa13e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174e624e-e340-4f0a-ba91-b489b1a76e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd91b17-88fa-4937-81e9-45ab1e40abab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3fdfc0-c97f-4799-a891-f89ab76337b2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5af25f-7d10-4a0b-8737-3ea0be3e7eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d241724b-2318-4658-9360-6610915579f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbdfdfa-f909-4698-9a71-ed1afa897f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a28b53f-451a-4c78-8829-016f18a3218c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6313433-2591-44af-bf98-8485be8b4ee0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8f4ba2-dfa0-4c14-b77c-3d70bf7852d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9c393e-fbc2-4bbd-99cc-b344d77f1d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0900f645-03ee-468f-939c-5827570bf151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0956c2-80d4-4175-8264-ed9eae2c66a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7081cc3-0005-4ede-9970-2262569d3f44",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed71819-7d40-463f-babb-9b530606564a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4fd230-0e84-4064-b847-75c0712f0ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e84da5d-3a90-4f9f-b89a-3c061bc807ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8047184-b33b-4ab3-9fa3-3a3d1f64c18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cec1023-409c-4374-a264-aba93b2e5a35",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed4ff18-ca99-456a-87f1-6f3d5e8c5ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244e328a-3214-4793-82ac-2f44b83e5997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c7ae2d-fcb3-46cc-89b3-5aef68361218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "905569d6-e0c2-47e7-a47e-5893a1d54e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65ac149-923a-4eb5-a008-5c52b0d486e0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9217073a-c996-46d0-b00c-5d137029f43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fa1f08-8bf4-4e50-876e-19f01d95a056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc5b6c2-e121-4736-899c-e3b775429e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c3d839-3ce0-4aa2-b44d-5a1947b32124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450d108e-4103-4658-8a4a-955ab7e102f3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af77f100-93c2-44f2-a965-5193403d1544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679788d2-0b10-47d1-abfd-f6430b48687d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a62cfa-35bf-45ba-9288-c67161c00651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c29b9d-0d54-4705-8733-7de23f2b9780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d79482-c2a8-4043-8517-5b309cb088ef",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b598b3d4-4615-4403-ac94-16515da95f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d932595-ac29-4922-844e-e1202bd7d69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ece144-52cc-4cb3-971b-6a22835c1284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a784b69-d61e-4f53-9714-d85044a73310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0441df-1411-4af8-8e9c-d1d085c77a46",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd48df84-7a1b-4eb0-926d-a9f305ccd928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0a4303-6394-4a04-a8b4-1bda2173bc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70617820-f050-43e5-9077-0be512273da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca87cf6c-9c4a-4331-8155-a3205c72945d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a22cbbd-c1ce-41d1-b8da-e7848fe12bac",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7eed840-1b07-4e0d-95cd-d07afde57052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0081ad28-17f2-4d87-b0b2-963a2a0d21b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e78a0a7-6564-4523-8ca0-6afdee777e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "61137680-d02c-4372-9976-091854245c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e340b27f-bc4a-40b5-ba53-478af4e31476",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef80be38-98fb-4721-9f48-4870cfe4235d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff5d65c-03e0-409c-9fe5-7b4249ef99c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a6737c-0324-44ce-876a-e27eda9c001e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f07d06ff-53fa-4358-bfcf-6f47feb8c785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298aebb2-526c-4f30-b4d1-b3207c9a7cc3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8caa9120-efc8-4dda-83b0-c106ac1a9a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e9a12b-55e8-45de-872d-5b1b5b316de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2455989-bad6-431b-9c39-b6418313d809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "79f833bd-5ff9-4b61-8fb8-ecd4e84478f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c3a6bb-cbe8-4831-9498-546e08e987e4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebfa40a-26dd-493b-8538-5f303761d52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154b66c3-1c01-4484-b1b0-4888bd5af4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04753862-fd8c-4fe3-a1da-256a2239cc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4017d2a8-0a91-47ba-a042-81369ab50d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82c8596-14b7-47f6-a647-0dac4844ea02",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3f9800-fd7f-44a7-99ad-a152ccdc4a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04770e8b-4eb5-4f68-8033-755c598be8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806e2dcc-3d07-4463-98e5-75077809fb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a29360d-572e-4d98-9982-9022c1860877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cd04fe-bb27-4072-bb8e-deed249f91b6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f89e554-3906-4ffc-98ea-b45e3e49d64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1613b7ba-2bd1-41e3-bf85-ec63d1263ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8f6868-9717-4d86-85de-7612edb856d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7998b25-8a84-4691-a092-e5b6e004b7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113e7bc0-fe96-4217-b489-6f4dbc389ee5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c3780d-9ad5-4de8-a435-387eef30489f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ba05db-8f15-41a7-85e1-189bbcb6d4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d3c57e-7194-4893-98c2-d1acdd3f87bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7242611b-6e61-40c5-b674-5b0053880a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f8c9e2-08d6-43be-94d5-bf3789328718",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8aee17f-a08a-42d0-9327-51cdf4dc911f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16be51ad-8b51-48f3-a3c8-b7781b389644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276909d6-1369-4bca-97ab-326275b402cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcc5a31-8dc6-4a63-9792-3e79fac3e0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f448a4e-3f1b-47ee-98f1-08e92a2709a2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2a86f6-2089-4fd9-8bfc-fe19e1a67e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6956632c-95c4-4bf1-b152-7e007c0de3cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac94b5b3-3fdc-4a54-b522-aeff0964b9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99327d4d-c8c8-471d-8139-60b2da619559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5fda24-5205-49bd-8876-526cb0e3dfeb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc747df-1b31-44c9-b21b-a02957b11005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438916f2-2ec1-40d3-9471-babaa0fce01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb35f1d1-ed6f-4768-893c-5124a5ddad53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24c8810d-82c5-4282-abc5-fec9d8f6e951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e957c3-e079-49ec-a25e-dfd79c70c549",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6007e7-011c-44fa-89ea-aa3d304b7ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d995dab-d010-4b98-b83a-86ad5d64b4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1c2d49-4687-49b0-a320-86e680197373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5101de31-cee8-45a3-af67-6a4e3a788ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af722e08-1897-4513-92f3-5dc8283b063c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce91c1d5-c0bf-40ff-b5b8-f98adf035e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afd71e8-fabb-48c7-bf4a-437585f8ac30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d320f15-13de-48fe-b8d3-b4e7b7fa89e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59eb79b6-6966-42ff-bfa3-aff4c6bff725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26175d93-1bc5-48e5-9c2f-9a317b090f82",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814e4719-2706-43e0-9a08-d0abeffeaf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc677c7b-afb8-4265-b466-8bcc5861eefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20ca263-33a1-4ca6-80ae-8af414372f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "20368c08-305c-461c-aca6-f8a349df8955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c2d9b3-f138-47c7-891b-af84bdd1f5df",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6634fa-27bf-48a1-88ac-1d9e6a69a3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e419bb45-1611-423d-98f7-69a0fc6f5908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a34a1f0-a499-40f1-9cc1-50c8737b9c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8569be95-16ab-49a4-b46d-91c0602544be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084be4f2-f212-42c3-a298-08bfb68841dc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff95871-5aa3-410e-a5a0-50965f9d6370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92acb84d-17bc-49b3-9ca2-bf19ec53a8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7290f32-ebb2-400b-b2c3-372ece89437c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f694ae2-541a-4f6a-87aa-d8e3bd286a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41abfd3c-f87d-422a-9367-b56d1174a94e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd732bac-7d49-4568-9929-6a739d5aeb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44f0b56-ca20-4221-86e6-7d0e5b8c5e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c8dbd6-0260-402c-bc7d-8b49569d843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa067b5-894a-43f3-96a0-e2ab7eec30cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f16e0c7-0db0-4557-be2f-dbda725cd60e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bbbbc1-9831-4949-9178-28c343bfe805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b0984b-3c12-41c8-a9f2-3572f4b5ff87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ac7fbd-3071-41d9-8386-8509fa535c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66b4cb7f-92a8-4e54-88e9-107bcff659d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9f7377-ea48-448e-bb64-5494e7f60095",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff6c669-009b-4698-9ebe-55a62353c953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50415a7c-5618-4eac-860b-57be9dd9a099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5b8c19-cd94-41d6-9160-c595bae3e2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5719b60-bae8-42d1-9f64-056eac4e2a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569599d7-1556-49f6-a953-e475b3349621",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c340e27-3458-41bd-9af2-2f5f6f0fd25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ab0f02-c52d-497a-9c9e-9ae11e99c156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a6743d-f7e6-4cc8-9ff6-2009bf8fc02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd04889-a8e0-4707-9c08-1be2d9f3547c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aff9058-3f2b-4d94-922a-d4b4532acd69",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225d6ac8-60ff-4af1-804c-5c0366576a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4170dc0-2434-448a-a85f-01b48b16c1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04715a3d-f6fe-4220-84f5-7acaa5cdccec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22499770-ad0e-42c6-8a27-47378b08f4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c95690-38a0-4165-b16a-2ef6e7f08200",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbf6fc2-08c7-41a0-9677-dfd3641fba5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee444e32-ff6a-4210-9975-d93aa8116742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19556fc-e7a8-40f4-b078-0e86da8b8fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee23e3b6-1f98-47bb-b08c-9e9735f9f6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8336e204-2736-4e46-b6de-730a596333e8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3ef0ca-22c2-4585-a9a7-f041b1448e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812db48a-51b8-4fe2-b0c4-eeba35d0e479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782a388c-e32c-4f4c-b7fb-7bb0f9b14a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ede138-f085-4637-aaf8-a25a7abea1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbf2e34-b58d-4541-ad55-83f28e05c16a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438fab90-de90-44b0-89cc-fd0826b5ecbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49865853-57e9-45f8-bcb6-566505c7a231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd315e3-bbf6-40e6-9125-eb99df1057da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "216325fa-7a41-4035-bdd2-d17ee3e4422a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bb29aa-98ee-4534-afc9-88496952eada",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446fbd6e-76c9-46e3-8fec-8c63f9e03a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11d017e-d89f-4ae5-a4ca-4afda721b666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1961e501-b1fe-4b96-afee-88bcd98946be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32ba28ae-4d91-425a-aacb-267f73258aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c93230-0c94-4712-94e0-39e459a56a79",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529b990f-3e31-43dd-9577-3cbb05c920b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e313bc2f-ba8a-48d4-828b-f98efc736051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbff93b-f8bf-4532-8370-961de88901d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df505bcf-c9a9-48d7-b9ca-f89ff589d9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15ecb6f-f17a-4125-a46c-37cacd51ce0f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619f0b48-f4c2-4aa4-87c2-c7f0f4128c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79ad34a-2ae0-45bc-b2f3-32c8bc6d91a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19290ba5-cbd7-4846-b012-013fbbdf0d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd05d0c-b098-45cb-b7a0-d99508169c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b098405a-3f66-4494-b047-cb2403d0b349",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b70d01f-7ed4-49e3-b246-34dfd4e1c015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27e1240-8a3e-493c-9fbd-f80521ecd1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0774f9-d554-41bb-8641-95461972be15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a592900e-ecda-4946-9427-7c4413cb5d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db3fe48-96ec-43b4-9b4b-e186f4bc3da5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a921908c-46d4-47b5-ae22-26ca0e8f5d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839067bd-5200-4a4e-b9eb-cd17e6d1bb57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f8e50f-980d-44aa-9505-75a2acbbfec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "248b3566-5638-4087-85cd-7d0223781829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911e3be9-d457-4004-87fd-32b7d5b53d02",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337a67a7-9cab-4706-a37c-959729a9365e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c340c314-3fb4-41a0-a213-028504e8c57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6e2975-40ff-437e-94ad-fe6b02d99c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df230abf-5a57-429d-8004-c3951002126b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8c51c4-7cb4-40f4-9896-3cc318613f81",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de03dc4-2390-491b-92c7-a66a47739d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17c9b28-5daf-430e-b978-5f7ecdd34ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3a4134-6485-4e03-bfbf-3d6f72eb95a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a000bd99-7625-4614-b3fd-90bf23b2d20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8046ee7a-412a-4c09-93c6-1dd490b6adb4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd830df8-9194-40a4-a7b0-65b2f4f94778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7784b5-0a70-4c14-bcdb-b41f341bbc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eb5c1c-be0c-4154-86eb-a2e9ff83744d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e4a8a0-b8b7-4c0b-b4a3-7aa93a7fe6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2e6664-526c-4dab-977a-e46a9e101ce9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccaeb3e-9fa6-4785-88c8-e16d3836a703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bcf8ae-5fed-49d9-b74e-e5c166508639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47225846-4f98-43c7-afbd-762d4f15b16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "26819542-7239-4f9d-9d68-157edc727cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60127029-b437-4bc1-9b12-a0db38d22d16",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14825a44-b465-4ebe-aa2b-6c476401c5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d39d15-967b-4044-bf24-ff25c3ad3669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfcb8f9-2974-4c8c-ab26-aef8914be477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9220bfc-7cbe-4f21-ac02-164aa640bf4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12af9133-544c-431e-9199-97e82abfb269",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8865303-65bc-46c5-8f26-493b90d2fa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a185bd8-3c6a-4925-96a1-435499116fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9623078-074f-4ef9-b31f-e36e899b2df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2aa7560-74a5-47fa-a5bf-1775421ed7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd81650b-8098-40f4-a754-fe01feb08b15",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd14eb5f-0afe-4cf3-bcef-3df85fa8f753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fed68d3-157a-4b37-a961-a0e3b3167932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c60a7d-2024-4818-833a-3ace9becbe4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "65f1af66-82f4-45fd-8fc1-3440dca763c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217ae228-1e95-4e5c-b1f1-61763e7b2268",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b089570f-962a-46c6-8e00-b2e89d82b88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab8f862-3d68-43c8-ab2c-8f4f17cd108e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca328c4-cefb-48d3-9af8-d3e04d2a0648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a77af8da-fcde-4933-af4f-22c97825f744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9944ca75-66a7-4e9d-8c8b-d3c894bd9f45",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c30c6a-75b3-4605-91f9-6616582adeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f9dc4eef-faeb-4d1e-a754-cdc9db5922ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200aa10c-c271-4899-9da3-5cadb2bc2b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6445fe01-1e8a-4f1b-956c-9bd5cd2b4c54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec0bb3d0-d5b1-47f4-903b-a5a9fed588eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b718580a-b3bd-4d95-9a27-2fea67ed7d63",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678a3842-f8fc-426b-b435-905c200a5d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cef8c193-2164-4bd4-842b-fdfe96de670c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19db1b4-c5b2-40f5-918a-a61b30ee15c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4b2fe52-aa8b-4e95-9fd7-436194039420"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5336b242-ef9b-4d4d-90db-ca6e4adcb838",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b23fe6d-b8de-4c8d-8b36-ca3ccbcb57dc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eedcb85a-dce4-4359-b809-2ffa0cc62e4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "907ceb3c-cc3e-4f48-8266-7a1ef8fd6405"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "28c8bd3f-aa3e-49f9-b413-4104e2d2d8f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2fa1f58-99f6-47d2-b9d7-8008168c6814"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "07053b49-b687-431c-bc4b-166f33723453",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "caf5eead-db07-4d17-b9ef-533bb18be2fa"
                }
              }
            ]
          },
          {
            "id": "bbddef99-f9b7-4ff9-87e5-41a085cb8910",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a9066c2-80f0-473f-870e-5a25c19d408b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36e7990b-5896-4043-affd-3e52963e88a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "523b301d-c4d0-40ec-bf56-7da582883b15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "802c3ea5-130a-43bc-a01e-1b04543ae280",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "834a2359-604d-44f7-a558-7b30411607b7"
                    }
                  }
                ]
              },
              {
                "id": "95edfa8f-af7b-411b-b141-b2b631970570",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1ffed84-49ff-4121-8d4c-3e7625b216e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87653525-d46f-4ebf-bbc7-3c2beca7c47a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61384282-39d3-4ffa-9da7-8049b3d632c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "228136b9-71a5-474b-803f-9687f339048f"
                    }
                  }
                ]
              },
              {
                "id": "2d374800-b6a7-4455-9fd0-1bc850c736f2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c20cd960-7625-43a9-8978-83b53cf7c5bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36f41d45-0084-4c9d-90a9-e9cbd6bb370c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "178c7336-24bd-4578-bf2d-ce313fbb326b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8edfe5a-885a-405e-b72c-eacb176e3f56"
                    }
                  }
                ]
              },
              {
                "id": "fa655893-70d0-4db1-ae84-f60c91d2bb8f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2a430f7-12d0-4a00-b221-3831dbbf20ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e88f4f4-c75d-4f40-8789-35ba848302c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9170251f-6a13-4549-b60d-e5b2498b58d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "662ffea5-52b7-471e-987e-24c7c183b1f2"
                    }
                  }
                ]
              },
              {
                "id": "24d8db01-56e2-4fdd-bb08-f090f1d0367f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "912e028c-865e-477d-8983-b427d09ab586",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4b58e17-08c4-46d2-98de-209a285b729a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1acb7ce9-b67b-4f70-8803-686afe27fb27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fa7950f7-715a-4ff8-b0f2-c5fff7a35c68"
                    }
                  }
                ]
              },
              {
                "id": "2a336f1a-def9-42fd-8b71-10f94540ab53",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fe710be-53dd-49d5-bb43-c965bf774aa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9f0cc4c-7645-4abb-b574-de887f46fc46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0df9d68a-c17d-461c-8990-3db472014c0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "89076767-c2d0-49dd-8314-f1f1aaae8e1f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a4c5cd4f-9bc0-43a3-8fc2-c976bfe07754",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9bfb756-397a-4d3c-9804-f1059609e5cf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "85840d89-0835-4e56-8043-c7f98684cea1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "799bb0fb-a4b3-408a-a6bb-ffde13fd5095"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a42b080-e2bf-44ad-a3ea-4ada560031d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b2ae5be8-f388-4cb3-8362-37d428b275af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fb29dd4-0056-44a5-8b64-2f20447972f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9575a733-1f87-4b1a-bd6d-f6a0c9b1bff5"
            }
          }
        ]
      },
      {
        "id": "26b6cd04-6618-4d81-b796-527a2ef24fbc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "deca37d1-f615-4593-a519-138a23a1c3ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f259ab6-d523-480a-894a-e3b9662059bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "36580ffe-ad9e-4f66-b4f9-481b7f4afe93",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d950ed-2ee2-4263-92e7-f555d511e17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97159a06-dd4b-4fc5-845a-ea636606fe91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c0ee8f-652a-4a77-b5fc-baaa53ef5e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c98b2ee-94e3-49d2-a50c-1530cbf76c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc3bc58-e212-43e1-a706-532eaff2e02a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3798db2d-54f3-409c-ab9a-09e3e68c4a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775a75d8-cde1-4cdf-87a4-055f58b56cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ab703a-7032-42a9-bfd9-40b9fb8406fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "517b1bc8-c824-47f2-b656-237ed1192de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1eb7a90-ed30-40a1-8a6d-8d73e2526773",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9aab4d-ea41-4ee5-b4e4-dd3078af9cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607131c7-fac4-485b-b1ad-09041414d5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45422a73-6683-4c21-a44b-6819866c8f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a18255-5b48-4aaa-aa2f-81c6c2066e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d2e7a2-cc27-404f-9b26-e217fe56c2e5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a083813b-ee0d-4fc3-932c-4b6eec649b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6696cd1-b239-45fd-abc8-65cc772d8d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceee47f8-e233-4b44-ac1e-4108b0eb0afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2117f486-cebf-4910-9e80-7b8f7dd02595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2748c56c-c0d4-4d56-bed1-1181317d0fde",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bb7213-f113-4933-b819-ef99b855416d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283612bb-f38d-450d-8773-642fa2418420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f477ed-f563-4373-8c01-16a04c10779f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e85a4c2e-064d-4386-8441-ef2606867cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4683906c-874d-4783-84e4-23c146d97b58",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca1e9f9-9607-487c-8d93-9a1ddb7a4674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4dfb255-decf-440c-80cb-2e89478eb02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849eed27-404b-48bf-812f-9626b589f2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9579691c-77a9-477f-84ef-98c8a9d855d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784b20e1-bacd-4532-a843-e98e52260230",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904fe9c9-1566-4a6e-86f7-e24bd5f1d126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f100941c-d874-46f6-9592-0f148cf3ab9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4648422-f7f1-438a-be4f-9a7b4ac22814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d279e4d8-178b-4011-8166-03d9ca15bf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119f8648-e45e-43cd-8027-475a6c48ed93",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4efd8f9-828e-47dd-aade-b34aa4217b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47413599-b4d8-4462-8306-dd38d2fd0ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacff7ee-116f-432b-99a2-bcdf15bc56bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5687b652-79b7-48e9-895c-718038b90b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1208491e-b821-4640-89dd-8e02c4d21a8b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629713ea-1d94-423e-9222-88ebcf46c928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9df3cfa-0e41-4e58-9c51-5effa4be88f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be6209a-f9a3-4d99-928b-62b7d88718f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6053f2f-ceed-4fb2-8d73-a38f5f816fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b19856-9500-42ef-a513-c4ba4fa74fb1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62510c00-6a82-44be-a5e5-16934e31d41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148c00a2-2d62-4f2b-a700-17a457eb93e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d2f95d-5eb7-4ecc-9d00-687c205421ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1af100da-10c7-47e9-a45d-1a37a4a3f7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f08cf61-e624-438c-87b8-ff506f5b9ca8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539f2fc4-06a3-42c1-8df0-e13f14a916ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c653ca5-3dee-404b-8b78-9003ac76f479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2179350b-a2c4-41b1-8f66-d6c284cf600f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd715fa-1363-4780-8826-c426b96768a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e89a5e-ede4-4217-917a-bb363d8e7b7e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0286ca4-0522-4ceb-89a4-20edb2df8d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d802fb-88d0-45ba-a4ea-400119e8e65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b861642-703f-4941-9c8b-95eda7dbba10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00e2b98e-b0e9-45a2-81d0-6db74fde0119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb84b505-8926-4a50-959c-244c7dbf9a62",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9345b8a8-0296-451b-9e46-f1dc4d3f3da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fa0b48-f8eb-48ed-b50a-1bf35a6f3b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e701089d-ad59-49ed-a937-5636aede562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5693368-3524-4cfa-bfea-801a70f5b079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c9d7be-82c0-424b-9a65-a17967ef1e74",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8f2654-4339-4874-8fd5-32a8f5a8035d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30242754-976b-4ed0-a367-815b7a3f5835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf679fc3-bcf3-4ba6-b08c-7a7a9f612b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "495f08ac-a82a-4aa1-81ed-17fcfb6a2252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d90ea2-0336-4b45-a2de-28185a692fc6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da27ce4-787c-4c35-af9d-999bcd604fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da79cd86-ba58-46ae-bfcf-0dbfa01b2f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2504b3a9-5374-470f-8eb0-ece6f2db3f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2c8cc8-1929-4055-9837-910185828480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037b535e-5402-4532-9a8c-26c0a8714a13",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fc583e-2222-43b9-9499-8afcd339e466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de34c218-0855-4486-af3b-7f7b496de84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5ea2d7-a483-4d8f-b177-8d378a9d02e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4c9a33-ee88-4f19-af50-6018bba3e00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d15d54-e33c-44ad-9e3e-ab8da0409c52",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddbc282-a3c3-49e5-a2ac-d4e724bcf769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a88e70f-926f-4307-97c0-7039f21506bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58af8b6b-a88e-430d-8e3a-a73228986788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "27b7b05d-f7db-4d11-b50d-47392845e06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed129465-1d9d-4940-b785-c5f60f1079f0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66355635-1e54-4315-971c-c2ec640ae7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba84c63-7cb9-44b6-806f-38902109a609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9730b0a-9c2d-4731-83eb-fb573b5b1b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5405c0e-21d8-4e85-889d-71e25b14556f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a061373-5e4d-4095-aeb8-e6c5071300f9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c4316e-75a7-4019-a9be-6307dbff9424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95668f42-d6a0-4489-899c-395c3cc392a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bb0e86-15b3-45d6-ab46-a294f3f9934a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcddb1b2-a7a8-407f-b216-587f47106444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f2b1b6-7587-470e-85d0-11ab7eb0c83d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f831395f-3b92-42eb-a9d4-ea93d94b1f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70556410-065e-45e9-8165-fb38df9cb90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e69e00-cc6a-43f3-b7dd-c584ab839398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a02c282-baa4-44cb-962f-23136709c819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fedffa-4b56-42d5-b10a-2352d97ce16f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1e1ca1-58ee-478b-85ff-e1e1c7a03916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa769e3-4420-4104-af2e-806dd57857c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db67f39-0f0d-433c-a706-7121e5d4a22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b94913-0d9d-4c3f-acfb-cf32dfe09fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c44db3-7f91-42f4-9d62-70a3f1421d05",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b90fbd-8596-4fad-8c04-8b57d74510e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba32af5-362a-49d8-82b3-9bc46904746f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35905f3e-5374-495f-aa2f-382eacfe67cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc8fb31-f690-433f-b4c3-1bfc0921317e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7630285b-36cc-48e0-8c86-308317954ddd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8528adca-bf0d-47ba-91e6-6aa39d83f0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21d9923-d8e5-4f7c-90a9-6d4e0ba6a61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0db4ac3-4d3b-4f92-981e-9232b7eacf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3a37cc-a9e3-4b8e-8c41-7786f59d96ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a339128b-58a6-4496-9125-9720d5721474",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76ed727-cfe3-43ee-b851-c9d5327b4d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2fba7e-5cb8-4bcf-8f2c-96269d61ec38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e191b162-3ced-4753-b6ca-a5279df1750a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "761a3cb2-752c-40e2-b2f5-70c1adec84db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8800a4b-d563-4df6-a698-a381baa9205a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4e27cf-ad37-492d-8b90-441d3a03fd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e91f28-1e27-4b60-9d14-79362a6068a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba56ee9-e29e-420f-b60b-37eb0dfb1a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e1aad7-cba0-43d3-9f96-50e6c8d8b3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42099887-48a5-4d6d-ade1-00b74eaea27a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865f73ad-e463-4e31-a0d3-3c2e86828def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef28a88-5a99-41fa-a452-2aa6a5e27ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bf6647-5422-4dac-9b00-c3aeca608230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "004d4283-baa1-4641-807f-c86aa4c74100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdebea24-9afc-4c38-9a3c-9595288f137b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3744788d-eb90-4c10-b782-02cbfa95a6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa629972-8333-4a76-86f5-eaff3f2c937c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d61b5e-7081-49f0-b588-775391d54bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26dec2bb-15f7-41a7-9901-7eaa12d7fd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9875976f-8f3a-4ed1-a4ce-b270a297f1cc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a85248-0a37-4788-80d4-5a2d6505a8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6fb00d-444b-409e-a829-cc4ca08b460f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b604130-3365-439e-b311-d5c9c0a0263b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47b12571-522e-43ed-a77f-f8d2f83e5d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34394f3a-d5bf-405d-9350-3294d83fd068",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1f64e4-1523-472c-8d23-d455f9f51349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae22ede-4673-4593-ba52-12f55e6d8af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9feab09-d9e4-464a-a1e4-d776fbea4907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95ae256c-4349-4f25-8662-bed2dbf22cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e8c864-ec4e-47c6-a5a6-cd8e224f21c8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a46ae1-743e-4042-b9b0-7d2420d5b7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3e1bd2-c4d4-4bf8-a91e-fd3d3038d435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c285672a-e149-4f2c-9a2d-852c317fdfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2810fd86-4f88-4b6e-a782-6e8af9b5761d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5684a3-f1e2-48fd-a72e-db1dead382bf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e4d25f-e793-4814-8040-9f97ff69ba12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8adf219d-3faf-4d5e-8222-73578f97b974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe3664d-4ffd-409e-bd10-7c41ac5b8ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "107adaed-0fc0-4609-840d-a69b96fd5637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8196dd-8308-46a0-ae0f-2125bc0d816d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca8745e-da0a-471e-a6b1-226c9d698a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6dc7ed3-ddc3-41b3-8057-c441abb96dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053d5f30-b66c-4d70-a354-0bf9fff1fcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13c25e5d-c7e9-44fb-8905-f7b68904463a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7e60754a-b96a-44a3-b7eb-7f643edcb63f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3849679-ab3a-40cf-a967-340201784ae4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb06111-ff42-4a45-b816-d0bed109ddd4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2696c5a0-2b1d-422d-ad80-25aaa356d9be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce718dc-35e6-465b-ae89-4251034d2cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76b60e4e-0456-4bd9-b7a7-7a9fb551b0c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22d1859c-d53c-42aa-9dfd-de40b267e740",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd5ec1e9-53a7-4966-a65a-0a379ec6821c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56ee1dff-155a-4b8c-aec7-c42efa69fe44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efb63516-453b-42f8-a04f-66c91d548dff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcc98fd1-465c-404c-8532-d892e5f76c38",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ae2d5805-d8e5-4bc3-a674-26da58a22236"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04dee74c-d647-4240-ba74-5506cac218b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13bc8164-e717-40bf-a87e-fe7cfca4713e"
            }
          }
        ]
      },
      {
        "id": "8b87082e-0590-482c-b3be-4ebccbd85a20",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d2f981fb-e2ea-4fba-af6f-4f263bcfd0a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1bbb5b1c-61c9-41e4-ba6c-6c6fd4435214",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e457ec0-d062-4f78-8e1f-5c052ec000f8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c50a781-db1b-4634-9433-9aa175550daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f0566d-f26e-4754-9812-48fc6c94d1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9ac4f9-f7c2-4e5a-a840-b1f03850fdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "093fe4f3-027d-4ad4-b754-40c32f8952e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a031627-6111-4e40-9338-ab2f4d07f6a2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed4ce2f-d069-4ca8-b04d-dfc32ac45606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc5505d-00d2-4ae1-8fe2-94e646ec8452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59adf2b1-1493-4ed6-bb23-bffb947be0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "879e6a2d-b8ab-4369-8fc8-0d08a5d2208a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f501a9-cecc-44e1-9420-8f4d9708ad98",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d741a8b6-6962-4a87-8891-bf5a11fd4f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21dcb4ec-9fc0-417d-9903-551a2cd038ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2c9f2d-6e1d-4772-afb9-b0b9593f07e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8ff0ad-0eba-4736-86d4-d894cebd6e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20408c3-d4ed-428e-be1a-4422bf8d46c3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d816f583-6a17-44e8-a645-5a49514941f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36dd6ac3-ca21-4e24-83a7-6d8ff4196bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a20a89-6a32-4db1-ba4e-7e05b5ce89f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "245124d4-4506-4381-8cb8-30eb82513c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230c86f8-5899-41de-ba0d-2dc22079ca17",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0f0f9c-b80b-4aae-8fe6-b4e83afd0c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a516f0a-b031-403a-9c99-e8b1a0a315a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f65967-a723-4cf8-aead-45601c04e018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32d20db4-c945-415a-b716-c16221f2936b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f2f767-d348-4613-b717-0dd0eb8d8469",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe78c31d-66bb-4bf4-ba76-cbc23dca8dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5a2be2-5da8-4362-b203-2565270b118b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9b669e-f5f3-41f3-9e3b-34ef4b7d8f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d170722d-e377-4809-9c20-bce501b0b9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf498391-20b3-45fc-9967-4a904f513ac2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b1888a-2ca9-46dd-9918-3f3d89a97948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31260aab-ad7a-42d5-a015-bbb2e028fef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953a6b25-4c39-43e6-88c1-7094c61d83ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d54c224d-9c70-401d-8913-d350c31bc703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb9fdbb-be89-431c-a986-776985f7dc17",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ae56ed-c29f-4417-bc9f-37782713ecb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0373454f-b7ec-4ab2-b83e-53359103c56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cca077-815a-4aea-976b-a88e834cddd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea7b8a7-4bcc-4368-94ef-df54f435bdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b15791-2f31-40c8-80a9-6f62de1eface",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14a60d0-8249-4128-a87d-7f807a13551c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b36f40-5c55-49e8-8acd-02c60adb4358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0f9952-ff4b-47d2-904a-f3d2a93145a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e122828e-5453-453f-a98f-678b8360b455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8286c8-9fd8-490c-b6f1-e7762b9df9d1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e82d7da-3d63-4104-be08-e61407a524d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5981d7de-38eb-4ea2-ae2b-c4851534cdfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0716b38-c7cf-4c0c-990d-e307619e0b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcccb9c3-1a74-4cd9-b9d0-cf14fed89f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b812aac-f43c-4b45-8115-360c74593c56",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ad4596-7960-4fc4-b574-d2c016650e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ea697d-012a-4de9-a5fb-52cbcbc54a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde3c80b-2407-41ce-8a97-2e7ae6741ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bdce2ac8-1170-4eed-93bc-749fd4b2009a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c619b1c-8834-47ac-b21b-fa7947f5c9dd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7410a21c-f4c5-477e-a104-3ab43e0bf5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4182526e-1303-48d1-974d-39218cb63016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b845b63-e9c6-4634-baa3-dcc3eeff5bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3e48b5-28b5-4b21-97bf-9f31b90cfa4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5b0136-7470-4a1f-871b-a384b9015568",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e376a70d-6138-47bd-9b8f-2ff01226610f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab64693e-95eb-43f8-b3e7-96b456292524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5720ff47-7ba6-4fc0-88c3-3d1f1582db8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c66dcae4-a591-4b84-b5dd-27f7f6cf2556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3f820b-418f-4f5f-a13a-aaa50bde9da2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b923463-e10c-4788-89a7-dcdd75639764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4685791d-e8bd-48de-b5d1-0b35eb68e3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739cf87d-ba32-4f37-82df-badfd1317cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffdd445-0048-4cbf-bbf2-c74f3b7b82e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7d2a1f-3648-4a56-b9c5-837a9e377c36",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4f722f-2b0e-4a44-b0db-ca4f0ad04678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ba511a-267f-4672-af73-299898e3bbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e666f1-d386-44cc-b349-55a9405658a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fcdb929-7a56-4be2-afd6-115363662be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2d9624-48ec-4496-9457-1f844bb0b76a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4670a8c3-bcc0-4f4b-89b0-5c7eed4ce07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bff3ca-bc73-4629-ba00-836b03ac1c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006d246f-5694-43ae-a3aa-dab535bbd8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "98c44a3e-a749-40b1-b451-6823dec82e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98f86f7-d6cf-4009-ad95-67fad36d03eb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefe68a2-1883-42bd-8ccf-fd84ac71d8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d889e3-30b3-488a-a799-8a986e8d9aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e2826d-e72c-4d86-813c-fa9f652b580c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d075d76-6f81-4278-ad46-2004b866a262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cefcfab-27c7-4650-ac26-6780e3aa6e4d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffb6622-ba3b-4b50-b13d-e266290697dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfea6d20-34e0-4b04-9ed0-7798e0083318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd29fa90-4492-4290-90d0-639f1f110b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fba92d6-9b9a-40ee-a6b1-4ddff33fb401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80b9be1-f1d6-4cf7-b0db-200c0399746d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d579a468-6c76-4d82-9a2a-fae4e855bb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5a76ff-a7a7-47c2-9a4d-56b84013ad67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf10a34-8df0-4a33-a677-157af4269e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0dcfcd-a6bf-46b3-ac1e-920597a5c067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbeee52-81e1-45d1-a2ef-31c0aa5e1979",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d965fa-2e43-4c32-b07c-fac5cf5f5d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7c864c-336a-48f8-a45c-f20731957143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73aa660d-dfe3-4951-8070-bc26ec3a04cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0150f5c-b39c-4d6b-99a3-b8c3de7d0009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a7c7b7-1076-4773-ba6d-379712a27d66",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a297013b-6606-4a2d-8d98-05707a7dd999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d837bf-4b01-41fa-ab0e-a815085b2aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b48e729-bc92-4805-8e5b-fd83f65cf02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f91c738-8100-4fb4-8a41-9430ccdbe55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdebb970-95fb-4403-8355-aa902cda0789",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6404aedb-44b9-4177-a513-40b43bed646c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44798732-2ded-43ef-9270-c03c6f2f1585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b951eb-835d-4f7c-8a62-724310e77ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5355463-7421-49f7-903d-1f9d45a2ef1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b702587-5c8e-47c4-8c2b-495b1af67d9e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ed9e77-f88d-4791-90f7-569f2ae92031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb4bf2b-5eaf-45fc-8040-762b27133b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223f5c25-3411-4aa6-a71c-c1e2d72efe51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "720ec7b0-24e7-4844-893d-a64670ff9428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8599ebe-cf04-43e4-b7ca-aad68a408c90",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ca40d1-ec26-4ae4-955e-f8887e7672a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ef74da-dfa6-4b26-b523-7494b65806e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef21750-36d3-4192-a416-6e3e0ca0ea0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b0334d-f4f6-4f3e-a5e8-55818a772c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1883fa-a554-4162-a593-71ad4a496560",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c973f2d-e750-4c32-a364-1a4e11c4fcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a745f265-2664-4397-a394-77ee36574539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fce555c-404a-49b8-b0cd-80d968526284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "930fd6f4-5e81-4065-a826-cddf8fd9db96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e040a8-f822-4a5a-b51d-5a6ee4ee967a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45474919-0c21-4765-901c-e76ce7e642e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe8c22c-fa0f-433c-bffe-29aa7cc5062b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21aa1a69-30eb-48c9-b3c5-0742ad10e16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "361425cf-207d-449d-abaf-7f79b9a4d20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2cc3ab-3993-4574-a320-5d83b69bd858",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1cc12d-9732-4a42-82d4-10fb1859fb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f1936b-1313-476e-a63d-c156d6b57e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04c6e18-9b41-415a-a7e5-323cd25f30b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b315b1-729e-4ea9-8b28-5103048e1eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6a6a7b-e118-4eff-8110-b69ee6f39829",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0475ce90-c9a1-41dd-b919-3655cb52de74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14080974-d884-40e1-b689-068482684584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2302e2-3797-47d0-97c2-678e39e4d2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "125deb92-6c8e-4bad-ac14-7f8d38cc32ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090e6fb4-f871-4068-864f-845d8d96a775",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2321e62-89a0-44b8-a8eb-5ea65d0f5180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b278fb-91a1-4216-a1fb-d479495a0d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22717e85-105a-4847-ae85-cb78cf37f426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be329d95-5f4f-40f0-b3ee-e690f3dbd10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5b11d3-918a-4a1f-ae35-3e921c2c5f23",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4199576-795a-43c6-a74a-c9e1cc10fea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9688d72c-6e1f-47c3-8c90-3da505f7aa26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a94d83-df1f-4ed5-8633-004d2d4d4fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ade0d24-2fea-437e-aee9-a04d745bf824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d91fe59-9e1c-42d1-b78b-6b914bf019d6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b85a0b4-64ac-4fc8-94d6-92093f77f108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a7363e-ab71-43af-a880-0422631e1532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2719d3d9-6974-46d1-a2a2-38bc6fb0ef6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3de0ba86-e0f1-49b2-a8ad-fe4a3e38218f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c45a5e-350d-4657-b405-f5c269b2409b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934f7117-b63e-4512-bbd1-46854eee3820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7459693a-b042-4e2d-a8d6-f3ec5ff0b4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73372822-ac5a-4423-91e0-06fc16485c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e15a74-98d7-45c3-8a39-2451714eb48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9987919d-1a2b-44dd-aade-19bc5a01e593",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ce5a21-d1e4-4d8b-a971-d4e79cdb2d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d491ce-6f91-4c92-b534-75ca35588081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f63697-8c8e-4f45-bf4a-4b6a08e84094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdec0c89-fb55-49c1-a7d5-30bef6d088b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e45ec36-be4a-4c5e-b52e-7e87a40f1c80",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85832d7c-b73a-492f-94b7-27d0a74cbc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0069749e-497e-44b5-bef8-5c48be2f5377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940e97e9-5e02-41f5-9c0e-70a3af6d2e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "901e76fc-f773-45e6-8cfd-32ee35e2af3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36f7914-6b07-4c1a-9206-7aead8777b6d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0ddf24-4a96-496a-8e47-99704fa7f7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cd6c07-0137-4f1e-b0e6-3c2b09a16918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03db992b-88e0-4bed-b35a-c9a272a2d46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0360af9b-9db6-48c6-b610-2db9a8fd48da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750398b5-cf5a-48bf-8ded-07c81482bc7d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a226f89-5441-4921-8ba1-3ecad515f197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab67de6e-ae4d-47f9-b392-2a5b8c8ca83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0523d3-c38c-4f08-9014-6df34f82e316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cac2354-23d2-4d90-8b82-bfba7b31d105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf29479-52be-4439-8833-7af3a83932d5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9027d866-3517-4999-b280-188cbf555f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19eb16b2-f0f3-449f-9ec1-c57ad45ad21b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056678ba-d5bd-4249-9b86-2c15cf2abd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1d85df-5fc6-41b3-a8e4-c92ae3ebf9d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a79ca22-e894-4730-91ac-a4f736358966",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7822b05b-58ad-46a1-a5e9-64fe886b6da7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1620dbe9-c009-4693-8de7-2203a4cffa3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c60c4670-6aa9-47d9-bbe5-053767d131ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe85af8-7d8b-438b-a320-05ccb073554b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24a0b444-76c3-4f13-b7e0-972cc0d6f2dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73753930-2758-4c01-bb6b-5d26e5f93eba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97f9ad9f-e316-48fc-a662-dcf3ea9a9b89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e981fc62-02c1-4b3c-a653-5825529e936f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4387f31-f432-45ef-a9eb-655dce216921"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cee24914-ab5f-4f2c-b78b-60df242bd5c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c69d3c51-86b1-4bc3-a85c-5b50e39bf62a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e577c65-8b36-4c3e-aef3-950eb471cb54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cda01506-d67d-4b9d-9f11-c20af441a6aa"
            }
          }
        ]
      },
      {
        "id": "561698d4-0464-4399-a21c-934e34644b85",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "be91ab6f-b1b8-4838-9f5b-eedfc4edaeb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c277fbe2-7fbe-4baf-a267-baf62b8ff2e7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f7b9aaa1-5e94-41b0-94e1-e553c102392f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299011d3-805a-45e0-9340-718ba219e7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56066fdb-cd22-48bb-b9fe-7f66088eee09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a7bbbd-1ecb-4b8d-a147-7005511a8320",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f124305d-9caf-4f5f-9045-69c610d56951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ee1354-d525-4a02-a219-f531c2f65150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab651969-8318-4bcc-9f2e-f0f6646a4814",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bd7b91-d533-4f7b-a2cf-f0e936422366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0823a6ee-c9c8-4eac-a2b3-896f7f30acde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e72c91-3dc9-490b-9b32-972a61bb23ff",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561477cf-bd6f-4428-b3ab-d32085f20fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d8244b-13d5-4162-826e-0f7b14bb5bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb70bc5-f62f-4525-b135-dde4a7592f4c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb042dc-0638-47e3-a5a9-46a5625738f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0062120b-7464-48d2-a829-c908cc6e4191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b95503-7ced-4905-aca1-62d3c016034f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6551ea-9d25-479f-91d8-b5800fb56adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0db42b5-26df-4e3b-b303-e9432e173297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac60f5cd-ae66-469e-a07f-16d0eee71a5e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13ce932-f64b-499c-aaa5-86a2a93e7a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b9fb3d-3e77-4090-9ea5-deeff619e75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5476565c-b641-465e-b81d-1579fbf57082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5b1be2-7865-40a2-ad1f-5195b64b0f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e24e81-bef9-4b37-a368-a05228e0af60",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248ecac4-d527-4369-b23e-8f524fc1b465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a22f899-3dac-438b-a2d1-0e3309d70854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5690da2b-c6fb-455e-b501-7978857c71a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "118805ed-f344-4e4c-8fb5-a2f324fd334d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42341fd5-51d3-431d-a76f-694738a5a775",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cc3c36-59f1-4c39-9b74-a428a2077cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6689e30a-0620-4641-b4b7-f1d31538ba86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2dcccb8-9f4e-4af9-b23f-6f0265e0af2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5c35f1-539e-4091-a8e3-8a40e814a51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d229036-d760-4513-abd9-5901ced8c273",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2301e6c4-e544-4410-9b47-be19799f860a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10fb466d-23bd-4268-afc6-1a866bd23b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9e0aa2-4a0e-4fe6-b4ef-8d7a799e50d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114e6242-fe45-4dae-96b2-1a378ecf746c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28fa6a6-4e28-4d5f-a9ae-afe9ca17bd5f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f431d221-b831-4c98-949f-6400b997cccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34b36b3-4b6a-4614-906b-5f385626aff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23293e0-96d5-463b-b29a-b4583843d76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fb9f05-88ab-4987-ae5d-94d4c1950fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ac1adf-7c8b-40e2-bacb-1c6b6820c529",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb47f8b-7a8b-4d44-9519-fdc42fdfe538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea37271c-f251-49eb-90f1-48b2f644348a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab554401-7c35-4e59-9fdf-1ed9fdc85ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bcd70eb-dc98-4cfd-a6c8-c9c9c6108cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a925a7-4459-4a8d-8666-0e3fd7597819",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e397990-2e81-4155-9060-1cfa9b8d7a58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc83eebf-c106-4ac6-816b-ce5a95d9cd9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5e9caf-4a7f-4333-991a-4f6689befc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c449a07-cb4e-4e39-9be7-adcff3067c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4538334c-6bb9-4cc1-8faf-6af96466e244",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7100c5a-1c6a-41c1-aca8-38b816cdb3b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "823e5d93-cce4-4b4c-8f3f-7beab41ca682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ff533c-8bec-4caf-a4f8-a9ad541df6c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d1f990-ba26-4158-9690-8fcb34ce1d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cd57d2-7afd-4b0e-8c39-760b72aff5be",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52a9ceb-5aa0-430e-b975-05a25e26b527",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7ddfdf-3b5e-4a6e-9d9d-8ddd277d3b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b564cdeb-d6e5-4b76-b53a-59378b162922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9351e72-9b99-4ef5-b629-6fc6731c0a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddee0c56-4b4c-4f6b-82c4-9b7f249c24f6",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00bb981-7208-4543-9e9a-29fc01b071e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d38fd85-4be7-427c-870e-54826e6ac3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445c78bd-d5c4-495c-8c8b-e1091e229fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e761850-5fed-4b7a-bff6-283387e8b12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d52b491-b2bb-4d09-8670-3e0d9e7c3530",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5075a2-e8b1-40ed-8561-d3895df10512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e779419d-dd99-464e-9b1f-a2b022c16555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be711b84-e94f-46ca-b41c-7b7638016b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2968cb-c4d7-4ee3-8905-b323be4bb997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa6d7dd-a433-4dcc-8b61-81c6aeb8971e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6c516f-abc2-45eb-a6e4-27abf40a4c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca5fa86d-6964-4ec7-ae77-328d66e896a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf4837a-6248-4e37-b75f-9dcee549201b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9104e6-a758-418e-988d-118823ebc69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7ec886-cec5-4a5c-a821-49f8e943790a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bdbf83-7be0-425c-a5f3-6def3a3f9aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc44bff-c479-4467-ba83-f6a2612cce38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f283e1-bad7-45c1-b96f-e9cf1dfea4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c3b4ec-69a4-430c-8a9d-0de83ddc3b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4332c391-7b32-4628-949f-b1c35a22cd04",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f6e52a-d75d-4534-a7e9-de8b72a63358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af755e6f-6d26-420b-b088-e1cbf7476996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2447db54-3c1b-491e-b908-2e9dd88d661f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96797854-7f83-4eb5-9e73-217d0cb544fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814978f2-e659-4796-b8e3-47e7ac977b28",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c31703d-1224-4301-872a-c03b52c34662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c7e06a-92d7-43d8-89f0-86fd5b3a2a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b907aae-aebd-4fb9-a56a-7aebddce309b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef12237-1668-4f1f-ae2f-4a25bab702a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af92227-3e78-46c5-9cf9-99ff15a9f8f6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5799d5f8-753f-4da2-a530-d883b60d3dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1bdf92-5042-4ce5-a690-c88678f7e318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0433cc-2066-4ab3-84b4-0d927facfb7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f691056a-e655-4bcb-be36-a581b5774c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9f8764-13d5-4ee9-b83c-3bd1ddf33766",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dbe140-1e45-47a5-a2f8-839319889a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19f508f-8686-473b-a0cc-52ae31ec9146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c32682-1810-4e2b-8aa0-6f91e446e231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d028c728-8cb3-4a15-9c11-612ddaa89972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7c6cbf-80d2-456a-b6a5-744c68fdb94b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b924aee9-993a-4142-b136-e56a0923b43b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d886994-30de-4761-b502-c0ca49637391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6457f3-2ff7-4063-974f-563444b2f49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec360668-72c4-49a6-9ac3-aa747ee3befb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cab589-f63b-49e3-9424-32e5bb663058",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132a7bbf-1f52-4624-8596-9303eb93b40b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c98a8791-c1e0-498a-978b-0d124f3301fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4176c0e1-c24b-4532-a21f-1789f4f8937a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f205f7-0b1b-453a-bd4f-665b78194d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee48c4aa-b21d-48e5-b515-46e26c42590c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8d633e-285c-407c-b068-7442b8dfedcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4f822ac-f0bc-4e92-aec3-a8df221e8c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7da18d-f054-44f1-935c-f34327200170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951643b0-8fa8-4403-9726-1bad833cb8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c457bd12-f9a9-417f-a884-d460c6060b88",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f5c858-f04a-43de-89cd-138f6d1a4851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f249c64-0b5c-48d9-8ac9-45eaff63b00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b7b507-d8fc-400d-ac5e-2cd77731e7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da901f7-bdc7-40ba-8810-3532940c4cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed371b31-b686-46a0-b74a-d7cf497eb1c1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68fef7b-94ae-4932-b59c-df890db3dbb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece64299-9f99-409e-a266-4150bf5cee8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f083fbcb-9c70-40bb-90bc-4b07174f72ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3092a9-7ccf-4bec-b0a9-2efbdb13137b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1851e075-f006-4186-9e3e-5ebfbb4b0295",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5d9ab0-4735-4437-8a4d-18fd0d1dba28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "781d63c9-1a1f-4370-b188-28e1fcda38bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d43ebcf-6e20-49da-a487-99728f4a1e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c13b7a8-9928-4e5b-942d-9a268a8e29c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a8936c-18e4-44c1-a20d-186ec3b23e4e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac767948-0937-4b9c-96b2-bd0c2dc112a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84bd4ddd-c7fd-40fe-bf62-3d6270281041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc5cf3b-1ebb-43cd-9e65-a95e209d4f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d34d8b9-fcbe-4e35-a578-48826d8dc310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600a812b-4f9a-4254-98f6-be2ea602dcab",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c5992b-fd41-4c33-9132-5caddf414a51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9760359-f50e-4da3-b6d6-25c41cf7cd45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7afff73-6df0-4110-b083-ccaacc9a2517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9033b077-7abd-4867-a9b9-c679ed993787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b98d5b-d5d8-4549-a13f-0bbf3ea62326",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2647f39a-ad46-40a1-a605-d403d78b5d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a2ff197-564d-43b0-bd53-b44285be388f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5604cd-4f6a-4f24-9c06-d37f834ec96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325c723d-d0dd-4b05-9fff-2b511d8e6b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57833e48-5133-45ce-8f56-90db31f71e3b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ddfcf4-3ef5-479d-bda1-a93a5dfdb882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0862191a-c054-4bc0-9273-dbdb3604a00f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c2b863-ee84-438e-8f43-dab39a34f088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715dd1fb-73da-4de3-8d77-d53c55301a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6629ad71-2048-4929-819b-1ddcfcad107e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc506ce-34f5-4a42-94b7-503bea10af92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e492ecb4-d966-41ae-81de-99e338d41cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfe064e-5369-4a4c-ae7e-d4dad38524a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23512319-041f-4e47-a87d-52992079831d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b945d47-eb90-4202-b5d7-22da4d1df19b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a26ad8-9bfb-4556-9db4-f86fbac1c4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d44cb06-850b-4ec8-af09-c3dec40a3a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "982a79e6-7a69-4c57-902c-7a8a876de6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed112b54-7b75-4b25-801d-ecc4143e2d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43da993-04f4-4622-9831-6cbc9f879412",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d98c09f-0d61-46d4-b80f-d6f07e4033ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29504cd-721b-4558-9ef8-c5eb45585f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bce574-17b5-43bf-87a5-9d190b9cc4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae6f462-406a-4e31-ba21-20bd7517b1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68207e7f-7136-4414-8edd-476426f4b16a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37183ad7-a024-4b9a-a254-94d247dd51f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d428bd8-2171-4883-8bf0-0a66f66dadea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64352132-18e6-4c8a-915d-42215bf83124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49236a26-1a00-4a81-8b90-087d4272bc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b349bd7b-61a1-4995-9f31-13a5a9b1e6a7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027fc054-8c5d-4c9f-a904-751e1c13cf53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab1117e-0fab-4779-8836-e77e64029f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14864376-e501-4c3f-ac99-5894e37c0331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa018595-b439-4876-ad7f-ae2b3009e47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a867cb-7bd6-48a7-a64c-54c4d816fbb8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0375e076-407c-436c-80cc-6b996bc7df07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b993c943-72f5-4d0b-a460-6305c9d314e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adae62b6-0471-4a63-8c1f-9b492c0a4a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effe046d-df94-4935-9024-d6f42e26c617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d8334b-6443-4796-8ae4-75ad30b608da",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0b12c6-df48-4ff4-a716-9f04e34313b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630df0c1-26a4-420c-9f95-43b650845176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c24880-8564-4952-9149-76fbc10faaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f85ff58-e272-41fb-acd6-00ae85943184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28b9ba4-c310-41e0-9b0a-68a0e28d89e4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a867e6aa-0b78-482f-bce5-18931f4b2c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8802861e-ea0c-46d1-9c87-163affc9dcc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dfc162-f83f-4d88-8c14-764843bdd317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e44d4012-d2dc-432c-9398-fe767544be1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96eac297-c22b-44d0-aa8d-45ec71c48122",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632effc7-fbcc-45c7-9758-282d1465f8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f493a74c-ff0e-4524-a439-e887152f7392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0e4cf5-7611-48fd-8af0-0552637ff319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682e3a4c-6716-420a-ab25-5c76b75b7e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c44d96a-0e75-44f1-8faf-f90f4f1ab04e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2b4f43-61d2-4359-adbf-77235102c5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3683dd-4a2e-4355-a898-5b4b7b9e2b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fd05d4-38df-434b-8cfa-41ea11943841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109676c3-8cd8-48e2-9e29-5ec2be0edc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2197211-a3ed-4edb-97f2-4d254aaf9922",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2912dc24-98b3-41ea-a735-b3151fd57418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbca53da-1e2f-4096-bb58-5971c77067f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9d7cad-c430-4f20-a82e-a31999ec4bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634452b6-0b01-4bc2-8ef0-173a414e1ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da49b00-2fe9-40a6-ac9c-689b80d4110e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093017f0-c55f-42eb-92ba-0f6c721613fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4b73f3-f9c7-4d07-9586-8ff45b5d3b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277b4a1f-5948-4e0e-8018-6fd364f89847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56da957b-00ee-4eaa-860b-5ddab698a9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d64762f-a98a-4569-bb67-751d86d37ee5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d168ba7-44c1-4a04-9c59-e030ca0986d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028a0515-89f7-4f79-bc19-7520373483f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5481989a-b41b-46c0-9c7f-2bbb1b19f897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "409f666c-5379-4da5-bdf3-cf86b9215cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e1912d-ef3f-4a40-9607-b9304b16f4c3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea08785-5799-46aa-8bf8-04aa0f4d379a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe1bcab-176d-4881-b2ca-d4bc14546453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2857791b-aa60-4a08-829d-4deb00155096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a735b7-b712-47ca-8a0a-f72e177c02fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c007d8-6c28-4b23-8b86-8bdcc7a8e712",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414479f7-f4fe-4567-9b16-0a2f9d44fb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c4b25c-2268-4d9e-ba5c-1534f3d682a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c977c2-f3e7-4d3c-80f3-8dcf39a24a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6dee45d-28fe-422b-9822-3c6380eb49c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42635830-9086-4f37-8cf5-332d2b83c844",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2170f8e1-5bc9-44b6-9e40-24d4ca8d7c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb2de38-a968-4b7a-ab73-1a59449a795c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb4ff4c-0ef7-4b17-abe8-5e284d848d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb5cc6e-4c31-4e69-b3eb-f129fa0c1822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a0ad29-0c48-4a4e-a650-9f354ad3b911",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71825533-154e-4fe2-b6ed-858f1181f8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f0a5cf-048c-48dc-a616-14e35f98363f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0d53f9-c02d-4ed4-9650-2da84a493cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9eaa50-2ecd-4d1e-b7d1-4521a758db1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c69758-92da-4659-b7d1-95cb50062490",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1565e0-b567-46ab-80bf-aba16c28f5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a82f212-c9e6-4f6c-84eb-e9ca66d3d6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3877f32e-af83-42b3-a7b0-48c5ab80a006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85274ac-72a0-44a0-9f3c-31a662d8b2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253bf9cc-cde0-442c-b8b7-c7be98749423",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cda8f7-a605-4bde-b004-438ddf18fabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2c62ae-ef94-4499-baf2-0376c67ccb37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97f906e-20d8-4a70-a75b-9768b88f461e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001bfb41-b105-4ad0-9c52-0b780e7b8692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db98cdb5-b61a-472a-83c1-e08d4eafbab9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b117f6-c24e-4589-b488-a0fb9f34c945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e215b07-de1c-4ef3-8167-967008f67e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e37936f-029e-4283-ada3-7874cdf7ebaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d86cce-6168-4611-a041-eed0d818d80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3952b8-dd30-4b18-8b33-77489adb2b4b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8188f4f3-4967-4e09-bbd6-30afe95811ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d502a8e7-a4ea-4872-b985-41a01f1f0163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8560809e-c588-4ea9-aa4c-d15ca1ae49cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6ae264-9acb-474d-9d3c-cb84bf059c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a16d24-f1fc-4ced-8904-402bdcc4c1df",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2db20ef-fea0-46af-9c15-89fe6720ec74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46afe3ff-7fd5-40d1-9f63-d0b8feb18011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79118597-2b5a-4c7e-9e69-1931c99eaf65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db1cf21-04d2-4ff3-ba61-ebee6937966d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b581fdb-d0e9-48ef-9952-c7ad59ed98cc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25924857-2958-4f03-a4e7-de357a683310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6fd765-4582-4032-81c6-12252e44b905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dbb284-ef79-4f6c-b360-f36952bbbffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00ca19f-c1ac-433b-bb3b-50507a7e0e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610c87d7-8591-4f37-a1c1-57ccdbfc8106",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca686292-21c3-4046-8422-014f5aba3c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88dd652d-af21-46a5-a1d6-a59e55638b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9279ccdc-a967-4df1-984f-7e94c7dee7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5b1167-f1af-44a7-a3a4-2c2bc08675a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80a5e8a-1891-42b5-a9ba-e3ed914468e4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af695f66-cfda-4de6-8480-cd53591b317b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60573595-b2a2-4eed-b9b0-e1999d55d62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071c8ab2-cec7-48ca-8b88-83f8b599480b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3acda6e3-ef54-47c8-a11c-a08fa8fec53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc31af51-bf83-497a-813f-76e1ee7000a5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4535c3b8-99fc-4faa-bb4c-2f4029ecbb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274ded31-9882-45ff-a584-9ffcdd979601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43780d4a-8f64-44da-af68-cdf078295bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3aaa26-ccad-478b-b09a-c48eea2ac98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc1f6e1-55f3-4f38-ba2f-da0904fde74c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec53929-9c81-4dea-a053-a06abffbcd4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200d19d1-ce30-452a-9f5a-708cb0c67167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64d8a85-be79-40be-ad0b-382338be1ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f34d4b-2629-49d5-9f2f-6854214b9819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00814af-bd70-4936-9f61-a03b93e33c5c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51348505-7432-4a5f-8958-4d3bd4d05589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c091d0-5ace-46db-a62d-5b378b260e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100fd548-4fe5-4e30-bf97-0c2d195ae077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42cbf64-84f8-40da-abd2-1e053b2eafb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16d47d3-7d8f-49aa-89f9-cf5da31b75a3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2f11bb-f93e-4e29-bc0c-1f2182d8f090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3227da7-56b0-43ff-afde-79988be11130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a288fa-3ed0-42d7-8d08-3eda69e72ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ea247e-9360-4c88-bf61-6793afccb336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b15d95-874e-4ad3-b50a-8ab43999e8ed",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2663b68-441d-48ab-adc7-564a45036b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3431f80-5de2-475e-a153-81a3d7df3d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3c1a35-db3f-460d-aaf4-4e1efe840e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf889d3b-af4a-4ebf-b942-60cb13073a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d077afd7-10a3-431f-9867-a9d858c6804c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e525ec27-359d-4121-b3b5-148fdbd65665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0da296-aae0-405a-9398-3fb6962884ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f8d788-4874-4bcf-8212-0675f2ce3856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a184e4-cb5c-4777-8cd2-b0f4bf1b6ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91833d78-0e37-4da9-a7f3-9fd35327042e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa84a4ae-6d9c-425b-87b9-d25ba00d2a31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9ccfdc0-700d-4415-ba7a-e48c7d78bb3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47fbbbf-c1c7-4429-861b-0eab7dc568f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae4c2a4-2845-41c9-9c2d-e9d77ac6cdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49caa651-d988-4591-8b71-670347b95298",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a440c3da-8fb0-454c-a80e-7f6653e26a96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0af24dd2-739d-43eb-8953-6bf45a1d35e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd84994-f28b-4465-9d79-1aa82027a5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b70a44-b18a-442d-939b-1f8fe9ea16ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1292df2e-5b8e-4514-a1d1-e9587d4301b8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9723a8aa-e1a7-432a-a458-17a67fab0fd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca15992-ee1d-43ac-bc5d-bc1a4bdde260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "985fd1ea-c3ff-4643-83f2-1bf1b62c4c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d97eb2-99ff-4c68-97f1-d77f93f69289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343ad3e3-9587-4199-853e-1cbdfa708198",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11255f90-8012-49d7-a056-ae84fba70a40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f612cc1-8fc8-4f38-ae94-7a6ef3622217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586293d5-0c8b-4f0b-ae49-9273a48bbc79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fe68fb-0869-4b11-8179-4ede58001c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bb0084-b692-463a-a20e-efe11669cdc1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ad8704-0438-40af-bc13-12d23e2938af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "657f8d4b-d2a5-4efd-a9f5-bd6cd6c3512f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9429f2eb-63cd-4aa0-9b7d-980d055ede82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f172508e-2cc1-4a55-aac9-ce1306b581c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9243836-f0c6-4a5e-8af2-741a53690668",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff4086e-64c3-4a7b-b45c-337b4b5bf951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc61d4c-a065-428d-84b1-c85927b7ae0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9181151-a14c-4c04-9f06-df8f6d9105dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0770f9-98b8-46c2-bb96-55181d532469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c24b8f-195f-4662-952e-1f364dc63f0b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6242c483-e07c-40a9-b69f-21a6559c161f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5457ccf8-6c44-44c2-a97b-fd728b78dc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b57d2de-b1bc-4a4b-8f5a-3301ad230fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ddc5f0-6157-42e7-b38d-d0de6730174e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9a0b25-161f-4e0b-8848-a49784b0035d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567e88c4-002d-4223-9c72-5db7ef2bbb23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b636a4-33e5-4cd6-a311-ddc4e0bd9122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3035a63-53e9-4b4b-8fdb-d052195178a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5124f84-680b-4658-bcc8-ecaae6e5128c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338fe287-04be-4724-8d25-c024c67ac20b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179617ff-0b28-4c02-a147-f49d3832d02f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd290fa-287c-4ba2-bf57-4f98d5256441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978d0a01-a1a0-4cd6-8253-ef5c42dfd5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2fc0b4-b822-4f95-a30f-81b566cc9b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e466eda-a1a5-4b1c-9e5c-d8a6f70c2982",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9df43bc-3407-4539-b490-2359feff9626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43aa1c44-bfef-430a-a454-fec122f57bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb76dc2f-89c8-4404-aea5-f34c6a69f1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8729a746-5f13-49eb-80fb-f3755e110b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be64dbf1-69da-431e-a200-df00a524a4f3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64537003-2273-4f71-aac4-73a28d62ae27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "181a7e17-666f-4089-9356-3c2eaff95410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7a18aa-75d0-4722-b20a-3949f6327f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329403a1-8e50-4508-93f4-7a3c25cb9499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18501d4f-80b4-4426-872a-a19fa33887ad",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebf5f4c-9b41-4a9a-b57b-50b7c0cd69e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f4d64fb-3f20-4542-9a8f-263dca2ff0ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75458880-6760-4edc-afa3-7f6da846472a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26d16be-90ca-482d-b5f6-6b76e72cdb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b529c19f-4629-4315-8576-bec86c23e2b5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efa1afa-78e1-4590-9664-1c05fbae7e99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3354ba7-2b7a-40a0-9bd9-089facd1c486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d39c12-8e98-4058-baa9-884c0da6dcb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f8c4bb-b439-4575-aa37-eb3783d9c7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60366a9f-88ae-41d9-a5cc-a650e54bbd7e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24de0d0-770a-4eef-8fa2-52902dc5fb99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad7b0914-1976-4400-b2b4-a9fa69d311ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db2133f-c3ce-40f8-b50b-a6a2739e7d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f753d83e-cda7-4239-a10d-43eac99987f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51efc40-dd56-4e68-879c-7c4909d5d55b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1dc3dd-1da5-4756-9a69-112f9b55aedc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c731a68-a535-426d-a9a4-6f37beed0413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647e6c17-39bf-416c-a4bb-b5494297ebd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ad1de9-6cfb-48ca-b4c0-e86ca3b5dd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3636859c-25b8-4864-be6b-a39e83d9d8b0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e65de6-a133-4198-8411-ce2b79d040ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b206108d-0f67-4389-99c5-a142ca85c0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8277ff83-86d9-4286-84fc-86fc20de0840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee94e62-7985-4e56-882e-390e3a6c4624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084bec8a-b1e0-442e-a678-8144cb9fecb4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93253a21-023e-47ba-8e0f-59e55e37aae9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df33fdde-9859-4ea1-8d62-3938ee28f6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abf58af-fb0d-499c-9135-dd841e1fdee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb02d19-596f-46dd-bd76-4bdb34133578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46beb8c-8c47-4cec-8b68-db1fc79f45cd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a00167-0db1-44af-a6c1-0625998a1361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb3e62eb-8be2-40b5-9813-81a015aef7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd440ea-9790-4516-a899-7efafb377132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e812bb-9b1e-426b-88c4-751cd32e93bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79309648-3e90-4fce-960a-b1da7694cf87",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03806c2b-17e5-413b-a168-430ba7bcc832",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff8190a5-faf8-44c3-8df8-57a32301e3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24e2f3e-0787-4958-8543-ded6077d0bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301acd11-308f-41b0-8597-94be242d5885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450faad7-d992-4dd0-a1b2-10935a0870bc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec4c819-871f-4bd5-8d91-56ab75497cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d6aa7f-ffc0-43d1-bf40-c202c86d09f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71c6ec0-fec0-4628-b07c-d87818062bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9130e09c-6628-43db-906d-bcdb856ff069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c19fbbc-1fc4-423a-b480-7f49af59efc6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd97162-6ab6-4824-b556-47963048c596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "489f710e-8fd0-49b5-a1e1-bfbf1324d989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582d9461-96db-4bda-90c2-f9668de1f573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bedf433-b4b6-426b-a9dc-7b6b5680360a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79379c71-13e1-4143-ba59-189cb84b92bb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867cda9c-066c-487e-ac2f-dcfed6ba563c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b540364-4daa-4653-8008-f074de60a830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b53e2f9-a026-4b44-bb94-9a0eaf420daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9219d3e5-b21b-4376-ab91-29e4300797e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc65aa5b-09d7-4ac3-a5fc-a16d1dd9eb27",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed642e1a-a7e3-4b31-bd93-6fb303ff8528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0f521f7-fc70-48b2-b219-e9b8144abb11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b31c4f-5c85-4c36-91b5-6f47b56cd1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b537c6e1-ccf4-48a5-ac49-29b717bda262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1eb86b-5717-4120-822a-25810e747ac6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe29ce7-3ec5-4963-bb8b-b48cf4546f51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76aa6db5-7305-4f59-8c00-43908be6a4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57931e1b-3095-4bd5-92b7-5287fbffea55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c785e366-96ee-48cb-b649-6036cd82b7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d63990-b877-45a7-8e66-2cc75ca5e213",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cf694e-8703-4e24-89f2-07251a70af9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ad9b702-44d6-45f5-8175-022f4fd4532b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f796fdbf-25d8-4e5c-b9a4-a367ec2ed357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c535067-8125-465b-8a2a-f3635428b643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a142a2f4-3972-4fa5-bfc4-7e5926e834f6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d489b8f9-ecfa-479e-aa10-26bff8050e42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00c8cde7-fe5a-4888-9f27-cfb2afdf58c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d4da7f-e88f-4b85-99b8-14f0d901584b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929c9d31-f7ab-479a-845f-dcbd4d2f0664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a6a589-cfb3-4ae5-b74f-4af2a9bcff82",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd394011-50fc-43ba-8555-f3fd07d7b019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6be4cae5-3fa4-42dd-a089-38b7f0287f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef22da3-fae9-4242-b4fa-e694a29eff72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4c7b9f-bd8c-42d6-b561-05f04c1f5026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb0f96a-9601-4922-addc-7f593ff64207",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fa5835-c7a6-4159-9a56-9eaae8e96956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cc724b9-bf17-4ef4-9b74-7159ec529468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b983e046-19e2-45d2-bf79-e395af438735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21413dc8-a877-44fd-8c4c-cbfdfbddb7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8cf211-c923-4068-a2c7-1513799f061f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8e45dc-a45f-4911-9275-dd8490f42dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01bdee52-87b4-4f48-afa9-46ab5fe4d762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9398b114-619b-4940-9c0b-cf4c763f5ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bac6024-e2fe-4e42-854e-9bec5eef44a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b001c45-2836-414e-b741-829e8ad844c8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e881ed3b-090f-4737-8cde-dc48ffde5043",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "856f9e0e-ed00-4fdf-b40d-f9595a58377d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a1985d-4902-4f70-a3c8-bc87a382c837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e53862-1321-42cc-af3a-518e70ad7747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b52f0b-4004-4b52-877d-b87d9b04956b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a911a7f8-e7f5-4abb-b0ae-804fa62061e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28060765-07ff-4632-a866-62e687fff6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8ad5df-130a-4461-ac3f-0fde362f8ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eccf87d-1ada-4434-a1bf-542c48bd6d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4c8cf6-82c6-46e7-8445-2d208222347a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b26f3db-7c6e-449c-9451-8941b26e33cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbba8501-00dd-4076-9bcd-0205b6cd012e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb6cada-32dc-4fa5-9501-7110eb2bf5e7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c176273-4f31-49f2-9cc7-ffed18b74cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a083309-6038-4c14-9a3e-5939747c40e7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e83e88-8152-40e2-93f3-4c8a6089a946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2214472f-1663-4a62-9502-747302d1c2f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29c09b6-7881-402c-aec5-25d72569557c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2786e8-d483-4f03-bf7d-5a3d97dda494"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cf66c3b-e406-462f-b4e7-18ecf5a3ffbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "114516fb-0b31-49df-9177-7d610b8dbcee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99ba191f-b8c4-43ec-9d37-ee993ba1fa74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77f58ab7-98d9-4f68-be8b-814321a54c9a"
                    }
                  }
                ]
              },
              {
                "id": "8d290761-5459-418d-a472-52703173b55d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "254f6e6b-54e6-4dd1-bbc7-5767499ef077",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d8e079-4bab-4ce6-8f9f-385331bd1fda",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "240e8ee0-b71a-4cdd-981e-6cf86caa6d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79fa691-12df-4a67-a77b-bff011c1afa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cad22959-dfbc-4583-ade2-2dae2fbb0ae1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ac23c7c-7510-44fa-abb8-258f66839a12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b4827c3-57de-4a19-ab68-66755ec8a5f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd5a2476-a215-4128-b78e-b4a6c72a2b35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8166861-5c66-4c62-81f8-bcdbef0d2df7"
                    }
                  }
                ]
              },
              {
                "id": "9629dcb8-736e-490d-a3a3-e5659bd728bb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ac636867-6b42-4dc7-b7bb-a6f0217d13f4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d1399a-3d6a-4f5b-86cb-d92be23765c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f0e4a40d-270a-4dc3-af0d-da3ca21e7175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65abd91-7740-4dff-a9e4-a7416382940b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8bdd25-a016-43e2-84b2-d2c90e4aa87d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5f87295b-af6b-4299-952d-4312ebe47873",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9645480-bdd3-4250-8a2b-518258629983",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3347478a-e0b1-4c4f-97b2-7b4d8000c3e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9fe622ab-35e7-4890-988c-51d379d2e102"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c4a5fc8-0b7b-4f15-b93b-224c1988a5dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4844ea43-0936-4cb1-bd12-91b298fca05a"
                    }
                  }
                ]
              },
              {
                "id": "3b94c643-8c62-49c8-95a5-0dfb74b038a0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e0f11db-9e8a-40cd-8d14-1268b3a0046b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7669b253-0233-4bfa-a0a5-7f143f125f67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bafcee3a-3327-4410-8ca0-c540a76b2a6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61db421a-6de8-4be1-a3e2-d3af464c8f4d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01fb06b8-f9c9-42ab-b164-eff79bd3a8c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a6b66b44-fc93-427c-84cd-fcb65285463e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19d19b8a-b367-40a5-91df-c52d97aa2479",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c77823e-194f-4029-b313-2ebe64de986f"
            }
          }
        ]
      },
      {
        "id": "9bbdd2ce-a239-4ea6-8998-e50d978ed68b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5f6445bc-fe08-4479-a12b-713aea8decae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afc659db-791b-4a60-89b8-1396af19a879",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "501ac6d5-4f5a-4301-acaa-7867c336cb3c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c01da3d-f07b-4989-858e-158b8a758a9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0bf8f74c-9710-4f0f-9c85-a7e7abcb8ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570abb34-6d84-432d-907c-51f9caf54179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb2a06b8-6b9c-4713-8779-f1db1981d6ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92b6730a-011b-484b-8445-04eabcb2aef1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9118b155-9c63-4f5a-a06b-7f97eb854992"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fddc07a5-4814-4c98-bc5a-3bc352e611b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "580242a4-c0ce-4941-85cc-e03a5e03d8c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5704408c-74a6-459f-abf8-b1622e1da934",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "322e1965-931a-4232-addd-083a9963dba6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0caf6376-a8aa-45f9-9218-b162ec61cfa7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b60636b-8212-4c9f-a0e2-b453f8e78e49"
            }
          }
        ]
      },
      {
        "id": "9c7056fc-f355-4d17-9812-f5842b3ad8c7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "49a54257-4cc9-40ab-881f-a25a90be80a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "985f2b32-b3ca-479f-bf85-dd3268c55317",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40c85bff-f7b6-4617-8081-0a30a9d7ed78",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f22930-5693-4e2e-ab0f-770119d0f2bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "693f54c4-37f7-415b-9f60-2e16d0e6dbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed2893a-0872-4a37-92dc-03b049d4726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75122730-c5f7-43f0-89cf-e8f8a76a91a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a325c54-f711-44cb-ab16-af913aec9549",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8e5eeb7-715e-4f4d-811c-46b39594145a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9689b3e1-d040-487d-84b5-c66375b7fc31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4a56f8e-e46e-4781-bea0-614a9f18da85"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59678f8e-398d-4d9d-a9cd-26c2f93daae3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9dc9ac44-d846-44c8-81e7-470dcd3af5fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3db1e0e-4bb1-4943-9503-56bb2fe7a176",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ded959f-000e-4e22-aa8c-f4deab7026eb"
            }
          }
        ]
      },
      {
        "id": "63da464a-d205-4c8f-b315-fac63723361d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8a06f486-7279-4045-a781-24c21e141d27",
            "name": "Negative Testing",
            "item": [
              {
                "id": "528822aa-0f93-4bb4-be2e-6916df7d1d14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94648c00-1bb3-4acb-8fb8-b023a333af0c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa7e254-5eab-4dd0-b0b7-acbe92553fca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41bb2e1c-afa3-4f4b-a681-1f550603c9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c571242-ff5a-48df-90af-881f2f12fe68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8719f00d-5544-4c22-b04a-3c0633f05b8b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53ca13a4-0c89-4c36-b8e8-b8d2d3f579cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09c5439c-c8bc-4a43-bb8f-26646fe49bfa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "566d4d8f-85ff-492c-8f01-3efe3bca6919",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa80ba40-5152-4e5d-87c2-a6a231aade81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7884f355-c00d-422b-9647-8cc53db960a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "17d8d8ea-5684-4394-9c8a-2545ba164c33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20bf0580-1da3-451a-91f4-0796d229598b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39ae31d5-f44e-478f-80ea-1231811d71f1"
            }
          }
        ]
      },
      {
        "id": "613a6e4d-d1e7-434a-bc8c-c1b14265f1d3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a15c227-bc3a-4827-b646-62c84c97276b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e78ad7fe-7262-44c7-842e-15c9ccf35bb1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b24efa95-9257-4eed-a480-a99d5a5692ba",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17d6bcdc-e94a-41f3-828c-56d606623183",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7cb9d14-02f5-49ed-9466-7dcd00ff7274",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 311.7394366197181,
      "responseMin": 10,
      "responseMax": 6893,
      "responseSd": 844.3659941676514,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692577912663,
      "completed": 1692578013713
    },
    "executions": [
      {
        "id": "70f3b85c-7024-439d-aab5-a05b16c9328f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d21f6a39-b25c-47d2-9e27-8768cb50e3a2",
          "httpRequestId": "6f6b63f9-4b11-48a6-876d-f0f7d1498983"
        },
        "item": {
          "id": "70f3b85c-7024-439d-aab5-a05b16c9328f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2654a9bc-3e93-43d4-9ba9-886396489fd0",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 0
        }
      },
      {
        "id": "2d6b1a26-60bc-4f6f-b7ee-0380997fa0c1",
        "cursor": {
          "ref": "75b62ef3-3cad-43bb-9a30-731ad9eebdc8",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "04db933a-c1bf-40eb-a0ac-1808d28c98f2"
        },
        "item": {
          "id": "2d6b1a26-60bc-4f6f-b7ee-0380997fa0c1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a9153ca8-49cf-4554-870a-229468fb25d4",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "8a59ef28-7f3d-4e78-a7a9-1497667db08c",
        "cursor": {
          "ref": "c4982929-04ba-4787-ac2b-1c0450883f70",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c1084e1b-f1cb-48f1-a8b3-fd537514c3c8"
        },
        "item": {
          "id": "8a59ef28-7f3d-4e78-a7a9-1497667db08c",
          "name": "did_json"
        },
        "response": {
          "id": "66a75dd5-0194-4d36-abcb-016d5fd73c11",
          "status": "OK",
          "code": 200,
          "responseTime": 1307,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8976d058-20ac-4526-9e92-69588aca2a75",
        "cursor": {
          "ref": "175acf3d-d803-4977-8168-effa8f7ed5ba",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "87f6ddbc-9134-4276-b640-1c44f9b6ec1f"
        },
        "item": {
          "id": "8976d058-20ac-4526-9e92-69588aca2a75",
          "name": "did:invalid"
        },
        "response": {
          "id": "45ec1a5e-305a-479c-a0a2-400f0961c509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8976d058-20ac-4526-9e92-69588aca2a75",
        "cursor": {
          "ref": "175acf3d-d803-4977-8168-effa8f7ed5ba",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "87f6ddbc-9134-4276-b640-1c44f9b6ec1f"
        },
        "item": {
          "id": "8976d058-20ac-4526-9e92-69588aca2a75",
          "name": "did:invalid"
        },
        "response": {
          "id": "45ec1a5e-305a-479c-a0a2-400f0961c509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4def1cb-8cd7-42fb-b609-40dc54a85403",
        "cursor": {
          "ref": "433db89f-58c6-44c0-aaf4-426d71035e4b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "14287bce-298e-468e-98bb-eed44ce302d9"
        },
        "item": {
          "id": "a4def1cb-8cd7-42fb-b609-40dc54a85403",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b503f1a2-564d-425e-9780-cddd9fdf22ee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 348,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5333e4-6b23-416f-887f-afab811ac68d",
        "cursor": {
          "ref": "6be86e01-866a-447e-a91b-ea11d93a1d4d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0f3f8be5-fadf-462c-be69-f3dafdde00f0"
        },
        "item": {
          "id": "fd5333e4-6b23-416f-887f-afab811ac68d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2ca72944-41ae-409d-8820-0f41a0037896",
          "status": "Not Found",
          "code": 404,
          "responseTime": 254,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4115da-5a48-47ff-876d-635264073b54",
        "cursor": {
          "ref": "a98b4a98-7375-41ff-871f-9be0fe3c884b",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e149193e-cd6d-4821-b962-9fdd385f59ee"
        },
        "item": {
          "id": "4b4115da-5a48-47ff-876d-635264073b54",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "382762c0-e8a9-424a-a6a6-7ce04421adc2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96c1206-22e6-486f-849e-e36c0ec0a20a",
        "cursor": {
          "ref": "06688263-dfad-4bf0-bee0-b259495571e7",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9d735136-aeda-49f7-ad29-ac8b6a4eb979"
        },
        "item": {
          "id": "a96c1206-22e6-486f-849e-e36c0ec0a20a",
          "name": "identifiers"
        },
        "response": {
          "id": "ffe4f304-591f-4e8c-8219-219bd5431e3f",
          "status": "OK",
          "code": 200,
          "responseTime": 1232,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70d1544-5f3e-449b-829f-ba7b9698fe18",
        "cursor": {
          "ref": "2196774b-30e7-4fdd-b936-42d27679534e",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "83fea397-fcfd-4d87-8baa-3480cc3484aa"
        },
        "item": {
          "id": "d70d1544-5f3e-449b-829f-ba7b9698fe18",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c4ed2a77-851e-4660-9fd6-96fe7c5cd207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4f5312-75a9-4ce2-8d8d-bef97eabcb5f",
        "cursor": {
          "ref": "b09e2573-e6aa-4c0a-abde-954e05e8d211",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4c603af0-ff50-4624-8abe-b867ddc8be70"
        },
        "item": {
          "id": "0d4f5312-75a9-4ce2-8d8d-bef97eabcb5f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9b2668d2-6ef1-4ed8-88f4-83b2a8fef283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c5fc1e-16b5-40c1-9ae5-ced5536df0b2",
        "cursor": {
          "ref": "1f49a941-be46-4c2a-99b9-97a025855ec3",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "32697adb-82dc-4c96-b8ae-6b503386c644"
        },
        "item": {
          "id": "d1c5fc1e-16b5-40c1-9ae5-ced5536df0b2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bfa73fa2-3a42-4e54-a927-55c6ea93a3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512bc428-463e-4b22-b724-f68dfe28ed9a",
        "cursor": {
          "ref": "3c55bfb4-45b1-416f-a743-72d4697125d6",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8128447c-8d99-46e2-bb20-399c9a08fba8"
        },
        "item": {
          "id": "512bc428-463e-4b22-b724-f68dfe28ed9a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4c94d761-fc8f-484b-83c8-7407550472ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a996fa9b-d34d-457d-aec9-f644eef9a577",
        "cursor": {
          "ref": "73d5a106-dd28-4102-9560-552a880f807d",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e5bffc69-6d3c-46ee-b524-230435bb684c"
        },
        "item": {
          "id": "a996fa9b-d34d-457d-aec9-f644eef9a577",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6fb7aa78-fad7-4ceb-8e91-04c77123bc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd0e91f-2781-4d35-89e8-bb39489f3ca0",
        "cursor": {
          "ref": "15de9529-7e09-45f4-907a-faaa6c70d19c",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "83251cb7-4228-4626-97e0-df6633cf1488"
        },
        "item": {
          "id": "1bd0e91f-2781-4d35-89e8-bb39489f3ca0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d3135364-77fe-4546-a47e-0742abb4f707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f96e48-234b-4923-9dec-c3607bcb024c",
        "cursor": {
          "ref": "65c7970a-8ee1-4e85-a022-4d79faae1852",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0366cef5-8665-4196-b5fa-f2928156589c"
        },
        "item": {
          "id": "e8f96e48-234b-4923-9dec-c3607bcb024c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "be03c8ab-62c9-48b3-8f76-7ce67ec31082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4a2a28-2390-45df-bbc8-0a335603b482",
        "cursor": {
          "ref": "418f595c-347b-409c-a690-e1aeff6806a3",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d324b54d-598d-4640-924d-2873ce3774ee"
        },
        "item": {
          "id": "db4a2a28-2390-45df-bbc8-0a335603b482",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "016b5bcf-55f9-4786-a801-bd660633b26a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaf9cbd-6dca-41e8-a8bb-5249fb22d682",
        "cursor": {
          "ref": "fe5c4168-1957-41f7-95c3-551994b27a67",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b50f81df-9e22-4538-9a86-7fbe8fdfeea8"
        },
        "item": {
          "id": "eaaf9cbd-6dca-41e8-a8bb-5249fb22d682",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3241677c-9ebb-44a9-9097-6123589e6053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec018e2-c473-431e-b3bf-d00872842696",
        "cursor": {
          "ref": "123e8421-3939-4b87-aa50-d6b53c254a3a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ea014f70-eb8c-4be7-b321-861cbf079faf"
        },
        "item": {
          "id": "0ec018e2-c473-431e-b3bf-d00872842696",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "da4c9884-0020-4166-bfcc-17d46ea14a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098fc4d2-79b0-440e-9e9e-b068697868ac",
        "cursor": {
          "ref": "c99f50b6-c2c3-48c3-9997-50b97e643cd9",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "caf3ed7e-9efb-4785-b4b0-eb25061c76a3"
        },
        "item": {
          "id": "098fc4d2-79b0-440e-9e9e-b068697868ac",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0413a9d8-e10c-4a1c-a87e-d8dbb3b76c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf40da3-9d5e-4373-8874-8d5e9db69b36",
        "cursor": {
          "ref": "0b0f9162-5c2a-48c4-8497-08f22cb80ab7",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e7903ae7-6180-4f22-b52d-dea7708d1e2f"
        },
        "item": {
          "id": "aaf40da3-9d5e-4373-8874-8d5e9db69b36",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7ea49b37-4b6d-401d-bc8d-ec328ee9107e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f96dbe-59d0-4c58-9abb-b3968f367e5d",
        "cursor": {
          "ref": "a0e77a80-29c6-4ee0-ac7f-134aefd884ce",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "efffeace-2778-4dc0-aa21-8f3a3df5fe31"
        },
        "item": {
          "id": "25f96dbe-59d0-4c58-9abb-b3968f367e5d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "002403a7-331a-4ab9-b6ed-69527e60df46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa31ba5-0116-4192-afb3-bb7672f4fa09",
        "cursor": {
          "ref": "ba7cdfc2-3584-472b-9835-80d498394abe",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "09a4aca0-666c-4f50-a08e-e9e6c0bbc24a"
        },
        "item": {
          "id": "cfa31ba5-0116-4192-afb3-bb7672f4fa09",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3077baa4-1852-4061-ab8d-4bff8acf2994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440bab95-3dc3-4db1-878c-388c33262b35",
        "cursor": {
          "ref": "b2f265f6-5d75-4fb6-b066-172c310c58ec",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ac3b31e9-b51d-46a8-a4fd-8e93bdfd38ca"
        },
        "item": {
          "id": "440bab95-3dc3-4db1-878c-388c33262b35",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2ea1b73c-3e1b-4b87-af7f-c1e52a110d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cca31da-7c61-4730-b24a-9a36b863e19f",
        "cursor": {
          "ref": "84d9c4c2-58bf-4d1f-b549-795452e87ebe",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9ca1d74d-44a7-4bd1-93a0-6dc766bd764a"
        },
        "item": {
          "id": "9cca31da-7c61-4730-b24a-9a36b863e19f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bed2575e-2aff-4099-9caa-edc356be945f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e0d39d-54ff-49e4-a2d5-20f19b9837e1",
        "cursor": {
          "ref": "eec91d97-db63-46bf-8639-c494335b5002",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7e97c398-4815-4818-a1bc-6fbc9466a41b"
        },
        "item": {
          "id": "a5e0d39d-54ff-49e4-a2d5-20f19b9837e1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "42cce0bf-9ae5-4d48-8df3-f772513428cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0572a5-e2fc-4566-99ae-f937228b6dc4",
        "cursor": {
          "ref": "07d82628-b606-41b6-ace6-45fc23797fc8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e83c6bc8-6706-426d-85f6-89044e529b95"
        },
        "item": {
          "id": "1b0572a5-e2fc-4566-99ae-f937228b6dc4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b2a4ac48-459f-46c5-9545-e51f5f9386c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6407559-6ff5-4ac2-b239-fd8f94d81d2f",
        "cursor": {
          "ref": "47c7af6b-db4f-4df6-a7ba-a5c52c0fc243",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9161bab5-daa7-4afe-9b76-186c8e4f9638"
        },
        "item": {
          "id": "b6407559-6ff5-4ac2-b239-fd8f94d81d2f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "07b5cc90-e92b-4a98-84f6-5847932b66f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343d0cc3-1037-4a21-8fec-c7917b8e57ee",
        "cursor": {
          "ref": "32ceaea8-52f2-4993-b19e-66b837754a14",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ff7346c2-574b-4025-8397-28a4aa7f2275"
        },
        "item": {
          "id": "343d0cc3-1037-4a21-8fec-c7917b8e57ee",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "477fe2ea-a2e2-4217-bdb3-a20ddd88a716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e798db14-ccab-4e19-bb47-ddd5d1fc9477",
        "cursor": {
          "ref": "797223bb-3624-49f1-9fe2-9c12ee64bc32",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7e9830d0-52ce-4f5a-950c-6a9e23c0f0af"
        },
        "item": {
          "id": "e798db14-ccab-4e19-bb47-ddd5d1fc9477",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2ffb2b7c-4615-42bb-bca9-c375fec3b56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe624786-a982-4d5e-8370-6f9732c24fe1",
        "cursor": {
          "ref": "5e572995-22d0-45c7-b088-f60090318f16",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "eae8ef7f-6f0d-4f08-9623-534a6a31c853"
        },
        "item": {
          "id": "fe624786-a982-4d5e-8370-6f9732c24fe1",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0c785273-55ba-445f-9f15-2d952675b17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa51a404-e716-4409-b72f-0fedafc18323",
        "cursor": {
          "ref": "d1ee5fcc-079c-45e7-8924-f2d18906391c",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2e887cdf-49ce-4229-9085-83172dd7af4b"
        },
        "item": {
          "id": "aa51a404-e716-4409-b72f-0fedafc18323",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d27bb7f2-150d-4c81-8e4a-a6499b40eebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b630fc4c-4c7e-4a7b-98cb-68d162892c10",
        "cursor": {
          "ref": "ed9b4463-79b6-4529-b51f-4728c374906a",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4e03835e-e88d-4483-944f-6cd85642d562"
        },
        "item": {
          "id": "b630fc4c-4c7e-4a7b-98cb-68d162892c10",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "02cdd457-3132-4972-bf33-d5a88973dd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84c0edb-39f4-4895-be83-b1228522a0f5",
        "cursor": {
          "ref": "50b81946-8831-41d4-981b-5a7f7557e2ee",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "aa0c8a5b-646b-4593-a9d7-afcde69fc344"
        },
        "item": {
          "id": "e84c0edb-39f4-4895-be83-b1228522a0f5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7c40e8b2-abd4-41ac-8ab9-be0646895efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f2e6a1-2c45-466b-a55f-58a603af3ef4",
        "cursor": {
          "ref": "cda76f29-eee6-4ca9-8a8b-5b732c1f3da7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "773f7703-736c-4914-a09a-6ad780dea4a7"
        },
        "item": {
          "id": "89f2e6a1-2c45-466b-a55f-58a603af3ef4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "31df1034-cef2-47b2-8b22-673297dd4cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967d9e02-3bad-4627-9fdd-2a5484b69404",
        "cursor": {
          "ref": "62892a1b-9c6a-49cc-9f0a-ee3fa10f5bd0",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7fca6015-6ced-4655-a491-d306fa90cc8d"
        },
        "item": {
          "id": "967d9e02-3bad-4627-9fdd-2a5484b69404",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "73a884c5-9479-41e6-97f2-e45124cdb510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900c7c9d-2be7-48c4-a824-29432a2b60e2",
        "cursor": {
          "ref": "8df78c61-1872-450e-a1b7-d9ac7a9cf3db",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "da4b6948-4d0e-456f-96e2-d1bbeb4e3181"
        },
        "item": {
          "id": "900c7c9d-2be7-48c4-a824-29432a2b60e2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ea9c202a-6475-4376-9456-d3324ebe1ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3c797b-adce-4ec5-8159-edb651187c10",
        "cursor": {
          "ref": "d415a34d-5878-49bc-88fe-16e0738d2613",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7de9b7d5-acc7-4f19-9795-f84acb737b7f"
        },
        "item": {
          "id": "bd3c797b-adce-4ec5-8159-edb651187c10",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "125ce53b-3512-404d-a5a2-936e36db207f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbfc026-af4f-4267-9c68-4bc3d5b4bbfe",
        "cursor": {
          "ref": "ed7d8fa0-af70-4e28-95b3-edc89be572fb",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "825577df-5f5c-4bd8-bcb5-671779ddaceb"
        },
        "item": {
          "id": "adbfc026-af4f-4267-9c68-4bc3d5b4bbfe",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "31641349-2586-4b7b-8a04-fdf34d0ce892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cb1b04-d470-4c74-bb41-1eda4c970b04",
        "cursor": {
          "ref": "d81fc3a7-4f0f-463d-8a30-baf25ea17ce5",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "613e8ce6-6388-4f5c-b7ee-3f884cef1e86"
        },
        "item": {
          "id": "59cb1b04-d470-4c74-bb41-1eda4c970b04",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2f138452-9bfe-40a1-8ee6-c6b57e5f897b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c6b1ad-5b05-442f-a01c-32fd23633d1a",
        "cursor": {
          "ref": "d39fd4e5-f2d5-4f73-b17f-025cefebd471",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a58f7855-6af2-42f8-baee-e8f1eb889840"
        },
        "item": {
          "id": "e3c6b1ad-5b05-442f-a01c-32fd23633d1a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6ff689ab-03e8-4181-8100-6eb18d3b8f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5831e0-1dca-4c3c-85d5-c02926ab8aea",
        "cursor": {
          "ref": "cdf9780b-d115-4b50-be2b-b5238fb2de19",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fab2cbe5-5f8b-4f41-96d5-15550fdbd22c"
        },
        "item": {
          "id": "5d5831e0-1dca-4c3c-85d5-c02926ab8aea",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "27d0a348-7fcd-44d8-bd62-23c067092c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3926325d-68b8-4e72-84f5-d5e470dcb3e1",
        "cursor": {
          "ref": "9252ccbb-95d1-42b5-a70b-c678dc8465fb",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2e3387fc-feb6-4e81-b813-b8361e267007"
        },
        "item": {
          "id": "3926325d-68b8-4e72-84f5-d5e470dcb3e1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0c111b3e-a026-4e35-aec0-780de2620236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f96608-231b-4f46-a62c-6ad841d4acfb",
        "cursor": {
          "ref": "3164de78-42ee-46c8-9fe5-9c6ffa8ced06",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d7c70125-ca92-4e35-8740-5972e9012007"
        },
        "item": {
          "id": "60f96608-231b-4f46-a62c-6ad841d4acfb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c9fcf26c-5bf7-4c97-8fc5-e58fd0ca2f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e545854-d2f3-4f70-8e9f-0e3d70a6d0e1",
        "cursor": {
          "ref": "ed2066e2-c541-4de0-b621-086f09c7b9e1",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0f1ee77a-d961-4a09-a759-7d47e487623d"
        },
        "item": {
          "id": "9e545854-d2f3-4f70-8e9f-0e3d70a6d0e1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e2dd17d3-908f-41a9-98c1-6554e78cdafe",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 587,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64f9353-19cd-4296-921b-dee0f76d2761",
        "cursor": {
          "ref": "bcd2592c-204e-4d01-9666-2644b838885d",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "64d7f4b2-9d1e-4f77-a70b-e79bc36233e9"
        },
        "item": {
          "id": "a64f9353-19cd-4296-921b-dee0f76d2761",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f9ddbfe5-7000-4b05-bee9-ffadc87f8c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b6f9e6-277e-4923-aea9-34765fa88cac",
        "cursor": {
          "ref": "a44badd0-1361-4c86-b2eb-0f4e8600a58f",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "953da2fd-3b74-4ed8-9b51-92f7d7519fcf"
        },
        "item": {
          "id": "e7b6f9e6-277e-4923-aea9-34765fa88cac",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c070ff3c-8632-4a72-ac83-bc00eba68eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df594ec-035b-42f7-8ed7-f421c248ddf1",
        "cursor": {
          "ref": "af7490e7-39cc-4358-9bf0-167ce49797c8",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f6f5b054-2d5c-42fd-88d7-c51b0ba6f408"
        },
        "item": {
          "id": "4df594ec-035b-42f7-8ed7-f421c248ddf1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e791a1b3-1063-4508-81a4-3f6e25afbe03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cc3343-7a28-4730-992a-68c10b37c265",
        "cursor": {
          "ref": "4e8cc665-cb33-49ff-b805-4cb9e507c923",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a6cf1d87-02a4-4666-933c-a7f3b58f0318"
        },
        "item": {
          "id": "63cc3343-7a28-4730-992a-68c10b37c265",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "04932d1f-aadc-474d-b6a2-5438800a905e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c29cdc6-2ca1-42b3-a824-3a14db82767e",
        "cursor": {
          "ref": "24cc1d70-4db3-40cf-9ca4-c8f4ba444010",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f08e4186-6ed8-4c94-89ee-ff1c0169fc42"
        },
        "item": {
          "id": "9c29cdc6-2ca1-42b3-a824-3a14db82767e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c056cacb-1305-40c3-b854-de433bd9c972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504a2e4c-d7b3-4399-94d0-fb774a2aef70",
        "cursor": {
          "ref": "a2b4c083-9e1e-4bc6-b936-949ee27b4dbd",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "20fd369e-9d35-48a6-9ae9-4320481f32bf"
        },
        "item": {
          "id": "504a2e4c-d7b3-4399-94d0-fb774a2aef70",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c0d4114d-dcd9-4705-a858-e94ecabdb6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f480ec4d-9bf7-42c2-90aa-c5a4be4172e6",
        "cursor": {
          "ref": "67a6b630-2658-4ac3-a683-dc157b39fe6c",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f08f7e56-050b-4e4a-a4c9-3201f2aead6c"
        },
        "item": {
          "id": "f480ec4d-9bf7-42c2-90aa-c5a4be4172e6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7e92c607-cb8c-4ba9-a3d0-78c325b5c4e6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 577,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abd795d-1abf-43f9-9364-12ff4285766c",
        "cursor": {
          "ref": "5f2792e8-3490-4510-afcf-fc74ea668bc5",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a3c3030b-1b1c-4dab-baa6-c48ef6caec32"
        },
        "item": {
          "id": "0abd795d-1abf-43f9-9364-12ff4285766c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a3eb8187-d59d-43cc-b998-1ec5fc55b8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de168736-de3d-44d3-8c70-0e0ab7ef41c3",
        "cursor": {
          "ref": "4dc7a9dd-b5a9-4314-814e-a35a720ed9c7",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0d0b4cb2-464e-468b-bc77-804db07aeefb"
        },
        "item": {
          "id": "de168736-de3d-44d3-8c70-0e0ab7ef41c3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "278afb74-70ee-4a60-873a-d1486ebe1599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ae144e-a9aa-439c-858c-3b0d0db8a262",
        "cursor": {
          "ref": "e4ee7844-172f-4d2c-9aef-1a8ac6bd6dd4",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d21047ba-b64d-422c-bf60-7de777787fbf"
        },
        "item": {
          "id": "a0ae144e-a9aa-439c-858c-3b0d0db8a262",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "216cac0b-e108-46f9-9688-26107b2edfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1edbe90-65da-4a47-b5a6-d47d31a96604",
        "cursor": {
          "ref": "c1e9275e-be21-4e9f-9743-f8ae3138b545",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "352e906a-0820-4337-bf14-d085ec2f36cc"
        },
        "item": {
          "id": "b1edbe90-65da-4a47-b5a6-d47d31a96604",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1b4d70d1-7742-43bc-a3f1-b3cba4ec7e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3fdfc0-c97f-4799-a891-f89ab76337b2",
        "cursor": {
          "ref": "a689c5ef-79d4-4b64-9035-8db03c7714e4",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6ae96bd3-0ae1-4417-8fc1-48d3f1245888"
        },
        "item": {
          "id": "ce3fdfc0-c97f-4799-a891-f89ab76337b2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c5c3e083-8d79-46c1-b661-69167b1fce0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6313433-2591-44af-bf98-8485be8b4ee0",
        "cursor": {
          "ref": "42ffbe83-dafb-44b0-9593-22e30a25217c",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "52e67515-c046-49c8-9fa4-e32642661ef0"
        },
        "item": {
          "id": "f6313433-2591-44af-bf98-8485be8b4ee0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c9c9d3b3-c896-422f-9599-e154e4ed373d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7081cc3-0005-4ede-9970-2262569d3f44",
        "cursor": {
          "ref": "85aaafeb-d797-4fe4-9c00-075af14bd05d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "963c15bf-d48e-4a29-ba5a-324f407e07db"
        },
        "item": {
          "id": "a7081cc3-0005-4ede-9970-2262569d3f44",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "75ea5da5-58c6-4684-9109-62c3a8d8ac19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cec1023-409c-4374-a264-aba93b2e5a35",
        "cursor": {
          "ref": "f009b0e6-5cae-49d0-af22-5517b09054e7",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8d10f704-369e-40a9-a5d5-a08d59bbfb78"
        },
        "item": {
          "id": "6cec1023-409c-4374-a264-aba93b2e5a35",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ca8c5665-0cfe-4a81-9327-b30acc096e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65ac149-923a-4eb5-a008-5c52b0d486e0",
        "cursor": {
          "ref": "d38dd7df-d273-4dac-a147-72cb66d7590b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3fa0832c-5625-4cdd-9442-94d975066818"
        },
        "item": {
          "id": "c65ac149-923a-4eb5-a008-5c52b0d486e0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "faf3220d-9001-4c8f-9c4a-442c97dbc299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450d108e-4103-4658-8a4a-955ab7e102f3",
        "cursor": {
          "ref": "b33a1139-2e94-45f2-8ba1-9f2b87d4d40b",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bb8054fb-1e11-48e5-baec-ca1ceb22f2e7"
        },
        "item": {
          "id": "450d108e-4103-4658-8a4a-955ab7e102f3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0a90ddbc-a329-4bb8-9cb9-32b8f71c5c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d79482-c2a8-4043-8517-5b309cb088ef",
        "cursor": {
          "ref": "04a2e972-eae7-4252-887e-b637d491fa2a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "627fe02f-1520-4a57-95bd-f854df22e2ad"
        },
        "item": {
          "id": "b7d79482-c2a8-4043-8517-5b309cb088ef",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "12815c79-d9d9-40d0-b9a9-b923b93840cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0441df-1411-4af8-8e9c-d1d085c77a46",
        "cursor": {
          "ref": "cf1baa3d-410e-4747-b171-e04ade9567be",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "126ac04b-3102-4105-b6b9-41e4e42d2970"
        },
        "item": {
          "id": "2f0441df-1411-4af8-8e9c-d1d085c77a46",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ba4f2eb1-9d4a-4c95-b7a4-b3dd98e20e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a22cbbd-c1ce-41d1-b8da-e7848fe12bac",
        "cursor": {
          "ref": "d9f4a184-7aa5-4e0b-9424-9010c6d4be10",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "79228090-60c8-471b-a25b-469b286616d0"
        },
        "item": {
          "id": "8a22cbbd-c1ce-41d1-b8da-e7848fe12bac",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3df799c5-f799-4c69-9fea-361e63349af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e340b27f-bc4a-40b5-ba53-478af4e31476",
        "cursor": {
          "ref": "f8ab2068-9dc8-46d0-a238-59aaace8f1e4",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9377bf05-0c65-4bd5-a8ec-39bfba56db67"
        },
        "item": {
          "id": "e340b27f-bc4a-40b5-ba53-478af4e31476",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7868fa2f-b13b-4e49-ab9c-02113b9f013b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298aebb2-526c-4f30-b4d1-b3207c9a7cc3",
        "cursor": {
          "ref": "3cc684f0-ecbe-47d2-8882-575c111e1e7d",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "506832bc-84b1-48b5-9a64-729b809ea30c"
        },
        "item": {
          "id": "298aebb2-526c-4f30-b4d1-b3207c9a7cc3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cf0a8956-ab4d-417a-9ad5-02b095349c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c3a6bb-cbe8-4831-9498-546e08e987e4",
        "cursor": {
          "ref": "fe80b68e-cc36-471b-9b88-fbe3d0c913d0",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "29693811-daee-4bee-aa89-b121cdc21925"
        },
        "item": {
          "id": "a8c3a6bb-cbe8-4831-9498-546e08e987e4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e674eea2-c718-4d73-8241-8e1fa9b7c8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82c8596-14b7-47f6-a647-0dac4844ea02",
        "cursor": {
          "ref": "455041a1-507d-4e1b-90f0-b587c77c13e9",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5af48fae-3ef2-4635-a62e-4c6eb88059a6"
        },
        "item": {
          "id": "f82c8596-14b7-47f6-a647-0dac4844ea02",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e0be8e04-7f60-4e73-93a9-4081c41b17ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cd04fe-bb27-4072-bb8e-deed249f91b6",
        "cursor": {
          "ref": "156435f5-34c6-4b24-9221-02405709090d",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bae6faf4-1e2f-40b0-9db2-e64cb0cc9b75"
        },
        "item": {
          "id": "88cd04fe-bb27-4072-bb8e-deed249f91b6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "39c2dad2-4624-4ed0-a4c1-d25025e156f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113e7bc0-fe96-4217-b489-6f4dbc389ee5",
        "cursor": {
          "ref": "61616628-3adf-409a-9e61-9d8a22cf00da",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2a0c29b3-6e7d-4770-82ce-75c1fa081c2e"
        },
        "item": {
          "id": "113e7bc0-fe96-4217-b489-6f4dbc389ee5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "25bf2ca4-2adb-4719-99be-9e2a3b932705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f8c9e2-08d6-43be-94d5-bf3789328718",
        "cursor": {
          "ref": "2f07227c-d395-4cde-930c-85d012490e74",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e6293188-185c-46b7-bc57-806dbe218980"
        },
        "item": {
          "id": "13f8c9e2-08d6-43be-94d5-bf3789328718",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b8c87f98-3a69-4166-ba82-b1410ca78318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f448a4e-3f1b-47ee-98f1-08e92a2709a2",
        "cursor": {
          "ref": "c247829d-8a19-4ecb-a2e6-9757986993dc",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "82fb9276-2494-4896-8af4-4087ed57969d"
        },
        "item": {
          "id": "4f448a4e-3f1b-47ee-98f1-08e92a2709a2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "23406690-0a06-4964-aec1-413f7814f38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5fda24-5205-49bd-8876-526cb0e3dfeb",
        "cursor": {
          "ref": "5152715d-7bb0-4b1e-96de-17b738cd9454",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "28f35286-813e-4919-92f1-8e5d344df2e9"
        },
        "item": {
          "id": "0d5fda24-5205-49bd-8876-526cb0e3dfeb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "971f8ddd-695e-46da-9215-030bb8df5645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e957c3-e079-49ec-a25e-dfd79c70c549",
        "cursor": {
          "ref": "963246f5-5c8c-41a8-8a9c-995d31283c4a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a83322dd-07e6-4e5a-abb3-1800f9d14e9a"
        },
        "item": {
          "id": "36e957c3-e079-49ec-a25e-dfd79c70c549",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cf8be284-c0e0-4731-b04c-69daf02b92b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af722e08-1897-4513-92f3-5dc8283b063c",
        "cursor": {
          "ref": "883b8240-4702-4a1d-8b4b-715e05025921",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "08aca5c3-12fe-4e72-abfe-9f2fd585bf37"
        },
        "item": {
          "id": "af722e08-1897-4513-92f3-5dc8283b063c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "58a1823b-c1b0-449e-9e59-73e3fdbb7130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26175d93-1bc5-48e5-9c2f-9a317b090f82",
        "cursor": {
          "ref": "60f8df52-9f9a-4608-8677-6556427d8116",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c998ba2e-3f2c-4283-985a-f91b29d308f9"
        },
        "item": {
          "id": "26175d93-1bc5-48e5-9c2f-9a317b090f82",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "49586e72-31f6-41c7-901b-0aeea53bbb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c2d9b3-f138-47c7-891b-af84bdd1f5df",
        "cursor": {
          "ref": "9317c270-93e6-49f4-aab4-6fb27d4ff0a4",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9c7208b5-6708-4085-ad36-812125a158bf"
        },
        "item": {
          "id": "f3c2d9b3-f138-47c7-891b-af84bdd1f5df",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0e9564b9-3bfa-4c09-8519-76bfea174940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084be4f2-f212-42c3-a298-08bfb68841dc",
        "cursor": {
          "ref": "57d9df72-bcfd-45af-9980-a2cf219f6484",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f44b5d01-0a01-4977-b2d9-0d965cb08cb1"
        },
        "item": {
          "id": "084be4f2-f212-42c3-a298-08bfb68841dc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d7f11ba4-2a41-4785-8c87-bb90bb6d5f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41abfd3c-f87d-422a-9367-b56d1174a94e",
        "cursor": {
          "ref": "a0005755-0372-426a-a89c-deaa72c454a4",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "52f70e8c-023a-4f3b-85e1-167ad18b9e76"
        },
        "item": {
          "id": "41abfd3c-f87d-422a-9367-b56d1174a94e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5bcc539a-3fcc-438c-af64-ac6d47f28113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f16e0c7-0db0-4557-be2f-dbda725cd60e",
        "cursor": {
          "ref": "aee21ac4-24a0-45e0-bf75-878987e221a2",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "58b26795-d8b9-4288-806a-5f5413d759e3"
        },
        "item": {
          "id": "6f16e0c7-0db0-4557-be2f-dbda725cd60e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6cb2198d-2fe8-4a21-970d-0a59306ef23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9f7377-ea48-448e-bb64-5494e7f60095",
        "cursor": {
          "ref": "bd0a6e15-900e-47eb-97f0-da522f12ad68",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1cfb216c-5e99-4334-a110-af9720e192a4"
        },
        "item": {
          "id": "1d9f7377-ea48-448e-bb64-5494e7f60095",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e1cb264d-afc6-4c61-aacb-ac892e2f434c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569599d7-1556-49f6-a953-e475b3349621",
        "cursor": {
          "ref": "45124c37-e5d0-47ae-baf6-fb8c4b474346",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ad87484b-8704-44d9-b7af-fbb37a3a137f"
        },
        "item": {
          "id": "569599d7-1556-49f6-a953-e475b3349621",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "033fa573-caa9-4111-b6ac-c197444f95e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aff9058-3f2b-4d94-922a-d4b4532acd69",
        "cursor": {
          "ref": "5f258115-3fd7-4ca8-a843-1b1a0716c514",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "40194b79-e28a-40f9-9406-2c7bd2a501e1"
        },
        "item": {
          "id": "3aff9058-3f2b-4d94-922a-d4b4532acd69",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3c4dc403-0e69-4c95-b8d8-a906659f1224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c95690-38a0-4165-b16a-2ef6e7f08200",
        "cursor": {
          "ref": "a50c2d36-5e37-466c-b01f-3bfa263e4d7f",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bb9b6fc1-5f4b-4f3f-84d5-b36989f53592"
        },
        "item": {
          "id": "d5c95690-38a0-4165-b16a-2ef6e7f08200",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c5d39294-5d9a-41b1-9d3d-c5fee7b4bfbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8336e204-2736-4e46-b6de-730a596333e8",
        "cursor": {
          "ref": "bc63d092-0a6a-49c6-8b2a-aef3a172edc5",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6a6ade48-43dd-486f-b106-949d56e28f1d"
        },
        "item": {
          "id": "8336e204-2736-4e46-b6de-730a596333e8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a356a513-e97d-47ae-afd1-49825c0e4d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbf2e34-b58d-4541-ad55-83f28e05c16a",
        "cursor": {
          "ref": "fa55cae8-97a4-4cb5-90e0-68477cb61fb7",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bc56412d-a484-47c2-81b7-36fbaa144988"
        },
        "item": {
          "id": "2bbf2e34-b58d-4541-ad55-83f28e05c16a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "63c9ea5f-1020-434d-9310-1dc695ed7bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bb29aa-98ee-4534-afc9-88496952eada",
        "cursor": {
          "ref": "973bbbbb-8f7c-4b95-9b1b-3e94b5a34a89",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7e684dba-25d5-4795-a533-2418399a7489"
        },
        "item": {
          "id": "85bb29aa-98ee-4534-afc9-88496952eada",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e76120f4-a79f-489b-afd0-c2f4486b88bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c93230-0c94-4712-94e0-39e459a56a79",
        "cursor": {
          "ref": "1a686d86-659d-4ec4-b71c-d9f96f4bb1ba",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1dbd1ecf-c4a7-4a21-8e20-4beeba694a24"
        },
        "item": {
          "id": "49c93230-0c94-4712-94e0-39e459a56a79",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "262a23a1-5dc8-4627-bd82-18f7246d3442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15ecb6f-f17a-4125-a46c-37cacd51ce0f",
        "cursor": {
          "ref": "4159ea5f-dd77-4b31-ad2b-8f6a8323fb38",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "34b0cf0e-a898-4433-8bc3-0c944c57f1c3"
        },
        "item": {
          "id": "a15ecb6f-f17a-4125-a46c-37cacd51ce0f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7e621d24-9de8-4880-94d9-6a4086ea35c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b098405a-3f66-4494-b047-cb2403d0b349",
        "cursor": {
          "ref": "aaa6298f-06bc-4c17-8017-875e9e18bea5",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "09da079b-c341-467b-989b-459a361d3232"
        },
        "item": {
          "id": "b098405a-3f66-4494-b047-cb2403d0b349",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "77590e48-c64a-4acd-829f-1bf869c4de09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db3fe48-96ec-43b4-9b4b-e186f4bc3da5",
        "cursor": {
          "ref": "61c8563b-cda0-4366-be6c-1f13dbeb70c8",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "80376895-8a63-40ee-8d4c-88a693dde109"
        },
        "item": {
          "id": "8db3fe48-96ec-43b4-9b4b-e186f4bc3da5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "18e47a9d-a87c-453c-a1e3-6f5e1e3fbfd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911e3be9-d457-4004-87fd-32b7d5b53d02",
        "cursor": {
          "ref": "00e04fe1-517d-4cc2-ae79-80ddf50ef9dd",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "38992931-ccf5-447e-8594-78cb8ef5d8c0"
        },
        "item": {
          "id": "911e3be9-d457-4004-87fd-32b7d5b53d02",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "98184786-1795-49cb-97bb-a4401a8f4125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8c51c4-7cb4-40f4-9896-3cc318613f81",
        "cursor": {
          "ref": "0a1a496e-c25f-4d5d-8a88-6eaf9c01f518",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "badaf1d1-954f-4329-95fa-b98c04e40797"
        },
        "item": {
          "id": "ba8c51c4-7cb4-40f4-9896-3cc318613f81",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "22bcb710-c2c0-4fc9-b7ba-0c7650142392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8046ee7a-412a-4c09-93c6-1dd490b6adb4",
        "cursor": {
          "ref": "702caaa1-62d1-4a43-a3c1-ee2cfa62310f",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8f4a2a65-f923-4b73-b208-4f0a4dc1dcd1"
        },
        "item": {
          "id": "8046ee7a-412a-4c09-93c6-1dd490b6adb4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0c27211e-82eb-4e58-8c30-a78d1ff6a845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2e6664-526c-4dab-977a-e46a9e101ce9",
        "cursor": {
          "ref": "8ebc400a-05e8-435c-ae14-e7b224e703af",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f119de6b-4c74-4226-9d36-38b417f22cc5"
        },
        "item": {
          "id": "bd2e6664-526c-4dab-977a-e46a9e101ce9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3e4460e4-3c57-4f31-a6f6-7b2791c9b322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60127029-b437-4bc1-9b12-a0db38d22d16",
        "cursor": {
          "ref": "44f54d94-59aa-4633-9032-9151fc6b085e",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "29f4dc40-bb5b-4002-a6f9-3fb5f2922d80"
        },
        "item": {
          "id": "60127029-b437-4bc1-9b12-a0db38d22d16",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "021e122c-2ccd-4600-a9fc-e9b16a76910d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12af9133-544c-431e-9199-97e82abfb269",
        "cursor": {
          "ref": "cc4bfc39-6f9d-42f0-910f-cf58072c16b5",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "20421690-232d-464c-a130-8435642576ac"
        },
        "item": {
          "id": "12af9133-544c-431e-9199-97e82abfb269",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "eb20c845-0ace-4341-966b-51c7faeb861e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd81650b-8098-40f4-a754-fe01feb08b15",
        "cursor": {
          "ref": "c5936707-275a-4081-8e97-62f17eb45fd5",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0f017ebb-855f-4c90-a829-c0da191dcd7a"
        },
        "item": {
          "id": "dd81650b-8098-40f4-a754-fe01feb08b15",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fc6fa1ea-5be1-48e6-8b08-108f3e054aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217ae228-1e95-4e5c-b1f1-61763e7b2268",
        "cursor": {
          "ref": "31fa51a1-97dc-4413-b81b-26c774aa6b93",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "733679e3-534e-4e9b-ba70-671ec0961b9b"
        },
        "item": {
          "id": "217ae228-1e95-4e5c-b1f1-61763e7b2268",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "835e17cb-f97b-4673-966f-02c42ae2273b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9944ca75-66a7-4e9d-8c8b-d3c894bd9f45",
        "cursor": {
          "ref": "b4e1600e-7eca-45c4-a971-a881ddca2bd3",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2ae0e5c0-56ef-4dad-acf3-2e0d4f7ff550"
        },
        "item": {
          "id": "9944ca75-66a7-4e9d-8c8b-d3c894bd9f45",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "54471e2d-f627-4aa5-b533-97ad7f45ea84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b718580a-b3bd-4d95-9a27-2fea67ed7d63",
        "cursor": {
          "ref": "feda526c-df11-4bb4-a65a-5ba5a589cbe8",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3420c414-479f-487b-9ddd-eff66b9639e9"
        },
        "item": {
          "id": "b718580a-b3bd-4d95-9a27-2fea67ed7d63",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "662b5ea5-5158-49e4-988b-80c4134b3fe2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9066c2-80f0-473f-870e-5a25c19d408b",
        "cursor": {
          "ref": "0efc9b08-1742-4742-9308-aba811b48e63",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "83279882-09c9-4667-aa4c-c37ec6b5dc73"
        },
        "item": {
          "id": "3a9066c2-80f0-473f-870e-5a25c19d408b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c312d4b7-f6e3-41fa-a259-c7cc479e65c8",
          "status": "Created",
          "code": 201,
          "responseTime": 6556,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "95edfa8f-af7b-411b-b141-b2b631970570",
        "cursor": {
          "ref": "38861d73-9d18-4225-add0-9d55f4a8f2c1",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f799be3a-1681-4715-a8c1-0ae202503695"
        },
        "item": {
          "id": "95edfa8f-af7b-411b-b141-b2b631970570",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "394f864f-9265-4680-bd64-1946b5b513a0",
          "status": "Created",
          "code": 201,
          "responseTime": 6893,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d374800-b6a7-4455-9fd0-1bc850c736f2",
        "cursor": {
          "ref": "9d3565da-03f4-4d28-94c6-a6b5592320de",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1aecb0ae-7617-465d-a58f-6b7deebadcd3"
        },
        "item": {
          "id": "2d374800-b6a7-4455-9fd0-1bc850c736f2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "43199879-d4ee-4887-91e9-d4b926f33292",
          "status": "Created",
          "code": 201,
          "responseTime": 6045,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa655893-70d0-4db1-ae84-f60c91d2bb8f",
        "cursor": {
          "ref": "b5d3ce90-dc5a-4159-902d-71a67a0b2345",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "537d67d7-f73b-41f0-afa2-6e0d1d5839a3"
        },
        "item": {
          "id": "fa655893-70d0-4db1-ae84-f60c91d2bb8f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "76751718-4ede-40a2-b2eb-31df485d3d2c",
          "status": "Created",
          "code": 201,
          "responseTime": 6669,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d8db01-56e2-4fdd-bb08-f090f1d0367f",
        "cursor": {
          "ref": "d0f17ad6-27eb-4626-8d29-5e439f453ddb",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c3dd8bbe-accc-4867-afbf-24d651b96014"
        },
        "item": {
          "id": "24d8db01-56e2-4fdd-bb08-f090f1d0367f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fc3d0186-af0f-4dfd-b69a-51779a326f7c",
          "status": "Created",
          "code": 201,
          "responseTime": 6116,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a336f1a-def9-42fd-8b71-10f94540ab53",
        "cursor": {
          "ref": "8c731161-164c-4612-b685-4c911e91c37e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "177612b9-a13b-43bc-b980-bc906b998ea0"
        },
        "item": {
          "id": "2a336f1a-def9-42fd-8b71-10f94540ab53",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3d41098b-3560-4571-8a59-9e119e59da1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "36580ffe-ad9e-4f66-b4f9-481b7f4afe93",
        "cursor": {
          "ref": "b9e4e47a-92db-4f23-a31c-260e99002d03",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b528116c-e94d-44da-ae45-f639a9f15980"
        },
        "item": {
          "id": "36580ffe-ad9e-4f66-b4f9-481b7f4afe93",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "da0506bf-c11b-483f-8b95-d9de4e9b5063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc3bc58-e212-43e1-a706-532eaff2e02a",
        "cursor": {
          "ref": "18a90d8c-ea71-4763-ab94-8cc9b8bdd9b3",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "23a20a89-eb4d-488d-bf55-fd098cb51876"
        },
        "item": {
          "id": "8cc3bc58-e212-43e1-a706-532eaff2e02a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a4ccc912-8ac8-4dc1-ac5e-c7053b5d25e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1eb7a90-ed30-40a1-8a6d-8d73e2526773",
        "cursor": {
          "ref": "e4cb939d-c3b3-432f-b6b7-eeb107e6baf3",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f19e7039-1940-47cb-9cdc-e5cefb49156d"
        },
        "item": {
          "id": "b1eb7a90-ed30-40a1-8a6d-8d73e2526773",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7f918812-90d0-4cf8-9ae6-d381f7e9e7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d2e7a2-cc27-404f-9b26-e217fe56c2e5",
        "cursor": {
          "ref": "be7bb163-c238-4421-8e4a-4463979e9347",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "00642680-226a-4df5-ae88-f70a40669491"
        },
        "item": {
          "id": "93d2e7a2-cc27-404f-9b26-e217fe56c2e5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0d651986-6018-4a00-8683-fd140e0ec422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2748c56c-c0d4-4d56-bed1-1181317d0fde",
        "cursor": {
          "ref": "9eac98fa-2234-4d3b-8563-1e0d5f229b1e",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e948d315-9412-42fe-aa1c-871e16dce3b4"
        },
        "item": {
          "id": "2748c56c-c0d4-4d56-bed1-1181317d0fde",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b6adde31-6f38-4cbb-879b-76a22388f6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4683906c-874d-4783-84e4-23c146d97b58",
        "cursor": {
          "ref": "a4d6fae2-63f3-4c51-87d8-1229d69be5a2",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a9c12e4f-a2c3-4b00-80de-bbc9caf16ceb"
        },
        "item": {
          "id": "4683906c-874d-4783-84e4-23c146d97b58",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7d1308d8-0039-4896-8db8-48c5e10be390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784b20e1-bacd-4532-a843-e98e52260230",
        "cursor": {
          "ref": "e62ae8d2-673e-421c-828f-8426294b634a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "12c2de99-72f0-4e05-bbc5-5eeb5580683f"
        },
        "item": {
          "id": "784b20e1-bacd-4532-a843-e98e52260230",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a0ce2132-b135-4de7-b167-8b8d88392e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119f8648-e45e-43cd-8027-475a6c48ed93",
        "cursor": {
          "ref": "e042e9fa-20e0-4d1c-bc56-631a63c22995",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9b34c280-df77-4df7-bccf-fcbc1005d69d"
        },
        "item": {
          "id": "119f8648-e45e-43cd-8027-475a6c48ed93",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4ba99cfc-76fb-4359-acce-035b221e2ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1208491e-b821-4640-89dd-8e02c4d21a8b",
        "cursor": {
          "ref": "3203bf0b-c7eb-4e2e-aee0-528685ad3cea",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "98aadc8a-130a-4325-8565-23b883f3add2"
        },
        "item": {
          "id": "1208491e-b821-4640-89dd-8e02c4d21a8b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "57d3a3fc-1f36-44a8-91dd-71e1bc4b2301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b19856-9500-42ef-a513-c4ba4fa74fb1",
        "cursor": {
          "ref": "ed2bce7e-c48e-4e92-8df5-085a066dc76a",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1ac44d50-119e-46b5-a0ef-cb3c307d4a0f"
        },
        "item": {
          "id": "f0b19856-9500-42ef-a513-c4ba4fa74fb1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ba226640-d6df-4371-874a-8cce277f03ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f08cf61-e624-438c-87b8-ff506f5b9ca8",
        "cursor": {
          "ref": "21b1656f-743a-44e6-835f-ca8519b9b2ec",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2a26d108-456a-4f72-b472-feb4602234bf"
        },
        "item": {
          "id": "3f08cf61-e624-438c-87b8-ff506f5b9ca8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3a716214-5894-4355-9a1d-6ad4762ef7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e89a5e-ede4-4217-917a-bb363d8e7b7e",
        "cursor": {
          "ref": "a397f118-a510-4c6e-a914-ed82d48bb6b6",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "19fce1d6-ee9f-462d-8592-27bdbdcdb445"
        },
        "item": {
          "id": "d9e89a5e-ede4-4217-917a-bb363d8e7b7e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d1da4142-fa09-44da-90ba-39bf0e65bee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb84b505-8926-4a50-959c-244c7dbf9a62",
        "cursor": {
          "ref": "8e92de34-d4e8-40d0-b91b-acd886573d7a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "79a9900a-5987-4f55-bd57-e18ef4e464e0"
        },
        "item": {
          "id": "bb84b505-8926-4a50-959c-244c7dbf9a62",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "69b6de4e-cbb6-4247-9e6a-f4854b6444c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c9d7be-82c0-424b-9a65-a17967ef1e74",
        "cursor": {
          "ref": "98c1fb6c-29f0-43df-8403-fc15711a3cef",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f42ceebf-cb23-4c8a-9be0-b81d3aaced95"
        },
        "item": {
          "id": "04c9d7be-82c0-424b-9a65-a17967ef1e74",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "14adcfdb-11f1-4292-8f2c-5e90373dfacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d90ea2-0336-4b45-a2de-28185a692fc6",
        "cursor": {
          "ref": "f0ae8a7b-dfaf-4c05-afe8-5855e563098d",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4d09d7e3-9f95-4d73-881f-16beac8c84db"
        },
        "item": {
          "id": "46d90ea2-0336-4b45-a2de-28185a692fc6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6ad4de89-e103-4deb-8d95-babbfaea63ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037b535e-5402-4532-9a8c-26c0a8714a13",
        "cursor": {
          "ref": "3d4a9ec0-ed56-4731-a09c-84c41d6e3e08",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b7fa777d-07bb-4e48-b430-f4ab4cf6ca8d"
        },
        "item": {
          "id": "037b535e-5402-4532-9a8c-26c0a8714a13",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4a456511-1923-47a3-a29f-c27080c1041d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d15d54-e33c-44ad-9e3e-ab8da0409c52",
        "cursor": {
          "ref": "2befcec4-2dd0-4b85-b873-c98ed8748499",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5be84164-631c-49d2-85fc-90ff666c30e9"
        },
        "item": {
          "id": "17d15d54-e33c-44ad-9e3e-ab8da0409c52",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "552eaec9-2241-4668-9a2e-6426c8bb3003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed129465-1d9d-4940-b785-c5f60f1079f0",
        "cursor": {
          "ref": "f8e76cc4-2c6b-440b-9f8d-fd8506b6161d",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "80334474-5bc0-4396-91ae-58e005665ef3"
        },
        "item": {
          "id": "ed129465-1d9d-4940-b785-c5f60f1079f0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "73b42e07-3bc4-4270-8250-bae56baecd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a061373-5e4d-4095-aeb8-e6c5071300f9",
        "cursor": {
          "ref": "d3f63ca6-ae75-4c7f-9906-dc5ea3b1fd8d",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e6f8e335-8a47-4059-b61c-1be6f1d1c470"
        },
        "item": {
          "id": "7a061373-5e4d-4095-aeb8-e6c5071300f9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c3e431cb-0bff-4fb5-b4fe-2ccf5f99dfb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f2b1b6-7587-470e-85d0-11ab7eb0c83d",
        "cursor": {
          "ref": "3817479c-0485-4461-84a9-139415ee278b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "78beb369-1dd2-4fab-b0ff-4bf9e748b131"
        },
        "item": {
          "id": "72f2b1b6-7587-470e-85d0-11ab7eb0c83d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a3f3eec2-9cf2-47ae-963a-20ed8daa31ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fedffa-4b56-42d5-b10a-2352d97ce16f",
        "cursor": {
          "ref": "e9978501-6971-4514-a6e2-427b4b117b1e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "14e7fc01-8631-452e-ba8c-9616d4e9c1ec"
        },
        "item": {
          "id": "88fedffa-4b56-42d5-b10a-2352d97ce16f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "58ae5b3f-821d-403a-a73e-48b56515837e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c44db3-7f91-42f4-9d62-70a3f1421d05",
        "cursor": {
          "ref": "4a133fb5-efcb-40ab-ad88-cf65f4f37276",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "48251b95-b4c4-483d-9bb1-e7f41b3393d0"
        },
        "item": {
          "id": "e1c44db3-7f91-42f4-9d62-70a3f1421d05",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "97f53ad6-0ca7-4386-902c-877d6af6c0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7630285b-36cc-48e0-8c86-308317954ddd",
        "cursor": {
          "ref": "040e2f33-0bbb-4429-bdc4-59bbd8f80f4b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7f545106-c840-4012-93b4-438c979e504c"
        },
        "item": {
          "id": "7630285b-36cc-48e0-8c86-308317954ddd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b996cc0b-d36c-4417-a1dd-8f2327dfb673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a339128b-58a6-4496-9125-9720d5721474",
        "cursor": {
          "ref": "b0169cb1-f55e-4ea5-a5b8-07439cb3ae1c",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2f900f47-46f3-49ff-b6ef-0334ecf6ce22"
        },
        "item": {
          "id": "a339128b-58a6-4496-9125-9720d5721474",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9e07bb61-dda6-493d-8a1d-9b8f1fa75233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8800a4b-d563-4df6-a698-a381baa9205a",
        "cursor": {
          "ref": "2fb22f20-1ae3-4fe5-9eae-e83182b10166",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "196468a8-70f6-4854-acfc-e97233b9d241"
        },
        "item": {
          "id": "b8800a4b-d563-4df6-a698-a381baa9205a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "31473b5a-fc54-45d1-80ae-48fac286531c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42099887-48a5-4d6d-ade1-00b74eaea27a",
        "cursor": {
          "ref": "6e7eac6d-acbc-4ab5-a059-84436bc0c375",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bd807f82-e14d-449a-a494-4d796645542f"
        },
        "item": {
          "id": "42099887-48a5-4d6d-ade1-00b74eaea27a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "993d18a0-88a3-4fc4-8bfd-1669832d2181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdebea24-9afc-4c38-9a3c-9595288f137b",
        "cursor": {
          "ref": "5f04e816-a82c-4d28-b9b6-732c2b0c4f7a",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8d549555-4a8d-47e5-a130-2f8640f7fd0c"
        },
        "item": {
          "id": "bdebea24-9afc-4c38-9a3c-9595288f137b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "05d00263-ca21-45ad-af0a-525f92984825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9875976f-8f3a-4ed1-a4ce-b270a297f1cc",
        "cursor": {
          "ref": "0686d75d-de99-4277-aded-310d30a7a716",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2685da84-398a-449f-b4a3-7e4938d90c48"
        },
        "item": {
          "id": "9875976f-8f3a-4ed1-a4ce-b270a297f1cc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "011d63be-2f57-4412-a923-5651c285acab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34394f3a-d5bf-405d-9350-3294d83fd068",
        "cursor": {
          "ref": "d7d056b8-10e8-433a-ac31-0684fcb7824b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c2c8d497-df60-465b-900d-58ca0f450880"
        },
        "item": {
          "id": "34394f3a-d5bf-405d-9350-3294d83fd068",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f796e02e-8266-463f-9db5-b9bdeb0b9f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e8c864-ec4e-47c6-a5a6-cd8e224f21c8",
        "cursor": {
          "ref": "1febd9a1-9c54-464a-b5c0-a4525d0a12b0",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "97843584-fc24-4ab9-adca-4c58fd4982d4"
        },
        "item": {
          "id": "27e8c864-ec4e-47c6-a5a6-cd8e224f21c8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ce135f3b-f2a8-4587-80dc-0f1a1e132cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5684a3-f1e2-48fd-a72e-db1dead382bf",
        "cursor": {
          "ref": "614c4059-dfbd-445c-a3d0-f39e0a898d3c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "98d29511-dc86-4813-8ac2-686d44fdbfec"
        },
        "item": {
          "id": "3a5684a3-f1e2-48fd-a72e-db1dead382bf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cd4e5a35-fb46-4b85-b15e-a7ddbda358dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8196dd-8308-46a0-ae0f-2125bc0d816d",
        "cursor": {
          "ref": "84240fbd-46f8-4ae4-97c5-81202fc7da73",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "68c4ec32-e47a-47fb-88dc-b412630ad794"
        },
        "item": {
          "id": "8c8196dd-8308-46a0-ae0f-2125bc0d816d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8d71c765-f733-4670-ab12-fd8406907253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3849679-ab3a-40cf-a967-340201784ae4",
        "cursor": {
          "ref": "8dc718a7-c699-451e-8ce5-bf1a75159c08",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c43ccffb-f054-4587-ad2e-9acc4a475ed5"
        },
        "item": {
          "id": "c3849679-ab3a-40cf-a967-340201784ae4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3f27d272-3ce2-42a7-b450-516603337146",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e457ec0-d062-4f78-8e1f-5c052ec000f8",
        "cursor": {
          "ref": "bb63a79b-2b4e-4e56-9dd8-88c09450bd7d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a8512d55-b16f-4828-95cf-1e7640d8f79e"
        },
        "item": {
          "id": "8e457ec0-d062-4f78-8e1f-5c052ec000f8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7e15ca31-c57b-477e-9b30-a68cb8fa1a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a031627-6111-4e40-9338-ab2f4d07f6a2",
        "cursor": {
          "ref": "5bd742e4-df2c-48c3-b7fa-0e627d7845eb",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6fcda0de-ca60-4ae2-ad97-af4c4ce68752"
        },
        "item": {
          "id": "2a031627-6111-4e40-9338-ab2f4d07f6a2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7b64f2c0-8909-451b-9d6c-49d7418523b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f501a9-cecc-44e1-9420-8f4d9708ad98",
        "cursor": {
          "ref": "04383658-a663-48f9-926a-81b75b48867b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2e67849e-c6c0-4307-9f7f-e48d4ca38e74"
        },
        "item": {
          "id": "f6f501a9-cecc-44e1-9420-8f4d9708ad98",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6d230cc4-94e1-41aa-b7c6-6e55e2bd0d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20408c3-d4ed-428e-be1a-4422bf8d46c3",
        "cursor": {
          "ref": "7f081927-133a-48a6-a87c-4435acd7626a",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3bca9ad5-f50d-4e0a-87f0-98f66717d946"
        },
        "item": {
          "id": "d20408c3-d4ed-428e-be1a-4422bf8d46c3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e1797bc1-4010-469b-aee5-d3639a3861cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230c86f8-5899-41de-ba0d-2dc22079ca17",
        "cursor": {
          "ref": "6253dae6-b13c-41b7-9544-b064bb03383d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bfc41a6d-0a5a-4b0d-a5ea-8d07538ba041"
        },
        "item": {
          "id": "230c86f8-5899-41de-ba0d-2dc22079ca17",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "78a617ec-02f3-4b6f-9ef1-806d1b6f0b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f2f767-d348-4613-b717-0dd0eb8d8469",
        "cursor": {
          "ref": "5f9c93b3-5259-4ebd-a2bb-d188762f3e7b",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8f91a4b8-03b7-4932-82a6-7de3d87b631c"
        },
        "item": {
          "id": "12f2f767-d348-4613-b717-0dd0eb8d8469",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "aca885d7-67f8-4505-a3b3-ae2aab455caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf498391-20b3-45fc-9967-4a904f513ac2",
        "cursor": {
          "ref": "774072d2-2ce6-4c95-b856-5282af668573",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e5c72b04-ec21-45ce-a7ad-17cc75b34172"
        },
        "item": {
          "id": "bf498391-20b3-45fc-9967-4a904f513ac2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5a216a42-61b7-41ec-a3da-b6656d5dad1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb9fdbb-be89-431c-a986-776985f7dc17",
        "cursor": {
          "ref": "823a254e-bb9d-446e-a3ec-178dc2f61785",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3ddd6c21-503f-4258-aec5-e62f961c5c1b"
        },
        "item": {
          "id": "7bb9fdbb-be89-431c-a986-776985f7dc17",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "07778db0-4d48-4c05-b164-1ae689f2d0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b15791-2f31-40c8-80a9-6f62de1eface",
        "cursor": {
          "ref": "ecf378ed-b9bd-4199-8f80-503df24e8f78",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5d10bc1f-0900-4c59-b54f-76e7b7084c4a"
        },
        "item": {
          "id": "51b15791-2f31-40c8-80a9-6f62de1eface",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "45d0e2af-2087-431c-b9e6-db38fa0cc9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8286c8-9fd8-490c-b6f1-e7762b9df9d1",
        "cursor": {
          "ref": "726dfcb3-b803-4a1f-a2a8-b5b6fbd7c600",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "30eccf6e-29af-4525-b15f-fb9323f47df1"
        },
        "item": {
          "id": "ce8286c8-9fd8-490c-b6f1-e7762b9df9d1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d9e29a31-279a-4517-b772-49a5c4ce478f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b812aac-f43c-4b45-8115-360c74593c56",
        "cursor": {
          "ref": "9cf1031f-05d0-4f95-9c01-15821274c679",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6637883b-8411-4d48-b502-573df9d5a923"
        },
        "item": {
          "id": "2b812aac-f43c-4b45-8115-360c74593c56",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c9a37ffb-5794-4b09-8298-0b7f620a7602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c619b1c-8834-47ac-b21b-fa7947f5c9dd",
        "cursor": {
          "ref": "e31117a6-0c17-4b9d-b574-bae548c79163",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bd5cb45f-12c5-4ec0-8eaf-da0e669cb5df"
        },
        "item": {
          "id": "4c619b1c-8834-47ac-b21b-fa7947f5c9dd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0f311f0a-cbb7-4999-b129-0fbea5b026df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5b0136-7470-4a1f-871b-a384b9015568",
        "cursor": {
          "ref": "4e427b9e-cc46-4647-b70d-7eeffcfdf544",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b2858c84-dd67-408f-ae96-b67eebd4f569"
        },
        "item": {
          "id": "9f5b0136-7470-4a1f-871b-a384b9015568",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "81106de6-61a9-4b2e-888b-6179437e5691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3f820b-418f-4f5f-a13a-aaa50bde9da2",
        "cursor": {
          "ref": "43369870-eaa8-434e-846c-92a431786c6b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3518847f-6208-43e3-81f9-d2c83c161c60"
        },
        "item": {
          "id": "de3f820b-418f-4f5f-a13a-aaa50bde9da2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3368e9b9-342a-4995-b760-a52baed7c764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7d2a1f-3648-4a56-b9c5-837a9e377c36",
        "cursor": {
          "ref": "4bb889b8-7943-45c3-9adb-c73477239c1c",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ef97dc23-3cd4-4878-8a82-2fe2d72dabaf"
        },
        "item": {
          "id": "9b7d2a1f-3648-4a56-b9c5-837a9e377c36",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9365f80f-3162-4f9c-a9a8-cf73f25ac1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2d9624-48ec-4496-9457-1f844bb0b76a",
        "cursor": {
          "ref": "7789b4ba-66cb-488b-9b8b-5dab5e1ec6c7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f7fd0778-2bce-46dc-973f-b51b6da5cbb5"
        },
        "item": {
          "id": "ba2d9624-48ec-4496-9457-1f844bb0b76a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7314a82b-efed-48c7-821a-f420cf7153d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98f86f7-d6cf-4009-ad95-67fad36d03eb",
        "cursor": {
          "ref": "a0452b14-14b1-4db2-a527-5fc92aac38ec",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a7409706-db95-4637-a7d2-0ac5fb497b37"
        },
        "item": {
          "id": "b98f86f7-d6cf-4009-ad95-67fad36d03eb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6a84674d-84a1-4118-a6d7-7c11c2523daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cefcfab-27c7-4650-ac26-6780e3aa6e4d",
        "cursor": {
          "ref": "baa0271a-b87b-46d6-a257-a6e238dd3368",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "86ef2e69-7d7d-4d56-9d0c-42c4ae1abe50"
        },
        "item": {
          "id": "3cefcfab-27c7-4650-ac26-6780e3aa6e4d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "beb7768d-0740-49bb-8757-e27175099665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80b9be1-f1d6-4cf7-b0db-200c0399746d",
        "cursor": {
          "ref": "26c764e7-dd8a-40cb-bb17-161eb086e8b7",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ab877e00-4048-4836-ba10-f51cd6ae7cd1"
        },
        "item": {
          "id": "c80b9be1-f1d6-4cf7-b0db-200c0399746d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2d6397a6-6ba6-4dc4-92f4-e836cf7ef393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbeee52-81e1-45d1-a2ef-31c0aa5e1979",
        "cursor": {
          "ref": "35e4e177-db7f-401a-bd79-d939e35a7f8c",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b2477cb5-37a6-4c20-afda-d67f9c7cb77e"
        },
        "item": {
          "id": "afbeee52-81e1-45d1-a2ef-31c0aa5e1979",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ecf5c95b-6bd7-45e0-af66-437bd915ae3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a7c7b7-1076-4773-ba6d-379712a27d66",
        "cursor": {
          "ref": "c86c944e-ea29-4ef5-b741-6325811e26ee",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bd1ab81f-b5dc-4538-91b5-b7add620363e"
        },
        "item": {
          "id": "a6a7c7b7-1076-4773-ba6d-379712a27d66",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "541881e5-1829-442a-bf78-3c15324d0d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdebb970-95fb-4403-8355-aa902cda0789",
        "cursor": {
          "ref": "a419bbf1-7a85-44fb-9565-ca28d32836a3",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2d3470a7-177b-4937-be3a-d4f290bfc11a"
        },
        "item": {
          "id": "bdebb970-95fb-4403-8355-aa902cda0789",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c293baf9-5a69-4c9a-b1b4-097ebe9ee10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b702587-5c8e-47c4-8c2b-495b1af67d9e",
        "cursor": {
          "ref": "d5d73b84-6073-49b8-ba8f-6452e0c69830",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5b20ee04-1242-4957-99fd-44c0f6c2139d"
        },
        "item": {
          "id": "8b702587-5c8e-47c4-8c2b-495b1af67d9e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "caa8ee45-eee0-4aa9-b19a-5009bc6685b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8599ebe-cf04-43e4-b7ca-aad68a408c90",
        "cursor": {
          "ref": "9d95f6c6-e748-417a-8c9a-cef7841697b5",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2ed92f2a-f040-4bcd-8003-b56f2bb5b534"
        },
        "item": {
          "id": "f8599ebe-cf04-43e4-b7ca-aad68a408c90",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8605650a-6a89-4d5e-a405-eb7f41299de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1883fa-a554-4162-a593-71ad4a496560",
        "cursor": {
          "ref": "bec8eb1b-c3ae-4405-83cf-83357ca22233",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f58a941d-24cc-4b2b-9764-4f1a1f523e5e"
        },
        "item": {
          "id": "de1883fa-a554-4162-a593-71ad4a496560",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "965f1c15-14bb-49e9-b4dd-90e5722701d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e040a8-f822-4a5a-b51d-5a6ee4ee967a",
        "cursor": {
          "ref": "9a086944-5aed-4f9a-9877-d14e3b498055",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "85eb8e2e-6bba-4cc4-ab77-177c953f38bd"
        },
        "item": {
          "id": "22e040a8-f822-4a5a-b51d-5a6ee4ee967a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "df01914c-2ecf-4476-926d-624dfb22bea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2cc3ab-3993-4574-a320-5d83b69bd858",
        "cursor": {
          "ref": "6b8634c1-87f9-48ee-b6fd-891f25a9482f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "28d4cc49-0fc0-4deb-804a-a1c85273d2c9"
        },
        "item": {
          "id": "2f2cc3ab-3993-4574-a320-5d83b69bd858",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "10586f0f-4479-459d-91ea-3a5f4ee9ed53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6a6a7b-e118-4eff-8110-b69ee6f39829",
        "cursor": {
          "ref": "aeb5e800-9418-40c5-b676-3fecc8a820b1",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "113a79a9-f086-48cd-b681-7a147d0bd869"
        },
        "item": {
          "id": "1b6a6a7b-e118-4eff-8110-b69ee6f39829",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "54d111d4-576e-4eaa-87df-6fbb44ab818a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090e6fb4-f871-4068-864f-845d8d96a775",
        "cursor": {
          "ref": "c55c5ef8-f601-4d3e-9d89-c52f28e4d8c7",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9225d1b0-36d5-4ffd-a992-700a051ede5e"
        },
        "item": {
          "id": "090e6fb4-f871-4068-864f-845d8d96a775",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3b951d48-9566-4955-a2c4-ea7a42221916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5b11d3-918a-4a1f-ae35-3e921c2c5f23",
        "cursor": {
          "ref": "651530ca-92a8-46ed-878e-e79e7ab75b7d",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "80cafff7-2467-4fed-ab7f-21180143361e"
        },
        "item": {
          "id": "7a5b11d3-918a-4a1f-ae35-3e921c2c5f23",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c02da3c-0f30-4cc4-8901-cf630b9e6297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d91fe59-9e1c-42d1-b78b-6b914bf019d6",
        "cursor": {
          "ref": "c0d71df8-cc1a-4279-931a-ff6b1a13c8d1",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cb92a0e0-26ab-44ef-a9c8-51f59d96a2a5"
        },
        "item": {
          "id": "9d91fe59-9e1c-42d1-b78b-6b914bf019d6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f059c680-026f-4c0b-9af8-09e48c00eeee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c45a5e-350d-4657-b405-f5c269b2409b",
        "cursor": {
          "ref": "dec187d7-751a-433f-8337-275a417a5e4e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "49bd51d2-c045-4a15-a6c6-e9ebd998ce26"
        },
        "item": {
          "id": "67c45a5e-350d-4657-b405-f5c269b2409b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d7d8275d-a032-4e60-80c0-d2450846fdaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9987919d-1a2b-44dd-aade-19bc5a01e593",
        "cursor": {
          "ref": "4fb9735b-a191-4218-94d4-0801c87bf5e4",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "68016b5f-e97d-4d9d-ba8b-e943db51c1ae"
        },
        "item": {
          "id": "9987919d-1a2b-44dd-aade-19bc5a01e593",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e3be7f3f-6a55-41d4-a2c1-61d58e6424e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e45ec36-be4a-4c5e-b52e-7e87a40f1c80",
        "cursor": {
          "ref": "3dfe12bc-59df-4e42-b506-8c540bf929de",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5bd16232-ccf8-47fe-a171-9ba5e1cc0c77"
        },
        "item": {
          "id": "7e45ec36-be4a-4c5e-b52e-7e87a40f1c80",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0239eec5-f4a4-491b-8f61-c612e214bdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36f7914-6b07-4c1a-9206-7aead8777b6d",
        "cursor": {
          "ref": "fe60a47c-0877-4c13-895d-64634b98f1e6",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bf29ad29-83d9-41d4-9ec8-0dcd6665bdb1"
        },
        "item": {
          "id": "c36f7914-6b07-4c1a-9206-7aead8777b6d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f9cbdc4c-7331-4b84-ba6d-4af0102947ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750398b5-cf5a-48bf-8ded-07c81482bc7d",
        "cursor": {
          "ref": "3b615205-deb4-4dba-858c-2a5b593554f0",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fb87d0fa-a10f-43bf-9ac7-986142e3c1e5"
        },
        "item": {
          "id": "750398b5-cf5a-48bf-8ded-07c81482bc7d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "cc87c5ca-012d-4023-97ce-8fde2dc1628c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf29479-52be-4439-8833-7af3a83932d5",
        "cursor": {
          "ref": "cbeb06e4-e179-479a-859e-bc0877ff8cd9",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c958c488-e9dc-4d34-b550-d01af8a076c4"
        },
        "item": {
          "id": "9bf29479-52be-4439-8833-7af3a83932d5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5d6673fa-70ee-4d13-8e3f-68a932d62056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7822b05b-58ad-46a1-a5e9-64fe886b6da7",
        "cursor": {
          "ref": "36ba7532-73d3-4a5d-909c-f30f0c2ba7ec",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e2240683-a16f-4495-86df-1affb1f45c6b"
        },
        "item": {
          "id": "7822b05b-58ad-46a1-a5e9-64fe886b6da7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "160f7416-ea1f-4de6-89d2-4e25e8c131ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b9aaa1-5e94-41b0-94e1-e553c102392f",
        "cursor": {
          "ref": "a02031c7-efea-49ef-ac79-9681b7e5fda6",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4bc2520a-3c1e-47c3-b802-0230f9dafdf5"
        },
        "item": {
          "id": "f7b9aaa1-5e94-41b0-94e1-e553c102392f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0655d4a1-3109-43fe-9b74-184785167f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a7bbbd-1ecb-4b8d-a147-7005511a8320",
        "cursor": {
          "ref": "420dae32-3d52-48ee-a0bc-5fa59dbc7c48",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b80d367e-97c2-4b6a-bf80-dcee97607f6e"
        },
        "item": {
          "id": "29a7bbbd-1ecb-4b8d-a147-7005511a8320",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6f211ed6-54b1-45fd-93ad-81ea301c8c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab651969-8318-4bcc-9f2e-f0f6646a4814",
        "cursor": {
          "ref": "1f6c9a0d-7ff5-401d-bd9a-1fd2ff2a4932",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d58a0011-dfdc-4e69-8dd3-b49a45820587"
        },
        "item": {
          "id": "ab651969-8318-4bcc-9f2e-f0f6646a4814",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d0eefec8-8444-446b-81d3-5ef83df17637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e72c91-3dc9-490b-9b32-972a61bb23ff",
        "cursor": {
          "ref": "732ad231-6a99-4434-a401-7a6e2261a62c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "34041473-6162-4436-90e4-c02d93055577"
        },
        "item": {
          "id": "60e72c91-3dc9-490b-9b32-972a61bb23ff",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f7aa8613-1b80-420a-b201-91adfd06e59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb70bc5-f62f-4525-b135-dde4a7592f4c",
        "cursor": {
          "ref": "0e284a6e-b176-4d95-9296-8ffd05eb050a",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "976a3aad-44c0-4322-956d-6d63e65aaaa8"
        },
        "item": {
          "id": "bdb70bc5-f62f-4525-b135-dde4a7592f4c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d60676a2-ca6c-4610-ac42-add7d6937fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b95503-7ced-4905-aca1-62d3c016034f",
        "cursor": {
          "ref": "8bd29986-9bf4-40d3-8671-62285ffbb189",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "df8fdc49-3ef2-4f82-877c-bdf70935fcc8"
        },
        "item": {
          "id": "42b95503-7ced-4905-aca1-62d3c016034f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ba2c9b56-ac76-41dc-8512-6f485322294c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac60f5cd-ae66-469e-a07f-16d0eee71a5e",
        "cursor": {
          "ref": "0e721aa5-3234-4b10-ba4e-fe06e57da107",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "20ad5945-8f81-40f2-a29d-86c6f8f644c9"
        },
        "item": {
          "id": "ac60f5cd-ae66-469e-a07f-16d0eee71a5e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5cc2b929-b0d5-4bec-b18d-86e2ae501892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e24e81-bef9-4b37-a368-a05228e0af60",
        "cursor": {
          "ref": "71d4f63d-267a-4f66-9402-dbe51851b40d",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8d18133d-7c37-4f06-a03c-82d6342dbbe8"
        },
        "item": {
          "id": "36e24e81-bef9-4b37-a368-a05228e0af60",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f8765664-64e0-4fa0-a384-b28cba34161a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42341fd5-51d3-431d-a76f-694738a5a775",
        "cursor": {
          "ref": "f4ce3ecd-b60a-4e15-a5be-58b8340d8c37",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a909dabc-6667-41fa-b4c8-dfaf3014136a"
        },
        "item": {
          "id": "42341fd5-51d3-431d-a76f-694738a5a775",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a48f9429-c8c0-40d3-8d01-e0d18fa05c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d229036-d760-4513-abd9-5901ced8c273",
        "cursor": {
          "ref": "e54b2625-c2f0-4a24-a78a-f877be917e35",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a2d9dc89-cec1-48e5-811e-d9f55f6f8315"
        },
        "item": {
          "id": "1d229036-d760-4513-abd9-5901ced8c273",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f4a82e26-fc52-4637-8acc-32f208671922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28fa6a6-4e28-4d5f-a9ae-afe9ca17bd5f",
        "cursor": {
          "ref": "34a367ff-9ffd-4613-ab01-37d99849fde2",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "58ae5993-e80e-4004-bdb9-c2b133da7c5d"
        },
        "item": {
          "id": "b28fa6a6-4e28-4d5f-a9ae-afe9ca17bd5f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ca3f6ef1-9119-437a-a0d2-2d65950b4da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ac1adf-7c8b-40e2-bacb-1c6b6820c529",
        "cursor": {
          "ref": "c2829e5a-c4b2-44a7-8dea-b394d6f2c055",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "229c68a6-56ff-4771-ae95-9df90f1ea22a"
        },
        "item": {
          "id": "b2ac1adf-7c8b-40e2-bacb-1c6b6820c529",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1032389f-4cf3-4041-a8a4-ef1b5b0c33dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a925a7-4459-4a8d-8666-0e3fd7597819",
        "cursor": {
          "ref": "f75dc9d6-68c1-4e15-a51e-7040035d948f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9edcf2b7-9d7b-45d6-acac-94dadf0673f1"
        },
        "item": {
          "id": "c3a925a7-4459-4a8d-8666-0e3fd7597819",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7ff27b89-061c-4f1c-87b8-a1e8463ee1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4538334c-6bb9-4cc1-8faf-6af96466e244",
        "cursor": {
          "ref": "06830009-0ea7-467e-b5ee-c2d2ab451d2c",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e49324a6-3253-40cc-9afe-58d3a2fea527"
        },
        "item": {
          "id": "4538334c-6bb9-4cc1-8faf-6af96466e244",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "51fce133-e64a-4cf3-9b44-71f757267d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cd57d2-7afd-4b0e-8c39-760b72aff5be",
        "cursor": {
          "ref": "ad7b93f9-1c55-466f-956a-9693496dfcf7",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "112ef7e0-57c4-4d11-b7a5-3d3d3bb14dfd"
        },
        "item": {
          "id": "88cd57d2-7afd-4b0e-8c39-760b72aff5be",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2a3799c7-4bb0-4e6f-900d-ff614de12158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddee0c56-4b4c-4f6b-82c4-9b7f249c24f6",
        "cursor": {
          "ref": "1982ebcb-f2c4-43be-81b1-7dab25a45151",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "0e073dea-ff5f-4527-aa9b-9e172dc8e892"
        },
        "item": {
          "id": "ddee0c56-4b4c-4f6b-82c4-9b7f249c24f6",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d19c5edf-ce53-422e-bead-a0582eb9605e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d52b491-b2bb-4d09-8670-3e0d9e7c3530",
        "cursor": {
          "ref": "f4aef95c-84ae-49c1-8015-8d57bf0d5956",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4f178e6e-9685-4a1c-b0e1-218d97d331ba"
        },
        "item": {
          "id": "0d52b491-b2bb-4d09-8670-3e0d9e7c3530",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1fceeca2-fd01-44fc-8c3d-b2f5a264dde1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa6d7dd-a433-4dcc-8b61-81c6aeb8971e",
        "cursor": {
          "ref": "2e09ffd9-9534-4dff-abef-9875b9d1acfa",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "11eb4560-c9ad-4995-beb0-a70baec8c97f"
        },
        "item": {
          "id": "2fa6d7dd-a433-4dcc-8b61-81c6aeb8971e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1a67e80b-0f67-40d6-a03d-bf62a4997a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7ec886-cec5-4a5c-a821-49f8e943790a",
        "cursor": {
          "ref": "8870f334-655f-4cda-8982-a2652e6e9cc9",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e1517e89-f465-41df-9ad9-8f45acfedd90"
        },
        "item": {
          "id": "bd7ec886-cec5-4a5c-a821-49f8e943790a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "051973a8-d1b0-4cbd-b50b-836c9cfada3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4332c391-7b32-4628-949f-b1c35a22cd04",
        "cursor": {
          "ref": "6f2f1724-cbf3-455e-96dc-ae708558e5a8",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "da3feb10-0e64-435f-ac7b-74c1e8392b43"
        },
        "item": {
          "id": "4332c391-7b32-4628-949f-b1c35a22cd04",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e5e8a50a-8b33-4331-aab8-bfb173861a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814978f2-e659-4796-b8e3-47e7ac977b28",
        "cursor": {
          "ref": "4a776d3e-1b4c-40f2-9f93-fb2455ef5327",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e6693c3e-156c-4daa-8702-d41a098c2fdc"
        },
        "item": {
          "id": "814978f2-e659-4796-b8e3-47e7ac977b28",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fe7950fb-3341-4d32-9279-82a793c6ebb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af92227-3e78-46c5-9cf9-99ff15a9f8f6",
        "cursor": {
          "ref": "90c3883e-82eb-4437-9854-54387f7036a0",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "51c895db-5c08-4dcb-8de6-aa7802b3d21e"
        },
        "item": {
          "id": "3af92227-3e78-46c5-9cf9-99ff15a9f8f6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7d6e93e4-46f6-49ef-b8df-975d1c5ee3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9f8764-13d5-4ee9-b83c-3bd1ddf33766",
        "cursor": {
          "ref": "240694f0-a9ba-4c6e-bdc8-8e456eb7c03e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a97b8101-39c7-43b0-ad60-55e7bd1a142a"
        },
        "item": {
          "id": "0c9f8764-13d5-4ee9-b83c-3bd1ddf33766",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4cd248cf-4968-4e86-90a5-c356b7087456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7c6cbf-80d2-456a-b6a5-744c68fdb94b",
        "cursor": {
          "ref": "c0ca4e9e-e66b-4fe2-9bd0-f904accd0631",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "37585818-ef33-4a1d-9fb5-758aa8c161ba"
        },
        "item": {
          "id": "ce7c6cbf-80d2-456a-b6a5-744c68fdb94b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6517aa5d-8cf5-4c35-ac5f-26cae820a23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cab589-f63b-49e3-9424-32e5bb663058",
        "cursor": {
          "ref": "76ee052e-7036-4b14-983a-11c418562d84",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "00ae8d46-f3da-4614-b45f-33820cfb45e2"
        },
        "item": {
          "id": "c9cab589-f63b-49e3-9424-32e5bb663058",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e203da1d-47d6-476a-a37b-5bb32e441ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee48c4aa-b21d-48e5-b515-46e26c42590c",
        "cursor": {
          "ref": "3bd4f1a2-af7f-46a0-9efe-069dfd1932e9",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ffd54eec-3387-47ae-bef8-aeea9d8606c6"
        },
        "item": {
          "id": "ee48c4aa-b21d-48e5-b515-46e26c42590c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ec0d7525-6cd3-4751-86ef-0789149732ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c457bd12-f9a9-417f-a884-d460c6060b88",
        "cursor": {
          "ref": "ce8a8a81-08de-42b8-800d-64a54aa4c9ea",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5c08cbda-1d21-40a5-9ad9-de8514890054"
        },
        "item": {
          "id": "c457bd12-f9a9-417f-a884-d460c6060b88",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "37525d07-db6a-46da-8e64-c358b6fe386a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed371b31-b686-46a0-b74a-d7cf497eb1c1",
        "cursor": {
          "ref": "62ea7e35-cfe1-47d1-a710-7a32d6c7bc8d",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "82498277-869a-4769-8716-4421f42117d1"
        },
        "item": {
          "id": "ed371b31-b686-46a0-b74a-d7cf497eb1c1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f58ab9a7-3d19-479f-a9e2-52df11b2857a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1851e075-f006-4186-9e3e-5ebfbb4b0295",
        "cursor": {
          "ref": "747c9687-ea3b-458a-9fb9-a53084bfda65",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c73b821b-1ae4-419b-a9fd-8b41f72642f2"
        },
        "item": {
          "id": "1851e075-f006-4186-9e3e-5ebfbb4b0295",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8efff837-3ea2-452e-9a43-143e6989c1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a8936c-18e4-44c1-a20d-186ec3b23e4e",
        "cursor": {
          "ref": "91f26ccb-23ad-40e6-93c3-96c51f7d17d5",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0497251e-53bb-4931-89a1-12c1cf1bfa41"
        },
        "item": {
          "id": "74a8936c-18e4-44c1-a20d-186ec3b23e4e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e9352c74-265c-4014-b8e1-5ccb839a886d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600a812b-4f9a-4254-98f6-be2ea602dcab",
        "cursor": {
          "ref": "7c5dc4ff-196d-47b0-965f-ce4f99c5aef7",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "df4f2e47-2913-43d1-833b-7e322f1d5211"
        },
        "item": {
          "id": "600a812b-4f9a-4254-98f6-be2ea602dcab",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3cf49151-3f13-4555-b51f-7154abd24865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b98d5b-d5d8-4549-a13f-0bbf3ea62326",
        "cursor": {
          "ref": "10bdaef5-ee3f-405a-b5af-0ae197d5d751",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f38d0a51-cd43-4a4f-b0fd-220f3d5a2ec4"
        },
        "item": {
          "id": "35b98d5b-d5d8-4549-a13f-0bbf3ea62326",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f4061426-d5f2-4f8e-8f04-75350dc805a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57833e48-5133-45ce-8f56-90db31f71e3b",
        "cursor": {
          "ref": "c0050bd8-73b5-4990-a7cd-52031b2c5ec5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8436c533-cd67-411d-84d5-e0a11342aaa1"
        },
        "item": {
          "id": "57833e48-5133-45ce-8f56-90db31f71e3b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "74153a3b-3918-4212-8128-5f2e7d47bf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6629ad71-2048-4929-819b-1ddcfcad107e",
        "cursor": {
          "ref": "557830fb-32ba-4f00-8bd4-ab31b3f26157",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b6f49b57-c286-4e84-8e56-6c1079e80c62"
        },
        "item": {
          "id": "6629ad71-2048-4929-819b-1ddcfcad107e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "72a587c2-0adb-4469-ad96-fda878ad78fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b945d47-eb90-4202-b5d7-22da4d1df19b",
        "cursor": {
          "ref": "0ea402b1-556b-403d-8b13-63eb481fa98b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5388b49e-c828-4199-bb52-82999e9b6b44"
        },
        "item": {
          "id": "9b945d47-eb90-4202-b5d7-22da4d1df19b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "80bfee93-6c95-40cd-8a5a-588c9a9b4729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43da993-04f4-4622-9831-6cbc9f879412",
        "cursor": {
          "ref": "b6a73d84-f0ec-4115-ba1f-7f1bca66872f",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "66f2b653-5528-4b94-b5f8-789901cd0c29"
        },
        "item": {
          "id": "e43da993-04f4-4622-9831-6cbc9f879412",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "37617f62-0d4a-4f18-bb39-2e482436b85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68207e7f-7136-4414-8edd-476426f4b16a",
        "cursor": {
          "ref": "91e37b7f-83ed-4b94-b00d-4e75647c1a77",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "554a7fc2-ce20-4d8f-9cfd-0a4b68ceab22"
        },
        "item": {
          "id": "68207e7f-7136-4414-8edd-476426f4b16a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "06d09cf1-4d8b-4cac-bcf8-bab2338c1f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b349bd7b-61a1-4995-9f31-13a5a9b1e6a7",
        "cursor": {
          "ref": "d67db335-ead7-4338-9394-a06983ddda89",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "00353dd6-949b-4d66-ac8e-62fac8e6edbd"
        },
        "item": {
          "id": "b349bd7b-61a1-4995-9f31-13a5a9b1e6a7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "70c833b0-4986-4996-b4ab-1490f47eec3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a867cb-7bd6-48a7-a64c-54c4d816fbb8",
        "cursor": {
          "ref": "6d6c9507-fdea-46a5-ac91-8339664ff49d",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1f7b22d8-8ab4-47a3-80dc-5cc398421efe"
        },
        "item": {
          "id": "41a867cb-7bd6-48a7-a64c-54c4d816fbb8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "67eb8316-91a6-440d-ae3e-74ed97d29f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d8334b-6443-4796-8ae4-75ad30b608da",
        "cursor": {
          "ref": "51ca4f71-ce84-4ee4-bfa3-6bb099498380",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fb2b0350-89e8-4cf1-ac94-7b4fb9ecc68a"
        },
        "item": {
          "id": "48d8334b-6443-4796-8ae4-75ad30b608da",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4f8febad-727f-46cf-8d05-33aa73681995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28b9ba4-c310-41e0-9b0a-68a0e28d89e4",
        "cursor": {
          "ref": "a3eaad8b-4eac-4c4d-bea0-868759d789ce",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d9d91441-49fe-4b8a-ad9c-2a959627df0c"
        },
        "item": {
          "id": "e28b9ba4-c310-41e0-9b0a-68a0e28d89e4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b10c9f42-e584-45b2-b473-f8a490d55d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96eac297-c22b-44d0-aa8d-45ec71c48122",
        "cursor": {
          "ref": "a7e7a9d1-b6aa-41df-a144-211bdabde172",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "225448c4-a9f2-4eb3-bab0-fb3cf865bdec"
        },
        "item": {
          "id": "96eac297-c22b-44d0-aa8d-45ec71c48122",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dd74397b-3bea-4c56-a2a3-cca0aa20e0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c44d96a-0e75-44f1-8faf-f90f4f1ab04e",
        "cursor": {
          "ref": "e0b6bdfd-f703-4253-9031-665d331af113",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e4273ef5-6ea5-4941-bd3a-03fe4934ff41"
        },
        "item": {
          "id": "1c44d96a-0e75-44f1-8faf-f90f4f1ab04e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1aef1b6e-a475-44cd-95fe-0696f9c450f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2197211-a3ed-4edb-97f2-4d254aaf9922",
        "cursor": {
          "ref": "0fe3ea46-d985-4d9b-b475-1200345d2ba6",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4f5f5add-d801-4d91-b0fc-09a8ead3d049"
        },
        "item": {
          "id": "a2197211-a3ed-4edb-97f2-4d254aaf9922",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "60927e28-cf5f-47c3-a44b-a57047b134f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da49b00-2fe9-40a6-ac9c-689b80d4110e",
        "cursor": {
          "ref": "72f02bdf-e81b-496b-a67f-0e254989b490",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "602106dc-e62b-44d9-a9c9-2642c29f847b"
        },
        "item": {
          "id": "3da49b00-2fe9-40a6-ac9c-689b80d4110e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5ca68000-20d4-4ec0-bdd7-ad808e8bb90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d64762f-a98a-4569-bb67-751d86d37ee5",
        "cursor": {
          "ref": "467dda37-b1ec-49a1-b787-41607ecf8c4e",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "21d0d821-7e94-42f5-a65f-7284a61d8169"
        },
        "item": {
          "id": "7d64762f-a98a-4569-bb67-751d86d37ee5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "97cf6fa8-bd6a-4c8e-9ddc-5edb2ee1f54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e1912d-ef3f-4a40-9607-b9304b16f4c3",
        "cursor": {
          "ref": "2d1d70ae-16a4-49e7-bc6a-a4be3dc5b499",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "42a85b5b-548d-43d8-a2e1-cd40c8fc1af0"
        },
        "item": {
          "id": "41e1912d-ef3f-4a40-9607-b9304b16f4c3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "60ffc5dc-47e5-4398-85e7-b56151cabfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c007d8-6c28-4b23-8b86-8bdcc7a8e712",
        "cursor": {
          "ref": "79421c66-ba78-4d99-b56d-874604704fa8",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "91dd4bee-47f4-4ed3-a778-a26ec525f490"
        },
        "item": {
          "id": "d3c007d8-6c28-4b23-8b86-8bdcc7a8e712",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fb07c603-fec4-4ebb-a17b-4f3bcdc64fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42635830-9086-4f37-8cf5-332d2b83c844",
        "cursor": {
          "ref": "4ab6996b-00ee-4abe-8f97-57047b62d088",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e2640f3d-51ea-4942-b606-f98c0f281d76"
        },
        "item": {
          "id": "42635830-9086-4f37-8cf5-332d2b83c844",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "aad69ee3-9072-4c24-864d-d1e6af015454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a0ad29-0c48-4a4e-a650-9f354ad3b911",
        "cursor": {
          "ref": "465c0a69-39bf-4243-887a-94e2df9c5b6c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e61e669b-1f95-4fc6-beed-aeb62ef88fda"
        },
        "item": {
          "id": "11a0ad29-0c48-4a4e-a650-9f354ad3b911",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1d309c67-3f27-4b0d-b651-045e2a358278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c69758-92da-4659-b7d1-95cb50062490",
        "cursor": {
          "ref": "6537eca3-7ced-4c85-aa72-0e38b1692d9a",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "930ebcda-12fa-467c-868f-5cbcca6f8c71"
        },
        "item": {
          "id": "93c69758-92da-4659-b7d1-95cb50062490",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "35a5e2e3-683e-454b-bf7c-309666a78bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253bf9cc-cde0-442c-b8b7-c7be98749423",
        "cursor": {
          "ref": "76b776d3-0459-4e91-a395-30abb13300e8",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bfc651e2-c3a3-479b-9b75-5bcaea421b6f"
        },
        "item": {
          "id": "253bf9cc-cde0-442c-b8b7-c7be98749423",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1bf1fbbc-0d18-490c-884b-a5b99248f3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db98cdb5-b61a-472a-83c1-e08d4eafbab9",
        "cursor": {
          "ref": "0147b138-124e-4241-9610-508635bd3699",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3fa6ae50-66a2-465f-b78d-e3232171fe0b"
        },
        "item": {
          "id": "db98cdb5-b61a-472a-83c1-e08d4eafbab9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "87894829-eed9-49d2-8d64-6a02a0fbfce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3952b8-dd30-4b18-8b33-77489adb2b4b",
        "cursor": {
          "ref": "3ba6fa4d-bdd9-4aa0-b0e7-d142cd1578dd",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9e9e4e0d-7b54-4e2b-b648-9cf96b8c8a8c"
        },
        "item": {
          "id": "1e3952b8-dd30-4b18-8b33-77489adb2b4b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f69987b1-967a-4ac3-a35e-639ad2f7c86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a16d24-f1fc-4ced-8904-402bdcc4c1df",
        "cursor": {
          "ref": "91936fe1-fb5d-47d4-877c-8ae831ab73ba",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1f9b1119-17e9-4e40-a6ba-0498205aa8e8"
        },
        "item": {
          "id": "e4a16d24-f1fc-4ced-8904-402bdcc4c1df",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d99412d9-788a-4a50-8cd3-de26fa5f843c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b581fdb-d0e9-48ef-9952-c7ad59ed98cc",
        "cursor": {
          "ref": "fd75b961-949c-4a5b-b734-4b40c722faf6",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "47f20e76-24c1-4dfb-bad1-6c8da3f62146"
        },
        "item": {
          "id": "7b581fdb-d0e9-48ef-9952-c7ad59ed98cc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b6bb6423-409a-47f1-92cf-b2b38b2db471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610c87d7-8591-4f37-a1c1-57ccdbfc8106",
        "cursor": {
          "ref": "ddd50d00-3e0a-4f3d-9334-2cff0ffbb417",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7a938e2e-e68d-4df8-9339-2dd5a4c901bd"
        },
        "item": {
          "id": "610c87d7-8591-4f37-a1c1-57ccdbfc8106",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e47a85e6-1a3b-442f-ac71-1908f49e6b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80a5e8a-1891-42b5-a9ba-e3ed914468e4",
        "cursor": {
          "ref": "99baadaf-bd4e-4019-a87b-70ae95332898",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9b6b0c19-4b18-4c13-a456-b29d1e2bbffb"
        },
        "item": {
          "id": "c80a5e8a-1891-42b5-a9ba-e3ed914468e4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "256a8308-2454-45c7-a4bc-475dd9a2e11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc31af51-bf83-497a-813f-76e1ee7000a5",
        "cursor": {
          "ref": "7b43392d-1029-4000-8899-bf690b1d27d6",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "65d5decb-71e3-4788-b2ff-19ff0e955e74"
        },
        "item": {
          "id": "cc31af51-bf83-497a-813f-76e1ee7000a5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "be6eba30-035c-45af-b5aa-6cfcfeaf2427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc1f6e1-55f3-4f38-ba2f-da0904fde74c",
        "cursor": {
          "ref": "56d3ef81-b8a9-4455-b1ae-38f6de29ee02",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9938e731-3a79-4959-8ca8-576044ef39d6"
        },
        "item": {
          "id": "ffc1f6e1-55f3-4f38-ba2f-da0904fde74c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fd15c621-e8e3-41ae-8472-2d7eb51169a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00814af-bd70-4936-9f61-a03b93e33c5c",
        "cursor": {
          "ref": "d4e72c0d-d073-4bfc-b943-98c3b09c03ff",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0f352944-b51e-4ff8-bd81-0fb043b8ce77"
        },
        "item": {
          "id": "c00814af-bd70-4936-9f61-a03b93e33c5c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6b84ee53-1611-4edf-acdc-58ed48d77a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16d47d3-7d8f-49aa-89f9-cf5da31b75a3",
        "cursor": {
          "ref": "b766dc6e-1e37-4b86-acf3-dc8761c6567e",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2fe38131-308d-48a7-8055-fc2c7c5ea723"
        },
        "item": {
          "id": "a16d47d3-7d8f-49aa-89f9-cf5da31b75a3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "88dcb461-8b30-46a3-9ab3-68b33eed4e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b15d95-874e-4ad3-b50a-8ab43999e8ed",
        "cursor": {
          "ref": "6bbdb28e-2113-4052-a638-0c3b076732a5",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "85c46f4c-bbcb-4c4b-934a-690e16a61127"
        },
        "item": {
          "id": "50b15d95-874e-4ad3-b50a-8ab43999e8ed",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "63a14d06-7444-462c-8b89-52e8ae2838e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d077afd7-10a3-431f-9867-a9d858c6804c",
        "cursor": {
          "ref": "8a1d59d0-b813-4463-8947-8920b72be50d",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "464bf211-de12-4df1-916a-04dc898288fc"
        },
        "item": {
          "id": "d077afd7-10a3-431f-9867-a9d858c6804c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8c0807c2-ba3f-456f-81c3-f6061f2aa825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91833d78-0e37-4da9-a7f3-9fd35327042e",
        "cursor": {
          "ref": "04bc3a71-a243-48b8-bca2-0c97cdeb9b21",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c04f9b55-274f-4a22-ae5e-be0b64fe05aa"
        },
        "item": {
          "id": "91833d78-0e37-4da9-a7f3-9fd35327042e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "796a45bb-1622-4f4b-a3b1-ea5be33b725a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49caa651-d988-4591-8b71-670347b95298",
        "cursor": {
          "ref": "e5fce7db-d570-4b49-b95a-21cdfd76ccca",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "145ca9c4-b83f-4aef-9f24-e2c8ee1dd80c"
        },
        "item": {
          "id": "49caa651-d988-4591-8b71-670347b95298",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "10f88c00-140e-4ffb-8115-fca25e865e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1292df2e-5b8e-4514-a1d1-e9587d4301b8",
        "cursor": {
          "ref": "b4e9fb11-2ed6-4923-a69f-bd2b185c7224",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "74c407a3-b860-45c0-8488-85bb9b1cf7eb"
        },
        "item": {
          "id": "1292df2e-5b8e-4514-a1d1-e9587d4301b8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ccf33ce5-c093-4086-a3fe-2c3797b25c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343ad3e3-9587-4199-853e-1cbdfa708198",
        "cursor": {
          "ref": "84add2b7-4307-4f56-8c58-21868ec7b1cd",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6502888a-f8ad-48c2-968d-45e610ba1d23"
        },
        "item": {
          "id": "343ad3e3-9587-4199-853e-1cbdfa708198",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "77749600-662e-4227-b002-0551f5c1553c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bb0084-b692-463a-a20e-efe11669cdc1",
        "cursor": {
          "ref": "7b4f7276-5d5d-43d3-8a41-2716f3dbc1e7",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bf9b444d-53cc-4f28-b30b-8a688551e50e"
        },
        "item": {
          "id": "41bb0084-b692-463a-a20e-efe11669cdc1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "41ec0b22-017d-4e18-8ad3-7bcc777b7f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9243836-f0c6-4a5e-8af2-741a53690668",
        "cursor": {
          "ref": "d2d01b47-d47b-46fa-99d3-47ffef8f0b75",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0c49acf6-58d6-46b3-832d-a3f8ae3fe35a"
        },
        "item": {
          "id": "b9243836-f0c6-4a5e-8af2-741a53690668",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3cb77e1b-6a4c-43c2-8fb5-f24f1bc16598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c24b8f-195f-4662-952e-1f364dc63f0b",
        "cursor": {
          "ref": "ca45e5ca-fbe2-40b3-aa08-0bbfbf1b0149",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "042f88ef-8a3d-4f03-ba98-c101a5a353e1"
        },
        "item": {
          "id": "06c24b8f-195f-4662-952e-1f364dc63f0b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8a7d0a79-6758-4e91-99c6-4fe7490a1ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9a0b25-161f-4e0b-8848-a49784b0035d",
        "cursor": {
          "ref": "fd5ef253-2faa-46ce-9bcb-168fea326709",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "081232af-1d2c-4680-a42c-7415ec73768b"
        },
        "item": {
          "id": "1b9a0b25-161f-4e0b-8848-a49784b0035d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e405a94d-34e6-44f4-8e25-e88e011717de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338fe287-04be-4724-8d25-c024c67ac20b",
        "cursor": {
          "ref": "9978d353-f60b-494d-bf1d-a7a174b61de2",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a8bd34b3-4651-44d2-9477-818611bfc9bd"
        },
        "item": {
          "id": "338fe287-04be-4724-8d25-c024c67ac20b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5cafdfc2-b1ab-4246-b1b8-460cb222b356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e466eda-a1a5-4b1c-9e5c-d8a6f70c2982",
        "cursor": {
          "ref": "c4ad6d9b-bdde-4c63-8701-112fd8ed8967",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "04928ef5-9b8e-4dbf-ac14-e5c738a284aa"
        },
        "item": {
          "id": "7e466eda-a1a5-4b1c-9e5c-d8a6f70c2982",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "642e1732-9e14-4a73-9e30-8987374cbebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be64dbf1-69da-431e-a200-df00a524a4f3",
        "cursor": {
          "ref": "92e04368-4431-44db-863c-04bc31e8759a",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9755e6ee-a67c-4859-bd70-8644363bceb6"
        },
        "item": {
          "id": "be64dbf1-69da-431e-a200-df00a524a4f3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9e144066-7c11-4cf2-a9f8-b3fbeeabe41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18501d4f-80b4-4426-872a-a19fa33887ad",
        "cursor": {
          "ref": "6094a26f-f52e-4af8-8d78-5dbe53d99e9e",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "cb60c4f9-b9d5-4596-aaf7-f360f186ec78"
        },
        "item": {
          "id": "18501d4f-80b4-4426-872a-a19fa33887ad",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "87795c01-d64b-402e-ba5b-09134b764b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b529c19f-4629-4315-8576-bec86c23e2b5",
        "cursor": {
          "ref": "b974a9c0-eb84-44d7-8054-f7a1e61063f3",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6f2f49da-fe43-40d5-a984-fdcb5fa692c8"
        },
        "item": {
          "id": "b529c19f-4629-4315-8576-bec86c23e2b5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "4a2fc938-f73e-4fe1-96f1-805fb00cb632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60366a9f-88ae-41d9-a5cc-a650e54bbd7e",
        "cursor": {
          "ref": "624080df-ad2f-43ed-8a71-03bbaa9130f0",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b49a5388-056f-447d-9e93-8f8508692a66"
        },
        "item": {
          "id": "60366a9f-88ae-41d9-a5cc-a650e54bbd7e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dc2f955d-a9b3-4275-b708-f73f188cf227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51efc40-dd56-4e68-879c-7c4909d5d55b",
        "cursor": {
          "ref": "b06a9faa-cb37-46f7-876b-f730970531f6",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0b91132b-a146-415c-aeb9-ccb1ff80a80f"
        },
        "item": {
          "id": "e51efc40-dd56-4e68-879c-7c4909d5d55b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "329dc8d3-aace-4b49-adbd-217ab389af87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3636859c-25b8-4864-be6b-a39e83d9d8b0",
        "cursor": {
          "ref": "6f973dec-4767-4e4c-b5e5-d24e3d1ac4e1",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3150526c-1aba-432d-b8cc-41d62b5653c4"
        },
        "item": {
          "id": "3636859c-25b8-4864-be6b-a39e83d9d8b0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "263a94c6-206c-4351-ae91-2c0cdca32669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084bec8a-b1e0-442e-a678-8144cb9fecb4",
        "cursor": {
          "ref": "0208df55-4042-4c20-bdc6-5ebae4a75908",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "af4ba029-2e00-41d3-ae75-61afc5c8fbd6"
        },
        "item": {
          "id": "084bec8a-b1e0-442e-a678-8144cb9fecb4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "10ed5b58-62f7-4cff-af6c-5e4736b6dfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46beb8c-8c47-4cec-8b68-db1fc79f45cd",
        "cursor": {
          "ref": "605b48ee-02cd-44cb-8c92-6cc47bdac7fd",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "600a34a3-a89d-426f-975c-23492284eb13"
        },
        "item": {
          "id": "f46beb8c-8c47-4cec-8b68-db1fc79f45cd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "07c7b9dc-9ad4-4fbb-a830-24688ecd991e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79309648-3e90-4fce-960a-b1da7694cf87",
        "cursor": {
          "ref": "5ffea2d4-c7ac-450d-ad39-9c5e36850d47",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9859d5ea-5131-47cb-8481-eff32be81667"
        },
        "item": {
          "id": "79309648-3e90-4fce-960a-b1da7694cf87",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2e6a729b-d77b-4f7e-9c69-c74190ba16ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450faad7-d992-4dd0-a1b2-10935a0870bc",
        "cursor": {
          "ref": "84c1f8e8-ee63-4c94-aed7-9cecd0dad946",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2c1b1e3e-ae81-44e2-af6e-5cf78fc1ff0f"
        },
        "item": {
          "id": "450faad7-d992-4dd0-a1b2-10935a0870bc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d66c3db4-67e0-47a4-90ad-1871c5b39294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c19fbbc-1fc4-423a-b480-7f49af59efc6",
        "cursor": {
          "ref": "4e73ce77-d245-431b-8e8b-c881a1434850",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7dc2953e-9d8a-4b1e-8045-465adef39e92"
        },
        "item": {
          "id": "8c19fbbc-1fc4-423a-b480-7f49af59efc6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "748ad671-d932-4310-be6b-8876543e9b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79379c71-13e1-4143-ba59-189cb84b92bb",
        "cursor": {
          "ref": "8f7915b6-b24b-4b1d-abe3-39810c5d96d3",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "42b23238-1210-4f05-ad35-faf4a7f9620a"
        },
        "item": {
          "id": "79379c71-13e1-4143-ba59-189cb84b92bb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d74a2124-5e44-45b3-8049-32ba051a3ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc65aa5b-09d7-4ac3-a5fc-a16d1dd9eb27",
        "cursor": {
          "ref": "d7c58b65-ab03-4b37-af15-fef50cb9f8a7",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3db28248-9ab4-42e3-a72e-f5ac8c3c650f"
        },
        "item": {
          "id": "bc65aa5b-09d7-4ac3-a5fc-a16d1dd9eb27",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "501b6d7b-848f-4564-bdfa-42af11798310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1eb86b-5717-4120-822a-25810e747ac6",
        "cursor": {
          "ref": "4038a30b-069f-47ca-9216-c5b795b515c5",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "48459cc7-ae5a-424d-bc0f-a81cd9d21ae3"
        },
        "item": {
          "id": "4f1eb86b-5717-4120-822a-25810e747ac6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "13a5f3cc-85b1-44dc-82d8-c5d5832b1fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d63990-b877-45a7-8e66-2cc75ca5e213",
        "cursor": {
          "ref": "6c8ae0c1-9092-477f-bb07-5c5daefabff5",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f185af59-23b8-4639-8bff-e0b6e9b1ec96"
        },
        "item": {
          "id": "45d63990-b877-45a7-8e66-2cc75ca5e213",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bd97367a-e4d0-4f79-99c6-d8cdb9bd83ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a142a2f4-3972-4fa5-bfc4-7e5926e834f6",
        "cursor": {
          "ref": "fe6416ad-da19-4a77-88d3-b25e0d95075a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "34bd8606-f857-453e-8a6d-cbfd3732cb07"
        },
        "item": {
          "id": "a142a2f4-3972-4fa5-bfc4-7e5926e834f6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b5a39483-1621-46c3-99c1-75debe5bc505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a6a589-cfb3-4ae5-b74f-4af2a9bcff82",
        "cursor": {
          "ref": "d52c4b1f-6e0d-483f-b2ab-9b58afd5aaa8",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "11d8c5b4-011b-4ea2-a158-5871ef37e328"
        },
        "item": {
          "id": "69a6a589-cfb3-4ae5-b74f-4af2a9bcff82",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "70a3016d-126a-40f3-8a57-d642cce65752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb0f96a-9601-4922-addc-7f593ff64207",
        "cursor": {
          "ref": "8ed1f0fb-9f20-4eab-8a21-e22023f50d3b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a395e900-1764-4381-8d32-cf5c23db3434"
        },
        "item": {
          "id": "acb0f96a-9601-4922-addc-7f593ff64207",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8136ce13-2db0-42b4-8f70-fcfa27aad066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8cf211-c923-4068-a2c7-1513799f061f",
        "cursor": {
          "ref": "348f528c-576a-40ec-944f-afbaae43f23b",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "def38927-1220-4461-818b-bd88f08ebb13"
        },
        "item": {
          "id": "cc8cf211-c923-4068-a2c7-1513799f061f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b2c2e403-0996-44e1-bca7-b75c8630a0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b001c45-2836-414e-b741-829e8ad844c8",
        "cursor": {
          "ref": "efdd3521-2558-4376-909b-5de11ecc3838",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "514275ac-4d7f-4cf0-9e7c-24f29a811240"
        },
        "item": {
          "id": "9b001c45-2836-414e-b741-829e8ad844c8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e97add02-939e-4e18-ad7e-86a7def6743e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b52f0b-4004-4b52-877d-b87d9b04956b",
        "cursor": {
          "ref": "7b73d5fa-33b5-44c2-b533-4ea517fe6e6e",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "cba9c792-3636-4038-8135-903611edfe58"
        },
        "item": {
          "id": "c3b52f0b-4004-4b52-877d-b87d9b04956b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fc389767-0e3b-4db6-9ad7-f4f7c190616c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4c8cf6-82c6-46e7-8445-2d208222347a",
        "cursor": {
          "ref": "1f5c986b-308d-4631-a837-127404760e65",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f913f07a-cae2-46bc-94cc-e252ff34a042"
        },
        "item": {
          "id": "ca4c8cf6-82c6-46e7-8445-2d208222347a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1afe1ff9-9262-4902-95b2-66ce84553015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a083309-6038-4c14-9a3e-5939747c40e7",
        "cursor": {
          "ref": "feeb2f13-2b46-4f47-a614-d7b85f5130f7",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f122b19e-9fe1-4b7d-8d9d-fe1dbac425fa"
        },
        "item": {
          "id": "0a083309-6038-4c14-9a3e-5939747c40e7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5c390b68-234a-40a4-8582-817547643e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254f6e6b-54e6-4dd1-bbc7-5767499ef077",
        "cursor": {
          "ref": "591f6934-36ad-4f42-88f1-bed576e48c0f",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a8bec5e1-cb69-430f-942b-006785744838"
        },
        "item": {
          "id": "254f6e6b-54e6-4dd1-bbc7-5767499ef077",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5115daa1-2a37-45d1-a0fe-9907e500d8a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac636867-6b42-4dc7-b7bb-a6f0217d13f4",
        "cursor": {
          "ref": "7af30b02-d9a6-49b1-a939-0cccc709578b",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6b866a0a-2ad9-4eeb-ac74-bcc1b3e6ddf4"
        },
        "item": {
          "id": "ac636867-6b42-4dc7-b7bb-a6f0217d13f4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "14460b0a-267c-43d5-a0cc-109351e00181",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9645480-bdd3-4250-8a2b-518258629983",
        "cursor": {
          "ref": "9e14981b-443c-43e8-9709-e07c856771c0",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "fb38087e-ea97-4328-acae-cd9e26c273a5"
        },
        "item": {
          "id": "a9645480-bdd3-4250-8a2b-518258629983",
          "name": "credentials_verify"
        },
        "response": {
          "id": "23dc25bf-36c6-4a03-a18b-da63c91a5efd",
          "status": "OK",
          "code": 200,
          "responseTime": 1442,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b94c643-8c62-49c8-95a5-0dfb74b038a0",
        "cursor": {
          "ref": "be6f246c-e7ac-44af-9a27-99df542ceafc",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e8fa9988-c52c-4cc2-8211-ad86e139b784"
        },
        "item": {
          "id": "3b94c643-8c62-49c8-95a5-0dfb74b038a0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5c43a3d1-63de-4736-a266-7b41118b63a3",
          "status": "OK",
          "code": 200,
          "responseTime": 1653,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "501ac6d5-4f5a-4301-acaa-7867c336cb3c",
        "cursor": {
          "ref": "c7215499-b594-4e70-a811-078240a35b78",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e2c0cdb8-dab7-47ea-8186-027e52095817"
        },
        "item": {
          "id": "501ac6d5-4f5a-4301-acaa-7867c336cb3c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a660f6a1-18c0-4e65-842d-f4a4746db265",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501ac6d5-4f5a-4301-acaa-7867c336cb3c",
        "cursor": {
          "ref": "c7215499-b594-4e70-a811-078240a35b78",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e2c0cdb8-dab7-47ea-8186-027e52095817"
        },
        "item": {
          "id": "501ac6d5-4f5a-4301-acaa-7867c336cb3c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a660f6a1-18c0-4e65-842d-f4a4746db265",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c85bff-f7b6-4617-8081-0a30a9d7ed78",
        "cursor": {
          "ref": "f7b8db18-0c8e-4645-9bc7-0eed5648e278",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2f020e79-0309-44bc-a495-2e886d55cc2e"
        },
        "item": {
          "id": "40c85bff-f7b6-4617-8081-0a30a9d7ed78",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e636487c-b92f-4005-b5ea-cb491461dbc2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94648c00-1bb3-4acb-8fb8-b023a333af0c",
        "cursor": {
          "ref": "ff256edf-43af-4663-82ea-e97e54362ed3",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ff0984f0-ccba-4979-beba-748b50da4576"
        },
        "item": {
          "id": "94648c00-1bb3-4acb-8fb8-b023a333af0c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "719b42f5-1339-43f3-86f1-d925aef54305",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}