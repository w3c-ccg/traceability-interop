{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "333f468c-1b3b-4a3b-ab6d-4714ed377302",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f41bf490-d289-4d91-94f4-d411a44055e1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a0e0b34-8b24-4f2a-b8cf-dfea245daeb3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0287da0c-4570-4b5d-b2bb-0bca3211afd3"
                }
              }
            ]
          },
          {
            "id": "58065610-17ce-4c71-a159-7545bad0c3b1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b021e33a-be60-42e6-b469-96cd8bf990f0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0d808466-cd0d-4a0b-8276-20c8a4560a39"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "375fe324-b1c9-4aa0-934d-7c8f14faabcd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f77df937-2e87-456e-8c7e-8dfea771ad71",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00f99aae-c37a-4698-9c1d-96f0bcd9c034",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b099f005-4409-4e5a-b5c0-3b034c5cbe92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ba247278-a9c6-49c7-ae24-71bf0be7fb04"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "644f0c0d-d120-4119-a22f-6759f6dd6da2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a99e0924-359e-4ecd-af76-5b2d81db705f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d25f5715-604d-41b0-a7b2-64323225466b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4abdbf58-a480-4149-8769-a916b6764b5e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a0e5b5c-0f9c-4319-b8bf-d7a9d97fdd73",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c635ee87-0a6e-4fd9-8bf6-0d0fb622973b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f91c06b-eb68-422a-9474-98a4268c539b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46422342-db09-42fa-8332-c50327b63463"
            }
          }
        ]
      },
      {
        "id": "17fc0637-9c85-4096-9d96-cc32bb3b33da",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2fe4ab9e-c86d-4ae2-b3e1-24a95f9af915",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7916fc33-88da-46e7-a5b1-b75072e140f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f4b88e44-3d85-49e0-a02b-be4652016509",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf54405-6446-4446-9d62-5583a56e3d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37186371-b36c-40f0-a95f-2a00b5246529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2149ac00-fe6d-415d-ae67-f83c260346e7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60836aae-8f0e-47b4-8bc3-0f3889a60610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df272239-3f83-461d-a85e-327920d43e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026a07e9-fc5a-474f-9b9a-80fcaed78764",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c063d9bd-c9f3-4ef1-ac67-2866dc42e4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab7eea1b-022a-438c-9488-46a6345e5f0a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09773bf4-e932-44fa-8a48-570392a27f09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "975ba595-1f40-411c-bbf6-c66047abea0e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39e96ad-b999-4315-a07d-c08fd6158b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be4574df-12a5-4e6d-821c-4e80a5eb99b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea73d6b2-f147-4e02-a334-3a968ed775dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a524a9-3071-4c8c-8d7b-e87a6ac15df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c57640c-0208-4264-ae69-3a21cefd69fa",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c395036-44c0-493f-b504-33c2449a8dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7298090-c755-48ca-9a65-3da8745429df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1623c6-1f60-459c-b1e9-09ace63e0005",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "552ae4fa-96e3-44c8-930e-e8d84d9fc11c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a8804d6e-1382-4f5a-9af2-0ef9f9986530",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3189dff7-6330-4ba2-afdf-24f27f7b376a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29a4f930-2b85-48c9-97a8-95abec9a8a18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1a5d6853-8420-4b69-ac95-297d5474a9ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "319a1b01-a670-4192-9b48-fdd0ba590249",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "f0829ded-58e5-4755-9125-6d4055fcc8ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5cb2ec5-69fb-4d65-86ab-34b1d6e3f5fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de8d85f1-bf0c-4956-a501-5be3810c2f3f"
            }
          }
        ]
      },
      {
        "id": "78a4e458-9059-4c56-96e8-a8909a7fa04e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2f72cefd-f5c7-4fd9-a272-d186881328ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c39c7110-686b-49a1-b554-e6ff226e5b32",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "95fc2cb4-12e2-4d2b-930e-8278a08e96af",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b509b3-78d6-4d09-bf29-6eaa00963f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0129645-4719-48ca-a4ab-cf71aac26aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d3cbff-886c-4708-869b-14c2ebb16e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d31e3e4-9ce8-47e2-a7b4-d64736786b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56118343-f30d-4a92-86d7-2c136c30359a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a526adba-5bd0-4b73-93ef-20dc554126f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71462e0d-f629-4924-8733-b44fc5cb8e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7719ae-43ca-4842-aca8-a24e82b45cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "072ef884-b8d4-41e7-be0d-3c60dbc99228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287d7f58-eb5a-4cce-a37a-e554e57521f8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d874a75-da6f-4148-8119-c472e29b1cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1c7393-4d4e-4402-83c6-95cc973ed557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb7eae0-802f-436f-9ef9-60647657b831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad97027f-3de4-4ace-87bd-60ea16529dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cea62f3-4037-4a9e-b5f4-39b08afe4c03",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb68b272-593d-4930-a7fe-af867a126123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecb3db2-686b-408f-ac72-7c34d22e0ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6dddb5-43c8-4149-a2e0-07e28b28fe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0439d063-d4e4-42eb-b2ee-977631ef3a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaa9b1c-3453-49a6-80a0-7ef0b3829750",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bd1a7e-11ca-40aa-901b-a57ce4c36357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060f9893-842b-4d09-bf3d-88d868581b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65663a67-0ad9-4ce0-bbfe-c6bc5ec9939f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa5fd11b-0574-4226-a7b9-e5e2d7ecf232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb42af0-4675-4724-8912-18f5e3b94222",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6729446-77ed-4303-91e3-e0b8acd2576b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d42f34-db3c-483d-9156-5b96c41c22f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ebc03d-8312-4db8-ad24-2a5f5dec5f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dac8d71-d1d2-41b4-a71e-2938f9884963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8adc1d-2deb-4b2a-b5aa-cfcfd32a3299",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f84cecd-1b48-4de0-9550-ec8972c57eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65316a6d-3736-4bd2-b8a5-39ead0e886bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07015a20-9455-4c9a-9696-e6bec517d7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9feaa8eb-e4c5-45f2-882e-f3f345db3bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea243e3-915e-49f4-a9bb-df57bcb27a1d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fa0718-899d-4b20-a5cb-b0b44841c797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ec1f6f-104b-404b-b905-6a5979ae1f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b436964-cf0e-40df-b520-12e1091530e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6cce138-94bc-4bba-a0aa-53a8a9bfe2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f6229b-b92a-4557-a98e-d882aef5e8a2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d391476-1b53-41d3-bc6e-67a6c57370ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aafa862-2a89-4bc9-a450-77963578a534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e583bc22-f1f2-46ae-9f22-346aec5f5eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97e9b99f-9dcb-4faf-98d1-f20ce1bbd292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe497b56-1b6b-4e7b-86dc-1f3a99cb004f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd75ffd-eab5-4152-9922-3bee68a24fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e7099b-e660-45d0-92ed-1886a2935674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc696cf9-21d6-4386-8092-3feb7771e093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6285ef3d-cf56-40e2-b0c0-924464ebffe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e1001e-de2e-4f5c-9d6b-716602504bb0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947c100e-f028-4a10-9604-c51ed9135bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e42c15-349c-4ec3-ad0d-527a12d53182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8c074c-e756-443d-9e1c-c8931e8ff523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de250686-286d-45fc-8e9a-8c68f9ae644d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb13146-5699-4a76-af3c-6b1175242401",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb350e7-e76d-4091-b9b8-58ca9a822e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071e58d2-fc2d-4d57-9529-2b08d427c4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ec2803-01d7-4bd3-a654-7cb95c6736f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "501a8fbb-76e7-4c75-b5eb-efbf4242ba75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968307af-1165-4b9d-ae68-d202c783664d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e8d914-ef20-4ff2-83a5-f59148149b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ec83e6-8b10-4b89-9506-822b4b800137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3749dc17-102b-4ec1-b717-d7d355202730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ba2930d-6791-4d56-bdc6-60315be84b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8597082-5ee4-44b9-aba0-df28d1c4aa35",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dfe929-2d40-4cf2-8d91-d42c48a682af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44618ae-6673-43da-a599-84d15d77aa75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782dcfd8-02e7-4156-a6c4-05adf4595b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4daaa9b-329d-4120-aee8-6b0ec9315e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b736a889-7d46-4f43-8118-815fa927a2e0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597dca10-b12a-455f-836d-bda029991997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e391a9a6-4eb9-42da-8fab-13a763dcd204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf659bc-8bd6-4f3c-9499-b2d0b69f6188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "288f4590-6593-4d36-a0e6-9930c373e221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b1bb1a-a00d-4ad4-af52-67e4f6d27ef7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c415da43-a78a-4616-afee-13c044a71244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e5aa43-5ad9-4f49-8b2b-0b0d6d787697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5851ce2-53bf-4941-a662-b20d9c3deaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e71fff-bee7-4620-9ad4-f5fa2a2b20f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ac6a36-7112-47d4-a532-4f05ca4cb0bc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c59ed8-2e7d-46b2-bf9b-bfbe5fe874a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36393a5d-8b4c-46ca-bb89-5c1207ade156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a416569-c780-4a34-87ff-2aefd7e584e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d827ca2-d36c-4c9c-89c0-60f2c8d2e3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8df1c14-74a4-454f-b3d5-52685ab5a407",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adb6b55-19db-4f91-87a7-9882ed132e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8076fd10-c774-4a15-b8f8-8e4ee1c11bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a0365c-a913-41c2-a9e0-0e3f131abb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "eded45cd-5bab-46be-adde-e199944aba91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d2a1ab-8e31-49f9-a67a-da2157e0cf4b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ca8255-12b0-4d2f-8d91-58dbf538f9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a84eab-ab79-45f6-9e6a-06433ef18238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dbe267-b359-4f07-868d-5afc8a68a558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "699a1467-6958-415d-b970-7071a71229ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646fbc68-1a5b-4cdc-9873-2d5096d6a028",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f98afff-efdc-461e-8bbd-0b8db58f5941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9021ff0-84f1-40e9-a369-c2580dca65fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972943cd-899d-4778-a292-c1f0d7831731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7682820f-1b00-4a52-b09a-8065d9f9bf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8ebfe5-bebe-4cc4-8932-64e236722974",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc31d58-fe9f-4284-8d14-df5a1226f732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43388965-e6fb-439f-843b-9f32a0cc4012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6bc7f23-492c-49a4-9c29-bc12a8e56cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c242bef7-2a39-42a2-b46d-c2a738554698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9f276d-e197-4089-a94f-912352bf35a8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd6b4c0-7f34-49ea-8d43-5d0a8fb40b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d6cb0c-17bb-45d2-ba85-261eada16d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29f3355-44de-4f3d-af99-533aa00282ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8da38b40-bb6d-4497-a188-0b4181e9676a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844c41bb-89ef-4503-8662-fb0ca06072d4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452b0408-5133-4b85-b04f-49aae2679a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1671aa92-4436-4cc3-8b9e-9c2ef14fd4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116cadc0-d193-4f27-95a0-659ad3bec061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12654676-a1d3-4dd6-aee2-c5a4c51097f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae7d2b6-bacc-49f3-9e27-0080d258e1b2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd6d69b-29b1-4462-a473-b327e5feeba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf101f83-bdd5-4e8f-acda-df8a9866f887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fda0d5-8abf-4814-8192-9a1f98a11d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7146432c-663a-4d29-a2d0-04617887df1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b7b4b8-eda5-47ee-baef-14a9e1905380",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c271af00-f2b8-48f0-91f2-ec1b61ef4f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432b6420-2b12-4c97-ba52-aefbf0cf62b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa0196e-603a-418b-b14f-897321f12cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f089f46b-7881-4adf-9639-a44276367cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e79f68-69a7-4371-a0a0-18e1f266acca",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7178bc62-3f68-4bb6-962f-c28c2c1718db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c8932f-5afb-4394-bd1f-2f661dd35829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aac1481-dfe6-4eac-ade1-9292bfbed153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "63c755f6-57f5-435e-b3ab-e834d01e6e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a50d0a4-a9bc-4097-891b-27ef7199e008",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fe486c-6c6b-41fd-a8d8-fa1a15d2642e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f71428-42a5-478c-a2b5-8090fc552e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f0ddc4-adf1-492e-9f13-d47a7cf8a746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00ab25c6-4c58-4a5b-8a74-ae9fb6a1d686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fb12dd-c133-4e17-aecd-1172c2eeb213",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1471bc1b-851b-46a1-bb10-b7ee8bc656ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672d4060-00f2-452d-9268-1689488d861a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06df6d02-1a54-49d0-9237-57a29964f483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4b62b2-dddc-463b-be73-f2b58b7ce932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c2b794-6290-4ba8-97a6-62e3f8d85ffb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39410fd-fbb2-452a-b2f9-26eb6e2f6091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747743dc-bab8-42b8-ba33-214542fc7400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d1e51f-5678-4108-a998-cb542799ba3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a030b47-2ada-4f65-bbf8-ec51856b047e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95776f80-c3c5-4545-be8b-50c26bc69af4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d83d03-8ecb-4a72-9ea2-1e6de32163b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9b655a-430e-4ad9-8f8d-11bf1bd1fa65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3705018b-dc66-4582-9594-00468f41f3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e944abf7-1b34-4c7b-9094-c8bdb963297e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adc8d48-6547-4eff-a0bc-308415c6db8c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa02d650-f350-437e-9b45-d2dd373e03af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f977b990-36c9-44e8-b359-ec56a207f473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc6165d-3a22-4590-b8cb-2a378f65afc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50551e18-1478-437e-a53d-89d9341229f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e305636-7d0b-4693-93d4-f7bd3875f4fb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9f0cb0-620c-4a13-b369-4395ca942268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb16cb87-0ee0-44d9-8ba7-35dabc3029aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31739c6-ea6d-48fa-ad78-be0255b0f291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6840d1f1-7442-47a4-b38f-37b84977e77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda1afc5-11ff-4f0b-bd1d-66f4be889b37",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4e7b73-1b80-4ed9-b06a-bc278a45ad73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f713a404-4a90-408e-a365-dfe1443d711f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8276aa-a6e8-4ed1-bfeb-2db501c94bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a42e2354-0d04-4221-8679-f5a7fecdb445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200ea971-c1b9-483f-a3e1-b5c8b78e56c1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba56505-8651-40f8-9102-7b7b6231f085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678fbeb3-ae62-44e0-93a9-0363efd35125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81008b0-bd8c-439d-a9b5-600d7348321d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd515cdc-eec2-40b9-bd25-42fe8e634df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a33baa-189e-48cd-a519-93a2f7686568",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f114eb0-97fb-48b6-9d06-a3c876caa7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4918be56-76a3-470f-872e-233cad3327fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3c560b-ced5-42a8-b2f4-b75c2f0d0b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "88225fe9-7b36-4a14-9651-0b010981ab07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c06b40-e2bf-4499-b4f2-58743e167215",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb779c5a-4f3a-4680-94c2-3d811654f5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1eba3dfb-9a33-48a2-8f0a-a9a4d3fa0fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2d13f6-6c8e-4d40-8f1d-5ea570600f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "378e3bdb-5fc1-4398-80da-e9685a288dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7655ef81-6e33-43a9-a16e-cdacf3334a2d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fad31f-092c-4aa8-9a2a-a7171c9e165c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4240b71-4502-4897-9732-7cbb10c4c43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cddef82-76b6-4254-9d46-765165a475e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0745b9d6-ba44-4e2e-bb0d-67268a2f37ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a451014-026b-489d-82c5-dd99df67188c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fbd2dd-1816-422a-b579-da0ba32aa9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f79c5c5-112b-4c57-b911-5ce3cc64eafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5a4c81-4c0b-48a2-8694-cb7d3cac6c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "18a0600e-2c7f-4684-9f26-41f2bd96537c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f3f169-1f9a-4dbe-b922-1f2f6814db6a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333ef549-0dfc-4f25-8857-aef39dbe3093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0cec071-a9b3-4e27-b4ca-bc0efa4fd484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31154424-4e67-478a-b222-13db299c890c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eefc9068-a980-47db-866c-deacb40128da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17563f47-dcb0-496f-bcc6-489df6ad8fa8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3ed5d4-1d68-40d3-b8d2-050e441254fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d0f8dd-326f-43cf-bf0e-da3a26c34534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1661b170-8c44-4b39-92d3-9a04ab1ae813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a06d9be0-70ba-470f-b511-bdb93101718b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a4153b-05d7-4437-817d-236eb7f2be2a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea93eb93-052e-4230-8e83-2b6620d03ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4223ce5d-98bc-434f-8df9-c1bba1b4c891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68db74d4-933c-4471-8621-3e18a1ddce2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "76d6cfb8-3c50-4e6e-97da-3097655df311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e7d334-8162-453c-84fb-4976d52bee6d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952ff1ec-18a0-476e-8d26-c9243bb7a1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517acea5-52b9-40a7-8e71-cbd2e8cc10bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555e4dc7-e918-40c0-bfbf-9116fe53a718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9e66d23a-31d5-46a6-8366-ff7322e937ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd15e1db-cb39-4898-b47a-d6ad79b43084",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118a28f1-5233-479d-a1d9-e2ec569183ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e56a8c-3969-45db-94e7-53a188597eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b73172b-e7b0-4c54-bf2c-ff25a87bee12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2766851c-4e76-47fd-badd-2810ddb6b80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ddfba0-bba6-4180-8678-53880b526775",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbcb40d-3fc6-406f-a3fb-d51944266fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5b1663-4ee7-4e06-a98e-bbcbe7b4ba05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe328b33-4181-48b0-b2c3-6de0cb1c03f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9fd3495-00c9-47f4-8453-af0bf692a2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e69b120-d882-4c75-8a25-36caeb86049f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7866fc-2513-40bd-88ba-c06cf6c75fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be56440c-2292-4808-b66e-1c3b679046f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b390a0-17b3-41d2-bc75-ec9a0e85aec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1be3f05-f8e0-445a-a12a-a6ad0e4bfc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623394ce-db6e-4967-b83d-da334b7bca0b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bc6b23-e4c9-4b96-840b-b8d46a145216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98503a46-7821-4558-8bf4-2bf8dae07e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8eb55c5-9d31-4787-95e0-43795b011e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cfa3036-52f9-481f-ae99-1fb169f4cff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696405ff-9ed9-442c-9193-4c1fc8665f68",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bf52d1-d475-4bbb-a24b-65d35cffd7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13244216-f6f5-4bcc-9186-593d6869a009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a75153-b146-41f9-9952-61e17e627425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5605051-5634-42a6-a577-d03c88ec1f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3f802d-fd7c-42eb-a8f9-c38062bf5072",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4940f46c-97c7-4fbf-b00c-8bba0479abfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838e17bc-b319-4c09-9cfc-24546698daaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2fb4fc-6549-43f6-bd60-86a3ec5e5aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac7080c-784a-4667-94bd-e4abf4b29e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6223e5c8-ebe5-4b25-8fd9-7c40aba7f829",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adec5d66-e7f7-45c9-a8fe-641db6d4255c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6045fe-dd8e-4b5d-8ca7-f785df895c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7f1843-2dd4-4bf6-8768-e6c25681a29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b81a2c5-8002-4a58-9151-1001ff24d1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cae59f-da02-4e4d-ac56-6652e924c08e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68654866-0d9b-40d5-9da0-97162d44aa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e46a579-d76b-47a0-b5c4-322d0dedd0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf7af33-a257-4f9d-b908-2c73e8ee8295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4672be52-0bab-40bc-83c5-14417b50f086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05942f98-b31e-42b2-9466-5d66fb19b97f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e7ca6d-042f-4f6d-886b-f776c86b596c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1a0b37-a58e-47b4-a158-f59108fabfb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33de55c-8061-4a64-9d0d-8b12ae3c389a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5ea383-7577-4c96-863c-57df3d51f257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f6c46f-b21c-479c-b4c8-47f5698ee27f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e5bb44-52cd-42c6-807f-ff6495a65526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cff70e-0851-40d4-b512-748bf8708df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003a0cbc-527b-4922-8f4e-9638c236abe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f66d02-8f1d-42a4-bb2b-44d652ab6e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9506169-8747-40e4-a62b-b958e2e6d9a1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b623a905-e782-4367-a101-a28f2f008613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c636ec-e7fa-40e1-9fe0-65f69e28a20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6431ed68-bf37-49fc-b0f1-50e50dba0c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76787129-ad27-49bf-9e81-3fb0b75da8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f328c513-a714-446d-a2ff-5c61db14e882",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f26c88c-db78-432b-862d-b666de5204a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9b14f8-5104-415b-ac70-c79adaf738bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116a22a7-7871-4f79-a9f0-772f91c49aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c94c02a1-5917-4db6-8e71-628a501ea63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fefd12-4124-4f1d-ac5e-095d72353a92",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8343f806-b389-4d10-b4e9-29e8176f3393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f169e480-1b46-4e83-b082-9b6182dff928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ae4068-8a91-4115-a87a-2f727018d66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f571c39a-d53a-4761-85dd-dcaf9bbeb201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f588f5-d860-40a8-93ef-02dd6d940d52",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23302dc6-d5ca-440f-9d3a-cee40138c6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee1b810-f6fa-4687-8927-87b6ecfc67db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a68c18-994b-45c1-b4ae-49c15a0fbc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c46b7cf2-38c3-4427-a9f2-f9bdd14bc110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b0cbe0-5095-4b5b-902b-02d4a1773814",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be6550f-c8bf-4787-9414-ed8276362459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97eb3a5-d852-4134-ad2c-c49ea3532927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ef7a67-a762-44d7-9646-a19c35fbf472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "725e4f5a-41e5-4550-916c-dc0521c2a428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f44037d-9576-4aee-8716-31ec6fc02ef7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d9143d-cdbb-4c48-b80d-4ef9fda6e978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e801f3f9-da34-4cc5-af50-b75d722dea71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286ed226-7e62-46fa-8b72-cb791425a533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb90d283-0e76-46ca-8265-ea35ff65ae61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7295419a-1109-4baf-b0b3-a3cbc68f54fc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade509b3-e7f7-4e2f-85f4-08575d26a196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24cb938-59ae-4143-a994-96440c6f7197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02feaffb-5a16-41d3-b425-34aa167cf394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "814b0399-c648-42b8-99c9-9b558d6c8194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8409538-4332-4f4c-9096-5d2d24ac7bda",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc7d91d-cdbd-4986-a959-74ffa8699632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc95ea7-514b-4ddb-a373-c5497d0b10ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d258c6-a7e7-43e9-a4bc-9becbc5939e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5271285-039e-4d9c-939d-5df033acffc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de36ebe-e177-4241-b31e-9af5038fceef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da95c339-a42b-4cf5-85a1-c56956fce0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5302f0-8446-4f0a-85fd-3f7ab0ce39ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c5a67a-0bc9-4297-95c6-4960b74b9fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "11447b6e-431a-41e2-9477-6430cf91eb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd12aa0-ab18-4e14-9421-964bef57e048",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a56502-89d2-4ce0-baaf-d98fb5d6d43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90ffa6d-8158-4523-9893-6d111d8d8a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b742c88-8067-4678-a977-b6bfc850eb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "576debff-3d70-45d7-987b-117d08aca360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45637083-9c77-4358-a11b-e0ecd75c3d04",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2912be-fa67-47d4-ae66-a9c14cc68b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9704f272-a5dd-47e0-b8bd-1b62ff3f7ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38165c8-82eb-4172-8269-87ca2fe41295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d32bad28-5433-4825-8a85-d4f9a2e8f789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c686b60-d68e-4377-87c2-3a8f654fc385",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3c6244-6b1c-4a40-845a-2103bce3ccbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68c4d82-c86d-4160-951c-2f644ffb183f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6a109c-82a0-405d-ab51-043ad9277f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "004002e4-cfc6-4836-b636-b74d39a34151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58abd820-868c-4de4-a55e-1855df0685b6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b819db7-6436-44f6-9211-98407e56d6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabe87cb-0130-4942-a748-dbf1add1576e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64261034-4935-4938-85b2-0b2b06ecdd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6b6f18-44e5-4066-84d0-2350052eb64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8e90bf-8b15-4365-9e67-a1f4f35b29dc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596ed5cb-7a7b-4888-95fb-2a821b2cc873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aaa1d94-42be-42c7-91f1-3bf9685ff340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab43a15-4ca3-4ea8-a99c-4ebec168adbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a08108a-3a6a-4e9e-aa5f-df8a381a516e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb8cb03-6417-4dcc-b79a-77196669d7cd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5da8f21-5553-43f4-9f67-5c2214633cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3119bb2-3164-47a4-988f-21b9a3cd648c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16d30f2-d306-4d11-af4b-d1ae83cf5783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2b441e-7fdd-408c-959b-8a9006e4a88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ee21d2-a13a-4802-a3f8-6b71b6a87c7f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc7c7dc-4f3c-4b5d-9e6a-8730124069d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069acfb3-29dd-490e-9e57-1e7b7b878705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809cc32f-6274-47f3-9855-02bd93d2d7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3dabf3c-59c1-4193-be0c-868699786cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769e6bc9-519a-4b70-8220-910470295723",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba177945-4c54-44c8-874c-2f7c72769365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b05493b-213b-48a2-817f-8de91b56d1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ddf272-394c-4e0f-b6d2-bd38a94ff105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c529f6-05c2-4bd1-b784-b3bd3d61be05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4158f7d7-8cfb-49b9-beb2-ef6c742ec848",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05257d5a-e461-42bc-8e1a-63a1eae56f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417e8b56-5c0b-4fa0-bde3-50307d07afa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9dd06e-bb3f-4182-825c-275be063e5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7327a0a2-2bae-4624-8642-5c5372d97f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862ff31a-172b-4b0c-a2ff-1447be51f754",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469f93aa-c0e4-4b98-85db-e2ad08567e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2ac215-0cd1-454d-a88d-ba66f51170b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb16ace4-7d25-4d67-8d1c-ad4c241cfb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b81285e-5be1-43c5-ae67-5d15e8c782f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3bb8d9-283c-4fe8-95f1-f4ee6f456a7e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1922883d-01dc-4683-b273-844e7b0e2df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9333b0-0517-4a04-bc14-16836a33f235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db97cfe-eb50-48ce-8528-ae472e6287a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f417e499-72bb-4d8b-a105-08a903f678cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425e1d91-18b2-412f-99ee-07d53c593b72",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57044697-c06d-4c34-82f2-e40951a838c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec11d500-9d81-4980-aa31-d58c40c42624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fdd192-d658-4ec6-90cd-def1c5c4e3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa61efd-6156-4195-9e7a-72bc6323bb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bfdb4f-8c79-4e52-91ad-3da32a8e90cf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd53875c-2959-4b8b-8ba5-28bab3172a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ca843e-70fa-454a-9f83-4c1c3bb64c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7d3d11-e583-47b5-9abb-3018710a8ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8128b7fe-78a1-43fd-8dc0-7622410b0f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91631cde-6120-481d-86d2-b436f6110992",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadd7d48-2faf-4109-bee7-4c0735e71148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b87a933-6fb9-470f-a104-e46cc2013a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcffd42f-2845-46ca-9acb-ea6c86bf9367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6377f2-7b95-44a6-b584-784a4343c78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a507584-66e1-41f2-a6fb-ca55af0fc35d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c982cf-89ec-4b6a-a095-4533e315223b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25dbf02-a6db-44e6-b67b-a357413938a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e28503-551e-4866-86ec-d53807f0f9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6afcf411-b462-4845-b830-eea1de38ce8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3900cbc-89cb-434c-be0b-931ac357c9ea",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f51f758-c334-49b9-8f94-a66fbe1cc780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230ebbac-14a9-4016-8331-1ffadc35671b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f8768c-870c-44df-8f34-b187c88136d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "532c494c-06a4-4dc2-b626-2962fc6052a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62d6c8c-daa2-463f-bcf1-37d05fffbd3b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3861700c-6806-49ec-bb10-8afbe48e2ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e0f2a7-c15d-4a9d-8d31-3f7b1328fefa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e70e69-b8b6-4dbe-9d47-613f5ad97313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04b399b7-75da-4f5a-b720-6bf3a5e09b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d314d7e-d4b0-4ce5-a823-1b10c728e67f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbdacba-1f17-4014-89af-f36262e4626a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb914d28-462b-46ad-8051-ac1e53527565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712f5b66-daa6-49a3-bbe3-a61f93ac4719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84cacb4e-343e-4e56-be8c-b5273bd0aed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117fff14-89d9-49d8-a735-eb1b7447093a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3574e42f-172d-45cd-8267-d74fbf40d859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35535c3-9677-4e0c-a349-0eb15d8f1ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c379ef3f-a686-4289-92e5-670069d67f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94eb505e-91a2-4577-9c76-86116da794c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e920ff1-83dd-422f-873b-bff79ae2bc79",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf1d876-adf1-4eed-8c29-c8ba03f7dbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e361de0-0c98-4d35-8b1f-511cc929bfc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c4fd04-6f0d-4b51-891b-09d51bd2190f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "42721010-77df-4733-9d4a-10ef624fa959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acc87d8-8d69-4805-b0ca-83cb3cb94baf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f6fb42-f702-45c8-a317-617205f739b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc61a1c-0060-487d-9823-dcb9906acce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c17730a-7084-4b5b-a2ab-e3ede4f3b8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f695e9d1-baf6-48d4-870c-0904e081e84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9b963d-e8c2-477d-8a8f-d234dacafcff",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33b1fad-80fa-4179-95d4-29ae0cc1f2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2906830b-abd5-4701-bf3e-98d263d9a6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d350b7d1-296d-4335-be8f-329841ac2dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bebe4da0-bbde-43a7-9c1b-210b33e8a8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bddc771-fd1f-48bb-b376-9a99935844df",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f520fb-9c88-4574-9f6d-3667d6cbcb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de027a8-8b82-483a-8ec6-86a67c7790fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7f8eba-57c2-4dc9-a266-f8eab5861ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a763b22b-63fc-47fa-94ba-e7632791cb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e38b1a-8ad3-4462-9d6e-0a1d171d0c8c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa80fa9b-c949-45aa-984a-2f09559fcb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036d0a4d-c5b7-4d0e-9438-d0d0a2e4eafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c200b389-6897-4233-8bbe-be6599b92886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b41dcc66-e0b5-49e2-a4c5-a7048671d5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cec9b34-026f-46e4-9ddc-e17a30681c60",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0990b0-1ee6-4e94-afd0-11468a2cdaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abea9508-44fd-4cf9-979b-37196ba675c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953b1586-58b8-448c-9d08-4510736ab9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe469e0-4d12-4a7e-91b6-85e37bc8416e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbaf92c8-4e1a-4984-aecf-d8cf7c21ded8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a340961-f3f2-4e6a-ad8a-948e0bfa11ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651371fd-e3fa-466b-a14a-c712ce7eb52f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad88224f-2bdc-46dd-b987-b650789c6e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d1d870-a168-4a61-807b-3826b8e41d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b68957-0160-474c-a73c-3a3b39ec7b02",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159d8190-ba62-4a9e-9e5f-f9730d4d72da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ea51ac-1194-449e-80b7-389e2e62a96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d106c5e-9e64-4b05-b5cb-4122eb3564fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb721342-ce9f-40a7-93f4-7eed24f90526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8537918c-80c9-4ae9-b540-c9f9ec927b13",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfc2c8a-441d-4550-8bde-65061255182e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b9959a-ef2d-4507-a5d2-f0334b4a9599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002c4a5e-33d3-4ecb-a9dc-0418a1f433d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8280b3-9cc4-49c5-b8fd-d5c454358ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca8786e-5de2-4801-9722-673bfbacc824",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7eb1f2f-9fc6-4f2f-8a43-afba9cd56d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf35ee70-f769-43a6-91df-4c506b1af4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451a4b69-5393-4ca4-981a-c39a2c04c44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7bb2a5-52bc-4514-8144-674ed2a26f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b750f8d-fc55-49fc-9ff9-7d9ab28521cf",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdab7f4-6320-4b81-8da7-7e21723c0c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe160f7f-bfbd-4843-bad0-ffbbc46615d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdda7c5-0757-4f0d-8fa7-6cd6ed8560a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d584ebac-33d3-4605-aea4-4058f0276cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4caa10e-a4d3-41cb-bb2d-6db840e5e981",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1c6a86-d5a1-4e88-b1a7-60c2af36485d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0e9661f3-4ffb-4f7c-8ad4-2cb83273ef24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e88fa5c-cf89-4532-9f94-48b0c073ae44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7588d05e-b84a-44c8-b619-5021debf2fb9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ae672d3-07f0-4431-8d79-1d73b818f23a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "381ed077-2129-4bae-a572-51ae0fa7e0ac",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c3e074-2961-42e5-b7d1-da0157c5db70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12f61db6-f0df-42bc-b742-850402770c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a51682-c164-499d-889d-14626331b1f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dc2cc0d-13a8-465d-a36e-4979eec6b06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e0eeb1-1b37-4839-bc88-823ceecbbfba",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343d8e1b-518e-4d24-a8fe-409f2f8ad880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bd64626-ba33-4baa-9163-bac569027d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457ef9b6-9723-4c5f-bc5d-caaae837e241",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cca434c-f7b1-4990-8220-0249ecd3c8f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01039fa1-5b0a-4544-b0d8-5dfaaac63c21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d120d3b2-f6eb-4e74-a299-454aa7228594"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1714ed43-626b-4d53-a446-f46072df1308",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2460209-7527-4a58-baa2-7acbe4def5c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2ae1a12-9dff-4f99-baf5-eb2baca61901",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00d2d0e9-f80e-4df4-b208-d6276f38ac1a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b6500089-5ba3-4f18-89d8-d494f71505cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d0f2000-0e59-48d3-a864-5396ad397ed0"
                }
              }
            ]
          },
          {
            "id": "903318a8-cb47-468c-94a3-3b82b539d990",
            "name": "Positive Testing",
            "item": [
              {
                "id": "be28f62a-10f1-4c99-9e35-07e654be1853",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6679718-4ac7-4070-a517-5a9208f13476",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dcdd4b7d-2f8a-4707-b1ac-66a5dc4e2b97"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc173e8b-601c-407a-84c9-5665e83ed656",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "be5c6902-b774-4419-93bc-093ab49b503a"
                    }
                  }
                ]
              },
              {
                "id": "708ce255-b116-440c-af24-910d25032d64",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44659377-b067-46c8-8683-7d22c1f53a6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57271aa7-a503-4429-a185-243960db0265"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "644b1cbb-4f43-4353-a8eb-cb7e5838f896",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1dfefa15-562f-440f-a9aa-c5a022f08820"
                    }
                  }
                ]
              },
              {
                "id": "36033ad1-7314-4ae1-9cf1-fd78ab77f723",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8a6431a-d8be-4bc0-b153-e5bc5b127b3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a492bd2-057c-4b05-9045-71f964e985c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1607498-35c7-4ebf-beab-d43bf5e60d5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e57a8ce-4955-4dbd-876f-c8688ff63f4c"
                    }
                  }
                ]
              },
              {
                "id": "ac0d5c14-5331-4fce-b932-234eabbf5f0a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a6c76ff-0c5b-4abc-bfe0-0c3cd0d78f71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12398d78-559a-48fd-829a-6c526aa6bc1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1904f2b-4a45-43de-a0de-996bca75aef6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f53c9f2b-6c44-4079-86fc-4239b224d9d3"
                    }
                  }
                ]
              },
              {
                "id": "3e3289c7-627a-4de8-a25c-f7aa587c4dd7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "676556e0-b934-4575-ba3b-f275a4cf3991",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b33f522e-a9d6-4345-a5aa-417200cdc331"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cd6cec8-6016-4f73-9ae5-e9cd24f52a94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4175206f-c8fc-45a5-9d18-646694b89b4e"
                    }
                  }
                ]
              },
              {
                "id": "53dd68f1-3542-4067-93be-2c8052f9cf78",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7557a1a-5b56-43c7-8f21-5adaacbe4c24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "658e3293-c818-4422-b17f-b562c55b1e7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c4d680f-3c6e-414e-b1e7-9ba3602b88d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0fc10238-87d3-49f8-a48f-888e091a8608"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e738b871-657f-4024-8052-994cfb69bdbb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "200492a6-0655-4442-bbbc-f6de0faabe9c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c1c63f10-db53-4f65-b982-b9ce7898b151",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "275e26b8-b15d-4f60-add6-3a729c72a0aa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7261fe89-46b1-48aa-8292-4a89f2476451",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1fece77d-6897-46b1-be7f-b56b4de1449d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e273a4b0-eda4-4597-ba05-a5bdb3814c79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c5e09c8-3164-4364-bbd6-0a975f28c7c4"
            }
          }
        ]
      },
      {
        "id": "ff729fd7-80ce-49a8-92ae-7c0845cf2b5c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fdae7880-9c25-47ee-b531-a25bc18b1088",
            "name": "Negative Testing",
            "item": [
              {
                "id": "502680b8-d567-40e2-9c0e-22721147d39c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f50ee8e0-ab00-4859-8bbc-c8077b16cec3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc673522-d35e-4f6d-9ccb-626c0c6259d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa7e850-65ea-4e99-aa26-19deaabf2918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c711eab-025d-442f-8823-1f52d6be4a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e93c6e47-9653-40dd-ab07-14411dec8c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c875d787-0707-4f81-aea0-cea701e07bfb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aa4853-1ead-4c08-a979-6bfb9e16361b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5248cb-d3a1-4491-be44-7b2c29e8b5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d56afd-d274-4d26-8ba6-2ccd0e16b584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd97264-a74f-4b32-983f-13cbd5c9cde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75845eed-060d-4044-ae08-114eae27a58e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e78a18-de87-4216-8fe4-f927d66b1d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e290347c-3fbc-4ca6-a1ed-a7ef28b298eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb825dc2-fff6-45da-969d-51f77aa2df6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "121a2a0a-959c-4c41-8865-610d5b0fc221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d29a1d-3f20-47f0-9df1-7f060caf9709",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bc192c-e53b-48b3-ac78-ddc022c8cd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e374cfe0-49ca-4a46-b6e4-de43c3166a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805b63ea-92bc-4fc0-be48-0827659c4ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ae603d-35b3-4eb5-b6c2-a75ee9ee2ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0dddeb-251f-41bf-8716-cc628648209e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270be01e-bfa9-4e40-8f85-84b53f9388b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733f058e-441f-4e06-9538-9c538f391a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e38745-89d5-4bcc-942e-0309596444f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6437848-4444-4eb6-8575-33d02b1a06ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00247ef-ace7-4b03-9941-3e8a181f583b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc6958f-06bd-466a-b748-b762bfb5e56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2897aae2-68c3-4a7f-863b-463dedc842a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d417f0d5-c6cf-4ec4-b099-56ee77428bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c55ffc3-300f-443f-a962-1c1b171edfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7428e0c4-2ad3-43b2-a913-a0ee6f7e7f9c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c08c60a-1a0d-4d65-b33c-6e5d1d6139ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3ae3cc-584d-40c3-a931-aaddf6370a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1429fe5-afcb-409c-9683-fb093914d1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb2d64e-0846-4953-a850-16d8ed62ee1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b06c8a9-684c-44e7-9479-81c654491f9b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c52a351-836a-41a1-97d1-f43ddb4d9e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec992976-8883-4110-b1c1-7bbd73cd2be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b2dd12-d31c-43d0-9ef4-12c5aaaea51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bdeccf7-2346-4132-8019-e2078760cffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9588bcc-2f24-4b82-b1f2-7c1782e71d66",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ae024e-0fb2-4e3c-9a18-eb92d1e4e595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fc0b7b-da7a-46ef-a2d5-e0aa1924fb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4db82fa-f7da-4891-858c-7d012e8a3f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51af8be8-5523-40e9-befc-ad252274f2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126f2f70-341a-4e66-a320-dfad29db7558",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fc9717-1aa0-474f-b49d-4bc9c6da4473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf3b623-7789-4e0c-86d2-8a20fd4fd455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf07a4c7-b290-45e6-9468-782adf39df7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08da55ab-cf4d-4b14-bc75-46d57a97980c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a553423f-01ef-493b-87af-45c6ce3c2319",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159ea45c-b452-4834-abed-f1b3f3fb9802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c45669f-84a0-4c44-91c6-f2bfee0a60b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936040bf-ea09-42b1-b5c6-6c2df4b1cecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8f872a-7ab1-4446-abde-69e9f57cabaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e72a87-3a4c-4abd-a3df-4065bbfea430",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb40573-3d69-48c7-8a2f-526b8330f23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1348429-1f5f-4e40-b8f5-02a005ee948f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c50325-a522-4fa5-9436-41774c6ed29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc5780f-5090-405c-af99-a40e890cdcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e91b920-3a01-4e52-bc04-db77c317383b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6762bd-6410-4575-85a7-0431cd05fbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62dfbaed-fde7-4d4e-a907-a58217a27ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da6397c-8cdf-4637-be32-fbfc04285465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "953bb588-372b-4033-a4fe-34447fd2f3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313700e9-e8a7-415f-9e4d-8bb4fd09f18f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66eaa36-8640-4a1a-88ba-dd41d32c5cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f402e1-d4c2-4783-b35b-75f58f969749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24bdfad-9a83-4283-91c7-2b6f8caaef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "579e8dfb-616b-491d-ad1e-c859343036ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec967fe-0197-40a8-8b77-75f5a287e8da",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9033997d-680b-48aa-adcb-cbe3f180d149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550c2c7e-59d6-4030-8c51-f242c4c190ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2da4dc5-90dc-4265-80fc-07b771d42af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e418f855-f849-4ede-bfc2-c20d9ad2fcf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597b300c-4d64-437e-98b5-6d83ebf6958f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf984bb-6e03-4a98-b7c8-bb5019913e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78993a7b-7914-4e13-ac20-0829049d0134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ccfb4f-1afd-43ac-b247-2e92145f4336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7692042-ee34-4a1a-8880-720663032137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374f39be-6df1-4046-be1d-308ea48d56c4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1340309-2b4e-4fcd-91d1-6ff954bbbdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e852c5b9-d243-40ae-a346-4815e2ce5a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d290c98-715b-4607-9cde-e2d40583eecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8563d901-fff9-4880-b522-f2db0bf395d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769a4495-3838-4bfe-a05c-fdd272da1a61",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f1130c-c77f-436f-9124-75588fbd7601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f159003-7b70-4f96-a53b-ff59289a667a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20d672d-bd81-4cda-a4e2-037d5247874e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "390c87da-e7e2-46a3-9261-ca32d837cdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a936715e-3572-4032-a1a6-cc6e94b07eb9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e998687-a272-4fb1-a397-c0ffe7802b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dddbbc2-a787-44cd-8204-b245f2b19093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63946a6-bbf5-4da4-8070-c3a42fcc1ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8862f14d-5bde-4888-9d88-7ec8aa805d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2fab3d-3fe0-464c-bbdc-fc3fbbcbb0cb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfa8722-33f8-4909-9aa9-e76c1fbf9216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e87a493-4b19-4193-a696-e04952d951ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f550abe7-0843-4869-97f5-57d902c15e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe973fa2-9fc0-41e4-9be0-c2d9c4682193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ade4f5-19f6-4871-9da5-dc04229ebd7d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a85196-650c-417b-be04-31459f3de861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e898cb-0329-4bd5-97d5-08cf2db4bc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270a65e0-905a-406a-b5aa-a3230dd99886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab72a28b-b532-4c9e-b361-8b87ecee00e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f754693a-22a1-4a31-9567-e7c2dd23665b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fdeb28-7549-42db-9396-5e942054939f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47600eaf-25aa-4927-90e2-d31b09e4703a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ada837e-c0b1-4386-9b98-c53018f37bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddeda062-1a5c-41c0-a3fc-7d47b09794c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d2c3b8-bc01-4a07-8d78-1d08803b8e89",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e2b01c-3926-4cbc-917e-bf45e25fb5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f337a0e-d983-476e-a9d8-24831a6547d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c05f546-0df8-46ee-bb8f-401427c0893a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08889cb8-7b75-4c1c-9139-4bdf7dfe7ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb04635-f752-4de1-987d-4952febac44e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2cbf6d-9ebd-4619-a1c1-1bcbae9dd181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bde0b53-455f-4028-8a65-a7877ff062c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a722f1a6-30ce-4318-811e-b822b40819e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a81b961f-7d47-4fa0-9266-0fecdf415cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c937015a-755e-4d8c-9c6e-4d36e4eb6df6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80858fa3-88bb-441a-aa22-5d5179d0186e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478f75ad-9506-476b-99a4-d2b186fa0b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa557b9-19b8-4fbd-b825-30202e9e612e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "229a2f2c-d6b7-43f8-b042-17016092b238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5043e9-798c-4ed6-9bcf-1ca1d9fce3da",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ca12da-d013-43c5-9b83-45e18194174e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29b5f01-c0b0-4168-b029-5a1b4218acf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053ba538-b42d-41c3-944c-fcd0cb76caf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d91fa32-33e1-472e-94f5-c03b6b0b3cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834521ad-6e75-48cc-8b81-72026687ef58",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5dc09a0-b35a-45ae-b9ef-e4d18c493d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d2219b-c03b-475d-a8a6-2ba81488cb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13d15e1-0da7-4dfc-9ea3-aa89ada3bf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d699bad3-4a8d-474e-b98b-3f1543b7caa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4129e7-0906-4984-bb23-6626332b9965",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f9b236-5cb1-4ac2-b427-1c74976a940c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7738b412-0e50-46a5-aa35-0657faaa9a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9b3421-5719-4c2c-bec2-2f59d788f5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f616c36-73b5-403e-afe4-629652d9a0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada029c2-1de2-4ae7-94ce-c93ed37b31ed",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226ecb5f-7aca-4561-9aaa-06d4dc44c0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9e78cd-9e00-483c-80e7-4d944e5e4473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dce1b9-14ee-4934-88b5-7e686951ca67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bee823ee-526c-4c86-9695-8b271b2f6db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c5cd4b-ad65-4903-be73-1aba2428685b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2294167-efcf-4274-8045-2914dc70276d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c420c24d-7542-4252-8cd6-505cdc32400a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bfaca9-2108-4a29-8665-3ac450721124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "042cd955-8d5a-4d5c-82cd-35b4690a3d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab09fc2-5c58-4151-8b2f-6095a95f65e7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596ac755-8a12-45e8-b98b-1f3826a3d6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ba05da-4e7a-4930-90db-6d46179b1ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7289654e-31ee-4c5f-9497-19e2c6752b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4679c78b-fe31-4626-b1c8-65a3af9c5071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab073de3-b9b0-40f4-b1f5-d0d589b80774",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16defe1d-36dd-44aa-b0b6-f5ef25c8b88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3387fef-84d4-4df7-af77-8528b31d9b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de68039c-a29a-4167-9a4c-9fcc28273f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86888903-1a1e-4813-8e6b-7ac5d514a7e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6109aed6-59bb-4326-9c03-8d762672262e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b747fb3-a59d-4dd8-92b4-d1564c66b881",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55dd62e-5143-4d67-a26f-32056892e8eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3d5b56-55cc-4033-be33-8857c4594a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e895dc-982f-4443-a228-65fb43a8979c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f07c1658-c17c-4c3b-918d-81016159ed0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4273bad-14cf-4b29-9627-91f58d7835fc",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e60fc41-7098-4cb9-857a-e5fcf520164a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d7cf2f37-ab8e-4f34-bf4f-4b96aca1d27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad7eda7-2c4d-454c-bc94-ae1d29056df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b76454f2-750c-406d-81aa-2fc3259cdfac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d45a254e-090b-4378-abb0-1b568f867835",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fb30ed7-ec5f-47f7-868c-101febf53946"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4165a79b-e721-4983-bf17-d2120a362e33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3162e02c-760d-43cb-97e9-5b60788933ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81a4d9ad-df0c-4af8-843a-ad1064f226fc",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b69283b8-467a-47ff-a197-f16d18524d1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0e8a97c-c2dc-45a3-85f7-25eebb0a519c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53264213-eddd-49bf-8ced-2ae92b7d2e30"
            }
          }
        ]
      },
      {
        "id": "6fb200b2-ce9c-4735-9038-0bc2f3e6434b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c1e4fbe5-ac83-47a4-99c2-caff0112c937",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0be93f2e-f570-42ee-8555-cae62477a36e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6915007-d13c-4007-98af-54d4b1bfa401",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e84381f-8e1b-4f70-b5b5-5e244c7545cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f338c0-49ed-4d2b-8985-861d460a5db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967b1107-790e-40ca-b13b-90c0c07472dd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f4f57d-a43a-494a-9b6e-79a96830e038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc7c9c1-00eb-4c5c-9dca-6da6188ac984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d682e986-373c-419d-b528-44c8dcae9892",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d63a30-1cb8-497e-8f24-ef1652e96e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196fce9d-8596-4ec7-a445-d94e0ed62042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa12d03-a85c-4e28-8ba8-1bdb03efbd84",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0643ab16-2629-471b-9907-51a7457931ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19caef5-aaa6-4905-b923-e8691d034b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c67cb33-5f27-4d30-ab9c-8e72fc66d8e5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e58845-92f9-454d-a8c9-9fa03078a471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1995525b-e401-4940-92e7-25b7baf7bd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70d2477-31b3-45dc-9b6d-7989644ba9bc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94449367-fd37-4986-922d-47524c9af2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d62b87-0204-4816-bd74-0e6bc9f95699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7555c368-2944-414d-a1c9-ef2610913f0d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d42ef8-2b80-4adf-adeb-879c02a40477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b2de61-9165-4c74-a820-69d6316524f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718a264a-bece-40ba-b5e9-287c24e60bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e73042f-65f1-47d0-b266-a3f06498f2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30395e0d-0ee5-4a4b-a499-7cf4fd3f6d04",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb85fe4-d220-4979-9ec0-2d5b822611d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac1d0f7-59b3-4dd7-9555-1a1a2170b163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01838bd9-2ad3-48b4-a668-ba7739e74888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcea225-0dec-415f-b0e6-40b6eebd8b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab825506-1878-4dff-86ca-42632fc585c0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b5641b-66e2-40fe-a38a-ead79bbb9e94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8acde4c0-f240-443f-8abb-63d93944abd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cad11d7-8102-4436-98fd-c3a94146b5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38540d21-e936-4763-a393-7d079d1289a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a65c1c-5400-4477-88ce-ab09def2a93f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e11e983-2146-48fc-8974-e8bd98825776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18bd7729-0e98-49a5-bdbb-78f1a4a834ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4449b082-7b52-4859-b0f7-e4c42846b5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf65e3f-ccbb-4389-b43e-6187fb38bf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690f6f8c-7f40-43a4-8508-c3407ad16137",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684ccdc0-ce5a-4b9a-b419-a57da40728b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48149aa5-cc13-4399-9ea2-b79207bb1ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219eb568-cee6-4560-8d0c-84b846967f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a4d49d-c6dd-40fc-bae4-79732b0743d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264277a8-cab3-4d32-bc49-034a785df9d7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec98ed3-236b-4e84-9395-b19669b49223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b20e85-b048-488b-b6df-947358a4806d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15620fb4-3c83-432c-8317-9c9bdfa9a5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17cca05-85a5-4eea-b8bf-5912c8b7bbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e302d3b7-d9eb-4d9e-af37-a43a60903686",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7a121d-be9c-4b9d-90c8-82d6e51cfba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa264dd-0688-4cc2-adc5-005db1bb8b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d8ad28-0899-4c4e-b023-54814368d815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483d74e9-027c-42d6-92ea-1c30c7a2dfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42d4202-31f8-4c71-8bf8-06274a94846b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2720e4f1-81fe-4c8b-a1be-27c4889f51db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2102927f-a18a-4dd0-b937-114f1ad93e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cb9294-45f7-473e-9c84-674eed8d09bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee06afa-8b94-43e8-9aca-eab9e793aed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ab4e76-d1c4-48f6-88de-7271649a0027",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedc104a-3a67-49ea-98de-ee1ce73eb8d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d9612f2-1a6c-4a68-9493-0e4349f7a55b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a4261b-6e3a-4e79-94e9-f5faff006cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9149686b-10e0-48cb-a744-20989ed64a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177da1fb-3652-41c6-a16f-fae5aae6bc6d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9b3050-6df0-4b92-81c8-35a80f2b5a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518d5124-7e2e-43c0-b81d-d7444501ecd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a8d4bd-2e1f-4cc8-b2bb-8f5e4e4039b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b03af1-222a-436b-bfe1-bc01821ee616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93eb3d15-9cb1-4e1a-9516-02a97d3b5b06",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301dd8a9-752a-41cb-bac1-0efdc569ad97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd29c3d-900a-48ea-88f2-860cf222f7b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e472136-5a7a-490d-996c-ebf0d6a09a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38150dbc-bbb9-4c9d-a397-c1127d4de149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea258dd6-fe2b-48f6-a78b-1d29a4f80378",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da3842e-6548-4d92-8f1a-a8cff7c91cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de6d5b96-cb8d-43bc-97ba-6aea73cc7539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5fb507-e43c-470c-8301-37c66e6a5566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e6fe41-bee2-4bb0-9c7d-b1ef63b61e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56098af-1940-4323-83ed-56692e67808a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77df7f8e-892a-41a5-8135-4770cfa88633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f16e2f-4e91-4e5d-a40c-6c798f6a7a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb27042-c043-4884-8bae-134c407acecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b15279d-472a-442b-bbc2-b702141a7f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1796ed2d-ec13-4dea-8aac-2168e1b287f9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f228656c-b576-4d9e-8f97-557625a126dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24cb425-05da-431e-bc4c-a2158b55300b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9521bce-4fa4-4108-8e73-cd16ec796d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee177a2-367a-43eb-aea7-0d3de20b007d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97b67ad-9680-43f6-8840-38273f6f0a40",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9378ac-a80d-48c8-9049-dff7065ea993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3f09e7-048c-4b5d-abce-1782556f29af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d0ba41-3467-496e-bc46-02077f465e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebec4a6a-0775-47a8-9a26-7cb0cc847644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1103fed-0f79-4b4f-9466-f35ff5acf628",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449c3495-3dee-4e4c-bdcf-1379db51dc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e76e644-4aa4-4069-806f-bb5778af575e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7d909a-74b9-4e2a-8ba0-2d06391a32ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c31214a-8f33-4b67-b7b0-0cf343ca7646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38465fcb-0428-49fd-ad80-678d4f37d741",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72299115-3661-4fcf-a895-81efb39624a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d327036f-b6d0-4d75-b5d9-789bbfa531cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321af5df-c6b2-4e0a-b366-3460424782da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7262b4d-b702-4046-a4d7-a9f2afe9256a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e08ea83-7d77-454d-998e-8293c78f6ca5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221562ac-b395-4cf5-bb3b-3b2962b5fbf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0bae05d-3a30-47ad-9fd0-549ab31ecc48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9403c55f-4388-4aca-b35b-f96a9e8f4244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e66f99-54ee-41f0-af7d-8e3b79ab16d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b452fade-ff22-4069-a623-93fa5bb5fd1d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87910f0-0bb0-457a-8a94-96d758dc23b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6d5f700-5769-4f15-8f36-e0a9b762e4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c49b536-f0e5-4ef6-89e8-023c6a1fd853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f89bc7-2778-418b-be8a-9499800bd829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf8227b-7c75-4b79-a17a-2a04ca25a7fd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d212f510-6b1f-4530-be2c-895638598c53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8a0ee8f-e965-4c84-820e-3b4fe67f9adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1294e105-48ac-4cfa-af55-fcfba14fe2e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91d808f-dd4a-46e3-a9b6-574a9afff234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49c5de8-dfed-4c77-9049-d4f0eaa74351",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5eb5e6-3d89-492b-a4fe-3dbd0e2dcb10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3590bc4d-a94b-45be-bb26-fc6c67de77ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2f276c-6395-47d6-8223-58a3b73779fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c63900-55b3-4a47-8336-0fdcd08b0d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9136c42a-cd00-40d8-9495-caa47249501c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a14452a-3a51-42ae-a26c-4ad4a22bae04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f039aa-8d3e-4fe8-bf2d-309140255c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0cac83-2df2-471a-9e73-6fbadcdb67c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541cf6bc-4f12-408c-aeda-2db70382e461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e0dd4b-eeb7-4be8-b059-d32cc38a8fd0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cc5fba-19a5-4538-9ffb-7a2ebf8d1ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af29e28c-0461-4769-a9d0-b1635f1c8008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f235be0-c192-4fbc-95af-be6920977678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86f498c-c338-4740-9b56-cdf20b89fc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177c4040-a582-45ca-b3ea-e1974b728944",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cda79b4-c5e4-4092-97cf-2a4ea8a03715",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "740d694f-fcc3-4fb7-a91c-d02e2201a16d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90003069-8f8d-486f-b884-773550369ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199eceb1-b06c-4cc1-b486-ed22b5ea0653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b5aa7f-ce8d-4524-8d7c-039c51938bef",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783f3865-0849-42a9-8494-812f2bae1318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95215c2d-d133-4ab7-a682-beb85306c3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d388a5-e11c-4b47-8424-2a53a530bc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356bc441-e168-4cef-bf74-6b4bfc88ba28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47672c6b-996e-49b1-94aa-8a4b2e636190",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1638d3-0fea-4c0d-b2b7-67947b0a8368",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e39ce65-510c-4014-9a1a-195336d4750e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c0e2d7-c3f8-41e5-894f-3f0f54c6522a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a004f2-af0f-48a4-8e12-2cc6756701eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2ecd87-fc8e-4218-a049-17d30e6f56bc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f78839-b491-4d73-813a-5d6bac98e981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c4fc9bd-cc3e-46bb-88ce-5ece2584ff5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597c5cb5-5bac-4b1b-a730-5b4b0d7fa5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121c52da-302d-4d9f-8d88-fc14cbb69769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fec026d-8647-4a37-9cec-d7a2fe39244b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162534cd-5e14-4620-9877-e9f9ee544d1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e87c4469-cbe7-40bd-bde9-2f48095119c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10419c3e-e725-458a-825e-c19de9001d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5e531d-85ec-4fc1-a009-18162f01c4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33c39fa-7845-4d5f-b580-943fe4376362",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb7eff1-01b8-4c34-a265-333d6c3559a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5683444-f465-4fcc-82d2-93ab7c04bde0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8847c169-8497-4b8d-b607-9158263e8474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d261cae0-a2cb-4ccd-a3e7-d6c400d26d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b651c75-411c-4c8d-ae2e-97bb2bec4381",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c33b8e-20bd-45f1-a9fc-8f7f03967adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92455c0c-52f7-437d-b74b-457235c94eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d176c76-4d67-42a2-8b8f-37882d4df1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f81a5a-b154-491f-8b9d-d205ad22d4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b68a78-b772-4233-9e31-1202f42ddfcb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f36734f-80e0-477c-a059-22f8b75b3e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9fe94b-b214-44fd-be13-04899ce93105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5405733a-bb95-42e4-85e1-00e230b22e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046a9fbd-fc25-479f-9363-936ef9963de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9345c75a-049c-40ed-895a-0beae76464e2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ce1645-d83b-4f28-b013-23d327fdd374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb4ca67-5b6c-4f74-ba18-4b00fdd0d2cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6deccb6-fb89-476c-a2d8-168980bfa8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c4b7e1-1399-4064-899a-4dade8cc9204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e0e7b4-f8fb-4595-a45e-32bd0b4ac003",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cba5df-2e88-44b2-a4e1-86f5350fde48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922a5e10-ca66-4031-bfda-3def9762a418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1affb069-b58d-4d76-bde9-759d8783d642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486f5e6d-9ae7-4ce0-b91f-e86255a7e8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4584de-79c9-454c-a9e5-039081aae09c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f9dbc5-8505-429e-b549-6edb94c14cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b2227f-6231-4cff-84d0-1cd45b9b6243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68aeed75-0b59-4766-8c56-b6a6590d7c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766a85cc-87e0-4449-9375-32a49cb79a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127d6f3f-5857-4e5b-ba00-583da81dda3d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1407197-bcce-4d83-944a-18e8908e0d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659f2edc-2768-4caf-9c10-f1e19abc3b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9584fd-6f14-404e-866d-bf1694972ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8057a0-0e6e-4215-b1f4-cab2b252b2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec0a432-8b64-4f5e-9623-d5ac89477a3e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c66198c-02fc-45c7-96fd-cc2b200d91c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fa2ae1-4cd9-4abe-bafc-90b640cb1150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef80f4f9-0856-464a-9603-cf4e1e76888b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06299598-1341-4b74-bbea-d6f9b3684d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34d8319-411f-4b71-8615-aed5db645a74",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e39d9c7-ed74-4540-a923-fec619b2fdeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56276d7-2d58-45ea-a6ec-ed71bf5fde40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30042c5b-2cf7-4992-8141-56b00590b392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2973cf4e-731b-431c-9165-9b797cf31f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7da9be3-4f27-4a1a-9cd5-4bd98eccc895",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11a600e-a70b-46bd-a80c-a9b03d624426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec1658f-d50e-45f6-9f0a-be784da1556f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8634a7b5-c7b9-4865-8173-23dd2685b67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32684e53-9127-4ac3-b068-c867adb2cb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23497008-c48f-44d4-99b8-fb32a7564d52",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59098fe1-9a33-4106-8322-ca6791aee241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9344a468-b0eb-4cef-afd1-509683f99a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ca3a3a-1684-41ba-b2a3-fa5f61d0e781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da080400-5c6d-4ee6-895e-cea3be4dabe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f5f2af-cc7d-49c7-b02d-12c4333fb10b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d177ea-ff22-4108-be0c-32be4c36e114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "340fb1d4-ba9e-4bfd-89b2-da24123fbfe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98dedef5-02e8-4596-8505-43884803ff89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f29074-cef8-48f0-8e1b-641e0fbf6783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9474a42f-0a11-4bb7-b9e0-7d4afa2a2480",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01299c22-cbea-44bd-a540-59d32a49954c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9fd615-a0eb-46a4-8886-9fb5275f5703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007415a9-1f50-4e81-bb09-b22f17727ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3074796a-dd49-47cf-b097-e3fcde6d1998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1541ee7-ac26-4879-89ba-9d5ed8676a48",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a8a282-50ef-4297-8f01-7c6f2d727f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e848b0da-9de1-43d3-9e64-93760518c6dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11b3975-7fe1-499a-a749-7dab323b31fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35309463-11a8-47f9-8090-b10030c5c7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c443869-f1c5-4848-9579-3269b7339961",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65b3d26-1e17-48fd-8f7a-63d4527a52f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aeead91-d3da-4fc8-bd16-a175750da296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669699c6-ba6e-40bf-8f02-5cec694b54f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2a7ebb-a935-4f1c-a2af-718ac276cf81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44c1c6d-2e59-4cb4-b500-aeeb3b21ac37",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99074d8a-87e3-4a8e-9c9d-a008b8851846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a84bad-6127-4aa7-a53f-eba34df6ad17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab2048b-64da-4121-834e-6282a77d8729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bad846a-e79c-4ea8-9d15-8715eebfb7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae4e209-1fd7-43f8-92df-1b01d652bb22",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab199f84-8a0c-484b-9bad-4469782ef41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f988af7-7e59-4389-926e-c85e0d0eec5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc19412-12e6-4e73-8344-fd17d8fb3271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db195e49-0a91-4092-9e82-c81811e9c1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9d9e7c-1e34-4653-83de-09b70bac74d3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9394091b-a6a7-4fdb-bd2b-bb3ab5fc4349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0065981-4950-42ca-a3da-34b702d6829f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c423a7b2-cc9a-407a-8e56-8839b01229b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfc96c0-96fe-4bf7-9dce-29658cd4e532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9445a8fe-9f19-4a39-82ae-510fbfde95fa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6ecbd0-a73f-4ca3-b1e4-bc602e35429b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5c1111-439b-403c-b53a-56c9ff25cdef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a3c664-a53b-4863-8393-acf71ba470cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2642c603-2f6b-4d1c-8103-e0584236f76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31526efa-8430-46ea-b68d-57e1481de1bc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "090a096c-4ce6-42b7-8e42-408e00e05c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebce581f-e562-4495-adb3-5dfac64a1e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d98eeb-1c8b-4a3a-93e0-5ae3a2a351fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22582423-f5b2-4f46-a79d-42d71bfeb619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49c1bb7-fc09-4720-9165-2f4850e4ad4a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e666241d-5028-4cd5-865b-f80d938faa91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc9decb-e8f2-4121-acce-c92dc5851734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2d2610-28bd-434c-9ef6-121c1f72430d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb24d984-f2a9-4965-870e-ed728e0767dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214e6f77-e1a4-4ee3-97cd-faa22b621b56",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46db14b-0fc0-4192-a7c8-7ab390bb615a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80b270f-f3bd-4422-a700-20fe99eb295e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cc2c5a-1681-4800-af03-291b5f32ac9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a576367a-f273-4ebd-a422-742f11e30ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4e76ef-553e-4b67-939a-6fdb84925944",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55d027e-7022-493c-8b6f-76d4e84a91ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ec640c-c247-4ee6-a8e2-25bc35e7aa13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e95bde-5446-422d-bb35-7e56021bcfaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d144960b-5ecc-4382-ae82-e69d286e3145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f892a356-ff00-44e5-a0b1-82a90446f8b8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c599497a-67e6-4806-a525-131b6743b495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b02ee73-0fc0-4842-a8af-2d82dbbc6065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913e9340-cbdd-4ddd-a943-e698c4db7384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942efe6a-3ab8-4260-bbf9-e5b0ee3c0f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d38c9e8-6758-431b-8270-af92315d8c44",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09149913-72f0-4167-9781-0a44976da43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccb83e8-8a15-4f43-9fb7-4a76ce484ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42e1e16-7e55-4c9b-be11-d040d0dc1a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4193f2da-3975-489a-94b9-aec0683a24f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c268a135-b377-4fcd-9201-7f826e4c992e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cb6ea0-0885-467a-9427-b84e60c32a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9aeea7-af2d-4348-99ad-175461b26feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c94de6-0104-4672-805d-bd438098efaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a35cf27-c388-4bc3-b1e1-c1f9966b2a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f29f06-2532-414b-9085-00ba2a64e9e6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7c5ea4-b96e-4082-a3b7-96fc58f2dbf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f076679-18a3-4a41-9473-e28fa0751c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18ee5d2-408a-431e-8808-a5ee6dacc836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3763843b-3f38-44a4-a802-b14700ab6598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e24f6b1-2558-4c74-8523-4b39c8ff0011",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d31d8a-47c6-4549-969a-2066e05c8b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5478614a-68bb-481f-90a8-aff95f100297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22839e66-8e8e-4c06-8e02-7eecc1f4609a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927b40c0-aec7-4537-ab07-508aa3824205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06312f1f-38d2-4e3b-aa3e-e8cfdbf211bf",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d65d397-ef32-4492-afc9-50626bf52aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc945b0-c4b1-4ef7-a256-91133992fd2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26bb3bf-3dcf-4817-838c-4efe4ae2bec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae44510-c800-49f1-aada-5d07270e8bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a306f56-fb53-4eb9-b10b-c8f8956e5369",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09319b2c-dfe2-4ed5-9953-dba78e1c465e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57cd1b82-16fd-4ee2-a6eb-8841f04d6dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e712d25c-2a3a-4583-8a9a-20b6fdcc14dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57129147-e6eb-433f-8426-950ed8a09904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca271c15-6e2f-4ee7-a5ed-a46f80d81593",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a40f355-4c78-4ee5-bf99-40bfb1a96c66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f4c78c-4919-4442-a708-a4f3554dd35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f93a04-f61c-415a-ab05-ddbef223db4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06cd9c15-72e1-4233-b0f5-2c54deb53fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a280a256-617c-4875-aee3-b008f010ff72",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d24ce3-2148-4e7b-8cfc-0fd01b7f6699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a994fa-4bda-4628-bcf5-3b1fd7311682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c1c134-ea3f-482b-aeb9-68e14f836cf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b778c022-dffe-4131-a1c7-e5b0c2bd4fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae7c90a-d8a8-4725-a495-a5a182b27fa3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2786934-b571-49ef-a146-865a6a35db96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50bff5a5-fcf4-4849-ac51-74da1576a606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63443cd-55f0-4629-a40f-e44f040019d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0504b8-bfc2-407f-bd21-cf0bd7e62df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253cf58e-4ff8-497c-a667-9ddad5c8440a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f175370-2641-4dfe-bbcd-0b6deac698aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fede09c-62af-4a57-b1c1-1b13c6cfa62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cee46b-f6e0-4566-8bc3-6478e45bab16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7d58fa-fcfd-44fa-ba71-a27a69a8442c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e262c685-a9cf-44f9-899b-4b62e8fe0b9b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513b66ae-e8b5-42c1-b4ae-ffab17334ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dab2598-eae0-49a3-a89e-fa5002b27aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1f4833-7123-44ca-a865-11d1d9af763c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592ace7f-6de0-4c86-838b-b4718bc0ceb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de92d17-0d36-4ea4-8076-e68a25d76e91",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f628cbc-fe4e-4617-8b77-4a47bdc37feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64216b8b-1f94-46b7-aabf-45dff917c3f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24960ece-f040-4d06-931d-d95fb29c8e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401930c8-b43d-4efe-b360-a22508dceb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776f1472-bce6-4b98-aff4-fd088b4bd882",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c8aba9-9e67-4c9c-9c8a-c83e4d318e08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ade0e4b-6dac-406f-bba0-30e9aa7a6a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d30315a-4d41-48c2-879a-9282149a465f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602d4819-fd51-42b9-a667-337c10501db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02956a76-3985-4092-8b37-90d3c1b8c56a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a34fa2-4521-45a5-9b34-2b760acda72d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4897b8a2-2bde-4401-9860-f4d8ebdd4107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001c6c70-8790-4618-b6f7-20b2ba5b30ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a2ac7a-e6d4-40d7-bedc-8d97772085fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734eccd2-fddf-4cc5-b8ff-78610548e066",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31802b8-a8d1-4e0b-abeb-f823f3ea88ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e87341-6100-4d57-82a1-037a7b18fb58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082fa72f-66d7-4732-82d0-7a1700fc8713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6857b5e2-6e51-41d4-8c47-179872731dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52637920-f58f-4bf3-950b-0fdf2f93ca8e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3772c528-55b6-43c7-b005-fe75fa8571c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62e4f355-1f63-488b-b9f1-d792fb046486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c611694-d99c-4bf8-87dd-7a64f67dbfe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2a15f8-92e1-4c2f-95a9-2b4f011ad876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa64b157-8b0b-43b0-b4d5-0e8a2813768d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daab82bf-2036-4d10-af93-cb3cd522485e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6836bfb7-0adc-452a-b7e3-4ac9adee93ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f2633b-0cb5-4d33-9ae7-cd15d82c449c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bcc87b3-3c08-4953-b4f2-2d17e0c7dad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840b1088-8389-4bdd-8eb5-d0977eb4bcd6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd7ac42-c0a6-42db-98c6-89e3829c461e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f95d4cb-f241-4bc1-930e-19e571bed3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd3de84-85f1-46b1-bcb2-ae66256054f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a8b594-cbcb-4584-9d5c-946f03e6e176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df23d22-2051-4796-abe5-c869a26e5dba",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ea8ceb-fda9-4606-938c-812a277c9119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ba251fb-2703-460e-9074-11a4134d4ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935ee84d-d146-490a-9306-cc286b1f9ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8055b8c4-4d04-47f0-b287-e1b3738a89cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66ea125-a00a-4e6a-945b-cf5652e895b8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e3e0c9-77a6-4fe6-a493-2b87ac728147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b22545-b9ad-4e2c-b7da-bfd0ccfbc3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fa3acd-e926-45b4-8404-95b7bebf5cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711d19f4-8272-4795-beda-82e42db18abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbea66a-d8da-4f94-944e-ca577276a9bd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3c6414-80d6-4a76-97c1-c62f661d920c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c6214d-1cde-4e40-9884-473d7cb6d8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53eaea2-ccea-44d3-8efa-41fc2d7bd2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d8c6cd-2b2c-44df-a05c-5291f3dae783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be404dbe-c1b8-4746-8122-c9b6b1d8f68c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cac36c-bfaa-47d0-9c23-b2f910be4485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977df9df-f678-44e8-bf13-9dfc4b395bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e033e715-d0e7-4a0e-ad94-4ccf0d42ebe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec7eefc-90a3-4ce4-975b-8c293410432c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f4c2a3-c5e0-46fc-950d-84dbac1b944d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8536841b-e0f7-4476-a507-cf6b1f1ed3f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ed726f1-6ab2-45ae-82ef-660695bc85ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e7781b-66cd-44a1-96a1-6a0a0b3872be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede3c19c-e2e2-49c6-b598-a8a77cc79938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c51feb-79bb-4d0b-a094-1737d9384ee6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2035fd0-bbee-4c44-9f07-05c8c036da19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86359907-51cd-4a54-b9cb-a484a3f2e8a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace9918d-3a86-41a8-b3dd-0a9bfc1417d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca636c07-a64d-49bc-abb9-44fa28d15f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f154e6-fdb4-44e9-8fb2-b9e8aed3a446",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc3cfb5-4363-4a91-99f1-d689ebcf0ef3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29346ca5-7ef3-4c23-ba4c-94e0140dc267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e082ad-f697-4e2c-9df3-fc3d86cced0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb2a10f-a253-40b8-9dad-5461ec71093a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfff5bd4-dc85-4146-99a4-2ea32f9fafe8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d700928d-3f4b-42e7-a054-2c1f6b717ca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673921d1-02cb-4301-b21d-97dc8faf016d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72505c8b-a6a3-4276-8e46-5b4c00fd3377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5134821f-9155-4f82-8e9f-35fe6d05246c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c5ad7e-4ca2-45b1-a21d-60ae45582ecb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d34dc7-b72c-4a96-9ea9-1afdb0ac5f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b4bb02e-f750-4834-94cc-c1a327a98c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a857d1-e994-4f9f-acff-72c9a7f5008e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c76d1e-f0d3-4463-9696-79f8ad684d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42269b2a-cdc8-4a06-aece-9dd3e840a038",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4593a3-5483-4670-94fe-b18b0d95c79b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcd230fa-2075-4722-913f-e631629007c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1363f895-5a9b-419a-967a-b29f9013bdf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a219866-a0c4-4a5c-a7f8-7f0c05eb014c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75572daa-c7ab-464a-a5f5-23a1dfbfe065",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8a1bde-8db9-46ab-8c80-2175154fd3ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f14acf0-b4ad-4b45-9dcf-8ff427b5da7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fb03b6-5e1d-419e-b6b8-18e6bd2bebfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ad7457-511c-41e4-b334-e6b366e8e603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9790317a-9e8c-4bc9-b325-6362eae87280",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004b8e48-09d0-4dd1-a758-3a559bcaf689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94cd2628-9332-46f2-8c8a-7de8fb4e7c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e813ca34-3a59-4145-be8f-94a49e4b04db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5e3933-fe76-4fed-98be-d7bf1459d64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300b2028-d247-4ebc-a36d-06b3165d559e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd006518-e9d1-47a0-9086-2842cd384139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "650d4f66-20b7-4bae-81ea-d3f44b7f8b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b36411-84ce-4a30-9ab8-5b63f1b22842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5098989a-9c83-4adc-be0e-873ebff17862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dd82c1-0f99-417f-8187-a1e9e385146e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b35e7a8-2d8c-4ba0-8187-823e705cc188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "106666b5-2b47-445d-87f7-150b7f6ad4b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae94ec9-22d7-4357-bb1f-bd0da4e589d2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d84f59-9195-494c-9102-bc56cd2acbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3669e4ca-2a7a-46e0-8f30-604d07af5d5c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad20f07-1361-49df-af5c-cf255c691bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2272c944-32dc-4169-bcee-fa550de6a3cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcb7af5-0841-450a-b4b4-4f95e92674ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f360dd35-7275-49d4-952b-52e759ec4b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eced8e73-757d-4cf8-97a4-7ac118db21d1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5089aa-ff8d-4fe5-80ee-1f52b016f6a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3c4316-0277-40c5-954c-1d7f432ac90d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590cc452-d5b2-4b32-b840-af90f4ef4fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a31386e-78a4-42b3-a5a0-a54e16a161a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef17b89-53e7-415b-81a0-c994292b0bf8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871a9986-b162-400e-8269-2e48623b4b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a31c9a8-402e-4688-b40c-e343c508d942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91491869-e2e5-48c3-9422-8e48fd4c47d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaad1626-9def-4a9b-b921-4fa8919e8209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e429b8-0ac6-47c9-826f-bb1effd82a4f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804750be-d9bb-42f9-a84e-d0264d72e8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c5138a-6727-4c38-92f3-8cb3bc73c4f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6582794f-1b11-4c3d-adac-4f13368170a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfab40fa-0952-4406-83ad-dde70faa62b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b403c35-7e3e-4db0-8c3a-ec38cd9fa2d8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f42362-4030-41a2-9f3c-c7e41fb84d36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "953f5b1d-e964-45e3-a6bf-20f481e862fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e284284f-9121-4b66-9a19-b71d702e53eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471197ec-383f-4fba-b619-552e8e7a6e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a34401-fb4b-447b-8adb-89175c978788",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123114e2-aa7b-4f90-87e1-7235210acbb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a4cd39-35e1-4d3d-a4a2-31e2c6c6f901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d0427a-1f5d-4ee7-8e77-0e60faf6241c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdf4ee3-8b89-441d-ba86-f73cc5320f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d300f1a1-33f4-44f9-9902-e9b4f68ee104",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1fd134-a22b-4045-9348-dd358d6686df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aac1541-933c-412a-8855-bafc06c6838e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0875a862-973d-4b1b-88b8-ef33028925e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce2ab4d-23f9-4e8f-b9f5-559b2ec94b96"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2035e435-e30e-4472-b63c-01a494a6d053",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b65c715-2328-4d9a-8654-3dbee17bfaa6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16229c76-8e9c-4012-bfba-3b79a253aaf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "002d0432-171b-4cff-a211-22a3ebd86852"
                    }
                  }
                ]
              },
              {
                "id": "303637d0-ad2f-4a13-8a79-4abe6f62b6f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "964f6be4-b37e-4b99-a4ca-922e88aefb70",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29900211-ab78-4491-ae81-88024507eb34",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e13d3b6e-a84c-46ff-a236-f55537bd0629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9515a75-588f-43a7-9cba-08862e1a2ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "532f62f5-8a81-4dce-b81e-f60b6520c225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81295573-99fc-4c3e-81ea-7c18a3278638",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679a4a41-d19c-4fe4-8102-48e8404a317b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1a5e7bf9-80dc-4809-8329-e3c128767574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944b15ea-d6c6-46f7-a934-b11a7f25f557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2032176a-8e1d-4c87-927b-f3a613d4be98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9858c13-ce35-4a70-9b3d-62953adf55bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9ab8b51-e54a-4a06-98e9-c005288bf252"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ae85030-0036-469a-86bd-9c74350144c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae16f483-9798-44ba-b92b-4a9b1137ad03"
                    }
                  }
                ]
              },
              {
                "id": "3b3c7847-f6b9-4278-bc6a-411910f48608",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c542f5a7-7d23-49fd-bf53-cc1a2118baf1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f849220e-8f51-4b47-8fdb-919d96273f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "885fbaf0-8cb1-405f-82d5-c92f792f8092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8434a17-0c6b-412f-af5c-8b231154e45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb3bd0b-5d2b-4c70-a0b4-4494023fa878"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "17021968-40d4-4d16-b501-37e1e4723991",
            "name": "Positive Testing",
            "item": [
              {
                "id": "63d9ce1b-c5a2-4389-99cc-6f358d9a3365",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc41fe12-d10a-47b4-94b7-7e9423ab2dc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "06100d26-3f1a-44d6-bcff-15a808f89b9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6abc90cd-04c8-430d-bdda-ce5987b5d6c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7067edde-37ea-48ba-a604-77595b07e65e"
                    }
                  }
                ]
              },
              {
                "id": "ab2f32d0-b8fb-40b6-8020-fde800ee2020",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3961a40a-1d6e-490f-9f76-fcb87a402765",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bba76d86-f201-4d44-b568-079509017728"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27cc9c03-15dc-4e8f-8085-e01526634584",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1defbd48-519b-42c3-b656-289d0f04fa26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e8f19a8-0310-403c-95a4-c9857126034b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0e899421-10ed-40fe-afec-10e9316e775d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea06220c-2149-4988-b18b-67b332601399",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c1d6361-e7d0-4270-90eb-1399d1be9e7c"
            }
          }
        ]
      },
      {
        "id": "7834ef48-2ad8-42b7-86e8-68afb7b41a04",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d7b53076-0bb8-4191-b02f-84671c390c54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d33734a-1f15-4714-a30e-10e96e54aa42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a17ea912-2f45-4b21-9da4-7f54ee7a53a8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6e02ff-0b46-4e60-9555-d242e7dc3638",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "55524c2f-70d9-4c51-b9d1-5b3aca80e72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c965f8a-0fa8-4a61-9b24-36e8275ff8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99937c15-302e-4c7d-bfd3-51f8ef060bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fd8621-e238-4c34-8b3b-0ca3b25795d6",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a8ad75-22ba-4a4c-8ce3-66c8dd26516e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4ae91309-2c6a-4e1e-a9f6-844d88686598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569dc603-7293-409a-aee7-0677394d00fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20766927-31ca-4f92-b4b1-f82587a54312"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6e40a8b-8ee8-45a4-8f62-0490b325394e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "376843dd-f339-4598-ae1c-ee7c611b76c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6adcbf13-8ee0-463f-99b3-88edea424b1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4973b731-5e35-433b-acab-c640299bd512"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03f1671e-22ce-4855-85d9-d9769cba52b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "98a61a54-24a3-4235-86ee-c91df9ed7bf2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa74ea83-4125-4338-be1e-24e0d4140543",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32efc5ca-c564-4a91-a92d-de840234a4db"
            }
          }
        ]
      },
      {
        "id": "5ab699be-7786-4392-87c3-a3a5381249e0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "56ed80e4-8ddb-4a0e-9e60-a195ab14a505",
            "name": "Negative Testing",
            "item": [
              {
                "id": "977a7003-0848-40c9-ba3a-67dc7f3bac7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89570280-2a32-4890-9f0e-bacce841264d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25adceeb-a5f9-441e-ad5c-2328f3ade24f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c080b44-0d9b-4d21-82b4-960eb144471e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a76c2d-644a-4d33-82c9-fb8412312af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adcaa58e-c561-45b2-b2b1-815993deb144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422d6ed8-abf8-4802-9405-799c3d393361",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c575e8a0-c627-437a-834a-508bd4c6033f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cc998e62-500b-452c-bacb-a36f92678afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183d90a4-e5a3-4a6f-b1c0-61508fe6b7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e70fb550-efa2-4f56-a4a6-eaa0385c39cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "552cae5a-87a8-4fe2-826e-574bad1376ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf6213d1-9720-4fe0-a7c6-fb7ef2fad9fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f83e0bdc-3d2e-4718-b368-f40fa64e7c0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f218a8af-55d9-4d3e-9ecf-a7a3aed00d1e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "127fd5c8-7bac-4976-a414-afba005cc945",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3be79f9c-2d6d-4cae-91e6-1fab18b9de53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76456ed7-5784-40d0-9ff0-8f98780cd96b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7222483-f488-4757-824b-7f17a7fdb499"
            }
          }
        ]
      },
      {
        "id": "f0a15bde-82c0-4dad-82e0-c482bde8cbc3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f4dd2185-2002-43d8-8dd7-69d71af5417a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0132ef70-0734-4ab9-b05a-a4c82e1989ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "38096052-a6a4-4262-96e0-4fa689aebca4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b468bcb0-9e99-4396-a5fc-19f5d89082da",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30248a90-08e5-47ae-adab-2f7762c00a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb164a0-c30c-4b74-b577-84d3baadd371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7a1ff75-b7c9-4668-98a7-888c2e0145d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7160b48-c53a-44f6-89fc-325e05694264",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15c808b-00b4-4891-9d5b-3a4ff00dc9df",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4d77547d-c3ad-4057-bfee-b364f2fbfac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ceb679-97ff-4e82-ab61-99e65a90f1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d888b7c6-8993-4799-a01c-a69c32728212"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "847ce97c-9290-425a-9237-b6ce4dbdb8de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4779615-9554-4ffa-8c1f-0b6c2af3e87a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03cf4957-2d2a-4ed5-a409-560e95f685bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ac7fca8-5ac0-4e3c-9703-d07cda11f7e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53bb27b2-84d9-4306-9260-5e6341de9652",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b28ab68-29d8-4446-9b4a-3cec218bdde6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f30de023-cf40-4ec2-9cfd-fe0dc5543f49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66d61d33-a3b0-41e1-b3c1-067e8eab7e00"
            }
          }
        ]
      },
      {
        "id": "72507f75-165e-470a-b795-eae8977ae2e3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8790d7f8-2c77-48d7-90c0-8f571fa6bf44",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1ee8a06-6b0e-4037-8f6a-47334eb25898",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "85410f51-630b-49b1-87fc-45ea7495e43b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ff822ac-736b-458d-8aa5-390042502b9c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf65024d-139a-4085-b043-d86f034af35a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 79.26538461538462,
      "responseMin": 29,
      "responseMax": 272,
      "responseSd": 25.759142399539666,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679877452269,
      "completed": 1679877486847
    },
    "executions": [
      {
        "id": "f41bf490-d289-4d91-94f4-d411a44055e1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "72fcdf1b-c9fd-4c3c-92eb-e28ea39da18c",
          "httpRequestId": "78519299-14f1-4be0-aa95-2b6e6b86f393"
        },
        "item": {
          "id": "f41bf490-d289-4d91-94f4-d411a44055e1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ce05c5dc-7124-4caf-902f-c20da5676399",
          "status": "OK",
          "code": 200,
          "responseTime": 129,
          "responseSize": 0
        }
      },
      {
        "id": "58065610-17ce-4c71-a159-7545bad0c3b1",
        "cursor": {
          "ref": "da68a978-c25f-478c-9863-bd5e7f28c826",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "55f8b156-ffe1-40fc-8c27-cde98f1032dc"
        },
        "item": {
          "id": "58065610-17ce-4c71-a159-7545bad0c3b1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "809f453b-3068-4133-bbe6-5409b5c9c422",
          "status": "OK",
          "code": 200,
          "responseTime": 29,
          "responseSize": 0
        }
      },
      {
        "id": "00f99aae-c37a-4698-9c1d-96f0bcd9c034",
        "cursor": {
          "ref": "3d0a44ef-4742-46ae-8ece-79e560df38dd",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0a01c944-b6e7-40b0-acab-9c8757063fbc"
        },
        "item": {
          "id": "00f99aae-c37a-4698-9c1d-96f0bcd9c034",
          "name": "did_json"
        },
        "response": {
          "id": "efd124a4-c3f6-4f1b-9cbe-24ad21a87fa7",
          "status": "OK",
          "code": 200,
          "responseTime": 272,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b88e44-3d85-49e0-a02b-be4652016509",
        "cursor": {
          "ref": "74b036d7-3d6d-467a-8ed4-7b07476488f9",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "962b49ed-ba25-465d-a624-aaa27c889ee6"
        },
        "item": {
          "id": "f4b88e44-3d85-49e0-a02b-be4652016509",
          "name": "did:invalid"
        },
        "response": {
          "id": "14fc11b1-21d8-4a32-ae35-a21b63e44ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b88e44-3d85-49e0-a02b-be4652016509",
        "cursor": {
          "ref": "74b036d7-3d6d-467a-8ed4-7b07476488f9",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "962b49ed-ba25-465d-a624-aaa27c889ee6"
        },
        "item": {
          "id": "f4b88e44-3d85-49e0-a02b-be4652016509",
          "name": "did:invalid"
        },
        "response": {
          "id": "14fc11b1-21d8-4a32-ae35-a21b63e44ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2149ac00-fe6d-415d-ae67-f83c260346e7",
        "cursor": {
          "ref": "259372f2-afa9-4449-ab89-1aeb3937671e",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6f32418a-c16b-4c52-96a3-ab617b28bb71"
        },
        "item": {
          "id": "2149ac00-fe6d-415d-ae67-f83c260346e7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4ad945a9-cf0c-43c6-94a6-4710b45dc5f9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 193,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026a07e9-fc5a-474f-9b9a-80fcaed78764",
        "cursor": {
          "ref": "92c6cdcf-1ad9-4048-bc33-61a99cbe522b",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "48097d37-f81f-4ffc-b643-06ad65b0a61a"
        },
        "item": {
          "id": "026a07e9-fc5a-474f-9b9a-80fcaed78764",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cf09b95f-9330-400b-b2d7-aac94e96ddaf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975ba595-1f40-411c-bbf6-c66047abea0e",
        "cursor": {
          "ref": "6c5c40dd-4802-438e-ae00-e6546bbbafc1",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9089783c-028e-47f5-957b-810ff9b781a9"
        },
        "item": {
          "id": "975ba595-1f40-411c-bbf6-c66047abea0e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c9ba2980-6e7d-461b-85a2-7cbf3dc9d48c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c57640c-0208-4264-ae69-3a21cefd69fa",
        "cursor": {
          "ref": "385363c6-3a02-4b14-a7c5-2645448a8e8c",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "33ec0f67-2f82-4029-855e-89aedcbf9b20"
        },
        "item": {
          "id": "6c57640c-0208-4264-ae69-3a21cefd69fa",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ab777695-5567-4651-b048-82a4d0887ded",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 72,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c57640c-0208-4264-ae69-3a21cefd69fa",
        "cursor": {
          "ref": "385363c6-3a02-4b14-a7c5-2645448a8e8c",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "33ec0f67-2f82-4029-855e-89aedcbf9b20"
        },
        "item": {
          "id": "6c57640c-0208-4264-ae69-3a21cefd69fa",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ab777695-5567-4651-b048-82a4d0887ded",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 72,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3189dff7-6330-4ba2-afdf-24f27f7b376a",
        "cursor": {
          "ref": "0bf5d987-5c82-4247-a8da-07e7d229b006",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8ad12706-13d6-4561-849b-002b22e5d71c"
        },
        "item": {
          "id": "3189dff7-6330-4ba2-afdf-24f27f7b376a",
          "name": "identifiers"
        },
        "response": {
          "id": "a5084332-26a3-451f-a7f6-77abc4963951",
          "status": "OK",
          "code": 200,
          "responseTime": 146,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fc2cb4-12e2-4d2b-930e-8278a08e96af",
        "cursor": {
          "ref": "f52779d3-d843-4698-b549-660d75a15fcc",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "87f78a60-7c9c-482d-9b23-ea753f8548e2"
        },
        "item": {
          "id": "95fc2cb4-12e2-4d2b-930e-8278a08e96af",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6c623b23-486d-479e-bd25-79a9e59f73ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fc2cb4-12e2-4d2b-930e-8278a08e96af",
        "cursor": {
          "ref": "f52779d3-d843-4698-b549-660d75a15fcc",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "87f78a60-7c9c-482d-9b23-ea753f8548e2"
        },
        "item": {
          "id": "95fc2cb4-12e2-4d2b-930e-8278a08e96af",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6c623b23-486d-479e-bd25-79a9e59f73ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56118343-f30d-4a92-86d7-2c136c30359a",
        "cursor": {
          "ref": "de416e05-bf0a-4554-94fa-8c2043fa4871",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "161d8e61-771a-4e9e-8760-00045ef3d5db"
        },
        "item": {
          "id": "56118343-f30d-4a92-86d7-2c136c30359a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7ed66b9d-4272-4488-8bac-b52357b62d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287d7f58-eb5a-4cce-a37a-e554e57521f8",
        "cursor": {
          "ref": "194badd6-2984-401b-a444-415f05a3d1e7",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ddc91736-39c4-40db-bfe2-8aedd19b50f8"
        },
        "item": {
          "id": "287d7f58-eb5a-4cce-a37a-e554e57521f8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5150ec6d-67bd-40f3-a231-46c226fd2922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cea62f3-4037-4a9e-b5f4-39b08afe4c03",
        "cursor": {
          "ref": "7c8152c7-b4a4-4a7a-a43f-c7fcc0a2d639",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "acec6c25-26e2-4b0e-966d-eb055732581b"
        },
        "item": {
          "id": "9cea62f3-4037-4a9e-b5f4-39b08afe4c03",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "86827e6f-b895-4f6e-a4a7-e6c5dd85ed40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaa9b1c-3453-49a6-80a0-7ef0b3829750",
        "cursor": {
          "ref": "6bd3f42a-e1b0-4062-afe3-48202bef360a",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3eb3526b-35ed-4426-a9ea-48e06d701a68"
        },
        "item": {
          "id": "eaaa9b1c-3453-49a6-80a0-7ef0b3829750",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "de89a607-c75a-48f6-8a8f-f5fe5ae6fbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb42af0-4675-4724-8912-18f5e3b94222",
        "cursor": {
          "ref": "2fe46713-ccd4-420c-b300-0446aaf75118",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "affe56d0-a671-4c3b-b17f-4c85d7f1e2dc"
        },
        "item": {
          "id": "ceb42af0-4675-4724-8912-18f5e3b94222",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cd6ec94f-e31c-4920-aebc-b315641b5a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8adc1d-2deb-4b2a-b5aa-cfcfd32a3299",
        "cursor": {
          "ref": "9155268b-7ef9-49ab-afa8-1deacfc0826c",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "68696216-7215-43db-9a31-bf753e1a0f16"
        },
        "item": {
          "id": "3e8adc1d-2deb-4b2a-b5aa-cfcfd32a3299",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b9292c1f-209f-4d0e-93c6-16722b70e5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea243e3-915e-49f4-a9bb-df57bcb27a1d",
        "cursor": {
          "ref": "be923336-a357-41fc-b8ef-43ed2285b013",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1f7223b4-8608-40f1-b1b8-e3af4fdcbe7f"
        },
        "item": {
          "id": "5ea243e3-915e-49f4-a9bb-df57bcb27a1d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c21bf24b-6074-40d3-9a6a-ad0efd4a2079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f6229b-b92a-4557-a98e-d882aef5e8a2",
        "cursor": {
          "ref": "4a6cbad0-a9ef-4fe4-a3a4-089f6f9033c9",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "35a20bfb-af38-45dd-b410-2037130cfb3f"
        },
        "item": {
          "id": "c4f6229b-b92a-4557-a98e-d882aef5e8a2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7f888722-2160-469a-9125-b58c3d58849f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe497b56-1b6b-4e7b-86dc-1f3a99cb004f",
        "cursor": {
          "ref": "01f9d42c-5a12-4704-ba0c-0f29d9620017",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0d96e84e-c1e1-4762-a7eb-8a47279ee8a5"
        },
        "item": {
          "id": "fe497b56-1b6b-4e7b-86dc-1f3a99cb004f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c0f08ec9-188a-4fd4-8a55-e846c8ac07c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e1001e-de2e-4f5c-9d6b-716602504bb0",
        "cursor": {
          "ref": "bd0716d5-c298-43b0-b06e-451bf98305b9",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "990ebb3a-7e09-499a-99aa-a3abdae643f4"
        },
        "item": {
          "id": "73e1001e-de2e-4f5c-9d6b-716602504bb0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fb13d883-ef30-49cc-a679-6c24528caaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb13146-5699-4a76-af3c-6b1175242401",
        "cursor": {
          "ref": "ee2d009d-dc4c-48fa-98c0-8f3388dd4b01",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d5619176-e06e-4529-8dc6-078bdc3c52e2"
        },
        "item": {
          "id": "5cb13146-5699-4a76-af3c-6b1175242401",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "775ee2bf-4fe8-4870-94ac-048fab4d26fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968307af-1165-4b9d-ae68-d202c783664d",
        "cursor": {
          "ref": "ab24bdf2-0ae5-460f-8f03-d97be86ab201",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "abf35ef4-9d3d-4ae9-a201-1deae2c8c9c3"
        },
        "item": {
          "id": "968307af-1165-4b9d-ae68-d202c783664d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "73cf2e28-28d0-40b0-8ce3-33bb08f8f218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8597082-5ee4-44b9-aba0-df28d1c4aa35",
        "cursor": {
          "ref": "de660631-2a56-4556-93b3-2367a7ccca15",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1be1da49-6186-49a1-81a6-f474f65ce3dd"
        },
        "item": {
          "id": "d8597082-5ee4-44b9-aba0-df28d1c4aa35",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9183d638-25c0-432b-9863-cdcedf01b07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b736a889-7d46-4f43-8118-815fa927a2e0",
        "cursor": {
          "ref": "cd03adfb-f7b7-4429-8eac-181f6c78a768",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0f6e831a-dee2-499b-86ad-29ac52e73b73"
        },
        "item": {
          "id": "b736a889-7d46-4f43-8118-815fa927a2e0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "05e73bf5-21ce-43bf-b03d-1d8199fda3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b1bb1a-a00d-4ad4-af52-67e4f6d27ef7",
        "cursor": {
          "ref": "e9f9fb6f-b278-4076-95ea-be594582dddf",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f7b18c4b-d3fc-4a9e-90d4-bf49ecbaf65b"
        },
        "item": {
          "id": "d9b1bb1a-a00d-4ad4-af52-67e4f6d27ef7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2fc6c856-6781-40ae-accf-0262820796a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ac6a36-7112-47d4-a532-4f05ca4cb0bc",
        "cursor": {
          "ref": "5f5b5127-33c6-4889-9f2b-51e9f189dcf5",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6eaf162c-c61a-46e2-ac23-b22a6e5d7374"
        },
        "item": {
          "id": "a6ac6a36-7112-47d4-a532-4f05ca4cb0bc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "726e762f-fe54-4b20-8340-40b76cc4aced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8df1c14-74a4-454f-b3d5-52685ab5a407",
        "cursor": {
          "ref": "f3f5379a-3b4d-46a0-8d0f-361efe37f649",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c3479dac-3188-4160-93e1-826c86d93762"
        },
        "item": {
          "id": "c8df1c14-74a4-454f-b3d5-52685ab5a407",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "20496025-179b-4474-b812-1dc162de370c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d2a1ab-8e31-49f9-a67a-da2157e0cf4b",
        "cursor": {
          "ref": "1f66fdb9-ab08-4af9-8b53-b41ee4e0c8d7",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e17989ee-99c8-468d-be71-baba5896033b"
        },
        "item": {
          "id": "05d2a1ab-8e31-49f9-a67a-da2157e0cf4b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f6987831-e9d2-44c9-a63d-f361bb508b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646fbc68-1a5b-4cdc-9873-2d5096d6a028",
        "cursor": {
          "ref": "d39e04e6-af0e-4a11-96cb-afc145fb18a5",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6f378aa7-3f2a-47d8-8548-e94e633241f6"
        },
        "item": {
          "id": "646fbc68-1a5b-4cdc-9873-2d5096d6a028",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "515cf0a8-cb76-4502-a755-a3915c373d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8ebfe5-bebe-4cc4-8932-64e236722974",
        "cursor": {
          "ref": "69e7179c-a777-400c-9214-41bda78f49bd",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fa0f95fc-15f2-43c5-908f-cd66fd6cb4c4"
        },
        "item": {
          "id": "fe8ebfe5-bebe-4cc4-8932-64e236722974",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "97aa57d1-2655-4ece-8a8a-f0cbef2630a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9f276d-e197-4089-a94f-912352bf35a8",
        "cursor": {
          "ref": "f3b58cf9-e04e-4339-bb36-f3cbd377f15f",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4a078ac6-4196-4f63-b890-f6757e2ddca7"
        },
        "item": {
          "id": "ee9f276d-e197-4089-a94f-912352bf35a8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "704a59af-f524-438a-beaa-260c9d7a5e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844c41bb-89ef-4503-8662-fb0ca06072d4",
        "cursor": {
          "ref": "2f78b955-f1f1-47b0-a6a2-093cba06cb68",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "524e74ae-1e07-43c9-a2ed-77da35bd634d"
        },
        "item": {
          "id": "844c41bb-89ef-4503-8662-fb0ca06072d4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9f456a1e-9702-4310-af31-cdddbe14eb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae7d2b6-bacc-49f3-9e27-0080d258e1b2",
        "cursor": {
          "ref": "e7e56a5d-504c-41d3-a3fb-bdfe3a9284ec",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "eb5ca8f1-5cbb-4256-a1b6-b15fc9cc3c43"
        },
        "item": {
          "id": "7ae7d2b6-bacc-49f3-9e27-0080d258e1b2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6d9e19aa-a9b1-4075-be01-b2a61984388e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b7b4b8-eda5-47ee-baef-14a9e1905380",
        "cursor": {
          "ref": "4f26a0dc-5e64-465b-b051-092d8fee15d9",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f51e2d74-614f-4269-a6ca-abe1fb914e8a"
        },
        "item": {
          "id": "a1b7b4b8-eda5-47ee-baef-14a9e1905380",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c64012b9-9ad3-4ef6-9d65-ab91212ad3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e79f68-69a7-4371-a0a0-18e1f266acca",
        "cursor": {
          "ref": "5d72c081-e74b-4e6e-8bc9-6d15bc3dc40e",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cad1e0a2-36ec-4214-90d3-070ae998c84c"
        },
        "item": {
          "id": "40e79f68-69a7-4371-a0a0-18e1f266acca",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "268240cc-8011-42bc-99e2-df976a94500a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a50d0a4-a9bc-4097-891b-27ef7199e008",
        "cursor": {
          "ref": "98125679-d467-4cd8-a033-07664ddb416c",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "83841bbf-31f1-41e1-ae96-e78e2e732947"
        },
        "item": {
          "id": "7a50d0a4-a9bc-4097-891b-27ef7199e008",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4b98a047-7fc0-4b53-8c95-2a6917b1ea04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fb12dd-c133-4e17-aecd-1172c2eeb213",
        "cursor": {
          "ref": "b7994748-4e80-404a-8497-a6d7fe5fc705",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "51be0d93-ed57-4530-9857-68ba9ac83c4b"
        },
        "item": {
          "id": "46fb12dd-c133-4e17-aecd-1172c2eeb213",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c1f9eb30-3bb2-488f-9e81-f567bb2ddabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c2b794-6290-4ba8-97a6-62e3f8d85ffb",
        "cursor": {
          "ref": "3c4671d6-99e1-4b5e-86fd-8554a6396ae6",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "97fa7d6f-8197-4087-b62a-11987de9fca9"
        },
        "item": {
          "id": "d8c2b794-6290-4ba8-97a6-62e3f8d85ffb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "81f81705-0a05-45e8-8e80-3bf0e8248fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95776f80-c3c5-4545-be8b-50c26bc69af4",
        "cursor": {
          "ref": "d6ff20fc-134b-432e-b9a7-2c54d884f704",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "66190cd7-ec2d-41d3-9ea5-3cb4aae6f777"
        },
        "item": {
          "id": "95776f80-c3c5-4545-be8b-50c26bc69af4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a2a84489-dce3-409d-89b3-463adc2ffe7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adc8d48-6547-4eff-a0bc-308415c6db8c",
        "cursor": {
          "ref": "05d10122-9d21-4ca0-b748-675040aca65c",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0abd99fb-530b-4527-97f0-f1d250b7fd7e"
        },
        "item": {
          "id": "6adc8d48-6547-4eff-a0bc-308415c6db8c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6cb381a0-908a-4230-ab63-56e813ae782e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e305636-7d0b-4693-93d4-f7bd3875f4fb",
        "cursor": {
          "ref": "d418555a-4ced-4eda-b53d-2a21ceb0c077",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c306f662-2717-4e9b-b5ad-61d5962c0b79"
        },
        "item": {
          "id": "0e305636-7d0b-4693-93d4-f7bd3875f4fb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c4bc1b93-e450-44cd-9234-7034ac616f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda1afc5-11ff-4f0b-bd1d-66f4be889b37",
        "cursor": {
          "ref": "4ba48de4-4dfd-4f14-b71e-6f47109ab6dd",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "266b9dff-9bea-4c7e-8bbe-35594ffdd01f"
        },
        "item": {
          "id": "fda1afc5-11ff-4f0b-bd1d-66f4be889b37",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0e94fd54-c756-44af-a46e-148c4cae9444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200ea971-c1b9-483f-a3e1-b5c8b78e56c1",
        "cursor": {
          "ref": "4fe626c7-52b6-4fd6-8a5c-eb57590196e2",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8b2cebf6-8e14-4e09-bff4-affaf71c3df1"
        },
        "item": {
          "id": "200ea971-c1b9-483f-a3e1-b5c8b78e56c1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ba72b80c-011c-4390-a5e5-04e33c191240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a33baa-189e-48cd-a519-93a2f7686568",
        "cursor": {
          "ref": "af8cc26f-c6aa-4a26-bfa9-30c6a8ef0da7",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f069e0a7-578a-4ac8-bb05-5779d0dc1eea"
        },
        "item": {
          "id": "41a33baa-189e-48cd-a519-93a2f7686568",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fff7f766-3627-4abc-87b0-2f8deddbb898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c06b40-e2bf-4499-b4f2-58743e167215",
        "cursor": {
          "ref": "495d038e-6ac7-4cda-89f5-81cf1b613b28",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5097fe0f-9380-4122-9f15-84d1144e729a"
        },
        "item": {
          "id": "a2c06b40-e2bf-4499-b4f2-58743e167215",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "29c81b4f-08ff-46f5-a7af-59478be8a254",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7655ef81-6e33-43a9-a16e-cdacf3334a2d",
        "cursor": {
          "ref": "b6c87551-e2d4-4b3b-aa98-4a954a7fb440",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c86b4cc4-18ef-4f7d-b676-b9850150cea4"
        },
        "item": {
          "id": "7655ef81-6e33-43a9-a16e-cdacf3334a2d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a0ae73de-d315-4e5f-a4e1-3dcddc6133c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a451014-026b-489d-82c5-dd99df67188c",
        "cursor": {
          "ref": "7bc1c64a-fd5e-432e-8838-c89b154157f0",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "094a9d0f-e8f0-4bc8-a4fe-0caf3b0566fd"
        },
        "item": {
          "id": "1a451014-026b-489d-82c5-dd99df67188c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "335355e5-794a-432c-a82e-1c5459235b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f3f169-1f9a-4dbe-b922-1f2f6814db6a",
        "cursor": {
          "ref": "1c8e13b9-1c12-4d14-90af-9d8633753982",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "44e9ebff-ab94-4cfa-86a6-25592017cb65"
        },
        "item": {
          "id": "b8f3f169-1f9a-4dbe-b922-1f2f6814db6a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3ddf35e8-1aee-4121-8811-d2b07c2bf5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17563f47-dcb0-496f-bcc6-489df6ad8fa8",
        "cursor": {
          "ref": "632633d1-ffd9-4c49-bbb1-586e57a84cac",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e17cc789-319d-43a4-b434-f1fd39c94950"
        },
        "item": {
          "id": "17563f47-dcb0-496f-bcc6-489df6ad8fa8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "30bc58cb-e8a1-49ec-a32f-6ec6dfee7750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a4153b-05d7-4437-817d-236eb7f2be2a",
        "cursor": {
          "ref": "0afee480-283b-4ac2-a6bd-51529f6ccdf1",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e8db6e5e-7fa4-4e35-89be-92b616c98a59"
        },
        "item": {
          "id": "a8a4153b-05d7-4437-817d-236eb7f2be2a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "44ec4375-4b93-47be-ad9e-11525af5ba58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e7d334-8162-453c-84fb-4976d52bee6d",
        "cursor": {
          "ref": "261244f1-8767-481d-a79c-a218e57da631",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e7cbc9f2-5639-4ebc-aa23-efd7c5fecd79"
        },
        "item": {
          "id": "e5e7d334-8162-453c-84fb-4976d52bee6d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ed7ff6bb-cec6-4366-92d6-99d6e35d1947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd15e1db-cb39-4898-b47a-d6ad79b43084",
        "cursor": {
          "ref": "cd872f58-da07-404b-8b09-a727ed7c032d",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7d24cf88-07eb-4bfb-a03b-1e4ed208dff7"
        },
        "item": {
          "id": "fd15e1db-cb39-4898-b47a-d6ad79b43084",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "70061427-fafc-41c6-b56a-55806ac390af",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ddfba0-bba6-4180-8678-53880b526775",
        "cursor": {
          "ref": "2b3f7471-9001-4314-ab77-ece1775aa7b2",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "38c35ab8-b637-472a-8df9-148df2ce9593"
        },
        "item": {
          "id": "46ddfba0-bba6-4180-8678-53880b526775",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "036d68aa-d8c1-4793-9a3d-f1e10db7248f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e69b120-d882-4c75-8a25-36caeb86049f",
        "cursor": {
          "ref": "68fe2d8b-98bc-43db-89a3-bacd056905d0",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a7d29b1e-a6d8-4d1f-80f4-11519e865c89"
        },
        "item": {
          "id": "7e69b120-d882-4c75-8a25-36caeb86049f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b8b1c712-b0ee-479d-8b49-08ff7d41eee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623394ce-db6e-4967-b83d-da334b7bca0b",
        "cursor": {
          "ref": "d71bef26-8106-41bb-82b2-dfea4b11bd20",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ceeee110-2f65-4a86-ada4-7d1cb84e6861"
        },
        "item": {
          "id": "623394ce-db6e-4967-b83d-da334b7bca0b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6b3aac33-5e40-48ad-8241-ec5dd0668887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696405ff-9ed9-442c-9193-4c1fc8665f68",
        "cursor": {
          "ref": "5d065fdf-413c-4df2-8993-501643013621",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "319820c4-feba-43a3-89a0-6455043a3897"
        },
        "item": {
          "id": "696405ff-9ed9-442c-9193-4c1fc8665f68",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "371110d9-db72-45a1-8e89-2cf820dc5add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3f802d-fd7c-42eb-a8f9-c38062bf5072",
        "cursor": {
          "ref": "d0f6a2b4-0bd3-48c0-a8e1-04231cd44739",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4bf7034b-6c06-4891-9a78-29c03823b3e9"
        },
        "item": {
          "id": "fc3f802d-fd7c-42eb-a8f9-c38062bf5072",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a2d13236-5e68-41b7-999c-958ff6de5c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6223e5c8-ebe5-4b25-8fd9-7c40aba7f829",
        "cursor": {
          "ref": "845c5697-9c78-4162-8f55-a3f0070ec396",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7170661d-3e5b-4a30-9998-0c4adc18125d"
        },
        "item": {
          "id": "6223e5c8-ebe5-4b25-8fd9-7c40aba7f829",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1d985922-1b96-4628-8bc3-7aa3074cb610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cae59f-da02-4e4d-ac56-6652e924c08e",
        "cursor": {
          "ref": "dfaefc2c-156f-4411-92c7-8c499c74baae",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2d5fd842-e3e9-46ae-90e5-624114770c95"
        },
        "item": {
          "id": "58cae59f-da02-4e4d-ac56-6652e924c08e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b69586b7-86b8-4452-852b-b7d253730063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05942f98-b31e-42b2-9466-5d66fb19b97f",
        "cursor": {
          "ref": "4e9c0305-2f50-4c6a-9918-3be3972f48ee",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7f574ca2-c902-4b9b-875c-e3b12eccacbc"
        },
        "item": {
          "id": "05942f98-b31e-42b2-9466-5d66fb19b97f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "628c9804-50f5-4d9d-b001-2e695f1eaa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f6c46f-b21c-479c-b4c8-47f5698ee27f",
        "cursor": {
          "ref": "e4966a12-7f9c-4087-88e9-3988613ab9a5",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "74caaa3f-b65d-4726-b29b-cebdf540bc5a"
        },
        "item": {
          "id": "48f6c46f-b21c-479c-b4c8-47f5698ee27f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "df600372-6e92-4fb9-a81a-e5b50fc82ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9506169-8747-40e4-a62b-b958e2e6d9a1",
        "cursor": {
          "ref": "6c600ec2-82be-4a77-9bdc-f989bb28cb93",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3883bcd7-abfd-48b3-beb4-f21fdc5e4238"
        },
        "item": {
          "id": "d9506169-8747-40e4-a62b-b958e2e6d9a1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e112ae4e-54e3-4d14-8add-cca28a33bfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f328c513-a714-446d-a2ff-5c61db14e882",
        "cursor": {
          "ref": "643ec31e-dcf9-4b30-9808-4cb2854c008e",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "887fe5a4-20b4-4312-b6ff-e5e42b70f05d"
        },
        "item": {
          "id": "f328c513-a714-446d-a2ff-5c61db14e882",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3339e3a9-994d-47e3-bf2d-1b169cd125e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fefd12-4124-4f1d-ac5e-095d72353a92",
        "cursor": {
          "ref": "9e91ed6e-6339-40a2-be6b-1dae2fc6fc47",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "01fb0fd9-6d7a-4c16-bf10-435e5ba0cd9b"
        },
        "item": {
          "id": "90fefd12-4124-4f1d-ac5e-095d72353a92",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "118e4355-2cbf-4d65-ad53-23f99287752f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f588f5-d860-40a8-93ef-02dd6d940d52",
        "cursor": {
          "ref": "2304d6db-f667-4dea-9a37-4e5b534d9721",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1d773e32-3255-434a-ab2d-4062c6067d59"
        },
        "item": {
          "id": "33f588f5-d860-40a8-93ef-02dd6d940d52",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "566d84f3-c9e7-46f5-b901-70f35bfe85f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b0cbe0-5095-4b5b-902b-02d4a1773814",
        "cursor": {
          "ref": "220681a8-cc95-4a46-89ff-4f18f88ad45a",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4695d179-bdca-46df-9193-668a54d2092e"
        },
        "item": {
          "id": "88b0cbe0-5095-4b5b-902b-02d4a1773814",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "90cc122c-c2cb-420e-9967-1a1f399d8ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f44037d-9576-4aee-8716-31ec6fc02ef7",
        "cursor": {
          "ref": "aeeee294-ddf1-4585-94dc-9367d6902c6b",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "06599ff4-0787-4c17-929a-f631ab5422fb"
        },
        "item": {
          "id": "0f44037d-9576-4aee-8716-31ec6fc02ef7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d6eb8f60-f4fd-4b7a-b915-81e33eb1ff0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7295419a-1109-4baf-b0b3-a3cbc68f54fc",
        "cursor": {
          "ref": "78c27ada-97fe-41ce-a75b-1244f0b3fe0e",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7d022d71-86ea-4732-8861-bb303158a55c"
        },
        "item": {
          "id": "7295419a-1109-4baf-b0b3-a3cbc68f54fc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e9d9f7cb-25a1-43fd-a0ab-12161738bd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8409538-4332-4f4c-9096-5d2d24ac7bda",
        "cursor": {
          "ref": "1291a202-97d9-41e8-a788-81d0c2435c3f",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9e7af591-aca6-47fa-8572-c70809453986"
        },
        "item": {
          "id": "e8409538-4332-4f4c-9096-5d2d24ac7bda",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b51e1d1c-9921-40e9-a81d-bff0bfa20c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de36ebe-e177-4241-b31e-9af5038fceef",
        "cursor": {
          "ref": "c427b913-6d82-459f-944e-7ebf35732a21",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c317a092-bbb9-4b9d-99ea-beb8f2805cbb"
        },
        "item": {
          "id": "7de36ebe-e177-4241-b31e-9af5038fceef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "da4adcd1-aedc-49e3-9234-89db3616d6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd12aa0-ab18-4e14-9421-964bef57e048",
        "cursor": {
          "ref": "a9b4e7a7-3567-4442-8c21-c10c06b7d3c3",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7145b169-4cea-4b19-be2a-c0061acc8037"
        },
        "item": {
          "id": "0bd12aa0-ab18-4e14-9421-964bef57e048",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6138374b-3da1-4a78-9fc1-1254b2f921ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45637083-9c77-4358-a11b-e0ecd75c3d04",
        "cursor": {
          "ref": "36c1422b-dd9c-48de-be4c-b50cc2945ae2",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6d53998e-b482-42df-ac80-a74fe4020535"
        },
        "item": {
          "id": "45637083-9c77-4358-a11b-e0ecd75c3d04",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "942247e2-bcbb-4ecd-8339-04746c26b744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c686b60-d68e-4377-87c2-3a8f654fc385",
        "cursor": {
          "ref": "43e53586-6f65-4c0c-b74a-88ec91ca4c32",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9a0cf755-da32-4c85-8821-e7a2215ebda4"
        },
        "item": {
          "id": "2c686b60-d68e-4377-87c2-3a8f654fc385",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7cec6067-9f94-4840-a09a-52ac6a8977e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58abd820-868c-4de4-a55e-1855df0685b6",
        "cursor": {
          "ref": "a780568c-c5ff-42df-a1f4-861397d6cee4",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c95ec928-0e0b-4a39-8e1a-1caf7be3e245"
        },
        "item": {
          "id": "58abd820-868c-4de4-a55e-1855df0685b6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0d03e2f8-ee2e-4305-876a-b462ffdfc142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8e90bf-8b15-4365-9e67-a1f4f35b29dc",
        "cursor": {
          "ref": "80ccef96-1502-4dda-99a1-a0e3a6f57c20",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2c101a02-b973-4b6f-8441-0bc6eab93920"
        },
        "item": {
          "id": "bb8e90bf-8b15-4365-9e67-a1f4f35b29dc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ac45b4e2-98de-40bc-9652-a19b810c8b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb8cb03-6417-4dcc-b79a-77196669d7cd",
        "cursor": {
          "ref": "1387332f-ef6e-4c23-916d-a52a8f54bdf5",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "77d0def5-f7f2-4f1b-b115-c028dc169d96"
        },
        "item": {
          "id": "ccb8cb03-6417-4dcc-b79a-77196669d7cd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "106d538f-1b0c-407c-b2ff-eaf2c3efddb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ee21d2-a13a-4802-a3f8-6b71b6a87c7f",
        "cursor": {
          "ref": "cea0b6b3-1e85-4631-8250-f150478c4603",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "35ce1e55-b4fb-45f2-b5b0-b97994c31913"
        },
        "item": {
          "id": "20ee21d2-a13a-4802-a3f8-6b71b6a87c7f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "84f1d393-984f-4bcc-8836-a9a140ab32d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769e6bc9-519a-4b70-8220-910470295723",
        "cursor": {
          "ref": "efff6aec-6901-4152-a1ec-ad241d7ddba2",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "225c5925-f00c-4930-871a-02d60c7d25bf"
        },
        "item": {
          "id": "769e6bc9-519a-4b70-8220-910470295723",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "edd670b9-2582-422d-b9f3-c2f01d2745f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4158f7d7-8cfb-49b9-beb2-ef6c742ec848",
        "cursor": {
          "ref": "95954509-8a9f-4e51-b79a-88329f7212a1",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9882ef5b-cd3f-44c9-a2e3-e40001664cc1"
        },
        "item": {
          "id": "4158f7d7-8cfb-49b9-beb2-ef6c742ec848",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6c347003-e450-483a-a511-903e771d3868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862ff31a-172b-4b0c-a2ff-1447be51f754",
        "cursor": {
          "ref": "5844a009-1e14-4ccb-9591-e6c1ec2ef6cb",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ee9b825a-2e20-428f-af17-8a4e66d90709"
        },
        "item": {
          "id": "862ff31a-172b-4b0c-a2ff-1447be51f754",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "591f1492-76bf-48a7-9765-868779329563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3bb8d9-283c-4fe8-95f1-f4ee6f456a7e",
        "cursor": {
          "ref": "53342faa-902c-44f1-9f1b-9c70858d6a9c",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c629c988-0187-4289-8681-f077311079fd"
        },
        "item": {
          "id": "bd3bb8d9-283c-4fe8-95f1-f4ee6f456a7e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "31f56b44-9cd7-43ba-b354-4e1759632222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425e1d91-18b2-412f-99ee-07d53c593b72",
        "cursor": {
          "ref": "f94965f8-8b6c-4116-a900-1e3ca0d2fc18",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d24886a0-4d6e-4905-b431-fa08cd7daef9"
        },
        "item": {
          "id": "425e1d91-18b2-412f-99ee-07d53c593b72",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aff0d78c-28aa-4bab-9d05-4a3a061d153e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bfdb4f-8c79-4e52-91ad-3da32a8e90cf",
        "cursor": {
          "ref": "d08afe70-3edc-4731-9571-be6fefd1c9c5",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7dbe450f-3844-4c23-a1b1-516525c91faf"
        },
        "item": {
          "id": "36bfdb4f-8c79-4e52-91ad-3da32a8e90cf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "720ef517-07d4-45b1-851d-2e0ee737c355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91631cde-6120-481d-86d2-b436f6110992",
        "cursor": {
          "ref": "50c5257f-7a26-4287-ba2e-1c382f32de2d",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0028848f-d634-4bce-b2d8-44d4718c065a"
        },
        "item": {
          "id": "91631cde-6120-481d-86d2-b436f6110992",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "38c8c42e-c94e-4c82-b909-c1e114766e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a507584-66e1-41f2-a6fb-ca55af0fc35d",
        "cursor": {
          "ref": "e3b1ac68-3f67-4a4b-97f8-dde0282378fa",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0d540bb5-59ee-4abe-898e-9137a432c414"
        },
        "item": {
          "id": "7a507584-66e1-41f2-a6fb-ca55af0fc35d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a1d5a67b-86ac-493b-a39a-4e88a1246afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3900cbc-89cb-434c-be0b-931ac357c9ea",
        "cursor": {
          "ref": "3fce03da-a78b-4bb3-8820-37a451a9c196",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f28836f3-428d-4a5e-9180-39e6b767b6f4"
        },
        "item": {
          "id": "d3900cbc-89cb-434c-be0b-931ac357c9ea",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ceddeaa8-5aa3-4b49-b396-19990a4406f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62d6c8c-daa2-463f-bcf1-37d05fffbd3b",
        "cursor": {
          "ref": "2c2c48d6-dfcb-455c-8629-1807fb1e4b3f",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9ff1d0e1-ce50-4ccd-aa30-e36803cc0608"
        },
        "item": {
          "id": "d62d6c8c-daa2-463f-bcf1-37d05fffbd3b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6e04d800-d1a3-4aee-853a-6b9fca7ff242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d314d7e-d4b0-4ce5-a823-1b10c728e67f",
        "cursor": {
          "ref": "7996b576-e65b-43c0-a8e9-f4952d54f3ce",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "25dc145c-3792-410b-808c-e1638189fce4"
        },
        "item": {
          "id": "0d314d7e-d4b0-4ce5-a823-1b10c728e67f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a99f8d60-e496-4079-b372-b22e498fcec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117fff14-89d9-49d8-a735-eb1b7447093a",
        "cursor": {
          "ref": "36686093-5d63-4afd-9764-34c54eb8e233",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "90008c84-1800-4aed-8b00-b1c60f1469ef"
        },
        "item": {
          "id": "117fff14-89d9-49d8-a735-eb1b7447093a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "46030dd2-32fc-4a0d-bba5-f8e55d0f3008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e920ff1-83dd-422f-873b-bff79ae2bc79",
        "cursor": {
          "ref": "bd5b175f-7602-46fb-b9b2-030991469bbb",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "486cc205-8e61-4fd4-8b39-844828365ac8"
        },
        "item": {
          "id": "9e920ff1-83dd-422f-873b-bff79ae2bc79",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2f1dd86c-0364-4184-a1ff-1cb2482d1b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acc87d8-8d69-4805-b0ca-83cb3cb94baf",
        "cursor": {
          "ref": "241941aa-0a11-491a-bbe8-1c0c051f6e9b",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "972e60e0-a628-488f-8dd7-ed4db58450db"
        },
        "item": {
          "id": "3acc87d8-8d69-4805-b0ca-83cb3cb94baf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "52a2e7bf-bd68-448d-862a-3e5ca982057c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9b963d-e8c2-477d-8a8f-d234dacafcff",
        "cursor": {
          "ref": "238f8e99-46c5-4e43-86ad-f7abfa6e732c",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "05f0d1e6-da47-43ad-b48d-7ad05fbb7d71"
        },
        "item": {
          "id": "0f9b963d-e8c2-477d-8a8f-d234dacafcff",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f7b7914f-882f-4093-8c60-6345742ecca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bddc771-fd1f-48bb-b376-9a99935844df",
        "cursor": {
          "ref": "5c186b98-0131-42c5-afd8-352962cb11cb",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "af6f223a-16fe-47e9-b0f3-9a6ba4d902f5"
        },
        "item": {
          "id": "6bddc771-fd1f-48bb-b376-9a99935844df",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bf257321-9ecb-4837-9dff-8565302f35d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e38b1a-8ad3-4462-9d6e-0a1d171d0c8c",
        "cursor": {
          "ref": "7da16437-6850-4a17-aa9f-d88088a10356",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c5a5aaaa-cb7d-4f94-ad4e-a98feeb6e87c"
        },
        "item": {
          "id": "16e38b1a-8ad3-4462-9d6e-0a1d171d0c8c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4c6a2e4e-3d51-4801-8c4b-fb919afbba90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cec9b34-026f-46e4-9ddc-e17a30681c60",
        "cursor": {
          "ref": "498258db-30c8-44ea-9641-ef6615dbdf1e",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6aa39c48-4e9f-4c59-9c1d-6038af4f9ceb"
        },
        "item": {
          "id": "3cec9b34-026f-46e4-9ddc-e17a30681c60",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "55db2f9e-4227-4659-916b-e26acd0290e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbaf92c8-4e1a-4984-aecf-d8cf7c21ded8",
        "cursor": {
          "ref": "056604b0-2147-4b01-9db8-d84864f87c0a",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "88aa9719-fcfc-4f79-9edc-6b97351ef272"
        },
        "item": {
          "id": "bbaf92c8-4e1a-4984-aecf-d8cf7c21ded8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "991e9d3c-8e01-45c4-822b-b6e2062fd636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b68957-0160-474c-a73c-3a3b39ec7b02",
        "cursor": {
          "ref": "5df39ad7-a340-4bdc-b4b6-18c921ae8ade",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "36e96253-e0fd-4d5f-adbe-c2af45cf4266"
        },
        "item": {
          "id": "00b68957-0160-474c-a73c-3a3b39ec7b02",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "86319f9b-2b2f-432b-b363-53000b7df300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8537918c-80c9-4ae9-b540-c9f9ec927b13",
        "cursor": {
          "ref": "86133708-da23-44aa-8ad3-ec4b6852ec05",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8e1f8cd0-acb3-4b91-ae93-7b131f59d224"
        },
        "item": {
          "id": "8537918c-80c9-4ae9-b540-c9f9ec927b13",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "79cc87ed-9407-4d89-89e7-957a2e9e3f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca8786e-5de2-4801-9722-673bfbacc824",
        "cursor": {
          "ref": "2a2ca13f-efec-4e0c-8e09-dc024a50036a",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2cacb725-d664-4dc5-8522-0007e4a4abf2"
        },
        "item": {
          "id": "fca8786e-5de2-4801-9722-673bfbacc824",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e368092b-76bf-4df1-a8e9-919bb312583d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b750f8d-fc55-49fc-9ff9-7d9ab28521cf",
        "cursor": {
          "ref": "168c34fc-330a-41c1-94ed-dc110d6f1aa6",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1462dbaa-f251-42b6-b83f-9bdbed7d7e6f"
        },
        "item": {
          "id": "1b750f8d-fc55-49fc-9ff9-7d9ab28521cf",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "211cd834-eb86-46c8-86a8-5ac818c37655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4caa10e-a4d3-41cb-bb2d-6db840e5e981",
        "cursor": {
          "ref": "ea187d4b-253f-4dc7-9c31-34acb3e1357c",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8ffa964a-01b8-4872-9da9-87f813385c6a"
        },
        "item": {
          "id": "b4caa10e-a4d3-41cb-bb2d-6db840e5e981",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "783cf70b-68dc-4f7c-9add-b39d31d3f92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381ed077-2129-4bae-a572-51ae0fa7e0ac",
        "cursor": {
          "ref": "9ab6c9fc-2629-4a77-affb-1458b89820e9",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b2c3c90b-33f7-41d7-9b77-44f63a611f5f"
        },
        "item": {
          "id": "381ed077-2129-4bae-a572-51ae0fa7e0ac",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ac29735b-f55d-4d1a-9802-fb213f5df1ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e0eeb1-1b37-4839-bc88-823ceecbbfba",
        "cursor": {
          "ref": "242b1ed1-bbf3-4e0c-a765-45ed9d697748",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "300e96d1-66a7-4a74-a4e0-b24461313740"
        },
        "item": {
          "id": "56e0eeb1-1b37-4839-bc88-823ceecbbfba",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "04f1f68a-fc23-4677-867b-998d44186648",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 262,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be28f62a-10f1-4c99-9e35-07e654be1853",
        "cursor": {
          "ref": "14bfc5fd-a5d4-44bb-8646-5b54bf150d53",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3380b883-5ee0-4400-a706-4abd20d2485b"
        },
        "item": {
          "id": "be28f62a-10f1-4c99-9e35-07e654be1853",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ec68f9bb-0947-4793-9501-b2ded4bbeab5",
          "status": "Created",
          "code": 201,
          "responseTime": 109,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "708ce255-b116-440c-af24-910d25032d64",
        "cursor": {
          "ref": "e3537b6e-8628-4d02-9aed-eb4045992f2d",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "65ede2bf-a86c-47fe-b46e-c9a38302b427"
        },
        "item": {
          "id": "708ce255-b116-440c-af24-910d25032d64",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6a228699-d699-436a-80a6-fc73784811c0",
          "status": "Created",
          "code": 201,
          "responseTime": 98,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "36033ad1-7314-4ae1-9cf1-fd78ab77f723",
        "cursor": {
          "ref": "31122d93-bd75-490c-9c3f-206fea34edb3",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a4d4df72-ce9f-42fc-9c6b-3d7508a0bcfb"
        },
        "item": {
          "id": "36033ad1-7314-4ae1-9cf1-fd78ab77f723",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "328bb4a5-5d6a-45fe-8ba3-9662236b78b8",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0d5c14-5331-4fce-b932-234eabbf5f0a",
        "cursor": {
          "ref": "1db01816-7292-4be6-b048-772fdd4ed0d4",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e32419bc-45ec-4768-8f51-8a66b396e291"
        },
        "item": {
          "id": "ac0d5c14-5331-4fce-b932-234eabbf5f0a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8f098809-1420-4c22-978d-65c33013dc29",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3289c7-627a-4de8-a25c-f7aa587c4dd7",
        "cursor": {
          "ref": "8b5cd459-a9a9-44ec-8af0-51b4cbe3aa5a",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "007a8d29-eb32-44cb-ba1f-31a0282ae4ef"
        },
        "item": {
          "id": "3e3289c7-627a-4de8-a25c-f7aa587c4dd7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "df327fd7-82ec-49e6-9a2e-da65195fc7a7",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dd68f1-3542-4067-93be-2c8052f9cf78",
        "cursor": {
          "ref": "8190e9cb-fedd-46d8-901b-81b86a346305",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "20882da3-546d-4200-bd0c-a9ab0bb67aaa"
        },
        "item": {
          "id": "53dd68f1-3542-4067-93be-2c8052f9cf78",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5a61d804-5f92-49ee-92f9-c8efed6ff4c1",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50ee8e0-ab00-4859-8bbc-c8077b16cec3",
        "cursor": {
          "ref": "c01c051e-2e01-4a80-bf35-beac7be257bb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "91a04e2c-18f6-4018-9a18-17bed302e917"
        },
        "item": {
          "id": "f50ee8e0-ab00-4859-8bbc-c8077b16cec3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "565eacdf-7cc7-4ade-9fec-b4d49ad5f02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50ee8e0-ab00-4859-8bbc-c8077b16cec3",
        "cursor": {
          "ref": "c01c051e-2e01-4a80-bf35-beac7be257bb",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "91a04e2c-18f6-4018-9a18-17bed302e917"
        },
        "item": {
          "id": "f50ee8e0-ab00-4859-8bbc-c8077b16cec3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "565eacdf-7cc7-4ade-9fec-b4d49ad5f02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c875d787-0707-4f81-aea0-cea701e07bfb",
        "cursor": {
          "ref": "a61ca8dd-79e7-41a6-a9f5-eac24af19e6f",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "53ebe705-0621-4fcf-a6e0-c85b821e82ab"
        },
        "item": {
          "id": "c875d787-0707-4f81-aea0-cea701e07bfb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1e3d6595-efb7-449e-9b6e-ec0ef0ab1580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75845eed-060d-4044-ae08-114eae27a58e",
        "cursor": {
          "ref": "5db4d458-6863-414f-98cd-a592b6b1d539",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fe60cd67-80e3-48d6-a625-1d9944357526"
        },
        "item": {
          "id": "75845eed-060d-4044-ae08-114eae27a58e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e9f88292-56eb-43ce-91a3-1a62f9186acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d29a1d-3f20-47f0-9df1-7f060caf9709",
        "cursor": {
          "ref": "e420ba9c-a59e-40b2-ad99-c3ef4362bb5d",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3d108f4b-4685-45c9-b75b-a74c36135a01"
        },
        "item": {
          "id": "02d29a1d-3f20-47f0-9df1-7f060caf9709",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "afab3715-b5c6-44d5-93b6-ee1c08077c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0dddeb-251f-41bf-8716-cc628648209e",
        "cursor": {
          "ref": "64bbc162-687e-4fe6-bb6f-3aff9ab4b684",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7edcb429-359c-4e3e-a4dc-69fe23ca684a"
        },
        "item": {
          "id": "ff0dddeb-251f-41bf-8716-cc628648209e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3070f53a-518a-4afd-ab34-513463b317c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00247ef-ace7-4b03-9941-3e8a181f583b",
        "cursor": {
          "ref": "c5957da3-f190-4b58-9bd0-c6c50f7395d0",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ba0a19f5-e78d-4851-a325-97a3d2f16879"
        },
        "item": {
          "id": "c00247ef-ace7-4b03-9941-3e8a181f583b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ce74708e-867e-4462-bbc5-297bf2b7b80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7428e0c4-2ad3-43b2-a913-a0ee6f7e7f9c",
        "cursor": {
          "ref": "0a7ad353-4c9c-4791-992c-9b904f8fdb1b",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f8719660-782f-4f46-9b9d-bc2f15418278"
        },
        "item": {
          "id": "7428e0c4-2ad3-43b2-a913-a0ee6f7e7f9c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f2dd2e6a-fb8d-42f8-82de-fdd574f8a4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b06c8a9-684c-44e7-9479-81c654491f9b",
        "cursor": {
          "ref": "fe21524e-9bf6-4a0e-be5f-4c8c9428f35b",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "13222c9b-72ad-425d-9db3-c34ef2bc292b"
        },
        "item": {
          "id": "7b06c8a9-684c-44e7-9479-81c654491f9b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d55cf3b3-d74a-4da2-a306-e594811c047a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9588bcc-2f24-4b82-b1f2-7c1782e71d66",
        "cursor": {
          "ref": "30f0a837-5788-45ed-95a6-5b75cca79ef6",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4bf13bea-8ec5-4b91-a76f-6a3d3c24582a"
        },
        "item": {
          "id": "f9588bcc-2f24-4b82-b1f2-7c1782e71d66",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2bf5a1fb-da02-4b2d-a335-3c9690d91141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126f2f70-341a-4e66-a320-dfad29db7558",
        "cursor": {
          "ref": "44d56472-02f5-483b-9ecd-67c10ca7d2c5",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "24a5685c-01b1-4ec9-9f63-f3931ef77368"
        },
        "item": {
          "id": "126f2f70-341a-4e66-a320-dfad29db7558",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d0f25060-fee8-42a7-a73e-7c4a4d479c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a553423f-01ef-493b-87af-45c6ce3c2319",
        "cursor": {
          "ref": "9d63b9cf-b958-4da3-a55f-c8e0483de50b",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "739aa4f4-ddea-4154-9bfd-363ce17e3629"
        },
        "item": {
          "id": "a553423f-01ef-493b-87af-45c6ce3c2319",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "65a3bc73-91f2-4e22-a397-101bfa08bd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e72a87-3a4c-4abd-a3df-4065bbfea430",
        "cursor": {
          "ref": "2f5cd27d-a37a-4d50-aa72-5fddd9686e1d",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "13342122-8d26-46bb-a396-e57a58cfb56f"
        },
        "item": {
          "id": "75e72a87-3a4c-4abd-a3df-4065bbfea430",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1d626938-1206-46d2-a1b8-83fc0cb4316a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e91b920-3a01-4e52-bc04-db77c317383b",
        "cursor": {
          "ref": "019f53cb-a7dd-424f-ba4d-9faf870ecbde",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d157efde-3f97-4a82-8c66-a6928b91eba8"
        },
        "item": {
          "id": "3e91b920-3a01-4e52-bc04-db77c317383b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bdb70e07-56df-4716-a133-00842988de4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313700e9-e8a7-415f-9e4d-8bb4fd09f18f",
        "cursor": {
          "ref": "b9dcc8de-13d5-4347-aefd-16d2d30798ff",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "43a9f64d-b3d3-42ad-8f6f-7506954a576d"
        },
        "item": {
          "id": "313700e9-e8a7-415f-9e4d-8bb4fd09f18f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8c95b71e-4e71-43c8-8667-99317e8dd1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec967fe-0197-40a8-8b77-75f5a287e8da",
        "cursor": {
          "ref": "eed64a88-dde6-4903-ac20-2418c40f4037",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c53af453-fbdc-46a7-8ba5-49aa86dc826e"
        },
        "item": {
          "id": "8ec967fe-0197-40a8-8b77-75f5a287e8da",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "eb33d296-dcc3-4d3e-a44d-fb8a79668ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597b300c-4d64-437e-98b5-6d83ebf6958f",
        "cursor": {
          "ref": "1f39a509-97c2-4ca9-9b11-43aed9d81432",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5d6968a1-a4cf-49de-9e41-ec5e3e8b5c8a"
        },
        "item": {
          "id": "597b300c-4d64-437e-98b5-6d83ebf6958f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5db08e76-e036-4541-8271-ec57337372c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374f39be-6df1-4046-be1d-308ea48d56c4",
        "cursor": {
          "ref": "5e9171ff-c3e7-43ba-bf5d-76781c8e245b",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "239938df-91f7-4afe-84be-ad4a3c604fe1"
        },
        "item": {
          "id": "374f39be-6df1-4046-be1d-308ea48d56c4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cc6144cb-08a7-473a-a33c-85ba874fd171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769a4495-3838-4bfe-a05c-fdd272da1a61",
        "cursor": {
          "ref": "bf221f13-8313-40a7-a465-28cdf957089a",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2099c639-5d89-4346-bdfa-c5b25f586a02"
        },
        "item": {
          "id": "769a4495-3838-4bfe-a05c-fdd272da1a61",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2dc14268-072e-4899-93ba-66076c307683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a936715e-3572-4032-a1a6-cc6e94b07eb9",
        "cursor": {
          "ref": "c9d1b5d4-078d-4994-a101-2c00a0371149",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "156af312-25ba-4b09-a235-0701945ba28a"
        },
        "item": {
          "id": "a936715e-3572-4032-a1a6-cc6e94b07eb9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "628c977d-cc92-4129-bb21-2a350b156f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2fab3d-3fe0-464c-bbdc-fc3fbbcbb0cb",
        "cursor": {
          "ref": "a1c74dae-4e8e-4837-84a5-5426eb127db3",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3fb688ca-a785-418c-8236-73259acf4ed3"
        },
        "item": {
          "id": "7f2fab3d-3fe0-464c-bbdc-fc3fbbcbb0cb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b4f5bae3-e3d9-4ad2-8179-62c8b5837a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ade4f5-19f6-4871-9da5-dc04229ebd7d",
        "cursor": {
          "ref": "fd590b96-df89-403d-846e-26896d5a13ae",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3b81eedf-e24f-49e5-b944-13f82b83300a"
        },
        "item": {
          "id": "73ade4f5-19f6-4871-9da5-dc04229ebd7d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "47b62e88-774f-4ae7-8da2-177dc3c3395d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f754693a-22a1-4a31-9567-e7c2dd23665b",
        "cursor": {
          "ref": "2412c6a8-3f1d-4859-8832-a95c62433b95",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ef12b4f7-7982-4ecc-aa8e-2db405f0d73a"
        },
        "item": {
          "id": "f754693a-22a1-4a31-9567-e7c2dd23665b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8145b56d-8546-484a-99a2-4d4e3c644376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d2c3b8-bc01-4a07-8d78-1d08803b8e89",
        "cursor": {
          "ref": "fc2dd62b-b23f-44cd-8407-ed00ae70860e",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6cd7d677-2361-41df-b03f-415c87b528b2"
        },
        "item": {
          "id": "a8d2c3b8-bc01-4a07-8d78-1d08803b8e89",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8754ea86-a3a1-45cc-b646-46ece712e2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb04635-f752-4de1-987d-4952febac44e",
        "cursor": {
          "ref": "d184f37c-9956-4774-bc2c-5682ad3dec5e",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7a196fd3-5c80-4d06-bba9-98a1a06f0c6c"
        },
        "item": {
          "id": "1bb04635-f752-4de1-987d-4952febac44e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0ffeb30d-c512-4b90-8a3e-25dc77ffdc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c937015a-755e-4d8c-9c6e-4d36e4eb6df6",
        "cursor": {
          "ref": "6b61627e-c0f9-4adc-829f-afeccc887491",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d26b0d3f-f199-4e0c-868c-0e031f7e6ff4"
        },
        "item": {
          "id": "c937015a-755e-4d8c-9c6e-4d36e4eb6df6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3cdf1397-ce71-4256-963d-f13c4b9bb28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5043e9-798c-4ed6-9bcf-1ca1d9fce3da",
        "cursor": {
          "ref": "e1184e7e-e236-49e1-ae0f-ab4445370f00",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "33bb6cd1-2aea-46e0-9d5d-a5c5c02f5c91"
        },
        "item": {
          "id": "bb5043e9-798c-4ed6-9bcf-1ca1d9fce3da",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "73f214e2-9901-4e36-a97f-5aeb135c7981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834521ad-6e75-48cc-8b81-72026687ef58",
        "cursor": {
          "ref": "4e5343b7-c1a0-4120-8631-bf8802a1a842",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "55287bb6-e796-45f3-b79b-d9a9a8b60cc5"
        },
        "item": {
          "id": "834521ad-6e75-48cc-8b81-72026687ef58",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3508d586-58b4-4bf2-9e9e-c0f0930e32ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4129e7-0906-4984-bb23-6626332b9965",
        "cursor": {
          "ref": "6f8be0be-c993-4263-bf7e-550cf3f60dbf",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4bccdf3b-9d7e-46e2-be88-a7f173a1adfa"
        },
        "item": {
          "id": "cb4129e7-0906-4984-bb23-6626332b9965",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b8644800-750d-4966-a6f3-365ee1d66e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada029c2-1de2-4ae7-94ce-c93ed37b31ed",
        "cursor": {
          "ref": "d4faa5dc-41d3-4fc3-8a3c-e824e9ad6bba",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4d13a6ce-ad1c-4789-b781-244fd6788b70"
        },
        "item": {
          "id": "ada029c2-1de2-4ae7-94ce-c93ed37b31ed",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8711854c-96ef-41dd-935d-e41f8b149211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c5cd4b-ad65-4903-be73-1aba2428685b",
        "cursor": {
          "ref": "0d294920-001f-4d11-a583-f582a7775970",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "155f3ca3-2c76-45d0-b457-13ee8aaa6cfd"
        },
        "item": {
          "id": "c5c5cd4b-ad65-4903-be73-1aba2428685b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "432abd97-d770-45d9-84f4-2e48d89b0104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab09fc2-5c58-4151-8b2f-6095a95f65e7",
        "cursor": {
          "ref": "276f4f24-b18b-4595-b798-b1ce16133e61",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "85211589-682c-4944-910e-f7aa5a4dab09"
        },
        "item": {
          "id": "3ab09fc2-5c58-4151-8b2f-6095a95f65e7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b6554e63-adc9-4f9d-aef7-46b744b7aa8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab073de3-b9b0-40f4-b1f5-d0d589b80774",
        "cursor": {
          "ref": "66fe115e-4e56-4cbf-bfa2-5ef23d47cf9e",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d775fcba-f531-4e5e-8d92-a401bda19aab"
        },
        "item": {
          "id": "ab073de3-b9b0-40f4-b1f5-d0d589b80774",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "60a7f324-728b-4b98-9f24-44b64a38b730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b747fb3-a59d-4dd8-92b4-d1564c66b881",
        "cursor": {
          "ref": "249b45ab-d6e4-40f7-9e8c-17575207c4f3",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ff389a40-0ac7-46b7-8912-62b4bdbbbe83"
        },
        "item": {
          "id": "1b747fb3-a59d-4dd8-92b4-d1564c66b881",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2368cc8e-879c-41a0-9115-4fcc11d43cc8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4273bad-14cf-4b29-9627-91f58d7835fc",
        "cursor": {
          "ref": "980d23dc-74df-4463-ab09-e06f3e6c49f4",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d910d109-a594-4aac-a2d9-a994c3fba0be"
        },
        "item": {
          "id": "d4273bad-14cf-4b29-9627-91f58d7835fc",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "1f866412-47f1-4932-a0dd-54bbd0adbea6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 74,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6915007-d13c-4007-98af-54d4b1bfa401",
        "cursor": {
          "ref": "56deae49-472d-4797-9831-2b3410ea4996",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "61624dd4-8ba2-4352-b458-d6c81032875a"
        },
        "item": {
          "id": "e6915007-d13c-4007-98af-54d4b1bfa401",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "57aa112f-aa9c-4a0b-9c6e-b54deabb4f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6915007-d13c-4007-98af-54d4b1bfa401",
        "cursor": {
          "ref": "56deae49-472d-4797-9831-2b3410ea4996",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "61624dd4-8ba2-4352-b458-d6c81032875a"
        },
        "item": {
          "id": "e6915007-d13c-4007-98af-54d4b1bfa401",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "57aa112f-aa9c-4a0b-9c6e-b54deabb4f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967b1107-790e-40ca-b13b-90c0c07472dd",
        "cursor": {
          "ref": "7bc32492-114a-4f98-bdf7-37d5e88b7efc",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fe723676-8a91-47b5-9e6e-7ca2ecbbe76b"
        },
        "item": {
          "id": "967b1107-790e-40ca-b13b-90c0c07472dd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f9248aef-adf1-41b8-963e-ff6b74dc8484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d682e986-373c-419d-b528-44c8dcae9892",
        "cursor": {
          "ref": "df0e8a7a-2a79-4ff8-8788-a5821f13e6e4",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2290d67a-55d1-4c9f-a0eb-495434fa1f6d"
        },
        "item": {
          "id": "d682e986-373c-419d-b528-44c8dcae9892",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4c7b849a-3388-4965-82cb-690f351f5621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa12d03-a85c-4e28-8ba8-1bdb03efbd84",
        "cursor": {
          "ref": "aa2e1bc0-31dc-4c71-a16f-cec7b412c2ca",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4a2a1a77-007b-49ca-b8b4-68f30617a78f"
        },
        "item": {
          "id": "5fa12d03-a85c-4e28-8ba8-1bdb03efbd84",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "908475c3-4545-4a42-9a25-f5f32a66dbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c67cb33-5f27-4d30-ab9c-8e72fc66d8e5",
        "cursor": {
          "ref": "28bc3d33-bd8c-4b0b-a800-673badb14760",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4959d440-8281-4b5a-8a03-d121e1b83fb2"
        },
        "item": {
          "id": "1c67cb33-5f27-4d30-ab9c-8e72fc66d8e5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3b543fb9-178d-412d-bc0c-15146a05b2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70d2477-31b3-45dc-9b6d-7989644ba9bc",
        "cursor": {
          "ref": "55c6b9aa-21ad-4e41-8401-06d69628cb23",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5fe1f752-2c38-4b8f-b38f-7caee154778c"
        },
        "item": {
          "id": "d70d2477-31b3-45dc-9b6d-7989644ba9bc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f367a2e1-7c16-4492-be8f-51aec4fe11e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7555c368-2944-414d-a1c9-ef2610913f0d",
        "cursor": {
          "ref": "e6b89485-fabb-49d6-b298-11447895e033",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3ddf4d69-f06f-4561-a821-7ea308ecabc4"
        },
        "item": {
          "id": "7555c368-2944-414d-a1c9-ef2610913f0d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3e45f92c-1812-4001-aa1e-1ec6bdf3b842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30395e0d-0ee5-4a4b-a499-7cf4fd3f6d04",
        "cursor": {
          "ref": "79b8f855-91d1-447f-a840-66cd622091a7",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "345668f2-01a7-48a4-ab96-3d36b1aa7f89"
        },
        "item": {
          "id": "30395e0d-0ee5-4a4b-a499-7cf4fd3f6d04",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4be9088e-33e9-448a-bc77-52a33a853659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab825506-1878-4dff-86ca-42632fc585c0",
        "cursor": {
          "ref": "04be232f-a53f-40f4-a136-d644bb3e29a5",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "be75728f-1f2a-45e3-a5c6-80b61c41659c"
        },
        "item": {
          "id": "ab825506-1878-4dff-86ca-42632fc585c0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4e4164c4-b752-41a1-95d2-138a59d7d38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a65c1c-5400-4477-88ce-ab09def2a93f",
        "cursor": {
          "ref": "0dc42a92-9f18-40c3-aca0-0701279e4949",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "29b7a6b5-07ec-4679-a136-ae2781c89051"
        },
        "item": {
          "id": "39a65c1c-5400-4477-88ce-ab09def2a93f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "638b1e75-3167-4ce6-a390-1b96cc50f289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690f6f8c-7f40-43a4-8508-c3407ad16137",
        "cursor": {
          "ref": "e3d5bf86-f4b8-411f-ac09-d351d0824b8d",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "035d15c1-bfe7-4c42-b3c4-86977a41d8a8"
        },
        "item": {
          "id": "690f6f8c-7f40-43a4-8508-c3407ad16137",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c60f3286-87b1-41c8-b382-b4d09ee2fa54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264277a8-cab3-4d32-bc49-034a785df9d7",
        "cursor": {
          "ref": "d3b51e45-e32f-4e3d-b2a8-376e821a5eff",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b2f6a66e-3b78-44b6-bddd-1bede62f56ee"
        },
        "item": {
          "id": "264277a8-cab3-4d32-bc49-034a785df9d7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "969eb5fb-ad2d-418b-9a56-aebe777ab1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e302d3b7-d9eb-4d9e-af37-a43a60903686",
        "cursor": {
          "ref": "719dc2fe-7cc3-462a-94d3-55624e0255c7",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c65969d4-046a-4a14-a713-0a1916968514"
        },
        "item": {
          "id": "e302d3b7-d9eb-4d9e-af37-a43a60903686",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fd543db2-729a-4e55-ac96-70e49f2057ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42d4202-31f8-4c71-8bf8-06274a94846b",
        "cursor": {
          "ref": "b6d93d0d-896b-4143-a0e7-b4027daf31b8",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a45b60bb-274e-489a-8a72-508d74e1d41c"
        },
        "item": {
          "id": "b42d4202-31f8-4c71-8bf8-06274a94846b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cd9c4c1d-46f5-4242-a831-026fafe82b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ab4e76-d1c4-48f6-88de-7271649a0027",
        "cursor": {
          "ref": "17bd25d3-bb96-44f2-9ea0-b3b68d26d7ba",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "136ec101-12f0-4ad0-a972-15242d1b81a3"
        },
        "item": {
          "id": "52ab4e76-d1c4-48f6-88de-7271649a0027",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2a802dac-eb12-446f-abaa-d53a4710484d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177da1fb-3652-41c6-a16f-fae5aae6bc6d",
        "cursor": {
          "ref": "a6bcfa02-fead-4fba-ba04-f3ec1c5fe22d",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "42a260e8-fec4-4972-8c6f-259f28de3682"
        },
        "item": {
          "id": "177da1fb-3652-41c6-a16f-fae5aae6bc6d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0f2cd61d-f1f2-467e-9ccc-7aaa291ac350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93eb3d15-9cb1-4e1a-9516-02a97d3b5b06",
        "cursor": {
          "ref": "8f1e03b0-7676-4b1c-830a-4d366dadd2ba",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "43f4005f-555d-4eb2-b7b7-671c99850689"
        },
        "item": {
          "id": "93eb3d15-9cb1-4e1a-9516-02a97d3b5b06",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "35066deb-d69b-4ea8-9c4b-20f920bd8ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea258dd6-fe2b-48f6-a78b-1d29a4f80378",
        "cursor": {
          "ref": "83d601c1-58ea-41bf-a292-aa4c65eaad86",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "13ce2e34-f3eb-4fe2-9c90-f07d8b823eeb"
        },
        "item": {
          "id": "ea258dd6-fe2b-48f6-a78b-1d29a4f80378",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4a13fe38-afb0-400d-87ae-b1578412ca75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56098af-1940-4323-83ed-56692e67808a",
        "cursor": {
          "ref": "41a3069d-3d78-4bcc-8282-2f40a09430a4",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "af93931b-5670-4a79-9d89-fc23dc9ee263"
        },
        "item": {
          "id": "c56098af-1940-4323-83ed-56692e67808a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "934494e3-80a1-4a02-b334-4536c3e89446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1796ed2d-ec13-4dea-8aac-2168e1b287f9",
        "cursor": {
          "ref": "16721ff6-9eb9-4312-b5f0-e6288a23b4f5",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5676c9b6-10c2-44a6-ac35-f91d28143fc1"
        },
        "item": {
          "id": "1796ed2d-ec13-4dea-8aac-2168e1b287f9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d84cb491-4a10-45fa-be0a-10931a074519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97b67ad-9680-43f6-8840-38273f6f0a40",
        "cursor": {
          "ref": "41776526-5d7a-466e-a966-b26e14823c5b",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e5717e20-33ef-4f0b-8a4b-80495533f2e8"
        },
        "item": {
          "id": "e97b67ad-9680-43f6-8840-38273f6f0a40",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "eb0ef196-bcfc-4a26-ac67-9fefd63ca1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1103fed-0f79-4b4f-9466-f35ff5acf628",
        "cursor": {
          "ref": "1b42e75c-973c-45a7-8e92-83afec4299a5",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f09a667d-68c3-47eb-be9b-d3cc0e5116b6"
        },
        "item": {
          "id": "b1103fed-0f79-4b4f-9466-f35ff5acf628",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1ca03dfb-322e-418b-8c5a-fa70be9c416f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38465fcb-0428-49fd-ad80-678d4f37d741",
        "cursor": {
          "ref": "716b207b-0402-4833-8832-696e851e0aa3",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c1e051f2-818e-43ac-b8fa-60f2fa84d2f8"
        },
        "item": {
          "id": "38465fcb-0428-49fd-ad80-678d4f37d741",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c3e02344-f4a6-43ee-984d-ef4dcf5ff93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e08ea83-7d77-454d-998e-8293c78f6ca5",
        "cursor": {
          "ref": "1ba6f7e8-010f-4724-a40d-e26e24451a1d",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3270052a-dee9-420b-89ad-e788b9748d5f"
        },
        "item": {
          "id": "9e08ea83-7d77-454d-998e-8293c78f6ca5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "763f0efc-8439-43e6-9257-56e61d00e9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b452fade-ff22-4069-a623-93fa5bb5fd1d",
        "cursor": {
          "ref": "a596517b-2cd8-4d53-9672-345e53c819ed",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7af1ea4a-7e69-4a10-a8ed-6928f56aaaf5"
        },
        "item": {
          "id": "b452fade-ff22-4069-a623-93fa5bb5fd1d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "36f746ce-a8f3-4e04-bb64-e39adc7525d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf8227b-7c75-4b79-a17a-2a04ca25a7fd",
        "cursor": {
          "ref": "0ebeb92e-656f-4389-8a37-5a7661367464",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0e86d50c-1890-41ef-bba8-dcec7b8e0544"
        },
        "item": {
          "id": "6bf8227b-7c75-4b79-a17a-2a04ca25a7fd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "da5093e6-cfd9-44d4-bf71-8cab12169c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49c5de8-dfed-4c77-9049-d4f0eaa74351",
        "cursor": {
          "ref": "bbbc3a8d-e488-4e38-ac40-e1dd40fc9e6c",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8e707f1a-764c-4538-9d9f-000953b3363e"
        },
        "item": {
          "id": "e49c5de8-dfed-4c77-9049-d4f0eaa74351",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "71bd745d-87ef-45e8-a372-7b401a2f5319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9136c42a-cd00-40d8-9495-caa47249501c",
        "cursor": {
          "ref": "51978ac2-751e-4851-a280-ff0d93cebf1f",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a693b165-e4fb-45af-a2bd-a57f816b7dea"
        },
        "item": {
          "id": "9136c42a-cd00-40d8-9495-caa47249501c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "12545408-1736-4ec5-8692-afa47d9ca423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e0dd4b-eeb7-4be8-b059-d32cc38a8fd0",
        "cursor": {
          "ref": "f85be7d7-2b77-47b8-85d2-a9d7256c6618",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1e60aa99-d080-4802-99c9-507ecc418236"
        },
        "item": {
          "id": "f5e0dd4b-eeb7-4be8-b059-d32cc38a8fd0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c71ada13-551a-421c-97ef-76dfa7b91242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177c4040-a582-45ca-b3ea-e1974b728944",
        "cursor": {
          "ref": "7a888ea4-3a14-4566-b6cc-fafdc59a3a38",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d213a76b-054a-46d1-a441-e1a50fc8ac74"
        },
        "item": {
          "id": "177c4040-a582-45ca-b3ea-e1974b728944",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1e4cbeac-26ce-439b-aa79-de1a0b394762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b5aa7f-ce8d-4524-8d7c-039c51938bef",
        "cursor": {
          "ref": "860224d2-d8e1-4351-9231-3be4c42cce80",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f6df1107-065b-495c-afe3-934a9cbadc30"
        },
        "item": {
          "id": "07b5aa7f-ce8d-4524-8d7c-039c51938bef",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "62ae1f92-4258-48f6-bd17-bff14651ff4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47672c6b-996e-49b1-94aa-8a4b2e636190",
        "cursor": {
          "ref": "b0f1a825-ec74-4c07-a9ab-8fc6a212033b",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dbaf2964-dcd9-47e2-b36a-351956f5492f"
        },
        "item": {
          "id": "47672c6b-996e-49b1-94aa-8a4b2e636190",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e22e3d88-998d-4e59-aaa0-f1d87e749c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2ecd87-fc8e-4218-a049-17d30e6f56bc",
        "cursor": {
          "ref": "e7e83586-8fb7-4095-b268-b05678b443f9",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "68885a50-bbf9-4ced-b4f8-035f41a9419e"
        },
        "item": {
          "id": "5a2ecd87-fc8e-4218-a049-17d30e6f56bc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "449a7c19-3e7c-4c5b-9416-6c0c33f0a9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fec026d-8647-4a37-9cec-d7a2fe39244b",
        "cursor": {
          "ref": "a856c0fb-1280-4b3f-9cca-55183b274177",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "36dbefff-8784-4ca6-9d6b-f83361bfbff5"
        },
        "item": {
          "id": "9fec026d-8647-4a37-9cec-d7a2fe39244b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bcd88ab1-87f1-42e8-aa2c-c35b6ddb1176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33c39fa-7845-4d5f-b580-943fe4376362",
        "cursor": {
          "ref": "6609e916-4759-49dc-b1dc-d9fd6b014bfc",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "980b11fc-166a-4ccc-ad2d-f02e34921313"
        },
        "item": {
          "id": "e33c39fa-7845-4d5f-b580-943fe4376362",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "05aac6ab-9ab2-4976-9721-d232cbf4c585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b651c75-411c-4c8d-ae2e-97bb2bec4381",
        "cursor": {
          "ref": "87207aab-053a-4c84-9882-df22832fa801",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b38b0489-c042-4155-a588-b4b8e808b1a9"
        },
        "item": {
          "id": "2b651c75-411c-4c8d-ae2e-97bb2bec4381",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "64b6b2ae-96f9-4c7f-ad18-b8caf7922273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b68a78-b772-4233-9e31-1202f42ddfcb",
        "cursor": {
          "ref": "37c531f7-36e9-419d-90a4-bb898f001839",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d5282d09-c46f-4551-8f97-5d7a45f7ceb7"
        },
        "item": {
          "id": "54b68a78-b772-4233-9e31-1202f42ddfcb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "21d0e917-45a4-4c23-ad53-169a8b7f149d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9345c75a-049c-40ed-895a-0beae76464e2",
        "cursor": {
          "ref": "538ae1e5-17da-4091-a54f-9374d326cd19",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0c0b7571-7c49-456f-80d5-162b86d02b28"
        },
        "item": {
          "id": "9345c75a-049c-40ed-895a-0beae76464e2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f027c2dd-990b-4726-94f7-ee192761ebc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e0e7b4-f8fb-4595-a45e-32bd0b4ac003",
        "cursor": {
          "ref": "41aa37c1-0e92-4b1c-ad54-d89ebd8c4c85",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cf53e329-8f3a-4d9d-893f-b7edd78e6d32"
        },
        "item": {
          "id": "33e0e7b4-f8fb-4595-a45e-32bd0b4ac003",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5afb5d0c-7829-4e3a-8fc8-44387411ebaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4584de-79c9-454c-a9e5-039081aae09c",
        "cursor": {
          "ref": "0da31ad4-1e7b-4f24-863b-1a0f4b8d4447",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5c1aff5a-440d-4b41-b129-35c7694ede80"
        },
        "item": {
          "id": "2a4584de-79c9-454c-a9e5-039081aae09c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "09daa405-d085-45ac-aad8-10c515a25b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127d6f3f-5857-4e5b-ba00-583da81dda3d",
        "cursor": {
          "ref": "8733b439-d66c-4444-8edc-f74bca8a01da",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1a17d5ed-aa28-496c-bd9c-1f5dba80b9c0"
        },
        "item": {
          "id": "127d6f3f-5857-4e5b-ba00-583da81dda3d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e6545f59-4da2-4669-bbde-2d5cc34410f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec0a432-8b64-4f5e-9623-d5ac89477a3e",
        "cursor": {
          "ref": "86eec99f-7ec2-4e56-b553-12451250eaf0",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "426ccf7e-30f7-4dc7-8443-57488a57ab29"
        },
        "item": {
          "id": "2ec0a432-8b64-4f5e-9623-d5ac89477a3e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "287df2c8-2a4a-4a25-ab78-ead290291b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34d8319-411f-4b71-8615-aed5db645a74",
        "cursor": {
          "ref": "b2148b57-0e24-46a3-8141-616a0ef35fc1",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "744b61bf-2c9b-4c4a-b7f3-756283717d2f"
        },
        "item": {
          "id": "b34d8319-411f-4b71-8615-aed5db645a74",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b8eb88e1-56f9-44af-a018-a28715a11f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7da9be3-4f27-4a1a-9cd5-4bd98eccc895",
        "cursor": {
          "ref": "9eb04f99-9a6c-4ef5-b461-3d7fb3937699",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "19431725-ffda-4bb8-8107-ef97d5790c67"
        },
        "item": {
          "id": "e7da9be3-4f27-4a1a-9cd5-4bd98eccc895",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "74340a55-0d37-4780-ab09-fa28dee632ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23497008-c48f-44d4-99b8-fb32a7564d52",
        "cursor": {
          "ref": "d3b62264-14fd-47bc-8547-849d735ec3cd",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "76a71da9-fa4d-4ffb-95db-55d27669e84a"
        },
        "item": {
          "id": "23497008-c48f-44d4-99b8-fb32a7564d52",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "86828a88-2506-483f-9384-5849d3f6e56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f5f2af-cc7d-49c7-b02d-12c4333fb10b",
        "cursor": {
          "ref": "965a9fd4-0fbb-4b00-a531-9238a29566a3",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c0859971-1b5c-4fd2-8075-94f52206dd27"
        },
        "item": {
          "id": "e1f5f2af-cc7d-49c7-b02d-12c4333fb10b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "752318d7-d019-4c87-85af-e23db4f98f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9474a42f-0a11-4bb7-b9e0-7d4afa2a2480",
        "cursor": {
          "ref": "0dbbc533-25a4-45e7-a69c-36381ce738fb",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "86257dd8-d2d5-4be5-9b1a-0b700e676258"
        },
        "item": {
          "id": "9474a42f-0a11-4bb7-b9e0-7d4afa2a2480",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "08b7588b-c56f-4c39-8278-75bb2c6e553e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1541ee7-ac26-4879-89ba-9d5ed8676a48",
        "cursor": {
          "ref": "4676592d-32ce-490b-9494-fc80dc97202d",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2848c5b2-5b2b-49a7-9674-18c369ae3a80"
        },
        "item": {
          "id": "f1541ee7-ac26-4879-89ba-9d5ed8676a48",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6627b98c-76a1-446b-8e98-0516c8a4dc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c443869-f1c5-4848-9579-3269b7339961",
        "cursor": {
          "ref": "f50c5c72-d10c-460f-ad66-95410501027c",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a88b098d-37ff-4c90-aa80-8d8c08c9a740"
        },
        "item": {
          "id": "4c443869-f1c5-4848-9579-3269b7339961",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "92462c2f-2b1f-4e51-a33b-617c5eb992a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44c1c6d-2e59-4cb4-b500-aeeb3b21ac37",
        "cursor": {
          "ref": "00beaced-a122-4ed4-98e1-59db9cafba31",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "be76e34c-6cd4-4df6-9013-6f6034371a80"
        },
        "item": {
          "id": "c44c1c6d-2e59-4cb4-b500-aeeb3b21ac37",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a72e6ff1-5142-42fc-b124-071b18457adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae4e209-1fd7-43f8-92df-1b01d652bb22",
        "cursor": {
          "ref": "69b5dc3a-ede0-4d8c-afda-1c4abe532e43",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c44aa773-4cd8-464c-af22-8ed9b77e6959"
        },
        "item": {
          "id": "0ae4e209-1fd7-43f8-92df-1b01d652bb22",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dee0f9f6-4a49-4c6c-9bcc-b6ea3066bf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9d9e7c-1e34-4653-83de-09b70bac74d3",
        "cursor": {
          "ref": "532a7d4c-d28f-4237-9cc0-8d62fc01b893",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b847b694-d44c-4ca1-8d49-6200a7b72075"
        },
        "item": {
          "id": "2d9d9e7c-1e34-4653-83de-09b70bac74d3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c8be633a-8ff2-47ed-84a5-858c29bf9ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9445a8fe-9f19-4a39-82ae-510fbfde95fa",
        "cursor": {
          "ref": "44d9bc50-9ca6-495a-82e6-0c59941bb58c",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "74130a53-e91b-42d0-be0b-a15c4949fadb"
        },
        "item": {
          "id": "9445a8fe-9f19-4a39-82ae-510fbfde95fa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4991abfa-160e-4996-9d88-9b0b37083a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31526efa-8430-46ea-b68d-57e1481de1bc",
        "cursor": {
          "ref": "52b2a9cf-e354-4e88-afa5-17fc0ae8f34b",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3b217147-76b4-4c09-b960-c944be28b341"
        },
        "item": {
          "id": "31526efa-8430-46ea-b68d-57e1481de1bc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "44cd2d8b-a855-47ad-b649-639cd9494894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49c1bb7-fc09-4720-9165-2f4850e4ad4a",
        "cursor": {
          "ref": "b57ef165-9281-4cdb-8c43-f59f43dafc2b",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0229b9b0-f68f-4844-baa1-1e9d0856b4af"
        },
        "item": {
          "id": "f49c1bb7-fc09-4720-9165-2f4850e4ad4a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9899b61a-41fb-4b3c-9a27-75aa1baf6390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214e6f77-e1a4-4ee3-97cd-faa22b621b56",
        "cursor": {
          "ref": "d209e862-60ce-4d53-8a8e-dde8fa021f1d",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2208847c-5505-49b0-a3f3-26f6f0b26bee"
        },
        "item": {
          "id": "214e6f77-e1a4-4ee3-97cd-faa22b621b56",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b9ea8fb0-d621-408c-abac-97085673a41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4e76ef-553e-4b67-939a-6fdb84925944",
        "cursor": {
          "ref": "ec039a48-5ab5-4c68-a7ae-7725148c7a7b",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c7cdbf41-a56e-4223-85b8-2809b41cb748"
        },
        "item": {
          "id": "5d4e76ef-553e-4b67-939a-6fdb84925944",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4b3f51d7-2f55-4b00-877a-ee3a55e67a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f892a356-ff00-44e5-a0b1-82a90446f8b8",
        "cursor": {
          "ref": "6bb9a449-f617-48eb-85d1-b0f3973f44e8",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "19479370-ab45-493b-b3e5-5a25101fcb62"
        },
        "item": {
          "id": "f892a356-ff00-44e5-a0b1-82a90446f8b8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c049a0ef-5135-48ac-a05f-42589cc712f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d38c9e8-6758-431b-8270-af92315d8c44",
        "cursor": {
          "ref": "766ffb8c-6600-45b1-a644-a351e3490094",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3326188f-7806-48ab-9ad9-0b12176091f6"
        },
        "item": {
          "id": "1d38c9e8-6758-431b-8270-af92315d8c44",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a927fcdc-e6e4-4856-916e-40a4cd1879c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c268a135-b377-4fcd-9201-7f826e4c992e",
        "cursor": {
          "ref": "04057b66-ca86-4c57-bc2f-e139d217ea87",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9c7228fc-4209-4925-884d-7edae6abf7ee"
        },
        "item": {
          "id": "c268a135-b377-4fcd-9201-7f826e4c992e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2629b4cc-c3e2-49b9-b7b7-d56f2b409393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f29f06-2532-414b-9085-00ba2a64e9e6",
        "cursor": {
          "ref": "ab202c28-c440-4059-b703-15af11e23b94",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "45d93640-184f-4096-9e86-c5e7beece38a"
        },
        "item": {
          "id": "55f29f06-2532-414b-9085-00ba2a64e9e6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ba13e042-f968-4ce1-a217-626a48d6ced3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e24f6b1-2558-4c74-8523-4b39c8ff0011",
        "cursor": {
          "ref": "52fd1743-c071-4f91-9681-246fb074a22b",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5c962c02-674c-49ed-835e-8eb293442513"
        },
        "item": {
          "id": "8e24f6b1-2558-4c74-8523-4b39c8ff0011",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5aafa0b9-9d58-4948-8863-9a49afd00d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06312f1f-38d2-4e3b-aa3e-e8cfdbf211bf",
        "cursor": {
          "ref": "ea73a952-10b9-4261-af28-192cf16cb6d1",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "118070f0-04a5-4bb6-98c2-64e45177d028"
        },
        "item": {
          "id": "06312f1f-38d2-4e3b-aa3e-e8cfdbf211bf",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8b8ceb74-bfbc-4918-bbeb-a704e1db338f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a306f56-fb53-4eb9-b10b-c8f8956e5369",
        "cursor": {
          "ref": "493e5630-2ffd-45bf-9222-6eb661d3da51",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2de72fde-24e8-4bc2-8b83-a5b79729ac8b"
        },
        "item": {
          "id": "4a306f56-fb53-4eb9-b10b-c8f8956e5369",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "be71c544-b0bc-4680-8f38-5b97da98525e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca271c15-6e2f-4ee7-a5ed-a46f80d81593",
        "cursor": {
          "ref": "6ce78af2-8a2b-4094-9276-ffa1e089ca15",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6c9f80a8-b74d-4185-8b62-a476b1942480"
        },
        "item": {
          "id": "ca271c15-6e2f-4ee7-a5ed-a46f80d81593",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "51d5129d-d59a-4bde-9cbc-823981de40e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a280a256-617c-4875-aee3-b008f010ff72",
        "cursor": {
          "ref": "2f870c18-4b98-4c78-a352-58e63900a038",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1acc8547-42fb-49d0-a40c-a8781f76e20f"
        },
        "item": {
          "id": "a280a256-617c-4875-aee3-b008f010ff72",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "868dfc92-498a-4eac-950f-32078b3bb796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae7c90a-d8a8-4725-a495-a5a182b27fa3",
        "cursor": {
          "ref": "7cf7ccad-ba65-4f71-ad53-a318c8ac43cb",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3d1c4c4c-40b5-4c11-8cdb-4132c574133f"
        },
        "item": {
          "id": "bae7c90a-d8a8-4725-a495-a5a182b27fa3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2ed103d4-c3cd-41e2-88a7-e1c6ef5d83f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253cf58e-4ff8-497c-a667-9ddad5c8440a",
        "cursor": {
          "ref": "956da871-44a7-4ef5-880e-95140d2d1ff1",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d3cd4ddd-fa8f-4367-9cda-a6d0e67b2ea7"
        },
        "item": {
          "id": "253cf58e-4ff8-497c-a667-9ddad5c8440a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6f13c791-0b59-4d83-8c9c-26ed9784b56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e262c685-a9cf-44f9-899b-4b62e8fe0b9b",
        "cursor": {
          "ref": "fcc1615e-89d1-4b88-800b-5ed18295c843",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f3c0bc0f-4c09-4d72-8da9-b5406cf98890"
        },
        "item": {
          "id": "e262c685-a9cf-44f9-899b-4b62e8fe0b9b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5a75f547-ea84-4b11-a513-3936e973b8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de92d17-0d36-4ea4-8076-e68a25d76e91",
        "cursor": {
          "ref": "7249fc4a-c735-4fb0-8c47-ced21a059deb",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "145f97d3-8d7e-418e-ae2f-a2d920f01eff"
        },
        "item": {
          "id": "1de92d17-0d36-4ea4-8076-e68a25d76e91",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6518fc22-801f-47f4-a9ee-64853fca347d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776f1472-bce6-4b98-aff4-fd088b4bd882",
        "cursor": {
          "ref": "deb1b844-8597-4faf-b234-c0ecea70314c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4d7e206d-1663-4ab1-a742-9400f4960bd4"
        },
        "item": {
          "id": "776f1472-bce6-4b98-aff4-fd088b4bd882",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7938f8cb-2c1d-4641-a22f-a487f429ba1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02956a76-3985-4092-8b37-90d3c1b8c56a",
        "cursor": {
          "ref": "4b1a06ce-aa69-443f-8961-05b48b2b9d90",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "30c561dd-e725-40df-a6c5-d76ec0cac99d"
        },
        "item": {
          "id": "02956a76-3985-4092-8b37-90d3c1b8c56a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "58f6b51e-ed21-4b06-9a9f-5bdd261f9d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734eccd2-fddf-4cc5-b8ff-78610548e066",
        "cursor": {
          "ref": "4e6d5b0f-3359-425e-b52b-b4a507add382",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "dd003eb6-c6aa-418b-9744-b0f1bfbcd403"
        },
        "item": {
          "id": "734eccd2-fddf-4cc5-b8ff-78610548e066",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b307042f-9bb7-434b-91c4-2b52b95fb12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52637920-f58f-4bf3-950b-0fdf2f93ca8e",
        "cursor": {
          "ref": "eede5db9-e387-4e25-8b95-de106e65d920",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f265ea82-093f-4b94-a2ba-809df95b4af6"
        },
        "item": {
          "id": "52637920-f58f-4bf3-950b-0fdf2f93ca8e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6248676a-818b-4ea3-8e17-f8ef8ba2c26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa64b157-8b0b-43b0-b4d5-0e8a2813768d",
        "cursor": {
          "ref": "d3c1590f-5469-489b-929a-231c66ec116e",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6cfef53c-1952-46f8-9a5f-10839ab546ad"
        },
        "item": {
          "id": "aa64b157-8b0b-43b0-b4d5-0e8a2813768d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "08db2817-e1d0-49f5-8162-9543f4d1756e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840b1088-8389-4bdd-8eb5-d0977eb4bcd6",
        "cursor": {
          "ref": "f3df8120-bdf3-4531-8b87-13e5778c7de7",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7b305f21-ddda-4029-abb3-582a0498ec6c"
        },
        "item": {
          "id": "840b1088-8389-4bdd-8eb5-d0977eb4bcd6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "de49889e-f81e-41ee-878f-b7a4ce709919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df23d22-2051-4796-abe5-c869a26e5dba",
        "cursor": {
          "ref": "2d9cec45-eb9a-4a13-8263-2dd66fc5b9ed",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b0317559-5d95-4260-988a-9acc6fabda1c"
        },
        "item": {
          "id": "5df23d22-2051-4796-abe5-c869a26e5dba",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "238adbb8-d833-48b6-8604-cbfbebfd6be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66ea125-a00a-4e6a-945b-cf5652e895b8",
        "cursor": {
          "ref": "fafe4b1d-ba48-419b-bdb7-e8b2a091f2de",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5f45a104-16fb-494b-9a4f-4605e894e1ea"
        },
        "item": {
          "id": "d66ea125-a00a-4e6a-945b-cf5652e895b8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "81c7dc30-b202-43ef-a9c9-8ddfecddef4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbea66a-d8da-4f94-944e-ca577276a9bd",
        "cursor": {
          "ref": "2cb60b9a-8080-4203-99f9-775cbd3f49e4",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c99b64d6-772d-4ac7-a42d-2ad4a97679bc"
        },
        "item": {
          "id": "7dbea66a-d8da-4f94-944e-ca577276a9bd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "45e95ce9-9f0a-4cd0-9e83-7609dbafa2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be404dbe-c1b8-4746-8122-c9b6b1d8f68c",
        "cursor": {
          "ref": "f7836869-f481-4dff-bca7-60f9a16ea175",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f7cc9457-2ef8-4897-90ab-3fb2371f83ba"
        },
        "item": {
          "id": "be404dbe-c1b8-4746-8122-c9b6b1d8f68c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "48677dfd-0d8f-4a9a-b628-4c029a79abaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f4c2a3-c5e0-46fc-950d-84dbac1b944d",
        "cursor": {
          "ref": "9b0e388c-d032-47c9-ad51-db115ee32f7c",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "84533a3e-ba15-4866-8bed-b305b82df804"
        },
        "item": {
          "id": "08f4c2a3-c5e0-46fc-950d-84dbac1b944d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7920da97-5682-4483-a436-9a3656ee29fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c51feb-79bb-4d0b-a094-1737d9384ee6",
        "cursor": {
          "ref": "368af4c7-f3a1-454d-89d4-cdaec976a036",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9d07a2bc-2a2a-4554-91be-e3712c6b0f08"
        },
        "item": {
          "id": "e3c51feb-79bb-4d0b-a094-1737d9384ee6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fc62e482-0ab4-4d8a-b7cb-70c4ee4191f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f154e6-fdb4-44e9-8fb2-b9e8aed3a446",
        "cursor": {
          "ref": "21390a3b-d7ea-49c5-86b7-297793593ac8",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1df455f6-9de3-40b8-b137-c73020a4609d"
        },
        "item": {
          "id": "62f154e6-fdb4-44e9-8fb2-b9e8aed3a446",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d5ce7662-193e-4ca8-914e-eb18dc33ff7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfff5bd4-dc85-4146-99a4-2ea32f9fafe8",
        "cursor": {
          "ref": "667f2fb4-8e9b-4f77-b391-55c7040bdfec",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "90a85ae8-ed36-4fd7-ba7f-ec56d0d3f524"
        },
        "item": {
          "id": "dfff5bd4-dc85-4146-99a4-2ea32f9fafe8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7eb9e580-cff7-4b44-8a32-d4ca2766fadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c5ad7e-4ca2-45b1-a21d-60ae45582ecb",
        "cursor": {
          "ref": "39498b5e-9bc4-4196-924b-27084912813f",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "50b91d4b-a589-4272-b9d3-beb199dfadf4"
        },
        "item": {
          "id": "78c5ad7e-4ca2-45b1-a21d-60ae45582ecb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "80606479-5cfa-4583-98d5-8c40b9f57b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42269b2a-cdc8-4a06-aece-9dd3e840a038",
        "cursor": {
          "ref": "35e42223-2010-49d9-9a78-0f1e76aeeb64",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c7a7fc18-761b-4102-9ede-f12598de40cf"
        },
        "item": {
          "id": "42269b2a-cdc8-4a06-aece-9dd3e840a038",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ffeafeaf-7d1c-4873-8a8f-691b9d5d76ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75572daa-c7ab-464a-a5f5-23a1dfbfe065",
        "cursor": {
          "ref": "f7e8c241-e528-4df3-b3da-37f2ac572075",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9f305a2a-4972-4a8b-a1f2-1388490c7a8c"
        },
        "item": {
          "id": "75572daa-c7ab-464a-a5f5-23a1dfbfe065",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5ee304f0-2295-42ed-9c41-12d116b4e9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9790317a-9e8c-4bc9-b325-6362eae87280",
        "cursor": {
          "ref": "c7ca7b6c-a47c-4c61-8e3d-b427a542d01d",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e45fc0ad-46a7-4c88-8ee4-45fa7565bea4"
        },
        "item": {
          "id": "9790317a-9e8c-4bc9-b325-6362eae87280",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8fbf5ef5-d7d5-4173-b87f-44d31a75214c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300b2028-d247-4ebc-a36d-06b3165d559e",
        "cursor": {
          "ref": "af4ea6a2-88d9-4849-83f8-03a6fc5f51ac",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b3896947-e513-4e64-a9f6-d014b026ffd4"
        },
        "item": {
          "id": "300b2028-d247-4ebc-a36d-06b3165d559e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fbe111f2-859f-47cb-a6a6-6e0972ee0476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dd82c1-0f99-417f-8187-a1e9e385146e",
        "cursor": {
          "ref": "311e0b93-db6f-4283-8fb5-3cc6411b852c",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "85150832-00b7-4d76-b566-01529d09c088"
        },
        "item": {
          "id": "90dd82c1-0f99-417f-8187-a1e9e385146e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "762091e9-6b4e-43f9-8c83-49892b495919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3669e4ca-2a7a-46e0-8f30-604d07af5d5c",
        "cursor": {
          "ref": "0b05aff5-320e-4d3c-beb5-717b9fef31ee",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4bbbc3db-6eb6-44a3-bf8c-fa31408b2848"
        },
        "item": {
          "id": "3669e4ca-2a7a-46e0-8f30-604d07af5d5c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "73cb3781-f993-4fa4-b88b-a067ea52851f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eced8e73-757d-4cf8-97a4-7ac118db21d1",
        "cursor": {
          "ref": "dbb4c8f2-aba1-45a7-b035-1e087f102bc7",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a2c2a644-56e1-4deb-a8e7-eebc442d4243"
        },
        "item": {
          "id": "eced8e73-757d-4cf8-97a4-7ac118db21d1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fc7ffd20-0266-4295-8715-14e7721ecc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef17b89-53e7-415b-81a0-c994292b0bf8",
        "cursor": {
          "ref": "c69e6fe3-ea3d-4dbd-82c6-6503edd3a266",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bb882d9a-5f9a-47d7-a6f1-c1a11fcb620a"
        },
        "item": {
          "id": "cef17b89-53e7-415b-81a0-c994292b0bf8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "182b874d-3562-47df-abed-aa2f14c443b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e429b8-0ac6-47c9-826f-bb1effd82a4f",
        "cursor": {
          "ref": "5b795eca-da3d-4647-be4f-64d2cba8f006",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b7938d2a-cc39-491b-96d5-0e594fb979a5"
        },
        "item": {
          "id": "c1e429b8-0ac6-47c9-826f-bb1effd82a4f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6bc407bf-f14f-4b27-bdd4-f162344bdc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b403c35-7e3e-4db0-8c3a-ec38cd9fa2d8",
        "cursor": {
          "ref": "06356cd7-14a6-4b9a-b176-2048bda6030e",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e847d352-56f5-4279-966a-766761d77f71"
        },
        "item": {
          "id": "9b403c35-7e3e-4db0-8c3a-ec38cd9fa2d8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e69d77c4-5864-453a-ba57-fa4328f1d169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a34401-fb4b-447b-8adb-89175c978788",
        "cursor": {
          "ref": "90652002-c20d-48d7-979e-735d2fbb41a8",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ff2cd867-556e-49e6-8484-336c18a8e003"
        },
        "item": {
          "id": "99a34401-fb4b-447b-8adb-89175c978788",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c97cfd7a-6907-4b3b-94b9-dba4c9b3e3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d300f1a1-33f4-44f9-9902-e9b4f68ee104",
        "cursor": {
          "ref": "3e4ece09-5865-4d0d-aafb-776a29747a06",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7738a5c1-274c-4f7e-bdee-4a410bdd6f73"
        },
        "item": {
          "id": "d300f1a1-33f4-44f9-9902-e9b4f68ee104",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "45a7dd24-b641-41fa-bf11-f7be5db7cf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964f6be4-b37e-4b99-a4ca-922e88aefb70",
        "cursor": {
          "ref": "315a7691-2154-4559-90ca-42ce17083217",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a2f40492-0cb2-4000-8cab-6fe694665a44"
        },
        "item": {
          "id": "964f6be4-b37e-4b99-a4ca-922e88aefb70",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6c7afa81-3a14-4348-8c62-cfe375b6e139",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81295573-99fc-4c3e-81ea-7c18a3278638",
        "cursor": {
          "ref": "5272937b-d968-4711-80fc-4ed83363fb07",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4195816f-fb5c-442a-8cf8-9d9fe0c851ea"
        },
        "item": {
          "id": "81295573-99fc-4c3e-81ea-7c18a3278638",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e63d355b-5e13-49e3-ad76-7268eaac085c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 73,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c542f5a7-7d23-49fd-bf53-cc1a2118baf1",
        "cursor": {
          "ref": "ad90660d-6ed3-4642-bb4c-cae3ecfd8147",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "44132eca-c801-4e09-8bcb-df829d6ab4e5"
        },
        "item": {
          "id": "c542f5a7-7d23-49fd-bf53-cc1a2118baf1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "22044c0b-c3eb-4944-a2e8-01f0bbd7f4e3",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d9ce1b-c5a2-4389-99cc-6f358d9a3365",
        "cursor": {
          "ref": "7f4fbd7c-b630-4dbe-b22a-4bc8ab562524",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f99acd67-29af-4975-b5c7-3f29e6baef3e"
        },
        "item": {
          "id": "63d9ce1b-c5a2-4389-99cc-6f358d9a3365",
          "name": "credentials_verify"
        },
        "response": {
          "id": "14ffaed3-6649-4956-ad49-dd90651727ac",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2f32d0-b8fb-40b6-8020-fde800ee2020",
        "cursor": {
          "ref": "a5f984f4-898d-4176-9651-0239b1231297",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "95c20287-6dc2-424e-8b55-22de1af801fe"
        },
        "item": {
          "id": "ab2f32d0-b8fb-40b6-8020-fde800ee2020",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a9732853-4749-442e-baab-6ae285affc1a",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17ea912-2f45-4b21-9da4-7f54ee7a53a8",
        "cursor": {
          "ref": "fdb79641-7edb-40b6-90cb-71b94005c5d8",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4d70974e-1bce-425e-84c6-e64bc10f284d"
        },
        "item": {
          "id": "a17ea912-2f45-4b21-9da4-7f54ee7a53a8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "24c5cb64-5054-4a08-b87f-0dac7c268bbe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17ea912-2f45-4b21-9da4-7f54ee7a53a8",
        "cursor": {
          "ref": "fdb79641-7edb-40b6-90cb-71b94005c5d8",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4d70974e-1bce-425e-84c6-e64bc10f284d"
        },
        "item": {
          "id": "a17ea912-2f45-4b21-9da4-7f54ee7a53a8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "24c5cb64-5054-4a08-b87f-0dac7c268bbe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17ea912-2f45-4b21-9da4-7f54ee7a53a8",
        "cursor": {
          "ref": "fdb79641-7edb-40b6-90cb-71b94005c5d8",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4d70974e-1bce-425e-84c6-e64bc10f284d"
        },
        "item": {
          "id": "a17ea912-2f45-4b21-9da4-7f54ee7a53a8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "24c5cb64-5054-4a08-b87f-0dac7c268bbe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fd8621-e238-4c34-8b3b-0ca3b25795d6",
        "cursor": {
          "ref": "d8c0e55d-3447-4ab4-af4c-c7a0f4a16a92",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d7f108b6-2512-4a77-9ae6-335904679625"
        },
        "item": {
          "id": "d8fd8621-e238-4c34-8b3b-0ca3b25795d6",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c5922130-0476-4dc5-8f4e-165448e8a9bb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 73,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89570280-2a32-4890-9f0e-bacce841264d",
        "cursor": {
          "ref": "ac952fe4-909d-47da-baa9-1a9fdda5dd3a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "85312518-7f1b-4824-a311-c31b99d8859c"
        },
        "item": {
          "id": "89570280-2a32-4890-9f0e-bacce841264d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3d6924b8-81d5-48a7-bedd-a1448d581ac3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89570280-2a32-4890-9f0e-bacce841264d",
        "cursor": {
          "ref": "ac952fe4-909d-47da-baa9-1a9fdda5dd3a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "85312518-7f1b-4824-a311-c31b99d8859c"
        },
        "item": {
          "id": "89570280-2a32-4890-9f0e-bacce841264d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3d6924b8-81d5-48a7-bedd-a1448d581ac3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422d6ed8-abf8-4802-9405-799c3d393361",
        "cursor": {
          "ref": "de38109b-fea3-4cd6-bb5b-4f5db82a3a8d",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e11f25f7-c0b1-442b-8362-023cc42a1171"
        },
        "item": {
          "id": "422d6ed8-abf8-4802-9405-799c3d393361",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "1b4d70ba-f49d-4577-ad92-aaa5bcdc8235",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 73,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38096052-a6a4-4262-96e0-4fa689aebca4",
        "cursor": {
          "ref": "b3cae428-fa41-48a8-b342-be1d611a9788",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e0efb3f0-9922-460f-b40c-a6ab834830e9"
        },
        "item": {
          "id": "38096052-a6a4-4262-96e0-4fa689aebca4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f5995b36-0579-4e5f-8cd1-e6dd80a71d89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38096052-a6a4-4262-96e0-4fa689aebca4",
        "cursor": {
          "ref": "b3cae428-fa41-48a8-b342-be1d611a9788",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e0efb3f0-9922-460f-b40c-a6ab834830e9"
        },
        "item": {
          "id": "38096052-a6a4-4262-96e0-4fa689aebca4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f5995b36-0579-4e5f-8cd1-e6dd80a71d89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7160b48-c53a-44f6-89fc-325e05694264",
        "cursor": {
          "ref": "a5155754-9439-461b-aeee-7d259b30734f",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7fcf42fa-db9d-482c-8a9a-a437376f10ba"
        },
        "item": {
          "id": "f7160b48-c53a-44f6-89fc-325e05694264",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "13d27f63-36d7-4ea1-8ac6-14d24f8d9950",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 74,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}