{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f25ec696-bb7d-4807-a929-cbcedc5c62d0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "de83b8e1-1f89-4178-bdef-08f41465f19b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f8122d6-528c-4e1a-bc5c-b339b1b2bead",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2bf21227-e700-48d4-93ad-58e2a1def16c"
                }
              }
            ]
          },
          {
            "id": "a70d4b52-4d1b-4a28-8171-7e78af6551c7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58acb99f-58b2-4b41-96b1-0985cfc28abb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b6e4af09-371e-469f-86f8-3e7a635148a3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3b8790fd-8326-4cdb-a8a6-4ee49eb08f82",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e08ae200-e77b-48ab-bdb9-93fa5aacfe8e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2613bbaa-882d-42f2-9b9d-e1b441b03d17",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90fd53f2-91be-4ab2-9587-ff51883329b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a3f7bcb-4c18-4cd6-81f0-fa277d180268"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7177ccf7-4319-4b2a-a9b0-9c593fd63697",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "443f8f1b-264d-4622-9d73-d7d06d06db48"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3fb8b1c5-0833-402c-8daa-9c94e788ac06",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a71eaab-0179-4ca4-bce6-cb5c68bcf32e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d27ae633-bc0c-44ef-bf58-e3fb320c4204",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5f925870-5682-4cc1-8106-8ff419109b7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e59a370-cf16-4e06-9ad8-2bb016e90d54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef27e926-8eac-4b45-a8a9-989d5264945c"
            }
          }
        ]
      },
      {
        "id": "0970f034-119a-4f0d-9117-6a6cc2105bb3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7c16b0db-5ee1-4685-9d36-3bf651501fb8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6bd08025-9464-4c5b-95a5-cf13834ac012",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3feccac7-b0de-4d68-9e96-13e066f388d5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b5fd82-16b2-4699-868a-5e9b3d401d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "deb0254e-2715-4038-9ae1-24f70ccfbf2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5e43a3-49a1-4018-8c18-eab51e983975",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f871c4-7a2e-4a1b-8f54-76972fccc09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb4aabbb-f10b-474e-8d05-88943490cad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2e8f91-0dbc-489b-8a0d-44f1c8a382ec",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d5d8d2-e5cc-4f77-aee0-2d2fa578da3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e88221f-87a9-4a50-96fe-7fbd22eb463c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04858ddc-f039-4b69-ad4b-271179f5ab24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4a52dad-5370-45a4-a8fa-61fc95ace301",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a558e2a8-65b1-4d1b-a4c9-2a9f6a4cbc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f98d503-af11-416e-bf3b-8b49f0882e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17f88cd-51eb-47b4-8de3-2a48aa7d43d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93943446-abbb-4af3-83ae-f17499e339af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bbc359-ec62-481b-836e-dab2b98c8ef4",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb4307f-9c5b-4c5c-82b5-61b34d67c98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bedfc301-3044-466a-a8ee-a6a29730673c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4edd53-7835-4557-b5bb-cda9de3432fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ca75dfa4-80a7-4fb8-8230-1c76d9b13083"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6a6bd985-63e9-4dde-958b-2f5e66b079a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28a5d4be-259c-4ce9-a39b-fa7be3584f2e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7597b907-f02c-4516-9603-fa57e3e3668e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1cdfa429-3aff-4561-9445-c9027e96c469"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50a96157-2468-4f91-95b1-2f5e91b0fc8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "76a934f3-4e70-4805-932b-9db877db1734"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2958705b-142f-4682-9619-292974eca1ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee1ce880-a256-41c7-95e5-ffee25aa4fae"
            }
          }
        ]
      },
      {
        "id": "7507b194-7511-48e4-9f59-3ebe2339c1bc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3c628ee4-43c4-4529-b993-ccd24915f6ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eef9eb29-a0b5-4f7c-a6f1-45499c130991",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ce83bce2-1a23-4314-9e97-dc33f1b498ca",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3e5b7c-ae26-4888-aa9f-b0c931cc40d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1cb4faa-56a1-4c04-a906-876a35ad2565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c1a717-04cb-4e7f-bb03-f6f9762f885a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6987c390-982b-414b-bb7f-62a75968523a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d25a8b7-8b18-47bc-8f03-0e8f8b7225ed",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a60a2e-e150-425a-999b-022d2b3328c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3daaafd4-9fc2-45d3-9be5-8d85cd9b6c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a74878-0ad3-4114-9131-9d44ff499f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b300137d-41f6-4fc0-9b95-bf09770721f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af6a962-6961-4464-a6f9-6891d2e562d3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476a7c9c-834a-4cba-b73e-79ef3584eddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90124a2-ac84-41f0-af79-d32dc2faeeb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349f357d-ce00-4285-9361-743ceab66270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c29c0633-f6f3-451e-88d8-f0d83d6600db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e005cd01-eff1-4756-b319-3d0d8c74e192",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbbda37-ec9a-44bc-95a1-8831800412db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b699c3-677b-40b3-b433-c57e19c556a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27148d63-b9b7-4409-8066-837cc4cd3604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "924f3dc6-4ac7-42c8-9cd9-b73ee9631b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14073d61-76ce-4d61-a067-ddb273d05c6f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9526a6-2904-4514-8b45-54af51517586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49014780-a354-4643-964f-b1936eb69826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cde77c-4288-45b1-9be9-1d63efded3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83ee2263-e544-4ecf-b2c0-6946567c3414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ef03e8-9329-4209-b471-8317663877fd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7077145f-8e57-4558-9361-8960666fd129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6388b2-41b8-498b-8520-f6b2a6cd3729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184adf10-40e5-4bdf-b0e1-f615dc392ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b347926-1a30-4dce-8014-601fd0c945cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e71a5e-6ddf-4d57-a691-716c5dc9b847",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842c076d-0963-4293-bfff-3d2e98240e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c7a679-b458-4dbc-b6e0-f11197e0a632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a070eb06-292f-4036-9e1e-0d1d6e3cd488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22cea1e5-70d2-45f4-b65f-0e8f91652d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2876ff28-20dd-46f2-b41e-2d238481a78a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d333194-8a34-4c08-8dcd-a006c789e3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b56349f-7edf-451b-97dd-13c9c1ed2061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff7d8d9-a6bd-4a5f-868d-b23aff56954a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4580bdbc-644b-4986-affd-0b20061320c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94cdb2c-88ab-42dc-ae29-ffa414ceaf75",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510b721e-8673-451d-91a8-71f1bae7dbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da602847-a6c5-4b99-be46-f891e1ed3732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fa1388-f8e0-4826-b1eb-98d055f0e443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "140dd9a7-1b29-4145-b0a9-6466bdb4771a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1d55c3-a2a2-4e2a-a88e-23bfcbbd62aa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750bebba-2293-4edb-9f5c-5ab098321086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e0cd1d-b03a-4c23-8b8a-210ff761e10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dde5ab6-dbb6-4f44-8b2a-1c6abdcdf302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abc9d49d-c5b0-4fba-a2a9-90c027bd970a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14af0257-e0a2-4b7a-9bcb-ef326ca23dc0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c17373-8c45-4476-9489-8539089fe1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419cbb7e-6ecb-40e0-9cc3-85dd1df5f748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1276ae2a-f77f-42c0-ae58-d7af9fd70b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83ff071f-b74c-4f5d-b5d0-f45c0cfaa442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346118c1-aeef-48e9-a115-4f2e8a066967",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c8bd7f-69ef-4b4d-958b-a2e3a93b2fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1aa283-a10f-43f0-9807-edd188eb3253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed870e31-0161-410b-9b94-d394bc118f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9cdfd82-3fb9-4fed-90f4-9aa44ea3f57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73352e77-9b49-4943-b679-a8c8f5894c6b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66476001-cf1b-418f-9b8b-fec4b2563660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71918ff5-acbe-49b1-ac0b-9ea12cac142b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73157c7-a792-48cf-a120-75a8cc352ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9521ea99-ba81-4727-8a03-f2f1c02c107a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3e97d2-cd0d-4887-bd72-df656af7ee22",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c3964c-4b2a-4d83-ba11-b63a850e1c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b15bd8a-594c-421d-919a-8b25d4dbf807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc2f76f-46c7-430a-8aba-9ce8013b6f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51a58d86-d5eb-4d40-84af-1b446a8539ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41d9b1d-5b37-4138-96bf-57e1ed297ff7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b8a80c-9bd4-495b-b089-2ca16100f28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a537e8-f5cc-44e7-923d-e02eea7fe522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddce96e1-97f8-4be6-b483-eee3e306c748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c520fb10-720e-4445-af79-32de816d7ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4525cba-287e-4a53-a439-68b261db0fa9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3c2b2c-c8cd-4fc3-87ed-dc01e4ead48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8d7074-0a63-490d-ad08-042c5cefa35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ba546a-5f2f-4fed-83b4-f16384024f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ac6478e-e3d0-41a0-bdec-4b12f61fe581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85c7989-15ab-4bf5-9219-cca3b968e407",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc6ae6e-0946-4d94-952e-7053614967e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee39ac4-452f-4c96-8392-e998f3dd64d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a95d739-3f17-47ea-b188-9807d91aad14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e547f3ab-42fd-45dc-9b26-f7cd29f0df84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadc8868-de28-484f-84a9-072f0b2c59d5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f5590e-458d-4f9f-8251-491f60f40fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425aa050-c177-44e6-bbc8-50a3745aee11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdf01c1-8f52-48b0-ae52-f90fcd56e587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9092cbc1-2aea-4969-a166-6f11f8996a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7caf75-c146-4f65-a695-1f58e12504cc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fe76b0-f13e-4cbc-87bd-1661c448bb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657177f1-11eb-48b8-95fc-395c340e50c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da636e9-c975-4c0a-96ad-67bff93d8bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5f8334-0b7d-4d3b-819f-3b552db708ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834cda59-cc89-4bab-a649-ab2992d661b9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5402b1-2e58-44cf-9bce-d08bebf67faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca57630-081e-4dcb-b2aa-2791c63431de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76edafbf-305f-4634-9379-6eb230d99301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "447b9fa8-468a-4963-99a6-81ac9918fadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865954e5-2cfb-49f1-95bb-01882da1a330",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfecadf-c153-4ff3-948b-f1fcc83bf363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6924ae86-5024-4828-b345-b26fdafe3245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959bd482-0bdf-4f19-bb35-69d5df627077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a087873c-6271-441f-b655-38e9040b8a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef898f59-0009-4196-b94a-b78fdda7acdc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a296d00-fd5b-4a5c-92e0-5a71f25aad9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d2437a-f894-4900-80f5-bc7b652cd0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee56009-9d98-41b0-a9f8-0f2ed772b61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8f6d61-e1fd-4c58-be42-cfdeb30eeed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5156fd-57a6-4369-90a7-560259432d02",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996823f1-e503-4559-90af-caa206327b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65181ef-4b99-412f-95ea-4e3f23ca8d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5dafdc-fcc8-42cc-a2f2-09e88b1696a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84839d8e-aec6-4cb6-9355-1bf28bb1684b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcbf56a-c6c8-493a-9248-4393d035f80f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fc71e9-cc51-42b8-a756-a4c63d352c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c26c8cb-8c03-4087-8600-1699be5e464e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e927a9f5-2cc4-482f-b0bf-87d072a1a5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7ca02c-0ac1-4fce-966a-2ec9b5dee739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee43393-ba70-4261-91f0-0596fb43b41d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d314476-ba7b-4fbe-a445-3b2ffcbc3342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933ba3da-4cde-45d0-bc08-a815ff0e68e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e899c0-9dd2-4d78-8567-e25b6405b779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b91e37-d8cc-487c-8d09-7a7422f2afa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc10da36-1269-43a7-9f53-3395a627c48c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba5ca4e-dc00-4926-b400-5ebd1c5a06db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d94e21-7a52-4164-b4a4-076527c87b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b672a95-b7cd-44cd-b3ce-57e071ee169d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1df9f5-3fd3-42d4-a0a9-a5798f0f3233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b067a98-9e79-48a1-8a14-ab9f0d04cbef",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39713ba-18cb-412f-a0a0-3ea3cccec5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0280209-51bf-4489-a2b4-a2cc52cf806c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2b830a-2d32-4b8a-acf7-fbfec9d7e3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96da481d-0e94-432c-8ab8-77baf35219ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2b8030-67c8-4ecf-9609-35b15ff830ff",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f4aa4d-fc95-4e0c-aad5-be5f0a5d0100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b1a15b-a602-4128-8957-712345d92028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825c455f-2870-4c99-93e4-7eac580e975b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a74b8449-440a-45d9-84f1-3722ab1d4c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d64793e-2b31-4674-b93a-30dbdc63768c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19cfdc9-d68c-43de-920c-ae2cc3608334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f1700b-d874-48b6-848b-f6f1666ddcf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6f4263-2c6b-4da1-ac84-8ebb08e09387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fb996d-486c-4395-a02e-edab9e4cb0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f178e3f-6a52-4f8c-b5b1-ae9d95bd6e6d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389da81e-b194-46ab-9823-2121af37082f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18982650-c28c-4436-8b77-c51ab945fc57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d3c44a-741a-431d-8598-fe5887d3d6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cdfd9eb-578c-411f-a220-5f0adca454b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3626238c-ac50-45b5-9242-ef222fc6283d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bda017-1439-4d47-a8c5-84afbc67e8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81bcca40-5cf1-425c-948d-e556a3fc39fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89aeae40-e870-43ef-b008-9e31921914c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83634450-8b82-46af-83c4-bbf8bc2a243e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd691ca-2f7a-494b-a46f-c51be339b11a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d647bb-c5c3-4292-866a-b17397939c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bc6016-5c41-423b-9350-d1ce648df685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2227c06-695c-4bad-bfa6-f4541560506b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49495991-55f2-4e56-962a-eb07293719b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f365363a-d0dd-4dd5-9c9b-adfc3a8da685",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a6b1da-f421-4d8d-988d-dbe28a6539fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e63578-c9d1-4309-bd70-9da483b0c7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb39a1a3-b07e-4bcb-b2cd-540a7c5ad160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "161adf33-628d-488a-a4b8-b8a3f45cc989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de81fefd-7129-4db7-85d3-a05e13254843",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece078bb-e635-40d2-b8a2-88ca9b4d5d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8a36f9-2347-42e4-95a9-960be1c641fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cabc4fc-7a15-41fd-9c78-3062a2282883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a38d19a0-f7d3-4d53-b4ae-d2a67bf7c824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749fd53c-11ff-44d9-bd7a-14ecf7187692",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9513d29-d6bf-43db-92a1-18630d8e7e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe49002-1cc4-40f9-b75d-c9a4ae06c5ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f83423-6fad-42ad-93fd-6e3e7c60329b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fb9282-967a-4d78-9b9f-e63b13b73721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b931eb95-160a-4027-af30-838b0d592e9e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a94855-5c54-4a8a-8527-bd253fe7a59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4145d988-da2a-4cec-b0ff-5b5bb6517607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493eb278-32b1-4673-8977-1f485f5a487d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80dee9bf-7faa-4e6d-b202-da9d8af2333b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748e12e4-053f-4185-88e4-1fef55b4fb24",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc913e0-0a38-4822-a8c7-868dbbfe34e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfad08b-deb4-4a00-939a-4536baebd6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993f48f2-48ca-4ca8-ae5b-afbdc72e5f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2449f607-abfc-4c3f-b346-9447a444ba42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0307c853-610c-4005-bc2e-2bf81e364ffe",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1588c9f-0c4b-4de7-a3dd-e815a1d2130c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3518389-c199-45ae-bc41-255e28107a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3bcfbf-fdb0-4d1e-ae3d-93020bd0c73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2e452f-7c5e-4e0f-a45a-eacc704fccab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d154123b-2513-41b5-ad0b-1d8f0f63c93f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f86f38e-93fd-4a17-b9c8-559b24b36956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4262b7-9c34-4e65-b15c-051ae422eb59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284810bd-f34c-4def-b89f-39d261517ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "97ba436e-7783-448f-a8b4-078fb0f55abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547457de-3f9a-4c70-9762-884f4769dfcf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8511d95b-3aa6-4cc3-9bfe-e91c057782be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3227f6-3484-4543-8c5a-69da1c4a310a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231e9cff-b85b-42ee-b62f-f1c258834ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c83e4ade-bced-42b5-a7ec-bd937579e1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6ad066-1111-42a9-9d07-44a2b446bfe0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a2d603-170c-439f-b649-52431eca19da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa020857-6e50-4bea-aef7-b6da7c9df69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d81732e-8a8d-4339-bdc9-45c22547cb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "100b837e-74f7-42fe-9fdd-7fc2fd154bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e71fac-6d4a-4cbb-9293-a1bad10c62f3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31302f8-b80e-4b47-a986-3a3a98d12abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2da51e8-18bf-436e-8d08-b60ad036d5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424e8fad-208a-44ca-b624-7399d4562fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f670b0e8-f1cf-4173-bc62-9700891fcb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea416667-c05c-4229-9851-95842186bdb6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf964698-0e37-45f0-a300-037e8e6fac8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e8e200-650f-4a2c-9e17-9f794d993e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db702c09-98f6-4ea7-8321-4f772068e2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9b3db8-5587-41da-903a-a2c7763a7152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2e777b-58d6-4626-b228-f6ba158cb445",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d6107b-75c1-4676-ae4f-48d150b379f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc82ba6-cd3f-4798-a14a-16dc2493d2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60281dde-7de3-4661-9b3a-256065565df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fab0cbf-2f40-4420-8f98-ea9155207507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcec49dc-8c0b-42d0-aaa1-99b7a722fa4c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8d7c2e-55fc-486d-ad2b-0ce87c5fcda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63fa605a-2061-45a8-973b-52b2adfc9b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5466c7-88ff-4a1d-a820-256dcfa1435c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c45897e-ce7f-49d9-ad05-072b7eaf99b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b31a9e8-3710-4e66-b1f5-b9bc8471b053",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16796c0d-f925-4b79-af36-747356c37b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33c24d2-3111-4961-aacf-11f7a50a3839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa777f9-8c2a-4347-8fa4-1e7ef81af8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb801989-d297-424d-8c0a-9011699417bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6ebb38-45bb-422b-ad0d-175518a4a8a5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4956bdb3-ed85-4cbd-ab1f-cb14c90b237a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01872de6-f0d5-40b6-b267-0601507d0d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b8b5c6-230b-4fb5-ad67-b28f11510023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6b901f-9a9f-4d78-a2df-2c9a02d1d1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa78add-c11c-489c-890d-9c4fa37d7ffd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ea60a2-52b5-4b0e-9d25-c62d1ed419b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571cde91-ebbe-4167-9964-aff954475318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6487fce6-0889-449f-bc19-ab1e1fc05756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9915b355-09ba-45ff-a184-7f1baf24068e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610ee9cf-5e65-47b9-9464-60eebc745f36",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6631f5-6253-4de8-8697-0eb17e129fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9113a2cc-f104-4098-9471-728f67e77b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fae3f9-9051-402d-9b3e-98b4bcbede38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d37334-ff0f-4252-8cbb-426c27469049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3bd290-5ad5-4d16-9ae5-b5b36e59fbb7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "292acf47-f574-48cf-a59c-542f2a383c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d188bcd-2d7e-4212-b6ff-46d849743d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d92e80-29dc-47a0-9a4f-2594e6d8a606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "792fdb08-4308-47d2-b4fc-7699e5a4c38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a1faac-6b36-4e4a-aaa2-afe8ef99627e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552e6ea6-d169-4027-b88d-ef7e3d1feee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ff5a9b-19c0-4f42-8497-0d27d32cd104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d5b34d-a4b2-4bc6-ad52-c90fb5761c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "041ead5e-eb6c-4f84-bd7a-139f848e7fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311281e6-eca4-4bcb-8dc3-684ac7e54e71",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d258f00-4f30-494d-8900-9a74dd53d08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d410eb-9e08-4f60-a97d-33d11e2cebb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84c932d-52fd-4cde-8e6f-c42f208b1159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9f8651-eec8-4b14-aa8c-31bd97266d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fae82a-373d-4723-b8b1-79fa7e6ebd7e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be3c24b-1cb8-489c-ad7b-47efdf4d5c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a185212a-7b96-4395-9328-8dc32c7bc787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b3d710-68da-420e-9ced-279778cab761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47e4a705-61c7-41da-bfde-c1a015394e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761c69da-7a85-4b98-8229-b9e6a1f4b580",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6208da5e-6098-4dfa-806e-5f32f7227018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33fbe03-9341-4804-b5a0-157b2bdea095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb6ac2e-1bba-4937-947d-c1c465cab98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c360f5-663d-4a1a-89f9-942c4cd10dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b76aa53-7539-42fd-84ff-52fc1c6b9fc8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1a8aee-3d68-4c80-a8f5-39f5fec4f995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d1ed4d-63ea-4641-ba82-9f9096d17fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8cf895-dacf-48a1-be7d-ee560627b582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc10f60-2b4c-4df8-abd2-dacd267d53ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c20f05b-cafd-4989-9b4b-880368c11e8d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31786140-3002-42e0-9ceb-101a6334a85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832b5dec-22cb-4647-9ee3-5f77e0f3e932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9179c5e-65e3-4bf7-afa0-29efda9b4280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "189ca29a-f75d-430e-a8b2-7c1d337565a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcba2400-811e-4424-9e6e-ee9f546802db",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606f83b5-cf87-49db-b047-2670a1d57c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31efd59e-815c-492b-a095-18a8906f8dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3efd4b-eeef-4d67-aca8-8094d3b30100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82390fcf-a192-4851-94b2-5b31759ccc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00700513-5f8e-4c50-b1db-f9678eeab507",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4687fb0-2b86-463e-aef6-dfd7dd4717fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d661967-0f5a-4661-88ee-4851921bbed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12efe75-cf96-469b-a747-2184acc54483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "924f5034-6c05-440d-9f9b-f31671d5574f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c5dd44-3709-4c6f-8313-e44624cc4cd9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dceb78-89c1-477c-8cee-fa9d5d0cf2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78a95b8-f146-4a52-99b3-f8600c5aaa35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2e0863-cd7b-4e5f-a5c3-73ffd5ce5baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "240ea413-34c9-4037-8d12-45a016be9d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6244ea99-072b-4bb6-bb8f-0909e1c89a1b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fd78d7-b019-44f5-9864-cabe84426ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49afbae-64d8-482e-946b-71cf198a3a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f919288-e54a-43e1-bb77-04df26adb590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf4279c-7a06-459b-b837-d26dde1649c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69395c5f-d656-4c6f-8e7b-86bb2ae2ddd6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a32674-d198-44df-97e8-2be122ca7986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db592cd5-5921-4f0c-b6f6-11277bacd0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d38c136-5a57-46f6-b0c3-544f632d4a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a056e10f-66ce-421d-8319-52af21aa134a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feccd6c6-3c98-418b-a3fc-39a09dc7b6aa",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a31b1c3-0832-45de-b478-0b9cbd53200c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6becf83d-042d-46e8-8f63-54dd34122122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cfe2dc-5cb1-4d60-b20b-404b7ea7aa2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cff9f8a-9e9a-4bcb-901f-0e8f1a4fd667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fb49b3-00c0-46e1-8b59-91ea7377eade",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644b4fe1-6125-4112-b550-1c0f28512406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57196e82-13ac-4714-8dc0-ec6e95fcf0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b08cb0f-6a05-48de-a10d-82863d308818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e113592-e7fd-42e4-9adc-47f7d6d16810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d7015d-ca34-40b5-a607-e261277fc8e8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56d8622-46f8-430a-ae7f-0a09e9d721ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60945481-cedd-454e-9e1b-b170eb61458f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5ba46f-7231-4d34-b3c7-1d64860368d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d53085c-641b-4584-b84e-d3902ce03eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b766af-ad33-4b7f-a85a-673892d1050d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc763ba0-b514-473a-884c-14b30d169901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b321653a-f43b-47f0-bab8-bf3735405f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e680c8-143f-4efe-8b0a-3f314ca0bad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22c7dfe4-586f-45f6-a675-219aa52bc349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff2cddd-c3d8-45d5-9b8d-2aa2bded219d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66efbc83-265e-4a28-a0cf-e70a9481a1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a349302d-2c89-4406-80c7-5620b3a77319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bf1363-1df1-4df1-8baa-fb9cc13d8063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a76fed7e-8bda-4ee3-8e63-2b46050b6d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beeb104c-210e-4800-af1c-c077ab73659e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd929cc1-d48f-44ff-8ae9-e465cd93fb99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea43530-3815-43ae-a5cf-414da3e5a219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf7c27f-4454-43a7-ace4-f0b9240ed018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf78a88a-8bc0-4434-b1ff-68be83ec7604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05433b34-ce57-4b23-8b71-f537c641af77",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d2f01b-4cda-48f8-a043-d44bd5cf2139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9c5eaf-256a-44c4-8919-747e225e3d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7176f62b-9355-4706-9555-ca3b03eccd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5096cfc7-0988-43f8-91b5-c19387786f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415ab53d-77ed-4d05-9c13-6b38cb23e6e6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633debbb-1091-4f30-8be4-7c57626dd76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2403c4c9-b324-4f94-8eef-2066df862cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fd5877-9d02-4350-9ebb-d6ceba0df779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "719ab17a-cde4-4e8c-ae2a-70f05c945b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1054700a-f22b-4876-bc70-86d4d7222122",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df13999-b93c-474b-8153-5f224bc02294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7cabfa0-a008-4a8b-8532-cce3c08e8e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8bf0f1-772d-4f85-80bb-5aff09be1559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c963ae-d13f-4964-b324-439077e53337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f756ecb-c2a8-469b-ae0c-35b113d2a8fb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e47638-609d-4038-81b4-7e3f5b9d0dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d5dbbd-9a38-4731-8b3f-764a127461ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43980642-c542-4243-bf9a-142e910dc54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "791c8fc3-234b-406f-9588-51b4088eb244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6713680e-ee60-4cae-98f8-1ef9fdcea179",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2e8988-a621-4de0-91c5-5a990bca4707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed937e4-ab68-491f-bd8b-fcbe98523cbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da737a8c-6ea2-427d-a2da-f8af6ccff0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c40bd00-167d-4907-b2c9-f0fceed9e2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952ef19b-585e-4b7d-8d81-ece361fd6efe",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4367eaa3-335b-4724-b395-428e95aa1cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9907bff2-407d-4ba5-b7f9-abd1aa9f22a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91e98cb-cf5d-405a-ac37-161d60e6868e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92074d1e-e74c-4d93-adfc-702611e4c023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a728d16-9872-4a93-bcd6-a6569a53f98b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2b4c2e-9a74-431a-80d0-5f5fb73d0c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075e9706-8971-483c-b79c-24c04d7d3371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee0830b-3b64-4b32-89a9-02dcb4f68245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b16002d-ec67-416a-b01b-445375b024d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a5e03b-ef83-48c3-a4ff-14a60096e6f8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256acc5d-b5d9-47e7-bb72-ca747f8d3eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6648b9e5-4175-413e-9216-9dfacefcdd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7920fdfe-a018-4359-9615-3582cdde891b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf225542-3d11-436c-83a9-2935ea9cda3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a372189-6381-4c46-b1c8-afbfa0f7da15",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c08043e-bb9f-4d02-9176-86966f74da81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2bc3d8-e57b-4876-97a4-227dabafee5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a5a31f-7abb-45b8-b4f4-cdfbf225eb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59f95561-01b8-46c6-a3b3-f12f45b99874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2447fa-0956-4621-b389-36f31a69c16c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cec7ba-5cff-407b-901f-3ffdd353fd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d5119c-e5fe-4c9c-a3cc-ee4203c9d3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568f8b70-6a12-4777-b559-29d52a968d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8077ff-9d5a-4fec-afa7-cff53203e3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b599786-794a-41aa-94a8-18c84e925a62",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c97f227-4e37-4cb1-994a-ef086ac33c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd14666-5425-46a9-a5ba-e8d953e8caf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b0b495-6798-4ac6-bd11-e084b46132e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89dbaed4-5236-4160-912a-59780663a460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27f607c-be0f-48af-bf3b-c8f0d5968d7c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd257357-13c1-41bb-92f8-146f8bbcb7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1be874-208d-4141-a664-031c98d0ab07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc23c282-9273-49e4-bb63-a1b37aba4085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe355f9-e995-47a6-b80d-1e51181ff6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b732f80c-43d5-4e33-99e0-82be61754340",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1177667-562f-4ace-b1d1-60e4546eab4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84020676-ec1e-496d-9bb3-3e23abcfac40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007a6905-377b-47cd-973b-6911e5f9d76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d45eac54-f39e-43ab-b4ae-fc420efb1305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd0d228-81f4-4c1e-aabc-0074a9db3509",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd96cc6-1867-42ee-ad1a-dc549fe44c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5840682-8f13-481b-9f6e-f8d9daf97627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4380b6-f21d-4a82-bd7e-0cd87d378333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0aae841-a552-4fe9-bd2d-fedfe2fdbdcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b27cd7-d149-4dc8-a010-ad7a51da81a2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf2c83d-9c4f-45de-b27c-9d87b007449d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5330fc-3ed5-4b3d-87d6-6515724a1dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bc2fd6-eacd-4518-be4e-fa690dd9390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "353e7e05-3f17-4322-8f16-330cf9256f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43dba0a-202f-4cd7-aa72-ed3bb97abd32",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2721debb-7311-410a-833a-348c4ef74eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a9cf670-da65-4c7c-9059-0fd485b9377b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4492c4e5-500a-4776-a70b-6e741d8331dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63ccb32a-37ec-4f31-8ab5-e67261d66e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bd1725-c2f7-46f8-a110-1758c671617e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c8f3e7-8854-4b5c-bb4e-d7b723bdc3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95df159a-31cd-4e7c-a625-0127373f4861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f8bfdc-4bf3-41d3-adca-000fcd7e1ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "073c28ea-b36f-4130-84b2-de054fcf9f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8e04bb-e0b9-440a-93f1-06920cf4798b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb2b5b3-2711-4092-9c9b-02277dcc27a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c7b79e-2f13-4f2e-9df8-f62599df8e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa77cf5-f117-4ffb-b491-ca45343f753c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e529ba6-ee97-4cb3-b97d-c33bf209deab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9237885-4a5c-40c8-a04d-b2530fc2b46c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a83e18-2aaa-4065-9872-5771a52f0e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b803333-4ce0-4ae7-9689-82fbba37019c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e8718b-eea4-47b6-b873-99c99a9cdf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0f199c-65cc-4bcb-8002-3f638983d319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8e3e3c-fff5-4838-a148-138268172dde",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020cad43-09ee-4ffd-b948-dcda7c83cea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65b7aa6-58b2-43e9-a4c0-940556150dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9248f52-331f-47f7-8847-3f130731e4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c491b7d7-8082-499b-b882-cfe427dfbe2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cac2539-d6bd-45d5-92bb-00860592cd11",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647ac6c6-a951-49a3-978c-670b5dd5933f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c86b9cc-b143-4a06-bef5-f887895e7885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d67f54-f7c6-45fd-aa7f-9dff110e4204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6b0a78-4ff5-4849-aafe-e01b0fcd9a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f70fe3-2565-4aa6-b8d3-57e624f2a733",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8950b321-9168-442b-9d0e-eae1a2e878f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9816a981-8554-462c-9e78-1dcea5a21789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2548702c-efb3-4a43-bb1a-ce0539bc1a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c443dd-9ff3-4f16-97cf-fdedf9b03099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa9d6b7-8ee8-40a2-ad0c-7d1a6cd1e999",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9865d978-3e39-4c56-b7df-242b32e39f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "347871e1-92a1-40b9-84af-c9aa957d307e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c27e684-b7f9-4285-8638-b72e0b348537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7f94fc-6278-4834-b91f-a2fa1ba59d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0132d55e-0bec-4f02-b253-4511db7a3f6b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004b5ce9-00c4-4ae3-b659-adb21038574b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ed4c68-3696-446f-9a0b-a6cce1eac511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508a4dd9-a9e0-4918-a76d-f040d487ef14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7241ad9f-fab0-4de5-8a22-7c6113221425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c388cc9d-df37-43b0-bca5-d80c128ef55f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7bb3e1-47de-42fe-bc0e-a1c805d6628f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e71322ac-6372-4b84-9166-da2b08f6b3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994847b9-d56f-4220-854c-0a3b6b697d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "17384db2-32af-4d54-8c73-39e9d55ffa13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a878bcc8-da5e-45fc-b772-63afe209068d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc7154fa-2350-45c8-b52b-1addab57e0f3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc65b70-bd20-42a0-be38-d4de2454d414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f656627-fea3-4c59-a364-b020143d223e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c33bd7f-5f30-42bc-b778-55147a0095e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "451382ec-1ea3-4220-8439-27e0059d1d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05125a65-67b8-481e-9839-e2b5729ee523",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c19d9bf-fa13-4b19-af3d-8a4d4b13df33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b86012c2-d533-4e37-a538-875b443028b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3180ab8d-3982-4fde-a625-bbb4b57945de",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edc08e79-1639-4a7e-9fdb-45ab4a8bad0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20ba809c-4f91-4c67-a727-30ca6076d8e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cf58b95-61a2-4f91-9045-b0f751aea455"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f93b5fc-3cbb-4af5-a37e-348a31697d3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a441a7f5-8096-49e0-829b-5c33a25fc6f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c102652-a0c9-4a6d-95f5-3fd403ccdb49",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e264d25a-3df7-4a13-9f68-c35fa6beb240"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "33351c0e-7001-46d2-b650-70eab4e139a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a822c848-8ffe-4eb5-96d0-754d2fc5d8b4"
                }
              }
            ]
          },
          {
            "id": "1607eebb-c719-44f5-aa03-80b74ca43ad6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2cef2ef3-d844-4542-a2dc-0e9c8bc62dd4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "710a1187-2e69-4431-a8a0-c87aad2feb21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b13465ac-aeca-4c7a-aa62-a0a4ea4123c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "005f84e0-b4bd-4906-8417-7cf9fe8b85a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a1199d68-5596-41d3-b651-29894907673c"
                    }
                  }
                ]
              },
              {
                "id": "3a132071-4e9c-4959-aaff-efdc366e7761",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1370067-c8e0-4071-ab03-d7d83f7bb72e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a36342b-64c8-410d-8491-3661b0b9abe8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d64a51c-7b35-42ce-8af9-b147d4c73e7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "706452a6-6dd2-4ed7-9478-191a5112a451"
                    }
                  }
                ]
              },
              {
                "id": "6097885a-2a4d-4714-9b75-9aecaee00a0a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c97c0434-22f8-4037-bfe7-596f5694afcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d10b67f-0858-427e-8441-debd1d394d9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff71b9b2-191b-4ef0-8b6f-bd28fb85d553",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61545bb3-e616-4e73-b6d0-6a44213551b5"
                    }
                  }
                ]
              },
              {
                "id": "a5e703cf-dd2a-4919-a0ba-c8d1e90c72c2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d3bc7c0-b359-4e4f-ba1d-1d0e81060cba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37631aa1-4969-4b72-b721-47db0ca73dfc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a80cd3b3-a455-43f0-80f8-9feec4786f25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "53781e63-9291-43f3-bed8-ad14ed3379cf"
                    }
                  }
                ]
              },
              {
                "id": "f73c0a94-cc38-4a80-97c2-898e5d93a67c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f04bb82-2bcc-44ac-b9a1-f7c8e605dfe6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c01ee5cb-2319-4302-927d-d32d40530c3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08482b98-bca5-4faf-95f5-ae1679d2b797",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c95b7b8f-d25e-470e-a8f3-ffa036609157"
                    }
                  }
                ]
              },
              {
                "id": "46601fce-55ab-463f-b267-19054a8d0b25",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a7eebc2-2e15-41f1-abca-98ba71233d6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd4973ea-c689-43d1-b7cd-7d5591ff3e63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5941713b-f203-4c65-afbb-37802f831e92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "74ab38fc-3c13-4037-bee5-b63d4801896d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b951ce7d-b7db-498d-b838-8287a815ff08",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "90205a4e-f986-458a-919d-536a312d68a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aeacbb85-94d1-499b-ba5b-67066c3c81f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "686b7b3b-a93d-4f59-bb6d-89e54e6fe9eb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cedcd66f-3c4f-4bfa-b9eb-c2806d1d99eb",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "49a2dffe-bbce-4c86-957a-0dfa6f495a1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7c9ebd4-04e5-47bb-ad63-0701081e7ca4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d13f31ed-a09f-404e-bc00-1696c1129bc0"
            }
          }
        ]
      },
      {
        "id": "24a15478-f653-45e6-ab53-3ea1099a3857",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "04b96898-2322-445a-9b60-0a87e4894c48",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c56daf1e-af9d-4c67-b8be-cba2dc25156e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "574e1d93-8a3f-4480-af3a-a70036247bef",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ccfb49-f4f8-4793-9916-aea1b2c0f825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71254778-c668-4c7e-be0c-914d55b86149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f244187-b3ce-43ae-8e89-e4b6c139010c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "244125a5-e693-4c2a-aa56-6bb47fcbe5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77802ae-6ae9-4f73-8271-2e0ee8a8bcc3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29671f30-7001-427d-b5f7-e7d7d44ecf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a328d37-a389-4d48-a92a-6e5e472cf023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801a5c2d-82f0-475f-861e-7cc0c99c4f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "402970c1-3002-4bc6-b52a-1a59a366e90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a604ccd-3f38-4ddc-ab69-071e752cdf4c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179a35e8-384f-405f-acd5-2bd7b28a2372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c77b832-21d5-4fd3-97bf-f375d28a6d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ab74ef-71a9-46e9-8563-4b7c8bbb7e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c65f5b25-2b84-4f6f-ad17-b6495a02221d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5e899a-5836-4e27-acbf-ec69104bc603",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6cd120-1b4e-48f4-99df-e19c2d83de04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e072bd0-b42d-41d5-b4bf-3ca374d00560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223b490e-90d4-4f73-a5ec-726390e48fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e82efd-66b1-4e1d-8486-c5193fa415cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe40373-37f6-469e-9443-98e0618d05dd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beb4c91-e2cb-4c7d-8048-899c15c4702e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb204dd-6795-473f-83df-f27c62491366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e3ac24-3d1f-4ede-b8b4-29757b8d8912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74c5c6d4-f85d-49ee-ba87-f0cd0a6f0c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405936f5-eca8-4a0e-aa89-6d736ab8ef4a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b51293-3492-4270-9238-c6e8045d1e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a43763-54e0-45f2-9ae2-7f21dc2c3cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27971ff7-3e53-4cd0-9a01-ba0ec5c5528b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e760f26-0399-4f10-beb2-9aa262286de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b828d7f-3550-4a5e-bf26-f84e1877c7ee",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15363a3e-1ed3-4ab1-8e5f-f4dd0c34ed0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ea1ee7-85b9-4edf-ac41-4b1ffb5aaeb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9113e935-5150-47f3-8823-9a3d49d02dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "612c4125-e421-49a7-bbe4-c50eb468670c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cef535e-ddf2-4da2-bcf7-d62a8807c506",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6b008c-6de9-4687-867d-051313b1210c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25103be4-844f-4bf8-b2ea-89d2c8d75436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7399924-1c6f-461c-83f6-5bd03c2c6e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9383e863-261a-4571-935c-8d52bc167c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15895ad9-fc48-4774-be9d-fb0af16a5afc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41265c2c-d248-473b-b14f-8d2a3c9700f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8547d3e-47ba-4464-8bd7-1168940a6574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea04eae-80f4-421b-bc23-f50f9908c876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed0cad3-2ae6-490d-97f2-95a9dfd329da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab11ecb-f5d6-452b-a964-67d96a702477",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec11e62-b29c-4b3c-91cb-503c382b9e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313ccc97-7757-4070-8890-f6cb1998a76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d8937f-f447-418e-98c8-8f2cd28d6d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7750143-ab9f-4c9f-8e4e-82db46de2dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec471dae-9db8-4997-bc56-a44c06eb1e64",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3653f081-2ade-457a-9ee0-99f123a15b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97f3b30-06b7-44cb-bc95-3a877beaa9f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5350bef8-a566-45db-b44d-a56d7699303a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "71e55558-53d7-4ebe-9b66-1693e76d6823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2ada93-c965-4d89-b303-e858b053728b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae5c49f-0b1d-4cb2-a96f-608ec5cb9cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113f7cda-a41b-4247-b7bc-207f1f4dbc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c4f462-175d-44d4-8c8b-64cb9bc2f44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7272f3a4-acc7-4008-9871-e92c73540cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef644e61-dee2-46de-948a-c844a2010ef3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee2c807-2807-4dbd-9213-f7825a15f337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a201dd-61cb-4b9b-958b-5f4265ed71ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082cfd62-29f0-42a3-ac35-1517dcc336d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab011f7a-d0b0-4dad-9865-e7f54eb694e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684e15a9-f9d8-48f4-9ed1-3a5a07a0d8c0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8f83c4-041f-421b-af14-c4373056c59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9b61ac-3150-4f93-bb38-4930a5804500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0741a6a5-9990-4ee6-a5e7-a8d7d7c357c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "59f6f6df-5967-46a8-876f-f1c840ce9e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4035a5-66ce-4583-91f2-8828a5ea8a7d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20295d77-2f17-4a15-946f-341e10511147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba890a3-7d3f-4b6c-809d-d2439e7eab4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2576db7d-5462-439e-b9d7-60332db73806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "100aa233-544a-4f08-82f5-26118bc264ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c14ca4-35d7-4d02-93ed-b9cc814a8f25",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940f24fe-bf03-4d1e-8696-1a52d293b619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a03259-c6d9-4793-9a86-42919d8d0f5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6aa5f1-3183-4962-8f43-2747ebc80895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff78fd6c-019c-47a5-a80b-ca124836d9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356d0350-bb44-4aa3-b7e4-7a270389cde5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbf88f1-227f-4257-8fcc-2c4130470c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9723b8-2d6c-48a9-96fd-2e6e8e73c9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cfe892-23b2-48c3-ba96-1ed7a3b18558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b922f8e-ea37-49b7-8458-93bddf4af15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dce4056-0369-4085-8651-72cd8e536cd5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7916ed-f004-4dde-a006-661c80fbc632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6f47de-7fde-43be-8201-8129c3601363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ff4569-0b5b-4437-a1b0-05fdc742c77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fcfe4fe-f478-4623-afe1-6655a2c5cb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78634adb-252a-4964-82e4-e5382155ec21",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cd71af-eead-4f9f-a5b1-8e23d81c8da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd01d76-8343-416d-906b-097ad289560e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a084160-a183-401c-ac1f-e854ba119ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac73e7c-cc86-4b5f-a4d0-4ee807586e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2425d4df-5fb4-459d-beb4-86731b9f88c8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad01228-0b1f-4c39-ab6d-7ccaf2c4abe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1024cf7d-26bf-40b5-96b3-3eef5eb794c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dcf205-12b7-497c-96e9-b030d659dd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15c5db27-bf62-4716-a4e0-228251be2005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f696b3c0-77f1-4390-a93e-e208a23e281f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a104e77-db25-40dd-a063-ad4e51b332f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17e4b04-7978-40f4-922c-4da61e8eda31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84a8409-4416-4eb5-98c6-95f242e4a57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf27c589-90fa-4c5b-ab11-00e044d08ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a292a81-4482-407b-bf7b-6f23c7bf16c6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f2ce12-15b7-46d6-8943-dda548379931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451ebbe0-5496-4646-98d9-48e9747c69e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7772a740-9b3e-40d5-981c-bf97bc910700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a72d920a-0167-477b-b72b-fce650728ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3bf3fd-c436-4287-9b82-bfcd74b0a7dd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079295a7-9108-48ce-8c9f-334cc61b4e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd362e7-b49b-4004-91c2-74e9c1875971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36649381-de3d-4d6e-8d11-e99c707f130d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4a416f-f57c-4ad1-a76e-8399babc3d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95497a5-5c1f-4579-89ba-7c7572676596",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cffe9bc-88cb-4fd8-a432-861c723f034c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc25141-1844-48ef-87e0-064941536305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ef73ee-f81b-4369-a74d-56e249761849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80850ac7-f422-4949-bdf3-ab7ac7eaa660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b1cb81-6a89-44cf-8d3c-757e170753c3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114e9628-8e39-495f-a064-806625785e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603e26b8-6098-4255-93c0-d70316741f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70a57b9-765e-40a6-9a80-91badff4c43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a38ccc69-75e9-4317-8257-32ff89760d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acbe348-e183-4a55-b174-bd0376d64ace",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa98925-d7c9-4a1f-bbcf-a82280229b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d160a787-170a-41ea-8d30-808c02d776f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9241defb-50da-434f-abd9-bb3aa006a9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6009277f-56ff-4cac-9d54-adfee2adc8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a413659b-c8cb-42e1-a47d-68d7789370f6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019c754b-d57a-4952-b486-3eba416d325f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd668a7e-7f59-4437-825d-9e38b3d23dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9c4eb3-074d-4ba4-a2c5-040488db7c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef73977b-f935-4971-b869-f820436bd892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dc700e-42cc-481a-8415-8e1555c826b0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081d43ff-0de4-44eb-8ef0-aa5bfd2d6f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f41c8b6-38ee-4238-85f9-492fa636878d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d074fc03-501c-493b-a7ea-752b5e8ae2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89745d95-448f-40a2-b458-34c70c7344cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0758705-bce4-42cc-aded-687e0bafca37",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b14dc45-844c-483e-b43a-07bad5a55e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aecbd0d-326b-41be-8ec3-7ef74545e30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e941cc0a-d40d-40c2-abf0-79a6a96d1c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd00620-c273-4126-a99c-ab70ea70a2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414de1af-652a-435e-9617-d343eb8d1cb6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3f21d2-db75-4344-98b8-f64cf814ec93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babad6eb-2444-4b9a-b4c1-152a3d5a5ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b30a238-4881-4b61-9613-b85659cd8e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae14cbd-948d-4240-9425-9049d11d5649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c32ffe1-1e07-4625-aa87-0338795a3552",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d86a59-9bed-4d84-a53e-1d9e50723631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5c256d-f61a-45d3-8a50-13f23f6f70f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705a79d6-ebf7-4f0d-8bab-e1cfbeb59592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3e55e4-ba5e-4ff6-96c8-5b7289e0dc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbf4bb1-0ab8-4769-893a-328008b149ae",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7126120-70d2-4425-9114-2ea99c22cebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42388de-f440-437e-bde6-2bbb59a51930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47ac934-b134-44bc-8320-f2a6a23adc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e114592d-9779-4dd7-aed8-ff27831e5541"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6027e4aa-d1c4-4a52-8601-d56c0ced3c0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebaab85e-3f0d-4ce4-ae99-c0b1b7327879",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdeb2d1-b9f3-4811-b8bb-31c656a04c1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a01e79ba-6895-4a0b-90cf-9e0cafec4376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74f6c1d-64c4-4948-a385-116ef64a7d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10f75fc1-ca69-489a-a096-eb952475e7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a3fbe8-54fe-4101-9d77-63c7217022c2",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648fff53-ee05-4d56-b2b4-0804961be244",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "794c63f6-bddc-4118-9349-3f670a9ff160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77aaabce-32a9-4adc-b0de-6d52ea5f1897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6c3c210-678b-46ff-938f-795e07a71b03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "048716b8-4a35-4c09-89b3-72eb08b0ed4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36be1331-535d-44d5-b074-2e169b9622d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9c1829f-f9eb-4428-8af9-7eb887b7496d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2a08868-180d-4fc7-a544-befb5385c4a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4f3c5d1-fc86-47fd-b1c9-72af94e512ef",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "900deca0-f489-4bd9-a0ea-f500033f0a39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb41056a-3690-43bf-a2a4-703706ee1e38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10849c0c-3058-427b-9372-5abfed401574"
            }
          }
        ]
      },
      {
        "id": "7f1f0801-d989-4e58-a705-9e967491c55e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d208d11c-06f5-4b8e-8b93-dd9295d13bd4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a94dcd3b-38da-4dba-b901-4b251ee816cb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13414a77-50f8-4b23-95df-e0362e063c82",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac8dcea-aa16-4e4c-a8ba-7cec55ed303f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f702b2-d4b1-43c9-8534-42b4d2b0500b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e14872-51ab-44f1-b597-de90f4acf519",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4236a3-3f26-427c-ac4d-212f4dda646e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81f8059-91a3-46a1-b9f4-737007c22376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031c582f-6cb2-40dd-bf37-e218eab85833",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3541ac02-315c-4a65-85ed-3ef7211fe38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0542a4b-cbdc-42e2-ba47-c1b92a65012f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6cebf4-8203-42a1-9ab2-23085fddf4ee",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3824950e-fcf4-4b8a-9955-836d7f1ebd32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7abcb1c-eb47-4afe-883b-5158abf26598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047953f2-4dc7-462f-b36b-9c9e40bc069b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef415e1-1b48-4170-8910-3745f1ce4e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f9ff8b-0e0c-4c1d-8864-0cd4ae3670b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fae632e-d931-4210-b043-bf8e92838590",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b551f2-48f4-4dfb-be57-56d2dd83c8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d989b89-6fbd-4b7f-9704-f23eb86d3c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f8082b-3798-4bf4-b1ed-511b8a1daf47",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cff849-f0d1-4ef9-849e-68010e4a7427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37bc2b3-f33a-4000-ad6d-31f12f20b33b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb9379a-7677-432d-acd3-23f25aedb150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b15a43e-c3e8-4262-b3aa-1f050e2f04e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806cdee0-fbe7-4c35-aca8-e7482482853c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fb6f82-75cd-48a4-89e4-77dce33a5be7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95d6781a-55c9-483e-ae80-d3b43663c010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b6e7ff-e4a6-400b-91bd-2798aa13063f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56dc5eb8-a81c-454b-8d33-66164dba8333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755c44a7-5e69-4717-b79e-b31e18981d47",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e967c66f-4810-4605-a84b-d931bf114c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bfff94c-bcb6-4c83-b6ec-a45009935131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc5e927-8b7f-4843-9428-e18b19b0228a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6da166b-97a9-4803-9ae5-2b5d90f90b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a165492-457e-4bbb-947c-9da3c6858423",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb334c88-d6f4-47af-a390-e9035866e510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87858d51-b2fe-4615-b279-518ae2e1eb76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db4df9d-418e-46a3-b188-24b42006989e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3812dcf3-fba2-4145-b74e-5bd58e2a2b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c943baf-3fea-43da-98ba-fb0888a7851f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f7f469-cdd3-4477-9d7a-386596dc1edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29dd5891-3a7c-4590-a2d7-58efde081c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3cc79c-d040-4dd0-ae32-52ec1d8d2afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d154af9-ea1d-47e4-b5a7-01c084dd4b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e6d01d-5d33-46c4-a944-18483a0d9c89",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeffdf2d-4c7b-426e-95bb-584a4bb2c6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dc073c-3685-42de-a25d-2cefd13c30b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4286e0b2-5602-420d-9dc7-96f314f38686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bd05bb-6a69-442b-9d77-960f61130ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0633559c-0d01-4e84-8e40-079a83c0941e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992c94f9-5ffa-4354-89b7-2148cbfa57e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "950de9d7-b077-4d5a-950b-232af3d517e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c89ca2-e4b1-4ce2-afdb-2c8476a75650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786e4caa-d7da-4e5a-aa30-4be6c39cf33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cc4784-701e-4446-9181-8a32b97741d4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22181bec-877d-4cac-a51b-3cefa7d38677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d22a6ce-8ec6-4a6e-8e52-e76e76cd9a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29192e1-9efd-4ffb-b299-a5b9831287f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade687fc-0c61-4420-a0ef-33a37c087b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f568a621-0bc5-4b46-a9db-f1dfad2d57e0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32173ff6-a2f1-49b0-824a-23eee0401868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24371976-f85b-4b1c-abe7-5e938abdadd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a06c3f-21e2-46e4-88a5-881d77359039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea31edcb-347b-4667-980e-7eb4c3a36de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6590ea7-a6c0-42e3-a8bc-04b3bae835c1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de38dfd-e103-4b3b-b774-89bbbce4e191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4afdf2b-a2a9-4453-a1ff-cc0106556ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f2536b-45f3-48d2-b863-9ca2070da4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164e32b2-e429-49c1-9606-a3e178fb4731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d62d516-3eeb-45bf-aa6c-903e5e1c1dc6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e46c0e-6a5d-45cb-a821-3b61e62c7443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70d3857-87d1-483d-84e5-a5e2116e4fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e16b37-5c2c-4e11-b2e6-7425c3c237a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e444f4bd-1170-4ec5-87b2-61c4aa4f9520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fb2bc3-8252-4f04-9080-b30adbe5ba29",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804d351b-5bd3-4f4c-8a98-2258337c1d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd27c5a0-804b-4136-a01d-20787f03050a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb62720-4327-48d7-9e46-a91da57fbe91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289962bc-762b-4a09-b308-8b463412ea43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d5e2a3-bf97-4d05-8ac8-9636e6932d42",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9cc0f1-8698-4606-a978-071b25772e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6575ca8a-bc69-4006-a3b7-2fe681b2e689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2995f3b-7030-4805-bb36-5ea2f6c40e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e7c3e5-9a1a-4f48-886a-cc0045285e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa57a316-2e81-4b04-88fd-e3bbd5f163d6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb625aa-e0e2-49d7-865f-2cc1102fd4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72947799-f0d8-4b5b-9fdb-df2982297faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5097dc33-f09e-4216-b9a7-9b22ba04ced1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af42a98d-d24a-4a25-8362-a2e94c819cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9007189-4c12-45e8-b5fb-02828ff3ddeb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07bdc55-6827-4ee9-a9c3-4cd2e34a19c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbed765-b0b7-430a-bc53-31dbdbd3c911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6baa2c-be08-42ad-a61f-2dd36f9d2540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20a9b84-a074-4b2e-96c5-07b123899935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8709cd8c-664d-41e2-b657-76b2039db0b2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893ed484-7069-401a-96b1-fd7277ba1906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a23c32f-00d0-4400-99e1-37dc926d4448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f55ab5-5d67-4dd4-aba9-4eeb512f151f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3e294a-04f5-45cb-93e3-5d6a2fcfbe34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09785295-28ee-485b-81a1-fcb19d15e690",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec50e78f-9657-4592-a758-a9467b1946fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63bdbce5-4392-4c02-b656-eb065f540b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e8b5ee-8947-4a36-a935-447ed28d2cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825eb65f-c29d-4b73-9cef-6e450e8a74c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595fcbc8-6e67-41fe-9070-651d3ef457ba",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c21e14-1edf-46b2-90f8-fbf64070088a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c704d62-40f8-4ea8-af3d-ea51b95b6f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05699889-8aed-486c-998e-e01f53411c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cead8ee-1bf9-4131-b829-d3d7ec63675e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535822e6-406d-4991-84db-5850f20ff9ea",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473e9e83-96f2-4e46-9fca-5e5551f7b3de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42998300-82a0-40aa-b1e1-65e2ef2a005a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe71656e-b9be-4281-89d8-d188bc5c1f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99cb124d-b39f-45c1-bb5a-ee62b989362d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf138928-c78c-47f0-9f5d-4779bbe919b4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05290524-563f-4b76-abb0-d1d15539d3f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "782a305b-c68d-49a6-bdf8-a964f725baf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88752e56-7c40-4a0f-a2e8-e9ce7d70ee38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41376f1f-9e8f-4a48-8bfa-462a5bf94fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2945b236-4b2e-4c77-b6e7-9ecc29f02fe6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebd435e-8ee4-4aef-bbd5-88a8a9ad1627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b304db46-aae0-4834-8cb2-7b574061b8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40b7b1b-3f7b-45a8-b2ad-0ba7ed766d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fe47ef-6e49-4dba-9977-c8dceab26f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7e744b-8676-4097-9a16-19ea3eb1b449",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7075a3-9baa-48a1-9501-27f0be3dbc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be2d7f2-39b3-4cfd-b8e5-1313db36f507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32120799-2638-46f7-9bf3-663fb353b01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc4f47c-840f-4aba-9a8a-3fc202748373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9079ef8c-2429-46ff-98f6-0be7871dc50c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7dfcf9-00fe-446f-8a8e-2472b19148e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6caa0083-4f32-4fee-9664-e479fac41f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f995d5c7-872b-4349-aaa3-3d186ea25669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5604204d-920f-4fca-8e3f-3d4c2b43b6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c611588-9b6a-45a1-8a15-a85e761b6e04",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300ca86b-0c37-4330-bdd0-d53ba1560b46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b283935-f0d9-46ca-9aed-c60ff8923385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9f6b00-4e6b-4683-9a35-277fa6b7063c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9ce58e-b820-4628-a194-96d74b80e7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b04e689-000f-4c03-820c-513bf7fe83ae",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b802d4-4174-4134-b6ce-7f59a2b8ef33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a242d2bd-175d-46ad-9a90-14ff63806455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ad36eb-dc00-41c8-be96-6e6bda8766dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ac6cbe-8434-42ca-8eec-ace29268f19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04dcfe46-46ab-46d2-984a-b69920b2333d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64297e39-6a22-443c-879e-94198d6c6a92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aecbb239-8f5b-4c51-ac05-8fc6023c7b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c40724-789e-4e26-9bce-e16278dc31c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73baf51f-aaf7-4210-8816-943cfa48acda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0444b13a-05f6-424c-a68a-159624f11697",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ec6350-fd15-4f00-b7b6-a61996038cdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4c9230c-70dc-4666-82cc-0f451b7ee6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea62b6d-e4c6-4feb-a737-fe051233b0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b37d88-144e-4064-adee-29b63bc7ce6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a3423f-e930-4e06-9b0b-5ee46b67a92b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fd4595-2f85-43de-ada5-bc44b255311f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee650fbc-58f4-4ce2-8eb3-fef713dde603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0efd15-7faf-412f-988e-acaf185f92f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a511251-5136-47b3-b14c-22b20f79020e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83091904-4ad7-4ec9-a776-62cd4879de01",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b04cbd-8f93-43f1-a09c-a5a1a0ec96de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04799ef-4533-4d95-9df5-a480b851f197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bee507-c23d-4752-97fa-cb8faa4cd7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c55b8d-8f28-49dd-bd36-d792a936c8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a374ab0-2400-4532-8ebc-ef69093f0d28",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010f3600-7880-4634-b683-3385c9d421f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad0f02e-1430-421d-9669-9c88e7f8c12c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f30408-93d7-4ca0-80d8-2c167e4933bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea07f128-4e3c-4306-bc06-e49c540244dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05803b07-cc54-4002-97eb-cb9b0ea9aa77",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a3d45f-0c8a-4f4d-b30d-6d6f5b9bdc14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93052e6c-33eb-4e76-9d12-e8d51762fc1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52c26b7-f337-4c2d-9c46-0de1316b96e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7418e319-9fb5-4496-a601-8957540f0bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5762768a-5315-4593-90d7-a3c9c29ff299",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c77f205-4c65-48b3-80a2-8f326478bb95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff074a26-5431-4cd9-ba1a-aa3046232f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5d48f3-d4b8-461a-85d3-e404082842ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0993307-59ac-4918-b249-3722e2e5d905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38b403e-992a-41e1-aadb-dea760103b79",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5e6cc2-184d-4bbe-b826-adf4bccfe7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158e125b-5961-4790-a485-a8023ca866bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5949ec12-d9bc-4791-bf36-24a5ac6ec252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975d9b80-1a06-4af0-a625-ab4c7da168d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2054d4ee-3d5c-422e-9fdb-635d9b84c6a8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9950a1c1-d115-41da-91f9-19dafdac360b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11978d3c-ef23-4a16-80f3-baab500969da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ef1332-fcb2-4a8f-9da0-59eb4c9503fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc00331-2159-4c8d-b2bf-b7391791e8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1d645f-803f-47b7-8757-cb0b9e0b8d0b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8328ef01-4c69-4d38-82c8-4c508fae9908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c5ef7b-6038-4c98-8186-99f04b9cebcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8839db5e-afe1-4416-a718-a88fb2e6e590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a4fb59-bb7e-4c8b-b365-c0f2a48e777e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561c17da-4ef5-4a6c-856b-bfa0e3816c25",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed33533c-c09e-4652-b090-8eb972893929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6d7075-ced1-4583-900f-e1d63c0a8077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b3245e-4ce7-4532-8a55-dbd99cf922b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c4aebf-c819-4922-a859-41441cbe5422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37c41e8-24bc-4a67-b5d3-6c2d1678367f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf3ed6c-30c4-4a91-8b66-1c57509df6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c222028-4d5b-46d5-9732-e6722c8e2efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d7b648-28db-476f-afb5-a17d6049ceab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea134fe6-95e0-482e-81ab-9acb7fba0f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5354e5d-35e5-45a8-8419-9b5679a89281",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f749f086-0875-4e21-9be0-e1998811e370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f23fa3-ebe8-45de-aaae-900126c18578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44caa7a-d917-4108-8a53-4762b36c1dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6adc718-b391-48d5-b855-c0e25a5ff781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f569feaf-9044-4c10-aa23-31de3bc6b29e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5c0d3f-e427-42c4-9ce9-02259545f999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6473b7e2-eecb-43c9-a70a-64e0665115b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e988009-1025-4bda-bb47-0758bd77ed81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61386ef-2ea1-4c96-96f7-952cccaea5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f112bc-d97e-4515-9ea7-78cca87e7a68",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20d8155-88e0-4002-95af-6325d79bdd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc7d442-6efc-4137-9bc0-d294689d3335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7c891f-ea45-4a4d-8535-b7902dd77d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39952d66-1942-4484-a2c3-05edb9993d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a613fe-294f-4aa9-8392-3148a4b4ff8f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4926191e-2eaf-43ce-9b15-07161aef8dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21568e9f-3486-47df-8746-9169681ff9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2ee2c5-2bcf-4996-b8e5-ae506adce58b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc0c0cc-50f8-4adf-92ef-1e4d03944ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb3b81e-4e68-4a9d-a484-8b6caa0512ec",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c1f94d-917a-44e4-871d-462e0129865f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679a5cbf-4106-43ba-a2a9-a80ea226c64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268e08a1-6d73-4d4f-ad8f-da5f5e0245b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1285b6-ac05-4919-ae0e-d829c7dc9c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58eab3a4-7204-4cb1-92db-740cfb3e9acf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de65b373-a4d6-42c6-b393-0116e8e4dd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81454c3a-3484-413a-ab19-742a1f3f062b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf239659-62fa-4f07-a243-42e7cf07dded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056b7400-fbf5-4238-bcea-7204b441a7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbe7c9b-eb0e-4fb4-aaa4-9e491c3eb73c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f98d808-0bbd-4d46-a921-d28e8a0d5a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd474802-aacf-4072-9f72-28016b6030e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb26aca-e4ef-45be-8983-11208f9bb6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6d0c91-30ed-4a8d-9839-f8445ec29f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2deb8d-0a17-44e2-9675-d2d73bf6f8a8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fa9aa8-6ca3-4e47-b17f-66fe9bdcf405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235cad91-d34d-4f5b-8883-d1ff3e81c289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43208260-7cf3-44ba-bff4-b63b98641583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e18d48-5c3a-4167-a332-2c77bd4ecc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf204ef9-1297-4c5e-8a7a-63c14a94ab97",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75819a68-5407-4e67-9678-2aea51d8b5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d524b36-7d87-4d53-994c-66f089d1606f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af32aef7-c680-4fba-8c2b-108e94f37d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b8f311-a4b5-487b-91d1-c3eabed7796d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f42c11-5849-4ea4-bcc9-57668ce64e61",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04171783-00e0-4200-8f44-59acf184109f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf5e3dd-d81c-4bb2-8027-c1ea0f0df0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c0480b-e9ad-4a11-ac5a-c6d91eedf882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b855c1f9-1e34-494c-889a-c412f23301cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfd2c7c-cedf-4291-bd5e-f0048a4c2ed0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fc3dbc-6d4b-4403-8463-207f370c2c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54e5fd5-02e1-48dd-a55d-3b5c52b926f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7bc9e6-dac1-404e-804c-ba3b8fa67ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fb6463-a9e6-4476-bf48-3f28481849d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e3f354-29f9-4ae2-98bc-c11c0a8bfb7d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84679623-f723-4caf-9bd5-e270c5840ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786b5252-6f05-47e0-97f4-2248942f7e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62558d76-4b8d-49cc-8564-a13c1a599157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88725dea-c863-40a8-ad75-b24b92b4e241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4be2db-dbe5-4db6-bb70-5711265fd14f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9537b88-d923-4f96-82c6-2e1e6775b2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1887f69f-2935-4b51-812a-a10bab616b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3484957-af87-4c15-a99e-85fba29fdbc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ef42a4-f335-46ec-92ab-f4643fc087f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d1c9cd-c3c0-4304-a6df-4f018b2ab385",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11764758-cee2-49fc-9d85-7001eb5a1f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb498d46-78cc-4dee-9b34-6a4f68f85d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb3a2f3-7a54-4411-b757-2758f085eb39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4cba04-8a12-49a5-901a-10355c26b7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a673a39-89eb-4eb9-a102-100a4c88271e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f496713-54a6-40ca-966e-56eddaaca618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f91b30-d4d6-428a-966a-86724c53fda1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1212ae-89cb-4a8c-af0a-b82f9883678e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d16fa5-caa9-4642-b38d-95602da76f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8280350-045a-4804-8198-340409643cc9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2b9559-71df-4e3d-a023-5b4bdad9a0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d912fcf1-9e3f-4864-9cf9-7b9bcd6c6d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "289afa66-1bb9-4e43-bfac-04abf4805dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddc4f75-5852-45f4-8175-3359f51549f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d65db49-c629-455b-a50d-02d3656c20db",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e73524-dcd9-46e2-877a-1c7508ebb7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f0d372-24f5-477e-ab67-03a61f1f3876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e7c384-fc79-4a0d-b55d-4cc6006b1075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da12901-b028-4dda-90f4-8e31cea8afb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854a7d4b-54e6-4f1b-843d-bd8f3ef33728",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace781a0-7cfb-4c74-9146-c476000faf88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868e2393-330c-486e-9d4f-d9b935857449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e35e2d-1e3d-4007-a514-31dc3de626fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40729b57-de46-4127-8b67-3705cd39e13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03191217-bf0b-4fb4-947d-73cb08b57786",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2f7136-65f6-43eb-827b-5b5c5f9aa5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455e852a-fdb4-4e10-b86b-a145599e0842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d40711-158b-4a2a-95e6-0b648b685850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb66a7bf-7db1-4b11-a1db-90fd0328084e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079eed2c-a0b3-44f6-aca9-bbb1211d1a20",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9420db61-b9dd-4c1f-a3ed-8c06e2410d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc00b282-a6a5-4706-a395-c9690bec330d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "579aca5f-c2c7-4dba-9075-41d918aae5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997c8497-6c69-4863-a951-7ad6178a1ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2542ace-87fe-4136-821b-d5b0efdf0a95",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7a9f66-51ea-4b7e-a7eb-37bcf9437846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8320115-b315-45e0-b05c-55781836dfc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cac472-8f63-4501-b0c8-0a824c49a0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466602ca-6428-4e63-9e6a-aa2ab220cfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f1ebe8-0106-489f-ae99-373a0d0eba63",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb59001-2750-40b6-b556-0bacb08f126e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63fd25f0-7ce9-4bcb-9773-434d267af946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35261356-b8bc-443f-885f-38871c33be43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a768b5-3e12-4925-af23-39658d3d5766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72210be8-425c-480d-aac2-178a9f3b01ce",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea441fb-2ab1-4ebd-8e00-831ad98dcbb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cf34018-8a7c-4069-98de-83261afdf9ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0551d8e0-a826-4158-9b6a-f0b3c35a7f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bee8542-ead7-4a02-b02e-bae3ac380ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a779ced5-0818-440c-919d-89dc29f3be35",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9449acd2-4850-4fd9-b21d-b211006ffd03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f63299c-fb2b-4986-99ed-ae1ff0a1de7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e64589-fdcb-49f1-8ff0-b39de3afb5f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8841891a-df57-4971-9f54-ed141f3c17aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1145489-cb1c-474c-b80a-f55a4853dad8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038f9091-d14b-481b-a4fc-ec31e5df4c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696551c1-ccf5-46c6-afdc-7ea3221d437c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4b7e1a-d278-4478-a5d9-d68872fc54de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c6168cb-bee8-4450-9ffa-fa595a2b811f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2af837-a6cb-4378-8795-9a958957364c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a72fa3-9f46-4713-8275-5f7b9964c8ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ea44541-f386-4e5c-98ec-bd05f28c8583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72fb589-aa82-4b6e-b136-96a53d2d8b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898b0ef4-af12-4a9f-8cb5-29c7971c0b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9051a104-82f7-439b-9228-6955fc577034",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd510c9-4910-4a50-bf6e-6a9db62cb1fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbacc325-ea31-4833-ae10-d40169292b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8969a8d-eedc-4210-9e6a-f34694a9a64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183bb818-d311-4667-91c9-6274e9896447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb9b1f0-3102-4dfa-97a4-077c960c1ec0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f7c4b8-12fb-48ff-a39e-f48d2debdb1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "211ccd48-321f-447c-931f-cc25f5cfa77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0856289d-a501-45cf-b003-d76a5c707769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6ce9d3-2fb6-423b-8bfd-55dab9e49b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6194d4fe-6b69-48d7-863c-f9a0463da73e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8910e08d-ae0a-4d28-8cdd-4fb1a9a17266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a916b96-9d79-4ef9-8e24-2e8616e6f584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50775b07-166b-46f4-b1a8-5f8fc9ef44a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a5d71b-4b70-4e58-ae55-a4647ec80880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34b21cb-1438-4a9c-b58a-ab1fdda34d90",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e90f15-3180-4717-bb35-1fbd5432cb07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4a0b257-149b-43c7-976e-1788f87fcd18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad3851d-48e8-446e-a0b4-13f31738ed49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7a9609-29cb-4f18-8908-f044b9faca20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8ffc1c-dd50-4ef7-8286-44f50bff9676",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3572db0-00af-48df-8e0e-8b354cd8f2f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299e21a9-f99d-46d3-af23-4fda2a557427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69321480-e707-4899-ac11-cecfc015f56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb1c628-eb8e-41f3-90d8-b6aa7845bc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25059ffe-7ac8-4f1c-a24f-5c24002ae4bd",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf94acba-8385-49ed-84db-5bc767f05a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "842fedfb-f9c7-45e5-8c6a-5eff34d1b727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2344a27-3b6a-4d81-aa91-b7cb4722e61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3e2da7-9d0f-4643-a9e8-e8105d7ff003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbe56be-d425-4ef7-a377-b009275214f3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be37a120-da7e-459e-81b6-b9de3448b382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7428d055-425f-4257-b670-204c521a10b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b5f3e9-e313-43c3-86a4-382423efb1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8683f3bb-0724-4acc-9587-f15042717e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928fb417-ed86-47f9-af69-2f669a9f4786",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5caf11-2213-4fea-9ae4-740f7150c372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cffb6131-d718-4705-9303-e2421ab11699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab81a33e-928b-43e3-8c37-1349cff668b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5675702b-398f-41f6-a689-5425a2000009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5bb4ba-fa68-4ec0-8a02-f9d46863a5d6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a63a10-3d0d-4e43-852f-fb28f244b1e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df34474-d42a-49bf-9724-e27a6314021f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87281cb8-79f5-4bf0-b71e-a73b01e3760e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09155a36-c10a-4b31-99f2-ce8dccf0c984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686b61b1-6a2b-4285-a42f-720571a7cc8f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633628d9-aa9f-4307-bb02-3ea76faa5191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5189600-0684-462b-a18c-f847ed4185c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59613e4f-e10c-4615-a32c-da1751b283db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e749e7-4d8e-43bb-9e7f-79349afc1724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed696fa7-fc12-4fc4-bded-aa58897febbc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f13c278-cab2-4376-a288-22045b827ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92ab11f7-d1da-4ab9-95e3-d87e3beb6a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf6397a-6f07-45b2-8781-f55d568d6c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87f8545-d620-474f-aa15-523451a36878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3d5766-6c90-43b6-9171-0a53c8512827",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2b8a62-18a8-4284-b5c8-364f8106a22b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84ed4987-1b09-479f-b635-30d25d1e1dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1826509-d04b-4c4a-86a9-5decd5acc64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7caeff-f45e-4212-80f5-e1634df8e503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110d219d-c7fa-42f2-bf1d-71b29183d232",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38a85ab-8811-49bd-972c-5abdefea58a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70fa8dfc-13d3-49eb-b771-5326e2f5ffbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87d18f0-37ad-4a8a-b8f2-467ecefe1e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614a3a76-b1cd-440b-a9bd-22a9fbed0a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf8fd96-9ae4-41e3-af37-5f723dc64a71",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f52265b-1ab8-4f76-bc09-51ef379ca62e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "291916fe-e02f-4249-8f0c-0f7aa2310152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3ffbdf-6f8e-41a0-8bea-c1ab84dab46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9250bc19-7964-4f11-a28a-dd48c06668e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38dbafe-f013-4bbc-bf23-819b47e32ca9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c505bb84-fd4e-4fea-9e86-baa50149a505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2849e30-cc15-4f31-aefb-52858fdb6f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d44aed-2f1d-442a-a666-0fb8cfec22d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19a2038-2101-4a2e-816b-a96fd446c827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4edf03-45a9-424c-ba92-308f17e20a06",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba23c98-a569-4155-b098-534afdeedc29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e40aaf0-a520-422d-a830-ff2065465ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0aa440-c05f-4abb-a6d5-14f2bab23581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6d2d38-4c05-41b1-a528-5f61322bccdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac9d6df-5b21-4b43-81c8-f772c3781953",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fc4afd-2af6-473d-92c5-95e769d64a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e47b3e-13d9-46e4-96b4-c64391c1f88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adfd599-a9f5-469f-a1f0-dc9049ef1742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6731aa-c96f-40e2-b04a-92cd8959bc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc673dc-9230-40a6-b3e7-aa0b4f6a3a5f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686cc55e-b68b-4ce6-ad52-b564c7925802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9966756d-c744-4565-a2ab-48a6ed3ca1e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850b980e-47bb-41eb-bb42-0ed49879a525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a81181-9e30-432c-9be8-85006c22cda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f058401a-3cc7-4513-8d3f-d53ee7f6df67",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ffdecb-099d-4c7e-8f15-e8780f45a826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f58b772-0fee-408b-a8c3-1ed2b5332ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40c0d5f-6d10-46b0-babe-c66260d3884d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29973de9-4556-4e38-b171-aae701c5b3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92b705b-7fd2-43b0-bd29-b2ce7f986d72",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7b5e4c-c059-4e33-b442-604cf1a1f455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2a94a90-7b69-40c8-9b5e-6ef3681376f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba5ed45-1fe5-4c15-a148-ee9c058a0d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7eb41e-021c-4060-bf21-b410b6cb6973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7aca932-60f7-4fa9-9fc9-6fac6f37de60",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0ab41d-d13d-420a-938c-4f73976688a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc10f71f-66a4-4ea4-ad30-ec4e0ae2cf43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2135d4e8-2c05-47b1-8779-a3b67082f11a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec6ced2-ff7c-418a-b815-4e9f6265bf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880f01a1-9ecb-4348-ad47-34a02e1bd44b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b0dc7a-95b1-44c9-a139-d5223acc513f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee68ee7f-01ed-4bd8-bbf4-0460f2f4cc5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048a5efb-c499-4867-b42c-ca6a259b263d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f57e7f-d400-4ac6-857b-3c0604c524fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3751db9b-310a-40bc-b216-89719ce2d7dc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7312235e-201a-40e9-8dd8-40c4bf516a27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ccce0aa-d3d9-436c-9c1d-4aa50dcf5a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f04d0a5-f8c8-43e4-83e8-41d2f3529cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27407a0-5a85-445d-8ca9-c3f455129aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab4ebd7-a267-4e93-afe9-4d0d9113da29",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3332eb46-412a-4c04-9430-870b54cc1368",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbc61fe2-c746-4fe2-be57-c3f41b045d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bde32d-dc69-4428-860e-2cefad40a9ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81500b09-e263-4be7-89a7-02fdace86e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8da44f1-4c47-4012-887f-dae0cc5e551b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f666f5dd-af58-44e2-bc1e-ee418f7ddfdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8473b467-07c5-41ac-816e-25e6ed3f5d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce956b6-68e8-4998-927f-496f5ad3be20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fe0ca6-2353-4e4f-b138-258143e4cdbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a44bf0-06d8-4bbb-a282-3e7d51689e3a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4643b44-2a5b-4f17-8bd9-3e52b7efb5d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c0de23-3cb0-4316-a4d4-fdf1516acbf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0087ee94-29fa-4a4c-b7b5-2562814f6b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c0554e-5487-48db-a24a-46653a886967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d72596-8f82-4711-a911-4f19cc7d93cd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feca8658-e69d-49d7-8ee8-fd5e58552dc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "266cf0a3-a801-406a-b28e-ec33a65203dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bde284-3cee-4218-8fbb-b16c66910edd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778d0691-0c75-4faa-a83d-a21a62d4f797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb0c02e-fde6-4e98-b4d0-cd4a9a8ba701",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07aaf59a-7996-4b67-a67f-cfd99587715f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5534ee9c-4498-4e3d-9550-e4c200c3901a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e98d43-8931-4cc3-9365-ec7e512676ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b568365-ade6-47ae-9ff7-56261a141d28"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d48c9ffa-a2ca-4a76-977a-736b1921a245",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb4ba86d-9c03-4eb8-9d6f-dcdd7d2914cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91948540-d5b5-4db9-8250-74479c4c6336",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10abee03-05ad-4de4-84a8-2be56c36dc9e"
                    }
                  }
                ]
              },
              {
                "id": "7fcd9d30-bdbe-4c77-b63e-b24ae32572f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa91fb29-6f0d-4b35-986b-50bf12e64d6d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72cb09d-cd78-4a7c-9870-b53fc4e15e34",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a60417fa-6bd1-4bd8-ad29-c727d628139b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d183bdf-8967-4d9f-99bc-7cea37abd962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dec84eaa-0632-4fae-852a-f1e4356b776c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6ac5af-3ffc-4938-9fb1-c004e823516b",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4698931-b393-4e3b-9f4c-bdb0e592bc25",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cd5a8c4c-0a6d-43ab-ae4c-94e17e419ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79070765-c768-4859-8805-ed7614a1febf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17802160-81d8-499e-8635-748ffae62acf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "743df264-6aa8-4111-a2ec-3be56ba06b27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bda77f24-faa1-4230-b5b2-6e5a20414525"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64ebdc07-c802-4bb6-992a-4e4fe86516c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cef4110-d2b8-4aa6-b308-4cf1d59cdec2"
                    }
                  }
                ]
              },
              {
                "id": "8761491e-26b2-413e-ac10-e2defdc262ac",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "25b4cfeb-3898-4a34-ad10-5dba98e8064b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95dd811-56a3-41ab-9916-6936a1985b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ab9deabc-366e-47f8-a0b9-959a9761da22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d33ced7-933f-4768-a8be-3bbdea8340f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b3f588-e559-4482-9d2f-904d4c5cfff5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1b0f51dd-ecb2-466a-b011-ef5b79947105",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a4f6340-a4c4-452c-b777-e0892a4b06f0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3316853f-3e25-41e0-8baa-3236fdb62368",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b3a7612c-25df-44eb-a573-13a5c79dd398"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a9c516a-9b68-40dc-a4a6-e2350d3b2ed1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b35fe4c-e4a8-4bd5-ac43-ed5170ee94d5"
                    }
                  }
                ]
              },
              {
                "id": "32b2f39a-fa02-40f1-b02b-07f4227b8d98",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "295434d7-b03b-43af-9e7e-cc185b01abc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "410f932f-7713-45c2-af77-5cb3c0e29634"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9343864-7482-45e6-9c9a-2e1be4b5f689",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26941fcc-474e-4109-8f0e-6f2d8b2490ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49f825e5-61a2-468c-8e3a-440ba7355756",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a1ec7be2-e23f-4e21-aa14-35449cd5e450"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ce7acd4-9b1e-48f9-ad69-27510e74038b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e093c29c-0e21-48d9-9a92-26c5e8656c47"
            }
          }
        ]
      },
      {
        "id": "87d638db-deca-48a3-ba54-d85e191dad6a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9446b294-3abe-43ba-bc9f-e7a9f5ef489b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4b7ed05-14cd-44d9-9318-b3ef7f9e4bdf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3fc1cdb0-4b7e-47fd-a305-a704962bd42c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314ad2c8-3260-48f8-bfdd-49ad22b6c1fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "699ff266-e05e-43b4-acbf-27ee1facbffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccec0ab-5254-4193-a8ae-a729a35943f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40f376ef-9864-43d9-8ccf-0f9da19757fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0e0f87-d150-484f-8504-087061108aa6",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9209713-1211-4760-90b4-01a15be181e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8f66e2a9-54fa-469d-9fb8-254a5594cbfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e3f08a-24a0-46c3-a0ae-8b447acd8f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "030eb989-6903-4195-8510-53d8655a36d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7760c749-2d55-4163-8605-537b71452f0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f828915-ea32-4551-aa76-2ab6d0c3355c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a7eb512-9501-41d8-8906-8a022f1f8d15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7a7736c-db16-48a9-91d2-cd4903f4c4b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c2ce115-ffea-424e-a5ef-a3de70e55e32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0130db64-8c98-4839-b9c1-a58d1f35deaf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f17e8bd-4c04-4acb-b223-f38532cfc6dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bd41263-cecf-48a4-8149-1fc8007cc571"
            }
          }
        ]
      },
      {
        "id": "543f1f81-c866-4496-84d5-df7b31863bd1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6c789e31-a691-4ffb-9f67-032dad43504a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02d5336e-1ca0-49ee-b663-cdbd920d9c89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "256b8bd1-daad-4552-95fd-07ff1ffa985d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9a03aa-aa2b-46ba-9530-9bce001f99a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6769d3c8-a82f-4ee9-b0ee-eefa34bcc354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561f0ce8-c97a-431f-be41-2b7825dbfa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e08849ce-ed1a-469e-a8f3-613fe2f52755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eed3ddd-15d5-499e-aef5-9cbeeca0534b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5683151-90ad-446a-ace2-11fe8781984a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6a22898f-3a1f-4d13-a53e-3d3fddd81993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ef3ff0-c821-4607-a532-1a71a6d66cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45bddab7-a425-4ddc-b953-52b15477d8b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "372d4b6a-80f8-4c94-90b4-543771350ee8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f80c22f-c39e-4181-b202-813a426c5550"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0599e9d-45b3-44bc-bc8c-c26297449263",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79f9f4f7-db8f-4f02-895e-f098a49935a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d44f5e1-1297-4e79-88f5-95cf6414f274",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0b67cd97-6f9c-461c-b31d-518e2dab5152"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43f54a45-bed8-402a-add2-9b25ff48c71d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f9177c5-064d-4557-ade4-8973fc65eedf"
            }
          }
        ]
      },
      {
        "id": "fd7d3313-19ba-46be-913c-2940bc0b9104",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "30c3ef71-bba4-4ee2-a595-105c56927fe4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47550d2b-24f3-41a4-8258-8c753583747d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d386ce6-cdd8-4c48-be93-bc0c0286f160",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35789287-5b79-452e-a934-f2123814fc30",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00283f19-0c54-41eb-9e11-4293a3d9d682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85186f5-565d-447b-b4af-47d5b6a782b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "163a52c5-5331-4bf7-b9a5-2c87cfedad23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70853b0-9da1-4312-9773-8b12b23ac158",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9eebbd-3ce1-4b89-a886-813badcf548d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b4126715-7174-4862-bdbb-9d166e732c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62baf844-250a-4cd9-982f-8fb51fc63c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d9515ea-2349-485b-87e4-820c9674c14f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5c4a902-5c5f-4c67-9306-e051d89a25d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2025c76-dcc2-445c-89e8-18189ca921c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2861502-37e6-46ef-902f-ce857e6fb15c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d79622fc-4da9-402d-9dc3-0e481d2243a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e78e3f1d-e549-4834-81d7-cc780dc975e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "72cbb87c-e53c-49cf-9617-0894f636e96e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3425d49-08d3-4fdf-a671-acac9e5e8db1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "775ce521-68f0-4341-ad49-5451caa6c442"
            }
          }
        ]
      },
      {
        "id": "69826adc-9bef-4e5e-8689-a6e49b4797b1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ba9c981-1f38-4c81-b952-67a46305e934",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d4bcea0-078e-422e-ae30-e3b75bd5ad7d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b8aefd53-e6ed-45e5-ac42-57ee8e9323ee",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a535dde7-c2e5-4354-a44d-e5e16353c69c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3a1e180-8421-4370-906b-c29bc9022dcf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 71.20000000000002,
      "responseMin": 8,
      "responseMax": 260,
      "responseSd": 30.23177136722228,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682901528275,
      "completed": 1682901560299
    },
    "executions": [
      {
        "id": "de83b8e1-1f89-4178-bdef-08f41465f19b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "401a5f8d-3b92-4e90-99ca-6eb09845fb08",
          "httpRequestId": "9a83ced9-9409-4912-88f0-c88acdb0d64d"
        },
        "item": {
          "id": "de83b8e1-1f89-4178-bdef-08f41465f19b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a37782c9-d42a-401b-ae38-bdc8dc59e2c6",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "a70d4b52-4d1b-4a28-8171-7e78af6551c7",
        "cursor": {
          "ref": "3617a816-63e0-4fad-9d07-4628a1ec6dc9",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9480b8b4-d543-449d-a3f6-cb17ca8ff7a8"
        },
        "item": {
          "id": "a70d4b52-4d1b-4a28-8171-7e78af6551c7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "47dc7877-df9f-4d7d-abd4-138abcd5a1b6",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "2613bbaa-882d-42f2-9b9d-e1b441b03d17",
        "cursor": {
          "ref": "56ea559d-2ace-42f3-9113-5d76f23da150",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "65567521-ba6a-4c69-bfb9-12073b0e6078"
        },
        "item": {
          "id": "2613bbaa-882d-42f2-9b9d-e1b441b03d17",
          "name": "did_json"
        },
        "response": {
          "id": "0a9396c8-5188-4270-8586-5dea722a0af0",
          "status": "OK",
          "code": 200,
          "responseTime": 242,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feccac7-b0de-4d68-9e96-13e066f388d5",
        "cursor": {
          "ref": "b078f6c4-e6b0-4c40-b847-e8737e325278",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "acdeb025-b8e3-4f42-9498-973b74ccbcfd"
        },
        "item": {
          "id": "3feccac7-b0de-4d68-9e96-13e066f388d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "d22cb3c2-3a55-41c3-9d89-0832bdd61786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feccac7-b0de-4d68-9e96-13e066f388d5",
        "cursor": {
          "ref": "b078f6c4-e6b0-4c40-b847-e8737e325278",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "acdeb025-b8e3-4f42-9498-973b74ccbcfd"
        },
        "item": {
          "id": "3feccac7-b0de-4d68-9e96-13e066f388d5",
          "name": "did:invalid"
        },
        "response": {
          "id": "d22cb3c2-3a55-41c3-9d89-0832bdd61786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5e43a3-49a1-4018-8c18-eab51e983975",
        "cursor": {
          "ref": "ff625e5b-022c-49ee-8b12-6591cf96f3bb",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "96c356db-02e7-4454-9382-782883fc8fdf"
        },
        "item": {
          "id": "1a5e43a3-49a1-4018-8c18-eab51e983975",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "be0493a2-1b18-4e4a-aa9d-1b83c242620f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 157,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2e8f91-0dbc-489b-8a0d-44f1c8a382ec",
        "cursor": {
          "ref": "894580ee-5d90-43a1-a126-75cba8a718ec",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "99a2249b-f994-4c56-b3a1-da0c0d0bd37a"
        },
        "item": {
          "id": "bf2e8f91-0dbc-489b-8a0d-44f1c8a382ec",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1b6a2e63-4374-42f2-b487-29ada02576a7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a52dad-5370-45a4-a8fa-61fc95ace301",
        "cursor": {
          "ref": "27b69697-8415-4194-b0db-003a18d921af",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "49d0850c-db8d-4d74-9568-803e4a355938"
        },
        "item": {
          "id": "d4a52dad-5370-45a4-a8fa-61fc95ace301",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "77812817-ca12-40ba-8b15-ecb70ba3c363",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bbc359-ec62-481b-836e-dab2b98c8ef4",
        "cursor": {
          "ref": "86c8b6f8-3bf7-45d8-9bac-3f0c2f50c9c4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d6d490f7-1b94-48f1-8bc3-2525ed1021a3"
        },
        "item": {
          "id": "b0bbc359-ec62-481b-836e-dab2b98c8ef4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "31336b1d-0cda-45e9-b7f2-057a0fb2e4b8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bbc359-ec62-481b-836e-dab2b98c8ef4",
        "cursor": {
          "ref": "86c8b6f8-3bf7-45d8-9bac-3f0c2f50c9c4",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d6d490f7-1b94-48f1-8bc3-2525ed1021a3"
        },
        "item": {
          "id": "b0bbc359-ec62-481b-836e-dab2b98c8ef4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "31336b1d-0cda-45e9-b7f2-057a0fb2e4b8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a5d4be-259c-4ce9-a39b-fa7be3584f2e",
        "cursor": {
          "ref": "66698787-0e5d-485c-bf7c-70216fb4fcbc",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0974fb58-1180-45d9-8aad-24d90ac36841"
        },
        "item": {
          "id": "28a5d4be-259c-4ce9-a39b-fa7be3584f2e",
          "name": "identifiers"
        },
        "response": {
          "id": "82128dbf-1fea-4f0c-9766-457127241963",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce83bce2-1a23-4314-9e97-dc33f1b498ca",
        "cursor": {
          "ref": "a9a67a43-56d9-46c5-a414-77dd092f8526",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "aac3b304-38d2-4736-a42c-da4c562e4c2b"
        },
        "item": {
          "id": "ce83bce2-1a23-4314-9e97-dc33f1b498ca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d3ebbbd0-c410-45eb-aaff-12f7618026a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce83bce2-1a23-4314-9e97-dc33f1b498ca",
        "cursor": {
          "ref": "a9a67a43-56d9-46c5-a414-77dd092f8526",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "aac3b304-38d2-4736-a42c-da4c562e4c2b"
        },
        "item": {
          "id": "ce83bce2-1a23-4314-9e97-dc33f1b498ca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d3ebbbd0-c410-45eb-aaff-12f7618026a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d25a8b7-8b18-47bc-8f03-0e8f8b7225ed",
        "cursor": {
          "ref": "ff1efca1-aa04-4436-9cd5-2473e88908ee",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "813c9b7b-3651-4aa6-9304-b390c04208bb"
        },
        "item": {
          "id": "5d25a8b7-8b18-47bc-8f03-0e8f8b7225ed",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7d421965-dcc4-4e74-8937-895a234a1ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af6a962-6961-4464-a6f9-6891d2e562d3",
        "cursor": {
          "ref": "f681d2ec-b24e-4406-bccd-92d6deb3b03e",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ca92677b-07cb-4c54-b0fc-7b94d0a9eec3"
        },
        "item": {
          "id": "9af6a962-6961-4464-a6f9-6891d2e562d3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "61e0c8ec-0f60-4147-8009-3f8a5794c127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e005cd01-eff1-4756-b319-3d0d8c74e192",
        "cursor": {
          "ref": "31e1e9eb-1a22-4027-a992-96f97284cb41",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2160ccb2-5100-4204-8a85-1ac6bed26aba"
        },
        "item": {
          "id": "e005cd01-eff1-4756-b319-3d0d8c74e192",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1a1438fa-eda8-4cc8-93dc-6a601615dd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14073d61-76ce-4d61-a067-ddb273d05c6f",
        "cursor": {
          "ref": "b22b61c3-aa05-4619-8259-fed911515644",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5c8a3771-baa4-488f-a61c-67b7172bddbc"
        },
        "item": {
          "id": "14073d61-76ce-4d61-a067-ddb273d05c6f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9cd35e3a-6b6e-433f-b471-b708f02d7f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ef03e8-9329-4209-b471-8317663877fd",
        "cursor": {
          "ref": "8dc0891d-9949-4e9b-9406-3a8a5b6fd35d",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6eda4fc8-764e-4ce8-bd01-bdc8d4b9574d"
        },
        "item": {
          "id": "16ef03e8-9329-4209-b471-8317663877fd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "59bdaf5a-2867-4fb1-a977-e5e287a67485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e71a5e-6ddf-4d57-a691-716c5dc9b847",
        "cursor": {
          "ref": "6e624874-90eb-4b2e-8af8-a0517634843f",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "10fd5070-c101-4be0-8449-fd3a5d1aa320"
        },
        "item": {
          "id": "d0e71a5e-6ddf-4d57-a691-716c5dc9b847",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a3cc789b-f28e-4d6f-b36a-edc4939ad284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2876ff28-20dd-46f2-b41e-2d238481a78a",
        "cursor": {
          "ref": "80b3bdea-4497-4c68-a5ae-e32ed9ee5228",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "955eb66c-3c10-4e9f-98b6-33c1d8b3657e"
        },
        "item": {
          "id": "2876ff28-20dd-46f2-b41e-2d238481a78a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2d454885-c155-4009-b035-4c4b0e6834b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94cdb2c-88ab-42dc-ae29-ffa414ceaf75",
        "cursor": {
          "ref": "b87e463c-0951-4e38-a69b-1321b34f663c",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b65ab33c-5a62-4f94-b2ec-3f9de34640db"
        },
        "item": {
          "id": "d94cdb2c-88ab-42dc-ae29-ffa414ceaf75",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dc7bc1e4-74c2-4123-848c-1a5b02cf8146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1d55c3-a2a2-4e2a-a88e-23bfcbbd62aa",
        "cursor": {
          "ref": "458400d0-14c0-428c-a94a-0ce3fb7a6b6a",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6bf5ebbf-1af5-48d1-b727-a0168873c6dd"
        },
        "item": {
          "id": "1c1d55c3-a2a2-4e2a-a88e-23bfcbbd62aa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7423068d-f043-464b-9f39-23ddd7c3329f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14af0257-e0a2-4b7a-9bcb-ef326ca23dc0",
        "cursor": {
          "ref": "57dc7bbd-01b4-4009-8400-0e307d4d9220",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1edef15b-543a-424e-ab1a-c3233835f479"
        },
        "item": {
          "id": "14af0257-e0a2-4b7a-9bcb-ef326ca23dc0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "18a3e600-2d2f-4829-8b29-101b1cf104db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346118c1-aeef-48e9-a115-4f2e8a066967",
        "cursor": {
          "ref": "0418368b-d7ae-4790-9f7c-914d78ca0339",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2622e3f2-8b1c-4403-b32a-691ad98ad4d2"
        },
        "item": {
          "id": "346118c1-aeef-48e9-a115-4f2e8a066967",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "404c3cd2-7349-4d04-b46f-6c9d5ada954a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73352e77-9b49-4943-b679-a8c8f5894c6b",
        "cursor": {
          "ref": "14d7f663-780d-435b-ac9e-925a8139401c",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5c1100ec-d9b4-4a6d-94ac-af9ea47df2a0"
        },
        "item": {
          "id": "73352e77-9b49-4943-b679-a8c8f5894c6b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "30c67d21-4787-4ed9-8981-07f7c1e8664d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3e97d2-cd0d-4887-bd72-df656af7ee22",
        "cursor": {
          "ref": "6b2b4078-ccf4-4f52-8941-d93da3125cf4",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f4e80d34-3cb9-4c07-aff2-aa0cbd890609"
        },
        "item": {
          "id": "2d3e97d2-cd0d-4887-bd72-df656af7ee22",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0ef07fa1-8365-4fce-a219-df2021e358d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41d9b1d-5b37-4138-96bf-57e1ed297ff7",
        "cursor": {
          "ref": "f43b3965-1de7-44cb-a5d7-21eabb180579",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "08ef7bce-21f6-4082-9fc0-77a25b4fcd2d"
        },
        "item": {
          "id": "b41d9b1d-5b37-4138-96bf-57e1ed297ff7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "928000cb-9aa4-4484-bb17-4bc8738dae15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4525cba-287e-4a53-a439-68b261db0fa9",
        "cursor": {
          "ref": "0e47272c-1715-459f-a33a-8447b9f680a2",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8c089149-3d89-4b00-82ef-c51f7fc32ec2"
        },
        "item": {
          "id": "a4525cba-287e-4a53-a439-68b261db0fa9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e988d5b2-21ca-4f80-8d4d-e8946739d588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85c7989-15ab-4bf5-9219-cca3b968e407",
        "cursor": {
          "ref": "5a8017d9-f635-4124-8462-bc89ed3f436d",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4fddcc38-9451-4cbc-baac-e6fe064dfa54"
        },
        "item": {
          "id": "f85c7989-15ab-4bf5-9219-cca3b968e407",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "03b67e99-dafa-42f4-b283-bbbc71cbba7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadc8868-de28-484f-84a9-072f0b2c59d5",
        "cursor": {
          "ref": "d81ef25a-61de-4e48-a8a0-93f62f3a7049",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d2b69af6-0ea7-4c16-8790-077432737cee"
        },
        "item": {
          "id": "cadc8868-de28-484f-84a9-072f0b2c59d5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4b26d7f9-b34f-4524-b8d4-767e26c19778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7caf75-c146-4f65-a695-1f58e12504cc",
        "cursor": {
          "ref": "6c48c14f-5010-4cc7-8dc0-80cca99b14f3",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "db00c198-0008-4011-8435-217f621d7547"
        },
        "item": {
          "id": "dc7caf75-c146-4f65-a695-1f58e12504cc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "144a62ce-9c6b-4544-9472-4a0f928e649f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834cda59-cc89-4bab-a649-ab2992d661b9",
        "cursor": {
          "ref": "46739043-8ac9-40e1-a06a-eb67bcf6e53f",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4f628288-a59c-476a-9277-92bc4f67f288"
        },
        "item": {
          "id": "834cda59-cc89-4bab-a649-ab2992d661b9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4c135ebf-2f1b-4584-af4d-2d142b8fc3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865954e5-2cfb-49f1-95bb-01882da1a330",
        "cursor": {
          "ref": "14d272d3-0fb7-44e0-a00e-2f2b6ffc0f9e",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dda9a64c-ef1e-4b00-abb7-1d1f304a54bd"
        },
        "item": {
          "id": "865954e5-2cfb-49f1-95bb-01882da1a330",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a32aba8b-968d-4142-bbad-64793b2413e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef898f59-0009-4196-b94a-b78fdda7acdc",
        "cursor": {
          "ref": "e5f6d551-2e13-4708-8f0f-8e130bbd65d1",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "01c5c111-0a83-441d-a763-42739fdd2c1c"
        },
        "item": {
          "id": "ef898f59-0009-4196-b94a-b78fdda7acdc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c13a67fa-c061-48eb-8860-0cad78506a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5156fd-57a6-4369-90a7-560259432d02",
        "cursor": {
          "ref": "12126498-c1ef-4deb-97bb-b125011222bc",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4719101d-4731-44af-87c5-c8ad099cc486"
        },
        "item": {
          "id": "3a5156fd-57a6-4369-90a7-560259432d02",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a70f043d-575e-4d3c-a06f-9dacb00e81c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcbf56a-c6c8-493a-9248-4393d035f80f",
        "cursor": {
          "ref": "a5eeb563-8b02-40e6-b542-22ee50a872cb",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5d552a5d-c192-4006-a058-ce2e4ed5fa7c"
        },
        "item": {
          "id": "dfcbf56a-c6c8-493a-9248-4393d035f80f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9106b0ab-bdd8-4d5a-801a-6da8c4072286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee43393-ba70-4261-91f0-0596fb43b41d",
        "cursor": {
          "ref": "15f951ad-2b4f-46ef-babd-17d201b72b10",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b8aec9cd-b6e1-47c9-be9b-b9925f1a702e"
        },
        "item": {
          "id": "0ee43393-ba70-4261-91f0-0596fb43b41d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "37d823ae-33db-4a33-83ad-7646fbe90073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc10da36-1269-43a7-9f53-3395a627c48c",
        "cursor": {
          "ref": "2ecb3577-1bae-4a41-ae83-ac058604d2d2",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "673740b8-81ab-4913-a71e-12627be6c239"
        },
        "item": {
          "id": "fc10da36-1269-43a7-9f53-3395a627c48c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "21686385-044d-4d50-9886-534fd781424f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b067a98-9e79-48a1-8a14-ab9f0d04cbef",
        "cursor": {
          "ref": "2f8da4db-57df-4339-a805-506cf7c81f9d",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5171b01f-3347-4c7f-b291-5b6272022f05"
        },
        "item": {
          "id": "4b067a98-9e79-48a1-8a14-ab9f0d04cbef",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "aefa3980-9c99-4970-8774-ae6316277c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2b8030-67c8-4ecf-9609-35b15ff830ff",
        "cursor": {
          "ref": "08fc20e1-9ce4-432a-b958-be3daac85cc7",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ae9e617b-816f-42da-b49a-7e4dce759270"
        },
        "item": {
          "id": "2b2b8030-67c8-4ecf-9609-35b15ff830ff",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "03469ea2-d797-475f-8335-8a572e8d6282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d64793e-2b31-4674-b93a-30dbdc63768c",
        "cursor": {
          "ref": "5e0bc290-3753-4b1d-85cd-8688b81a017f",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5b769f5c-2d22-4a42-a60a-91a780df5fbb"
        },
        "item": {
          "id": "1d64793e-2b31-4674-b93a-30dbdc63768c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "69c9ce7b-fbfe-426c-83d8-ac2a51c311dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f178e3f-6a52-4f8c-b5b1-ae9d95bd6e6d",
        "cursor": {
          "ref": "3c0df37e-5f7b-4739-bfa6-de4e76949ba4",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1af902d6-4013-48cb-b864-15cb925cedaf"
        },
        "item": {
          "id": "2f178e3f-6a52-4f8c-b5b1-ae9d95bd6e6d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0cbaad52-2a4d-472c-ace6-e8f783671c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3626238c-ac50-45b5-9242-ef222fc6283d",
        "cursor": {
          "ref": "3645024e-0fb9-46f4-867e-68b4f578f699",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3653d0fe-0ff7-4de5-bb08-b12b8980982b"
        },
        "item": {
          "id": "3626238c-ac50-45b5-9242-ef222fc6283d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c059260c-e0e3-4024-8ef9-f7e29c0aa064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd691ca-2f7a-494b-a46f-c51be339b11a",
        "cursor": {
          "ref": "9d83f68e-cfae-4df7-aa8f-71f2e1de0063",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "933cb945-680c-411c-aec5-9adfce8698b8"
        },
        "item": {
          "id": "bdd691ca-2f7a-494b-a46f-c51be339b11a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1ca2584e-4a8e-493e-a2e3-f6f16c56f56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f365363a-d0dd-4dd5-9c9b-adfc3a8da685",
        "cursor": {
          "ref": "202c003b-5c3e-463f-95cf-268eda13947d",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ce4a2f09-5aec-48b1-ad87-d62f4633eee1"
        },
        "item": {
          "id": "f365363a-d0dd-4dd5-9c9b-adfc3a8da685",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fa5e2659-fbfb-49be-b404-911cf8739ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de81fefd-7129-4db7-85d3-a05e13254843",
        "cursor": {
          "ref": "7c92f33f-3d2e-42ae-83fb-8364eece404a",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "790483cd-9587-4cef-a58a-60e1bd6888d7"
        },
        "item": {
          "id": "de81fefd-7129-4db7-85d3-a05e13254843",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "46acde86-d424-4212-a49b-9984abfd02ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749fd53c-11ff-44d9-bd7a-14ecf7187692",
        "cursor": {
          "ref": "4ffebdc5-a200-48f6-9f7d-4618bffff823",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c26b5acf-28f4-4480-a6d1-7d7ef2dc86e0"
        },
        "item": {
          "id": "749fd53c-11ff-44d9-bd7a-14ecf7187692",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "78236099-d679-4b55-bee4-1e4bf1c752cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b931eb95-160a-4027-af30-838b0d592e9e",
        "cursor": {
          "ref": "b4f75ed0-0253-4566-910c-0e436eaf48be",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "55ace0ea-1d20-43fe-aede-6c890fbc60ad"
        },
        "item": {
          "id": "b931eb95-160a-4027-af30-838b0d592e9e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e57fa16e-52a0-441b-8fd2-3f951996d845",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748e12e4-053f-4185-88e4-1fef55b4fb24",
        "cursor": {
          "ref": "c4e23e65-a7cb-4d0e-ba91-d379471f2ef8",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0c09a4e5-aace-4e22-ba9f-e6d3b62b8c87"
        },
        "item": {
          "id": "748e12e4-053f-4185-88e4-1fef55b4fb24",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f84151a2-998b-4837-aa6b-80f1427d46a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0307c853-610c-4005-bc2e-2bf81e364ffe",
        "cursor": {
          "ref": "2f109df6-61e7-43f4-b5c2-15c27283f0b3",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0b3ce41d-c302-41b5-a78e-065cfeb01a74"
        },
        "item": {
          "id": "0307c853-610c-4005-bc2e-2bf81e364ffe",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c90c4556-1a14-4c53-b8a8-5107ed51e8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d154123b-2513-41b5-ad0b-1d8f0f63c93f",
        "cursor": {
          "ref": "71a3c011-a469-4845-88af-8eeb70689334",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ef6d488a-f71d-4e9c-9b8a-b5fb12cbeb3c"
        },
        "item": {
          "id": "d154123b-2513-41b5-ad0b-1d8f0f63c93f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "228c4954-5be1-47b7-9ca4-1314dd3ed25b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547457de-3f9a-4c70-9762-884f4769dfcf",
        "cursor": {
          "ref": "bcc994d3-778e-4f79-adee-2d22584e8013",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "1aecc6df-1b24-43f1-986f-feef8d9498b4"
        },
        "item": {
          "id": "547457de-3f9a-4c70-9762-884f4769dfcf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b9c430de-02e0-441f-9fa4-89f39896be93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6ad066-1111-42a9-9d07-44a2b446bfe0",
        "cursor": {
          "ref": "61a4dbe2-1637-4191-8a7d-9a2b49dded73",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f4768b55-6c55-4c22-973e-2c2b18796d30"
        },
        "item": {
          "id": "bb6ad066-1111-42a9-9d07-44a2b446bfe0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2b9d267f-bb83-48f2-8103-887d5d24e134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e71fac-6d4a-4cbb-9293-a1bad10c62f3",
        "cursor": {
          "ref": "437cecb6-c070-4dd7-92b4-2b90ebb1f8ca",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5fe1b314-0993-41df-ae42-bae49217c810"
        },
        "item": {
          "id": "28e71fac-6d4a-4cbb-9293-a1bad10c62f3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0eb6a52d-e7de-43c9-8ff8-3d6a42e55dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea416667-c05c-4229-9851-95842186bdb6",
        "cursor": {
          "ref": "80b9ffdc-1c0d-467c-9562-b24727728c39",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "572db99e-21a7-49a3-a8cd-8df8fd17d588"
        },
        "item": {
          "id": "ea416667-c05c-4229-9851-95842186bdb6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f87e279e-a2d7-4db7-877d-7e6b3a7246ec",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 75,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2e777b-58d6-4626-b228-f6ba158cb445",
        "cursor": {
          "ref": "49d5096a-ee9d-46e3-8523-5fcb48212678",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ca1a8e8e-20a8-4464-9632-272e1dbc8b63"
        },
        "item": {
          "id": "8c2e777b-58d6-4626-b228-f6ba158cb445",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6a2ca5df-5974-4440-953a-6eec5d498dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcec49dc-8c0b-42d0-aaa1-99b7a722fa4c",
        "cursor": {
          "ref": "9724f576-6c4c-4197-bb40-231aed4d29e2",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "863baf56-2e5a-46e8-bfd3-57da450d5256"
        },
        "item": {
          "id": "bcec49dc-8c0b-42d0-aaa1-99b7a722fa4c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "98bd01b0-80df-4bfd-b56e-14b5626d4477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b31a9e8-3710-4e66-b1f5-b9bc8471b053",
        "cursor": {
          "ref": "fa14019b-b7be-4c76-b30d-0838a616fab3",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8548e277-74f6-4c5c-a379-e6f03af45ab5"
        },
        "item": {
          "id": "8b31a9e8-3710-4e66-b1f5-b9bc8471b053",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0d8c53ad-b1a6-4901-b65f-f7ee008d9717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6ebb38-45bb-422b-ad0d-175518a4a8a5",
        "cursor": {
          "ref": "f58487af-e889-4329-ad7a-c18525793397",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a87f5c16-d215-44e7-993f-ce32061fa94d"
        },
        "item": {
          "id": "7f6ebb38-45bb-422b-ad0d-175518a4a8a5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7f2a4a4d-b7f0-4e6b-92d6-88fd3b541ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa78add-c11c-489c-890d-9c4fa37d7ffd",
        "cursor": {
          "ref": "d82fcc34-60e3-4a3f-8c17-37b4b73ea953",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4aaa1857-7c9d-4c46-8b3c-94996f4c946c"
        },
        "item": {
          "id": "7fa78add-c11c-489c-890d-9c4fa37d7ffd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "809d900a-9b12-4b96-9752-0158fa9403e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610ee9cf-5e65-47b9-9464-60eebc745f36",
        "cursor": {
          "ref": "6832646d-7ae8-4947-b24c-21e11b03d649",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "57416579-06ee-4e7b-9e9f-708f71ee42f4"
        },
        "item": {
          "id": "610ee9cf-5e65-47b9-9464-60eebc745f36",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "84ae7442-30d0-43a3-b7c3-804a607398ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3bd290-5ad5-4d16-9ae5-b5b36e59fbb7",
        "cursor": {
          "ref": "dee8de69-fd34-4042-a054-556a4bb00dc2",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8b1509f0-0284-43da-bf9b-594901dbf45c"
        },
        "item": {
          "id": "9b3bd290-5ad5-4d16-9ae5-b5b36e59fbb7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6b92fb3d-b31b-4890-b76a-fa98c188cba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a1faac-6b36-4e4a-aaa2-afe8ef99627e",
        "cursor": {
          "ref": "7b550e67-a60e-483d-b4de-7484d6837017",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "136674d6-7eb7-4b7b-b081-31c4f388c5c6"
        },
        "item": {
          "id": "b9a1faac-6b36-4e4a-aaa2-afe8ef99627e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "69fde5ef-869f-4fe5-98e3-b12167142ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311281e6-eca4-4bcb-8dc3-684ac7e54e71",
        "cursor": {
          "ref": "d70f2d58-8d45-46c4-8afb-6fe5f05eb55c",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a97dd053-bd9a-43a2-b4db-c260239ebbd4"
        },
        "item": {
          "id": "311281e6-eca4-4bcb-8dc3-684ac7e54e71",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bcc70150-6e6a-45d2-a35b-d9e6fd38ea74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fae82a-373d-4723-b8b1-79fa7e6ebd7e",
        "cursor": {
          "ref": "5562d427-737e-4fad-aa81-a8643126d7e8",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "79ce6c3f-68a2-4abd-b321-b7f455a0f1bf"
        },
        "item": {
          "id": "f8fae82a-373d-4723-b8b1-79fa7e6ebd7e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7fe7f303-1cc0-4e8c-a61c-761d278d5cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761c69da-7a85-4b98-8229-b9e6a1f4b580",
        "cursor": {
          "ref": "b36c5eb8-805c-4cba-9bab-fcfeab1f6c5a",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b79b365f-acd6-4c49-8e35-e3572099e3d9"
        },
        "item": {
          "id": "761c69da-7a85-4b98-8229-b9e6a1f4b580",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9ea372cd-99fa-411c-93a8-ef22d1feba64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b76aa53-7539-42fd-84ff-52fc1c6b9fc8",
        "cursor": {
          "ref": "193fd991-69d8-48c7-9728-fe5249c24368",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f2e8f51a-bf48-4326-831b-a6fab0bd7b50"
        },
        "item": {
          "id": "3b76aa53-7539-42fd-84ff-52fc1c6b9fc8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "295053a7-81cb-4f4e-b5e6-8635476855e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c20f05b-cafd-4989-9b4b-880368c11e8d",
        "cursor": {
          "ref": "a50da9d5-65c4-4b9b-b14d-bf31229266c4",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b331e492-fb73-4c19-8cd8-0074b292cadc"
        },
        "item": {
          "id": "1c20f05b-cafd-4989-9b4b-880368c11e8d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a110b1da-6756-463f-99c3-ffe5f1ce3e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcba2400-811e-4424-9e6e-ee9f546802db",
        "cursor": {
          "ref": "27674c56-9187-4e25-8d69-7bce5e595ed8",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e43c939c-0ac2-4452-8346-eaec734e8176"
        },
        "item": {
          "id": "dcba2400-811e-4424-9e6e-ee9f546802db",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8b6a1f45-748a-44dc-a18f-4ed138576270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00700513-5f8e-4c50-b1db-f9678eeab507",
        "cursor": {
          "ref": "36d33ea6-0400-457e-a870-b4e8e82d21d3",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b5c26bdb-6596-45e3-b3ef-881157edeea7"
        },
        "item": {
          "id": "00700513-5f8e-4c50-b1db-f9678eeab507",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7a1324a7-f994-4e77-ae22-318a70c5c7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c5dd44-3709-4c6f-8313-e44624cc4cd9",
        "cursor": {
          "ref": "2d2761b6-bc8c-4e61-8731-ff2654dae75f",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f0e1cf93-245e-45f3-9101-24ce6fe16acb"
        },
        "item": {
          "id": "39c5dd44-3709-4c6f-8313-e44624cc4cd9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "23ecffc3-dffb-4960-87ea-fd2dbd6908fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6244ea99-072b-4bb6-bb8f-0909e1c89a1b",
        "cursor": {
          "ref": "4d22af06-a5aa-4807-926a-2623bebcc36d",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a6ca27de-e875-434e-9dd6-3d8de84e04af"
        },
        "item": {
          "id": "6244ea99-072b-4bb6-bb8f-0909e1c89a1b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "96975d04-c058-492f-b7f3-c3d6e3d24103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69395c5f-d656-4c6f-8e7b-86bb2ae2ddd6",
        "cursor": {
          "ref": "bc92cadb-4889-4548-8fa5-1de687cd1ac3",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dc77a526-527a-45e8-ae75-a92f12d60f81"
        },
        "item": {
          "id": "69395c5f-d656-4c6f-8e7b-86bb2ae2ddd6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "05fe70aa-e87f-41b3-972f-f5fbe35848b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feccd6c6-3c98-418b-a3fc-39a09dc7b6aa",
        "cursor": {
          "ref": "beefb59a-e628-4b0e-b16f-a15ec3705928",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ad0cdc0e-f908-4c74-975f-a61eb25c2af3"
        },
        "item": {
          "id": "feccd6c6-3c98-418b-a3fc-39a09dc7b6aa",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dea6e242-91fa-44d7-9e2c-78cb06c56158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fb49b3-00c0-46e1-8b59-91ea7377eade",
        "cursor": {
          "ref": "8dff6b71-6c72-4bf7-95c9-7c3f83ae31a7",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "470c14f3-d4d6-4c40-869a-a4a67a1112c7"
        },
        "item": {
          "id": "33fb49b3-00c0-46e1-8b59-91ea7377eade",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "20e83f21-7dff-4257-8450-dbbf5072d4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d7015d-ca34-40b5-a607-e261277fc8e8",
        "cursor": {
          "ref": "3859c3a0-cbf7-462e-92dc-7305527051c6",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "55af9535-2b81-4c5f-bc3f-2e2037b92628"
        },
        "item": {
          "id": "d5d7015d-ca34-40b5-a607-e261277fc8e8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4130e5d7-9ba6-4ed6-adbe-45797081cb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b766af-ad33-4b7f-a85a-673892d1050d",
        "cursor": {
          "ref": "04770724-c595-498d-ba98-1a306568a345",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b75cd780-5f01-4e10-84e4-085292ee0089"
        },
        "item": {
          "id": "c2b766af-ad33-4b7f-a85a-673892d1050d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1683a8fe-04ed-443d-aa9e-a977bd601907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff2cddd-c3d8-45d5-9b8d-2aa2bded219d",
        "cursor": {
          "ref": "54f414a5-bbcc-4fe1-9b22-16279e21d1c6",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4271580c-1735-496a-a9d4-c16c18c58d75"
        },
        "item": {
          "id": "9ff2cddd-c3d8-45d5-9b8d-2aa2bded219d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "68154382-cc05-4ccf-80df-de28f7ce5952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beeb104c-210e-4800-af1c-c077ab73659e",
        "cursor": {
          "ref": "b08b496c-ee06-4a4b-85cd-e12030eb988f",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ff00c239-ab8a-4629-8288-cbaa6a35162e"
        },
        "item": {
          "id": "beeb104c-210e-4800-af1c-c077ab73659e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bbc158e2-c5cd-44bf-9829-96ee649f8872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05433b34-ce57-4b23-8b71-f537c641af77",
        "cursor": {
          "ref": "9393ef91-c798-442c-b95d-ad41b951b6e5",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2c9321eb-ad59-4e81-aeab-aff6a25dd48f"
        },
        "item": {
          "id": "05433b34-ce57-4b23-8b71-f537c641af77",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cf972b76-9992-45da-944d-414b47f94964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415ab53d-77ed-4d05-9c13-6b38cb23e6e6",
        "cursor": {
          "ref": "74b1854a-4845-45c2-a517-f62333ec2fbb",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3e41075a-85b3-42ea-8fab-8d9b89ff412c"
        },
        "item": {
          "id": "415ab53d-77ed-4d05-9c13-6b38cb23e6e6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "16acea43-0d00-468f-b427-c99c5735def5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1054700a-f22b-4876-bc70-86d4d7222122",
        "cursor": {
          "ref": "84baaf43-1a8b-403d-bf07-521f28d88e57",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "48220f5f-64a6-4762-8ffb-02288d093075"
        },
        "item": {
          "id": "1054700a-f22b-4876-bc70-86d4d7222122",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4b75060f-4709-46e5-ab2e-e5e471b478f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f756ecb-c2a8-469b-ae0c-35b113d2a8fb",
        "cursor": {
          "ref": "65a3d23f-a6cd-4df1-9526-0074f29ffbd9",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b60b15d4-ed81-4013-8778-07c49156a896"
        },
        "item": {
          "id": "0f756ecb-c2a8-469b-ae0c-35b113d2a8fb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "069b3b29-18b3-409f-a3fd-7355be3308af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6713680e-ee60-4cae-98f8-1ef9fdcea179",
        "cursor": {
          "ref": "423da730-2edd-4b5e-8e3b-e598fb195961",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dc5b1c31-959d-4ec3-a89b-2ee7a1b52630"
        },
        "item": {
          "id": "6713680e-ee60-4cae-98f8-1ef9fdcea179",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ac03306c-479f-48c6-a7c8-4cc18ed1fac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952ef19b-585e-4b7d-8d81-ece361fd6efe",
        "cursor": {
          "ref": "853f9cb2-dafa-4a61-ac0f-3042a658d29d",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "23d29712-66f8-4b57-91e6-75bc614a5ac3"
        },
        "item": {
          "id": "952ef19b-585e-4b7d-8d81-ece361fd6efe",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ac376577-ee06-4c67-8faf-618427a41705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a728d16-9872-4a93-bcd6-a6569a53f98b",
        "cursor": {
          "ref": "f456afe5-7b16-4ebf-97f1-54662b532ea8",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7da28631-d5e5-46e3-a035-c77e9ffdf6f6"
        },
        "item": {
          "id": "9a728d16-9872-4a93-bcd6-a6569a53f98b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c6e2b9a1-067c-4f2a-aca1-5cc7fe626d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a5e03b-ef83-48c3-a4ff-14a60096e6f8",
        "cursor": {
          "ref": "f9a1147f-88ea-4b34-8ec3-647d50377697",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4bf74f41-d9a3-48bf-a754-101a15e831cf"
        },
        "item": {
          "id": "95a5e03b-ef83-48c3-a4ff-14a60096e6f8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c35e973c-4e11-429c-9433-b1be6f8ce4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a372189-6381-4c46-b1c8-afbfa0f7da15",
        "cursor": {
          "ref": "6d28d8bb-2082-4775-8d47-8bd165e7bab3",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "309be19e-9fb5-44a6-b092-043add4cfa96"
        },
        "item": {
          "id": "1a372189-6381-4c46-b1c8-afbfa0f7da15",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "492362cd-c2f5-4942-94f3-767a7e7eca3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2447fa-0956-4621-b389-36f31a69c16c",
        "cursor": {
          "ref": "d310c95a-3b92-4c5c-afc6-028960739158",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c8d06103-10a0-4191-a94c-b106fc22b8ce"
        },
        "item": {
          "id": "fb2447fa-0956-4621-b389-36f31a69c16c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1795d706-be69-4a06-946a-94f7f0cedca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b599786-794a-41aa-94a8-18c84e925a62",
        "cursor": {
          "ref": "f65fc499-e039-4ff9-a138-2c7bc2029b8c",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "63603ae5-384f-49df-bcf7-fe699638fb26"
        },
        "item": {
          "id": "4b599786-794a-41aa-94a8-18c84e925a62",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d6a587a5-174f-4521-b60e-2e43bed0a904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27f607c-be0f-48af-bf3b-c8f0d5968d7c",
        "cursor": {
          "ref": "0b8780cc-5fbc-4af5-a7b6-4b4d80d03f99",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8b74e7f8-b625-440c-8d69-fa6362a18473"
        },
        "item": {
          "id": "e27f607c-be0f-48af-bf3b-c8f0d5968d7c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1aae439e-ab99-4962-b30a-65ec0eceecc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b732f80c-43d5-4e33-99e0-82be61754340",
        "cursor": {
          "ref": "a5cb52c4-86f2-497a-bbae-ece9369631e6",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "45fbe5d7-28cc-43d4-b811-fd5f6e34aae8"
        },
        "item": {
          "id": "b732f80c-43d5-4e33-99e0-82be61754340",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bd4cbcfc-523e-440a-8eed-47ac1b5332f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd0d228-81f4-4c1e-aabc-0074a9db3509",
        "cursor": {
          "ref": "e0b42017-a7ce-4da2-a18c-b48b91dbc785",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6dc202c1-6158-47ed-9946-b37353a8960a"
        },
        "item": {
          "id": "4cd0d228-81f4-4c1e-aabc-0074a9db3509",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "099134ff-0bfb-4324-8216-058c755d2007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b27cd7-d149-4dc8-a010-ad7a51da81a2",
        "cursor": {
          "ref": "77a6ddc6-84bc-48e1-b9d6-d0cd6fdf77e5",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7668857f-f366-4119-87f5-79b8f92584d7"
        },
        "item": {
          "id": "38b27cd7-d149-4dc8-a010-ad7a51da81a2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b9cb0948-2a27-4408-8a15-7efd84741469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43dba0a-202f-4cd7-aa72-ed3bb97abd32",
        "cursor": {
          "ref": "d94b17fd-a54c-46a8-b762-a0b704e1bf61",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8e37c6de-f9b3-43c0-a0dc-e817bef48cb9"
        },
        "item": {
          "id": "a43dba0a-202f-4cd7-aa72-ed3bb97abd32",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6da374e9-7b99-4808-a92c-e0c8bdb7a1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bd1725-c2f7-46f8-a110-1758c671617e",
        "cursor": {
          "ref": "3408be38-8be5-4281-8f63-5c9ff2362ff0",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1f78379b-1503-4f90-82b3-75055099f27a"
        },
        "item": {
          "id": "18bd1725-c2f7-46f8-a110-1758c671617e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "52958f25-8fd9-498e-98b2-3d354e0d92ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8e04bb-e0b9-440a-93f1-06920cf4798b",
        "cursor": {
          "ref": "b69e03cd-0adf-4f71-9e3c-21467e30e65e",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "07aecbff-bdde-4128-9aee-6ed1d15a9558"
        },
        "item": {
          "id": "9c8e04bb-e0b9-440a-93f1-06920cf4798b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0555aa79-c282-40a8-aaf4-e9aabce8f7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9237885-4a5c-40c8-a04d-b2530fc2b46c",
        "cursor": {
          "ref": "bc627dd2-9952-4762-aa42-44fcefc7a75c",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0a06fa44-5455-45e0-880f-bcca7b91ceea"
        },
        "item": {
          "id": "a9237885-4a5c-40c8-a04d-b2530fc2b46c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9faa2517-bfee-4b86-b67e-3921a0e8b0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8e3e3c-fff5-4838-a148-138268172dde",
        "cursor": {
          "ref": "bbfa8cd9-5754-4d11-b547-3354d56531be",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "525f1459-88a2-487d-a880-8a140fc2e2df"
        },
        "item": {
          "id": "de8e3e3c-fff5-4838-a148-138268172dde",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1c76bc49-2b1e-494f-ba43-b0f557e9b27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cac2539-d6bd-45d5-92bb-00860592cd11",
        "cursor": {
          "ref": "dcc929ee-ff47-4381-b729-4820f7f9638c",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8c365410-cddf-4fcf-b776-85b337f978e4"
        },
        "item": {
          "id": "4cac2539-d6bd-45d5-92bb-00860592cd11",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fbcef4e5-ac26-4a65-810a-b28f4ca3bda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f70fe3-2565-4aa6-b8d3-57e624f2a733",
        "cursor": {
          "ref": "84d44df9-8e4d-4b56-95f1-e956ad658048",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a5fdcb15-a5bc-4b4c-b9f4-5855a183634f"
        },
        "item": {
          "id": "03f70fe3-2565-4aa6-b8d3-57e624f2a733",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6d771034-e84d-498a-a352-23dfdc2d1ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa9d6b7-8ee8-40a2-ad0c-7d1a6cd1e999",
        "cursor": {
          "ref": "b376ed4d-0522-4bb2-a023-127e249f788e",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "23622174-f634-4464-8f5f-b3daacfa1b8b"
        },
        "item": {
          "id": "1fa9d6b7-8ee8-40a2-ad0c-7d1a6cd1e999",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "efaf9c6e-e2cf-4134-814c-145830cae0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0132d55e-0bec-4f02-b253-4511db7a3f6b",
        "cursor": {
          "ref": "5bf4a6ca-3ab0-4402-8eb6-cb563d406939",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "25c73ccd-ef4e-4f39-8702-8ef84784ab8b"
        },
        "item": {
          "id": "0132d55e-0bec-4f02-b253-4511db7a3f6b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "202d532f-a5fd-4c09-8da7-98f0cdb44344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c388cc9d-df37-43b0-bca5-d80c128ef55f",
        "cursor": {
          "ref": "12eeb98f-754e-47fc-91d0-356076035143",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "25609df3-96a2-4bb2-a16c-1e52704461de"
        },
        "item": {
          "id": "c388cc9d-df37-43b0-bca5-d80c128ef55f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "949f8a62-8f03-4dce-859e-e068a5fb885d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7154fa-2350-45c8-b52b-1addab57e0f3",
        "cursor": {
          "ref": "52c01120-8fd5-4e8b-bd8e-a778ee2a504e",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "10c2ac38-3b1a-431e-ac6e-40c19a21ab89"
        },
        "item": {
          "id": "cc7154fa-2350-45c8-b52b-1addab57e0f3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7e1b1027-09dd-408d-96fd-1f9d1cc3cb57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05125a65-67b8-481e-9839-e2b5729ee523",
        "cursor": {
          "ref": "a0e3de16-692b-4251-b814-cd33d8ae2eae",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f6a3a1bb-2696-43bf-b8c3-f28bcfbf5b7b"
        },
        "item": {
          "id": "05125a65-67b8-481e-9839-e2b5729ee523",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3bb3fbb5-ee0e-41ed-be6f-98ec436e881f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 207,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cef2ef3-d844-4542-a2dc-0e9c8bc62dd4",
        "cursor": {
          "ref": "b88f03c7-1e15-4964-934a-00b468a2d841",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9abdb49f-fb31-41eb-814b-8dfd2fbb584c"
        },
        "item": {
          "id": "2cef2ef3-d844-4542-a2dc-0e9c8bc62dd4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "957c620b-b255-4db3-97bf-9bf0f753f799",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a132071-4e9c-4959-aaff-efdc366e7761",
        "cursor": {
          "ref": "fae40369-66d7-48af-a989-edc6287a4f33",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "260f2cf7-f5ae-4be5-b971-89cab3ef5bc8"
        },
        "item": {
          "id": "3a132071-4e9c-4959-aaff-efdc366e7761",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b88cd8f4-7a45-4bd3-ad3c-6ef60583158a",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6097885a-2a4d-4714-9b75-9aecaee00a0a",
        "cursor": {
          "ref": "b3dcb3d8-463c-4cf3-a28a-096aa49938a3",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1b38be38-de28-450e-8902-433665e5427e"
        },
        "item": {
          "id": "6097885a-2a4d-4714-9b75-9aecaee00a0a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f7c67581-89af-46d8-b2b7-8bf487b8efcc",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e703cf-dd2a-4919-a0ba-c8d1e90c72c2",
        "cursor": {
          "ref": "8cba8997-f0e3-4320-85e5-60a68ac4f47f",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "411ef688-b3be-4f7c-9071-b13e987dc042"
        },
        "item": {
          "id": "a5e703cf-dd2a-4919-a0ba-c8d1e90c72c2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ae211132-bd5d-4f3d-8684-32be91cf8f90",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73c0a94-cc38-4a80-97c2-898e5d93a67c",
        "cursor": {
          "ref": "a012b102-8662-4b87-bb49-6c38ab4a2b4e",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1bec3f24-17a7-4bcd-b6b0-b6ab5708d7dd"
        },
        "item": {
          "id": "f73c0a94-cc38-4a80-97c2-898e5d93a67c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cb506869-ce55-444c-b66b-f3f7d923ea50",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "46601fce-55ab-463f-b267-19054a8d0b25",
        "cursor": {
          "ref": "0adb2c90-df43-45dc-a39c-3260958ae6f4",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cb0fe607-f7cc-4f1c-8fb8-a3b3bbd1ef42"
        },
        "item": {
          "id": "46601fce-55ab-463f-b267-19054a8d0b25",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f52dcf7d-ea20-41da-b4f4-99f47923d141",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574e1d93-8a3f-4480-af3a-a70036247bef",
        "cursor": {
          "ref": "69eed22e-1141-4edf-a582-f22295878a25",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f08d8bcd-6a33-4a46-bc6a-057e463d5b24"
        },
        "item": {
          "id": "574e1d93-8a3f-4480-af3a-a70036247bef",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2eda780c-7a66-44ec-9b6f-859aac41b072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574e1d93-8a3f-4480-af3a-a70036247bef",
        "cursor": {
          "ref": "69eed22e-1141-4edf-a582-f22295878a25",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f08d8bcd-6a33-4a46-bc6a-057e463d5b24"
        },
        "item": {
          "id": "574e1d93-8a3f-4480-af3a-a70036247bef",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2eda780c-7a66-44ec-9b6f-859aac41b072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77802ae-6ae9-4f73-8271-2e0ee8a8bcc3",
        "cursor": {
          "ref": "d32d1a2d-3174-4050-95de-56a6b350ce04",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2d6cde56-0e84-4d88-a396-f84bc98084e9"
        },
        "item": {
          "id": "d77802ae-6ae9-4f73-8271-2e0ee8a8bcc3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "074ac7ff-6856-4821-bfab-7478c5d43bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a604ccd-3f38-4ddc-ab69-071e752cdf4c",
        "cursor": {
          "ref": "b5332860-002c-4a1c-bdc2-ec9a29ebaefa",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5b2780e8-57c9-42ec-a442-4f2e21ba6c76"
        },
        "item": {
          "id": "0a604ccd-3f38-4ddc-ab69-071e752cdf4c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "200ec51b-e91e-4498-a2dc-c8540d02c9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5e899a-5836-4e27-acbf-ec69104bc603",
        "cursor": {
          "ref": "1f037992-9ad8-4578-a2fb-a779b48df047",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6026c3e6-70ae-49db-819e-8cd402b8c1ea"
        },
        "item": {
          "id": "6b5e899a-5836-4e27-acbf-ec69104bc603",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2e514f24-b9a2-4ad3-b2eb-4126bdcdd34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe40373-37f6-469e-9443-98e0618d05dd",
        "cursor": {
          "ref": "fedfc70b-bc61-4708-9a3f-67ae6af70db9",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ad5c5697-ec73-4a17-abb6-28bd11e05282"
        },
        "item": {
          "id": "9fe40373-37f6-469e-9443-98e0618d05dd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "89eed615-c2ab-44b1-9c8d-378240ae8ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405936f5-eca8-4a0e-aa89-6d736ab8ef4a",
        "cursor": {
          "ref": "24f2a967-37c2-4244-8b86-9d8a5bc7d596",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "25c57734-cdcb-4402-b68f-f01ff2d07a8c"
        },
        "item": {
          "id": "405936f5-eca8-4a0e-aa89-6d736ab8ef4a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "64d6a8ad-d781-49dc-9aee-580bc3292f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b828d7f-3550-4a5e-bf26-f84e1877c7ee",
        "cursor": {
          "ref": "0dcbb7fe-a404-43d1-87ac-a2f0a846aee9",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0f6d7172-dee4-4f73-84a2-7be41953a0f5"
        },
        "item": {
          "id": "2b828d7f-3550-4a5e-bf26-f84e1877c7ee",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6b1f697e-734f-422b-8044-cefdb430b2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cef535e-ddf2-4da2-bcf7-d62a8807c506",
        "cursor": {
          "ref": "a8d507b9-653c-4336-9fef-bd9e473a7781",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "05e8defd-9174-4c96-a1d1-ffb2ff65251a"
        },
        "item": {
          "id": "7cef535e-ddf2-4da2-bcf7-d62a8807c506",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "16fee29b-ac1b-48c6-b7c2-eb42a6ef9f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15895ad9-fc48-4774-be9d-fb0af16a5afc",
        "cursor": {
          "ref": "bec24056-d88e-4982-8f0c-066b8bc2466e",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bdfc0887-1aff-456d-a9c7-49ab360d58d5"
        },
        "item": {
          "id": "15895ad9-fc48-4774-be9d-fb0af16a5afc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b478afd6-e3fd-4327-bfdc-d56caf4defb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab11ecb-f5d6-452b-a964-67d96a702477",
        "cursor": {
          "ref": "5eb20de2-7334-4d64-9ca9-60c41010eb23",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b8ba17cd-5baf-4fb0-ae61-485a6a17365a"
        },
        "item": {
          "id": "6ab11ecb-f5d6-452b-a964-67d96a702477",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "030ba3b3-9811-4657-bf0e-04761ec3f563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec471dae-9db8-4997-bc56-a44c06eb1e64",
        "cursor": {
          "ref": "32f84668-d40a-4b52-a146-ac24f82bb6ec",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9154d1f4-86fb-434b-803d-89d26821c252"
        },
        "item": {
          "id": "ec471dae-9db8-4997-bc56-a44c06eb1e64",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bf1412be-5bb7-43f8-9df6-ff4ff04078fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2ada93-c965-4d89-b303-e858b053728b",
        "cursor": {
          "ref": "0688db59-027b-4c7b-af72-fdd53c014798",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "577a985c-d206-4383-bf3c-f42e81d5e065"
        },
        "item": {
          "id": "2b2ada93-c965-4d89-b303-e858b053728b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b64a8c25-1d47-414c-b6f1-cb93abf62806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef644e61-dee2-46de-948a-c844a2010ef3",
        "cursor": {
          "ref": "a9a2efdf-e03b-4f39-a46d-cd3605f05e44",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7e937412-dd41-4e40-a9e5-76552236a1ac"
        },
        "item": {
          "id": "ef644e61-dee2-46de-948a-c844a2010ef3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6864dc29-97d2-4840-9022-15fb3aa6787c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684e15a9-f9d8-48f4-9ed1-3a5a07a0d8c0",
        "cursor": {
          "ref": "9bd58b31-a93e-4f48-b6b6-767e2cef94dc",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1ad8bb86-e2eb-4878-beae-56f6b16b620b"
        },
        "item": {
          "id": "684e15a9-f9d8-48f4-9ed1-3a5a07a0d8c0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1186db94-0b9a-4cd9-bf16-e23b47cd8fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4035a5-66ce-4583-91f2-8828a5ea8a7d",
        "cursor": {
          "ref": "b96dcfe6-a90a-4a56-973d-beac4eece636",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cbd41580-aab0-4e9c-a8ca-335be7f54ddf"
        },
        "item": {
          "id": "df4035a5-66ce-4583-91f2-8828a5ea8a7d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ec81cba1-e889-4699-a524-99af9039c6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c14ca4-35d7-4d02-93ed-b9cc814a8f25",
        "cursor": {
          "ref": "3ecee810-ca3e-49b5-8180-15aa290a7a1f",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "834aca0b-76ca-4859-9f87-7769cc6c5f2f"
        },
        "item": {
          "id": "c6c14ca4-35d7-4d02-93ed-b9cc814a8f25",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bf75e95e-22a8-49d2-909b-439bcb56b1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356d0350-bb44-4aa3-b7e4-7a270389cde5",
        "cursor": {
          "ref": "320c9b63-2946-45fe-bc92-f2625d0c739d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "15c0dda1-ceee-4c6b-a34d-9e29bc597a96"
        },
        "item": {
          "id": "356d0350-bb44-4aa3-b7e4-7a270389cde5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d66b431a-e896-4ac9-bf35-c627e06046c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dce4056-0369-4085-8651-72cd8e536cd5",
        "cursor": {
          "ref": "88078a5a-c21b-4275-b99b-780a71b91b70",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "12985b44-3b60-417d-8032-7eedf35c856b"
        },
        "item": {
          "id": "8dce4056-0369-4085-8651-72cd8e536cd5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1812ee71-75c6-45de-afe6-55e8e2ac1227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78634adb-252a-4964-82e4-e5382155ec21",
        "cursor": {
          "ref": "d0776bbd-be1e-48bb-bf50-bde418cb453f",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6f1deeb5-5142-4cb4-8d91-91649dd9e0ce"
        },
        "item": {
          "id": "78634adb-252a-4964-82e4-e5382155ec21",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bdb89d5a-2cc8-48cc-88f5-3f9dccc3e01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2425d4df-5fb4-459d-beb4-86731b9f88c8",
        "cursor": {
          "ref": "0c94a326-4902-43a6-a672-73b97484815c",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "37b3ddda-3d76-4e1a-b259-28ac5e3dcc55"
        },
        "item": {
          "id": "2425d4df-5fb4-459d-beb4-86731b9f88c8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0fb0f469-5595-4763-888b-56aa6a106e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f696b3c0-77f1-4390-a93e-e208a23e281f",
        "cursor": {
          "ref": "a1306954-0194-46a9-9188-8dc92cb1318c",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "34a29bef-9ba0-4246-9818-35baaa3c5da1"
        },
        "item": {
          "id": "f696b3c0-77f1-4390-a93e-e208a23e281f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0222ff30-1268-4266-9111-3cc8135ca500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a292a81-4482-407b-bf7b-6f23c7bf16c6",
        "cursor": {
          "ref": "f460c069-3316-4389-b23d-9096b296b584",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d6193c7d-a58f-4850-b83d-94ac43b69904"
        },
        "item": {
          "id": "2a292a81-4482-407b-bf7b-6f23c7bf16c6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "51c019ba-83b5-4e2a-92d0-cd6f3a835570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3bf3fd-c436-4287-9b82-bfcd74b0a7dd",
        "cursor": {
          "ref": "8141a75c-46e6-43ca-8cc7-e9851adff176",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dff29e94-3022-4f9a-a743-1df8eb896974"
        },
        "item": {
          "id": "dc3bf3fd-c436-4287-9b82-bfcd74b0a7dd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f0fb5aa9-0759-4cee-969c-19678dbab36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95497a5-5c1f-4579-89ba-7c7572676596",
        "cursor": {
          "ref": "501b53a1-90b2-4d9a-8a9e-6f52c519d211",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "eb841b5e-bb1b-41ce-8e28-11e9b2beaacd"
        },
        "item": {
          "id": "a95497a5-5c1f-4579-89ba-7c7572676596",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1ee71033-02b6-4997-8a12-31d58929efc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b1cb81-6a89-44cf-8d3c-757e170753c3",
        "cursor": {
          "ref": "f50879d9-cf0f-4c9e-9e69-ff3af3a8548a",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "de7b01ed-37ba-4102-8543-2a7650873aa6"
        },
        "item": {
          "id": "a3b1cb81-6a89-44cf-8d3c-757e170753c3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f8bd6a77-e333-4ee4-8a81-efecaa5efa9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acbe348-e183-4a55-b174-bd0376d64ace",
        "cursor": {
          "ref": "88ab5e5e-e152-48a5-a32c-0c1dc972d471",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4821c9fb-b9de-4c09-88dc-2e7d5f0ce5a8"
        },
        "item": {
          "id": "4acbe348-e183-4a55-b174-bd0376d64ace",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "183e31bf-5278-40e4-b701-2e8411b552ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a413659b-c8cb-42e1-a47d-68d7789370f6",
        "cursor": {
          "ref": "9dbbaf6e-8272-45f8-bde4-39c0051df304",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dfbd7bb2-e1e1-4838-935e-16d30abf376a"
        },
        "item": {
          "id": "a413659b-c8cb-42e1-a47d-68d7789370f6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c38ebaae-b64c-43a6-b271-9f8f74ef992c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dc700e-42cc-481a-8415-8e1555c826b0",
        "cursor": {
          "ref": "e73f7f69-735c-46d1-8501-876274e6a75d",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c1c01f77-3f60-48ba-ac71-393836360704"
        },
        "item": {
          "id": "e0dc700e-42cc-481a-8415-8e1555c826b0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1f96b911-07ee-42bb-8bf2-8e97908727ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0758705-bce4-42cc-aded-687e0bafca37",
        "cursor": {
          "ref": "c4305eca-71d7-4ac6-8dbd-d2661d44e624",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "503180e2-10d5-4a59-986d-146db578fa54"
        },
        "item": {
          "id": "c0758705-bce4-42cc-aded-687e0bafca37",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b7c877f0-6059-416f-ae74-03c02562c838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414de1af-652a-435e-9617-d343eb8d1cb6",
        "cursor": {
          "ref": "0bf409c7-a1dc-44be-a308-9be1eaddd7aa",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fb30eba5-8b5c-478b-930c-497770b20a08"
        },
        "item": {
          "id": "414de1af-652a-435e-9617-d343eb8d1cb6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e728c6b7-26e4-4b5b-be04-60f6427f1a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c32ffe1-1e07-4625-aa87-0338795a3552",
        "cursor": {
          "ref": "d5459d34-edc7-481f-ae32-d3f5e16c8592",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e469eb8e-b740-4710-895c-590de8f0accc"
        },
        "item": {
          "id": "9c32ffe1-1e07-4625-aa87-0338795a3552",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "56f48bfd-7ea7-46a9-918c-f05bf5ad1db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbf4bb1-0ab8-4769-893a-328008b149ae",
        "cursor": {
          "ref": "7996ef05-6c20-417c-ab15-3ed723c0ce15",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6928621b-3414-4673-a394-ff2e0d38b541"
        },
        "item": {
          "id": "fbbf4bb1-0ab8-4769-893a-328008b149ae",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3f850501-febc-4c5e-9302-3be58cbb2014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebaab85e-3f0d-4ce4-ae99-c0b1b7327879",
        "cursor": {
          "ref": "cfc9cc47-b77a-473e-8e46-b48319039115",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b6f051c5-d5c5-4bf8-8a55-a3d4b8f5f887"
        },
        "item": {
          "id": "ebaab85e-3f0d-4ce4-ae99-c0b1b7327879",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "18e1b888-d8f7-408f-843a-35be9a603827",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a3fbe8-54fe-4101-9d77-63c7217022c2",
        "cursor": {
          "ref": "a917f7ac-28d0-4dfd-ae62-bd0e9dda0836",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e26f5230-42d1-4439-9ae8-3473d90ab500"
        },
        "item": {
          "id": "96a3fbe8-54fe-4101-9d77-63c7217022c2",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "85c7e408-c0c1-4c70-a776-ddff547b1170",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13414a77-50f8-4b23-95df-e0362e063c82",
        "cursor": {
          "ref": "d7d99f40-85ac-4f4a-b99f-82b19db3d3db",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "195763a6-2ba7-432b-b65f-693d1595e7c6"
        },
        "item": {
          "id": "13414a77-50f8-4b23-95df-e0362e063c82",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "68f6510a-5768-402d-8e2c-7c49367d6406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13414a77-50f8-4b23-95df-e0362e063c82",
        "cursor": {
          "ref": "d7d99f40-85ac-4f4a-b99f-82b19db3d3db",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "195763a6-2ba7-432b-b65f-693d1595e7c6"
        },
        "item": {
          "id": "13414a77-50f8-4b23-95df-e0362e063c82",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "68f6510a-5768-402d-8e2c-7c49367d6406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e14872-51ab-44f1-b597-de90f4acf519",
        "cursor": {
          "ref": "ddd7085d-7523-4f72-adaa-38e5efc4f2d7",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a8976ca8-f563-4adb-9275-03d8d6f6636a"
        },
        "item": {
          "id": "11e14872-51ab-44f1-b597-de90f4acf519",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b35ad816-1540-4005-88f4-0b91820688f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031c582f-6cb2-40dd-bf37-e218eab85833",
        "cursor": {
          "ref": "0ff19500-ffc7-4264-ad48-4f05a69fed97",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6b0f0aaa-2ed0-46cc-a31c-ba865a04bfed"
        },
        "item": {
          "id": "031c582f-6cb2-40dd-bf37-e218eab85833",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c5fd7a3c-78e9-4dd5-8d79-64cb601dbd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6cebf4-8203-42a1-9ab2-23085fddf4ee",
        "cursor": {
          "ref": "bc0e918f-1631-4661-94d9-a34a35e1189e",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e7152125-b515-4032-bc44-cde7b025ed7d"
        },
        "item": {
          "id": "bb6cebf4-8203-42a1-9ab2-23085fddf4ee",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fe84f1f7-db1d-4b9f-803b-469c11e4147e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047953f2-4dc7-462f-b36b-9c9e40bc069b",
        "cursor": {
          "ref": "13530443-0a7b-4ab5-b1fc-5de030503726",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "31739020-aac0-4a2e-81f0-6c9e865b8036"
        },
        "item": {
          "id": "047953f2-4dc7-462f-b36b-9c9e40bc069b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "507323a6-0514-4d2b-9539-fdc1fee467df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fae632e-d931-4210-b043-bf8e92838590",
        "cursor": {
          "ref": "abfce019-fc6e-4bbe-85fe-79f8a809f099",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6a64ba38-c3e1-4ac5-9f2d-d9aa04a824cc"
        },
        "item": {
          "id": "5fae632e-d931-4210-b043-bf8e92838590",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1cbbac67-a12f-4a27-9534-bc1feaa64412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f8082b-3798-4bf4-b1ed-511b8a1daf47",
        "cursor": {
          "ref": "655a91b2-8101-49ed-a82b-5f47e44baf8e",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "837c055b-5b36-44fa-9dea-1de8c3cb4b8d"
        },
        "item": {
          "id": "38f8082b-3798-4bf4-b1ed-511b8a1daf47",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a37998a2-098c-4e16-8a3b-237dbe4b1f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806cdee0-fbe7-4c35-aca8-e7482482853c",
        "cursor": {
          "ref": "21fe7b2a-9f51-41ce-ab4d-03ac6600eaa9",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0b8d7396-7048-4611-ab71-8b60d4128cb8"
        },
        "item": {
          "id": "806cdee0-fbe7-4c35-aca8-e7482482853c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1e54402a-196b-47b9-aae6-bfbadb62965d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755c44a7-5e69-4717-b79e-b31e18981d47",
        "cursor": {
          "ref": "1e3c3c14-37b6-41dd-aa43-a6c21ecd9256",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f4da8b92-130a-4293-b58e-83da7808334e"
        },
        "item": {
          "id": "755c44a7-5e69-4717-b79e-b31e18981d47",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a1a25dce-6910-4dba-813c-51f4c2343206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a165492-457e-4bbb-947c-9da3c6858423",
        "cursor": {
          "ref": "a91e1f34-53de-4bb4-8176-4233f11c9cd0",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e6d92138-9742-4d29-b024-da09b11688c1"
        },
        "item": {
          "id": "1a165492-457e-4bbb-947c-9da3c6858423",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "83d92ee6-757b-4bfd-b7c8-ee1f0b50e72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c943baf-3fea-43da-98ba-fb0888a7851f",
        "cursor": {
          "ref": "f8c0fcab-ca0e-4e34-8d86-33c1f1307105",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8b4c9add-acc7-4d4e-9be1-dbf205d7499c"
        },
        "item": {
          "id": "0c943baf-3fea-43da-98ba-fb0888a7851f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "849e993c-9ec8-444e-a69e-cf58213e5bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e6d01d-5d33-46c4-a944-18483a0d9c89",
        "cursor": {
          "ref": "fe717e94-9d77-415d-a330-64bc088f9584",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "75240293-d65a-497f-94ff-be5d3195aa83"
        },
        "item": {
          "id": "b4e6d01d-5d33-46c4-a944-18483a0d9c89",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1a1f1d4b-0d3e-442e-8cb6-1ccce3a4ac12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0633559c-0d01-4e84-8e40-079a83c0941e",
        "cursor": {
          "ref": "b0510df6-780f-4686-9fb1-6e95f0b6f142",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ff477cf6-f20b-47be-8d84-4f3a55ad0964"
        },
        "item": {
          "id": "0633559c-0d01-4e84-8e40-079a83c0941e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "186acb99-f75a-41e8-878d-53a01adec7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cc4784-701e-4446-9181-8a32b97741d4",
        "cursor": {
          "ref": "30e92131-fbd5-4435-85c4-522cd2b0bfbf",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "456f2b61-bd37-4ea0-ae51-971affeeb630"
        },
        "item": {
          "id": "41cc4784-701e-4446-9181-8a32b97741d4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ce85e014-a0cc-414f-8f12-8a6a685bf602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f568a621-0bc5-4b46-a9db-f1dfad2d57e0",
        "cursor": {
          "ref": "664a6b24-eebc-4450-8aaa-6fc9470efd99",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "57c54760-2935-4b0c-9127-7264c85c5b3e"
        },
        "item": {
          "id": "f568a621-0bc5-4b46-a9db-f1dfad2d57e0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "416799d9-4870-4dee-8023-dee76e74ac76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6590ea7-a6c0-42e3-a8bc-04b3bae835c1",
        "cursor": {
          "ref": "228ac389-a335-46a0-bd0b-8f25a1a425af",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "25b2465d-ee2d-4b3f-91cf-f0966f66fb0b"
        },
        "item": {
          "id": "b6590ea7-a6c0-42e3-a8bc-04b3bae835c1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "22f5be81-0fab-40ba-8eb4-e8dbbb581b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d62d516-3eeb-45bf-aa6c-903e5e1c1dc6",
        "cursor": {
          "ref": "9594a92f-d627-4acb-8d8b-f201bf68ddbb",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5e70f971-75d5-4383-9ded-1ac5aec2e700"
        },
        "item": {
          "id": "2d62d516-3eeb-45bf-aa6c-903e5e1c1dc6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "489d282f-04fb-43f3-8f83-cb5dfa3ab745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fb2bc3-8252-4f04-9080-b30adbe5ba29",
        "cursor": {
          "ref": "f6d71e5c-0fc6-4f81-a9a4-b84dd06a82a2",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "91cb5993-8b70-48ba-af8d-53bb25cda18e"
        },
        "item": {
          "id": "81fb2bc3-8252-4f04-9080-b30adbe5ba29",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "22758d44-7450-4a4a-8989-36a0fc313af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d5e2a3-bf97-4d05-8ac8-9636e6932d42",
        "cursor": {
          "ref": "be73c5d3-8459-4b7a-b283-8dead98e2c82",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b926dd4d-f110-49ac-bab1-8b82d91d33a5"
        },
        "item": {
          "id": "f8d5e2a3-bf97-4d05-8ac8-9636e6932d42",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "64df2443-f9a4-425a-9a81-56156314764c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa57a316-2e81-4b04-88fd-e3bbd5f163d6",
        "cursor": {
          "ref": "f3be6d28-9b2e-495a-b67f-4a219a259dde",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d4cbd67f-1497-453b-81d4-0eae43229707"
        },
        "item": {
          "id": "aa57a316-2e81-4b04-88fd-e3bbd5f163d6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2342eee1-6d30-48e0-9a0d-925239824559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9007189-4c12-45e8-b5fb-02828ff3ddeb",
        "cursor": {
          "ref": "772315bb-d5c3-444c-929c-5f881346065d",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0642004a-8313-4253-bb8d-5fb3ab8b2e8b"
        },
        "item": {
          "id": "c9007189-4c12-45e8-b5fb-02828ff3ddeb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f4239fcb-c65d-48fc-b04c-1dffe7c71ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8709cd8c-664d-41e2-b657-76b2039db0b2",
        "cursor": {
          "ref": "fb6c69c1-9666-4963-8789-2aa93fe75b7d",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c301468f-47df-400f-bb9e-6487cdcdfcaa"
        },
        "item": {
          "id": "8709cd8c-664d-41e2-b657-76b2039db0b2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "85f58005-3e0c-42d7-9748-3178bb3da6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09785295-28ee-485b-81a1-fcb19d15e690",
        "cursor": {
          "ref": "18ab6f68-8e03-4f22-be86-59eb89cd4de5",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "abacc8a3-44da-46f2-9cf7-cd3b9c5770a2"
        },
        "item": {
          "id": "09785295-28ee-485b-81a1-fcb19d15e690",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6c114e64-aa96-429c-bea8-d309e057a228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595fcbc8-6e67-41fe-9070-651d3ef457ba",
        "cursor": {
          "ref": "ac3adc14-712e-4f36-869b-40c01370cb3a",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5fafef27-fbb5-4a8b-b1da-b968c4dbd47b"
        },
        "item": {
          "id": "595fcbc8-6e67-41fe-9070-651d3ef457ba",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4f8e78c4-93ae-47aa-91a6-c5af6df931ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535822e6-406d-4991-84db-5850f20ff9ea",
        "cursor": {
          "ref": "2d00451f-7743-4d78-919e-5dd693be7c1a",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a9368e5c-6872-43e1-99b5-f2a7f4436123"
        },
        "item": {
          "id": "535822e6-406d-4991-84db-5850f20ff9ea",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3f6013f7-1e64-4c12-85bc-26ffe0c10b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf138928-c78c-47f0-9f5d-4779bbe919b4",
        "cursor": {
          "ref": "db5cd6d2-a5d8-4f06-9c65-abf4f69a30de",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "57f9efbc-e2eb-49db-b8ea-7b7fdbab909d"
        },
        "item": {
          "id": "bf138928-c78c-47f0-9f5d-4779bbe919b4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "72784d73-43ea-4ccb-b500-d6f6f33e2025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2945b236-4b2e-4c77-b6e7-9ecc29f02fe6",
        "cursor": {
          "ref": "370ddec3-d4f8-4747-b52a-0dc2e9483cae",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ea1d41ad-3ada-45ba-bbd1-568bc7de39d4"
        },
        "item": {
          "id": "2945b236-4b2e-4c77-b6e7-9ecc29f02fe6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "67281d77-a9f4-4617-960a-fe575070b302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7e744b-8676-4097-9a16-19ea3eb1b449",
        "cursor": {
          "ref": "441340bc-c5fe-426a-9613-487a0e2e87b4",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e56f3c2b-566c-4ed9-a1cb-7ee0192c0c62"
        },
        "item": {
          "id": "ae7e744b-8676-4097-9a16-19ea3eb1b449",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cff55fb4-b5cf-4938-bc30-ff9c9e1116b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9079ef8c-2429-46ff-98f6-0be7871dc50c",
        "cursor": {
          "ref": "c770ed1b-b292-402e-b413-5edd06cf3210",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9549306d-527a-4213-adc7-ad1b7de5a629"
        },
        "item": {
          "id": "9079ef8c-2429-46ff-98f6-0be7871dc50c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b418fdcf-cd53-4765-b33b-d4e28b668c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c611588-9b6a-45a1-8a15-a85e761b6e04",
        "cursor": {
          "ref": "c64afb35-da30-4822-912c-e7b729d94528",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f63d412a-70ed-4d8d-9467-a34cf1a276d4"
        },
        "item": {
          "id": "2c611588-9b6a-45a1-8a15-a85e761b6e04",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8d6dc9b1-c24e-4c49-8b6d-614db6a52ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b04e689-000f-4c03-820c-513bf7fe83ae",
        "cursor": {
          "ref": "303f901b-7e20-4c07-b018-54290093f6c1",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3b5a87a6-a760-462d-bd74-bb5ffba6c1f7"
        },
        "item": {
          "id": "9b04e689-000f-4c03-820c-513bf7fe83ae",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "95e6c8c9-e558-4c6f-b3ec-4d2efe309a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04dcfe46-46ab-46d2-984a-b69920b2333d",
        "cursor": {
          "ref": "23ced8af-471c-4f9a-80e6-63658ff36182",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "231af688-b3cd-4534-aa15-b37a36687baa"
        },
        "item": {
          "id": "04dcfe46-46ab-46d2-984a-b69920b2333d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d1552a1e-8e76-47b0-8870-f618a374af2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0444b13a-05f6-424c-a68a-159624f11697",
        "cursor": {
          "ref": "0f7245f1-80eb-4332-a0a5-983d5b587af9",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8e345d08-f466-4051-adc6-45b9b50e88a8"
        },
        "item": {
          "id": "0444b13a-05f6-424c-a68a-159624f11697",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b405ab78-5348-4a49-92d9-3536838a2e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a3423f-e930-4e06-9b0b-5ee46b67a92b",
        "cursor": {
          "ref": "86147ef8-d80e-4010-9e52-f62585ce76c0",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4c07efb9-89b9-424a-b038-302339007de2"
        },
        "item": {
          "id": "52a3423f-e930-4e06-9b0b-5ee46b67a92b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c3e95f08-4119-48af-9199-121fa78178e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83091904-4ad7-4ec9-a776-62cd4879de01",
        "cursor": {
          "ref": "0f66af62-5578-4c36-8527-10da31a2f233",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "be0c66eb-6092-4bbb-81d5-04b0b52a719f"
        },
        "item": {
          "id": "83091904-4ad7-4ec9-a776-62cd4879de01",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e1d71256-cf12-4a38-a9fc-0d5bbe3bb84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a374ab0-2400-4532-8ebc-ef69093f0d28",
        "cursor": {
          "ref": "d24cf952-c428-4f8a-9ea2-42574b59d3bf",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f0b76bbe-04e8-4255-81d1-f28cabfd2d67"
        },
        "item": {
          "id": "2a374ab0-2400-4532-8ebc-ef69093f0d28",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7751cd3b-4dc7-44af-864f-7c6d9a8b3555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05803b07-cc54-4002-97eb-cb9b0ea9aa77",
        "cursor": {
          "ref": "dfee7ffd-85f0-4b65-a735-887bb64dd672",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b1ba0233-3543-4b85-b00d-7a6a868d888e"
        },
        "item": {
          "id": "05803b07-cc54-4002-97eb-cb9b0ea9aa77",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fbf1b371-360f-49ea-ace9-b282138ef490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5762768a-5315-4593-90d7-a3c9c29ff299",
        "cursor": {
          "ref": "10ea72ee-2fdc-4058-9d98-01d0861fec8c",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bd4872f9-ca81-440f-8fc2-4f9ffdb163cd"
        },
        "item": {
          "id": "5762768a-5315-4593-90d7-a3c9c29ff299",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0be15954-b7c7-432a-90fa-09ea16696d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38b403e-992a-41e1-aadb-dea760103b79",
        "cursor": {
          "ref": "4e0ef2b9-03fc-45c3-8d8a-cb0c9e5d9253",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "94ec7745-26dc-49ef-912f-3576161f5b1a"
        },
        "item": {
          "id": "f38b403e-992a-41e1-aadb-dea760103b79",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1f88f793-0c6d-46eb-804f-e9744f8954a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2054d4ee-3d5c-422e-9fdb-635d9b84c6a8",
        "cursor": {
          "ref": "b37d2bf7-c0b4-41f3-854f-2f5f22716b52",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9fe37903-e5d5-4aff-88f8-2f20d543fa59"
        },
        "item": {
          "id": "2054d4ee-3d5c-422e-9fdb-635d9b84c6a8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a01994f7-88b9-404c-85d9-ecee55465bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1d645f-803f-47b7-8757-cb0b9e0b8d0b",
        "cursor": {
          "ref": "a9435220-2a88-42f8-8278-6db895e67f1c",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6ae6fb1b-c742-4220-8ee3-934ac6c82bfc"
        },
        "item": {
          "id": "3a1d645f-803f-47b7-8757-cb0b9e0b8d0b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f2e8a7df-6c1d-4dc4-a2bb-f8d8d3b15ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561c17da-4ef5-4a6c-856b-bfa0e3816c25",
        "cursor": {
          "ref": "3491e47b-d294-4fc8-9e06-b23564aa5a08",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c358add2-02b0-48b3-ab54-b6aa4b0085ab"
        },
        "item": {
          "id": "561c17da-4ef5-4a6c-856b-bfa0e3816c25",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bb8629db-fd1a-4c83-912f-a7339a5521df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37c41e8-24bc-4a67-b5d3-6c2d1678367f",
        "cursor": {
          "ref": "47faf2d8-1620-4fff-87eb-ba045853ed22",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cf52b545-4cd4-4721-ab91-2b6d69ee38df"
        },
        "item": {
          "id": "e37c41e8-24bc-4a67-b5d3-6c2d1678367f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d391e04e-6503-477b-a80e-87699ee401bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5354e5d-35e5-45a8-8419-9b5679a89281",
        "cursor": {
          "ref": "9c95b9f2-a493-4ab2-967e-1936abdbbe88",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a6a8d282-dbde-4cfe-835d-8e91319a6f10"
        },
        "item": {
          "id": "d5354e5d-35e5-45a8-8419-9b5679a89281",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2f0a13ae-b08d-4149-a997-55e9624ec78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f569feaf-9044-4c10-aa23-31de3bc6b29e",
        "cursor": {
          "ref": "6e007424-e15b-46ac-852f-bac43a2e3a41",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ead58d63-fb64-436e-a142-045d1e9498b2"
        },
        "item": {
          "id": "f569feaf-9044-4c10-aa23-31de3bc6b29e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a4207d8e-f6f0-41a0-a09a-82af909b3a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f112bc-d97e-4515-9ea7-78cca87e7a68",
        "cursor": {
          "ref": "6c6cc885-791a-4c7a-aa96-fba4789da6fa",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "583ae6bf-a651-4d89-a662-277d56a8757d"
        },
        "item": {
          "id": "c1f112bc-d97e-4515-9ea7-78cca87e7a68",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0ac870c7-67c0-403d-9490-5524631000fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a613fe-294f-4aa9-8392-3148a4b4ff8f",
        "cursor": {
          "ref": "5cf2860e-749f-4f4c-9521-e8652990eadc",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "85d5a466-dc71-4622-a3e9-8751c7676a54"
        },
        "item": {
          "id": "31a613fe-294f-4aa9-8392-3148a4b4ff8f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "38ebf883-34a8-4513-b449-af5716020132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb3b81e-4e68-4a9d-a484-8b6caa0512ec",
        "cursor": {
          "ref": "39e06ec9-f40e-467b-94e5-de1b90709f4c",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "21f74d0f-24d2-47e1-b3c2-7a0779737607"
        },
        "item": {
          "id": "0bb3b81e-4e68-4a9d-a484-8b6caa0512ec",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "39fb3703-c60c-481f-9817-10944896a744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58eab3a4-7204-4cb1-92db-740cfb3e9acf",
        "cursor": {
          "ref": "03c93e56-ccf1-4a56-92cb-cb96f0bcc1b4",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5945d43c-1e13-4e5d-8944-3e1cfc00a6fb"
        },
        "item": {
          "id": "58eab3a4-7204-4cb1-92db-740cfb3e9acf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f5878011-83e9-4dfa-add3-a9ede02d8f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbe7c9b-eb0e-4fb4-aaa4-9e491c3eb73c",
        "cursor": {
          "ref": "63f2838f-7c53-407d-a415-d7311dcf4118",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1ff8eb4f-5cd5-489e-a8e1-f4612e1ccc59"
        },
        "item": {
          "id": "3fbe7c9b-eb0e-4fb4-aaa4-9e491c3eb73c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2cef38d9-d5ee-4692-bd6b-0f413c31f9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2deb8d-0a17-44e2-9675-d2d73bf6f8a8",
        "cursor": {
          "ref": "d0ffca4b-879c-400e-9d7a-fee0bf26e967",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6d81acd0-7af3-433e-bd3d-b2dfd575a883"
        },
        "item": {
          "id": "9e2deb8d-0a17-44e2-9675-d2d73bf6f8a8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c925336c-94a2-4bd8-9eb0-c8abb7130619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf204ef9-1297-4c5e-8a7a-63c14a94ab97",
        "cursor": {
          "ref": "3b7927ab-c34f-47b3-a737-0458b870697f",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4e3a0438-14c8-4ecc-a120-541709703f7c"
        },
        "item": {
          "id": "bf204ef9-1297-4c5e-8a7a-63c14a94ab97",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "beaefa53-26ca-4d0e-a447-6da2be72181e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f42c11-5849-4ea4-bcc9-57668ce64e61",
        "cursor": {
          "ref": "c3889958-04a2-45f7-a239-8caa9793cc85",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8fad9b60-ae86-4c68-8505-ce75d0234ce3"
        },
        "item": {
          "id": "a5f42c11-5849-4ea4-bcc9-57668ce64e61",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "858aed0c-0cb4-4118-918e-b3eb89dcc45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfd2c7c-cedf-4291-bd5e-f0048a4c2ed0",
        "cursor": {
          "ref": "8b844d3a-d3b3-4d87-9a40-c89e52b639f2",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "56481e4e-802e-4fe8-8da2-e49adea1180e"
        },
        "item": {
          "id": "3cfd2c7c-cedf-4291-bd5e-f0048a4c2ed0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "926a8ebe-d86d-4313-9b55-20cd86b07177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e3f354-29f9-4ae2-98bc-c11c0a8bfb7d",
        "cursor": {
          "ref": "18bb0a23-8cba-4144-bb9a-dbc0f5a36712",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4b7551fb-61ba-47fc-9032-ac104a25245f"
        },
        "item": {
          "id": "88e3f354-29f9-4ae2-98bc-c11c0a8bfb7d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8639cc63-b48e-4b9e-a80e-f92b5f5e6c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4be2db-dbe5-4db6-bb70-5711265fd14f",
        "cursor": {
          "ref": "05c5196c-1642-4e5a-a8e1-12ca12cd87eb",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c121fb2a-fd8d-4e46-89d5-31d5bdccb94c"
        },
        "item": {
          "id": "1e4be2db-dbe5-4db6-bb70-5711265fd14f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "53a18bab-1d10-45d0-99fd-6aafbf67ac8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d1c9cd-c3c0-4304-a6df-4f018b2ab385",
        "cursor": {
          "ref": "0bddb1c9-ef07-403d-a161-418586b9be94",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1c326d94-c9de-4cd9-af39-3d5fb2204d99"
        },
        "item": {
          "id": "12d1c9cd-c3c0-4304-a6df-4f018b2ab385",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a77ad805-c7de-4c3b-903f-f0ca0ddbb5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a673a39-89eb-4eb9-a102-100a4c88271e",
        "cursor": {
          "ref": "bd592de2-2bc7-4ee7-89cb-f2bd7b26e41a",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "62c30a31-1042-4f19-afb9-1e10bba9f364"
        },
        "item": {
          "id": "6a673a39-89eb-4eb9-a102-100a4c88271e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6fe08ce8-6f5b-4171-bdd4-e7d677aaa229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8280350-045a-4804-8198-340409643cc9",
        "cursor": {
          "ref": "097f093c-5931-4447-a930-5d566c9df3a2",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bf5dbd01-e51a-4707-857e-fd2b1f009bda"
        },
        "item": {
          "id": "c8280350-045a-4804-8198-340409643cc9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b946490e-51e0-478a-a252-4c7d5ab820bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d65db49-c629-455b-a50d-02d3656c20db",
        "cursor": {
          "ref": "87f3ed66-8df3-48c1-8900-606be671b4cc",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9188f923-ba32-4377-92d1-873c5eb27b7c"
        },
        "item": {
          "id": "4d65db49-c629-455b-a50d-02d3656c20db",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c0fef9db-c505-4238-b203-989c0e92f048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854a7d4b-54e6-4f1b-843d-bd8f3ef33728",
        "cursor": {
          "ref": "b3a0838a-4a7c-4fa9-800a-a870e50e80ad",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1e62c27f-f994-479b-8ac9-bbf109ad12db"
        },
        "item": {
          "id": "854a7d4b-54e6-4f1b-843d-bd8f3ef33728",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a5b2380b-6962-48dc-9046-a0f9f15880ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03191217-bf0b-4fb4-947d-73cb08b57786",
        "cursor": {
          "ref": "f896100d-6561-4599-9614-b49c18647938",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "038ab606-d6c9-48e1-8177-7e4625b9bc83"
        },
        "item": {
          "id": "03191217-bf0b-4fb4-947d-73cb08b57786",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f4c47c1d-b40f-40a5-9f02-4fcc138a7cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079eed2c-a0b3-44f6-aca9-bbb1211d1a20",
        "cursor": {
          "ref": "60d3641a-933a-44af-b76e-0011fce7c740",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d7a62501-d005-4523-bfb9-052206c1e567"
        },
        "item": {
          "id": "079eed2c-a0b3-44f6-aca9-bbb1211d1a20",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7da529b0-b3b9-4103-adc4-f3da280f6cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2542ace-87fe-4136-821b-d5b0efdf0a95",
        "cursor": {
          "ref": "19904445-6afb-427e-8390-e3027ed9b2cb",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "94489cc0-aba1-4c34-b698-0bb77a1845ca"
        },
        "item": {
          "id": "c2542ace-87fe-4136-821b-d5b0efdf0a95",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2b68dad7-5d61-4d3b-932a-67a912734d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f1ebe8-0106-489f-ae99-373a0d0eba63",
        "cursor": {
          "ref": "076f7356-96a9-417b-9424-2329d89cb58b",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d46dd29f-fb51-4d41-ba2d-c383239ea4da"
        },
        "item": {
          "id": "92f1ebe8-0106-489f-ae99-373a0d0eba63",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "06afad84-ccf8-476d-9818-7a0e04b4823f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72210be8-425c-480d-aac2-178a9f3b01ce",
        "cursor": {
          "ref": "c8e5904a-526f-450e-8dc6-89122ceb4749",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7792a38d-c393-40ff-ac50-11681e3ed8d8"
        },
        "item": {
          "id": "72210be8-425c-480d-aac2-178a9f3b01ce",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e8acbc8b-3c73-43d1-96a4-5f77695d5a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a779ced5-0818-440c-919d-89dc29f3be35",
        "cursor": {
          "ref": "495adf06-9302-4a10-a651-7fec34768c23",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e9371657-7946-4272-be76-7666b567a9d0"
        },
        "item": {
          "id": "a779ced5-0818-440c-919d-89dc29f3be35",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "23d7e347-386b-4aa8-971d-d49e82b8b98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1145489-cb1c-474c-b80a-f55a4853dad8",
        "cursor": {
          "ref": "39254c40-48c8-4603-8e1f-9bd3013f7333",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ff78d3f4-a13f-4ae7-a59d-c4903abc18ce"
        },
        "item": {
          "id": "c1145489-cb1c-474c-b80a-f55a4853dad8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7cbad82a-856c-4c4c-a3ec-f66be6de4152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2af837-a6cb-4378-8795-9a958957364c",
        "cursor": {
          "ref": "7cb9daa9-ea6a-49ae-a3ee-e460af320255",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e313189b-db9d-4d24-9998-27861c6c3ac8"
        },
        "item": {
          "id": "6e2af837-a6cb-4378-8795-9a958957364c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "df0677c0-926b-4532-b272-a93ef643df5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9051a104-82f7-439b-9228-6955fc577034",
        "cursor": {
          "ref": "ae3d2ae8-be23-4c5e-ab10-ac78ca26f1db",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fe90c89b-c52b-41ad-b8e0-6d4713e4c99b"
        },
        "item": {
          "id": "9051a104-82f7-439b-9228-6955fc577034",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6af67dff-89c6-49c9-9039-bede18fb34b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb9b1f0-3102-4dfa-97a4-077c960c1ec0",
        "cursor": {
          "ref": "cc63ac1b-2fdb-491e-95dd-64b035c8a572",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b02882f8-6c20-4a54-9663-3e760acce343"
        },
        "item": {
          "id": "4bb9b1f0-3102-4dfa-97a4-077c960c1ec0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f7c5abc3-ed45-433e-acfc-302ad88eb35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6194d4fe-6b69-48d7-863c-f9a0463da73e",
        "cursor": {
          "ref": "8f75b88b-cdd4-444f-8f60-1edd55f0b434",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7466ad5c-5d0c-4bf8-bc3f-e29c792eed85"
        },
        "item": {
          "id": "6194d4fe-6b69-48d7-863c-f9a0463da73e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c344dc37-84a8-4ee2-9194-ebf7da476d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34b21cb-1438-4a9c-b58a-ab1fdda34d90",
        "cursor": {
          "ref": "972f111b-635e-466f-af83-6dbb726e9284",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5566d541-c8fa-4afc-9ddf-5807dd431ab2"
        },
        "item": {
          "id": "a34b21cb-1438-4a9c-b58a-ab1fdda34d90",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8ee6b5f2-eef7-4216-a118-c4788cadf177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8ffc1c-dd50-4ef7-8286-44f50bff9676",
        "cursor": {
          "ref": "f781706a-5b47-4406-887f-23783a79a078",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "54d622bd-0cff-45e2-858b-3fb04c216b42"
        },
        "item": {
          "id": "aa8ffc1c-dd50-4ef7-8286-44f50bff9676",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "73178e4c-249f-41f3-b422-8afcab4264a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25059ffe-7ac8-4f1c-a24f-5c24002ae4bd",
        "cursor": {
          "ref": "d644a96f-ca28-444e-83ec-28505d270ca7",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bd0ad5ef-f61a-4e6c-b7f2-cc9dc1f18025"
        },
        "item": {
          "id": "25059ffe-7ac8-4f1c-a24f-5c24002ae4bd",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "80540574-f796-4186-93bb-3498d0c9f675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbe56be-d425-4ef7-a377-b009275214f3",
        "cursor": {
          "ref": "169c301c-f6b1-4562-9705-4528cdf445eb",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cfb80595-a6de-4db2-9eb7-57595f3d5922"
        },
        "item": {
          "id": "cbbe56be-d425-4ef7-a377-b009275214f3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b8504402-c806-4693-99c2-4e0e28d0b156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928fb417-ed86-47f9-af69-2f669a9f4786",
        "cursor": {
          "ref": "df5a3d04-3dfd-4b2f-b498-572398056fee",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7fac17a6-a9ae-4439-9382-b7a21e2780da"
        },
        "item": {
          "id": "928fb417-ed86-47f9-af69-2f669a9f4786",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d23a2c9d-8292-41de-a72f-5f46c82c1244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5bb4ba-fa68-4ec0-8a02-f9d46863a5d6",
        "cursor": {
          "ref": "dd1a589b-9cbd-4239-947c-a6bfff4996b9",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b8c1bb92-db84-47b9-b202-50abfffd9e13"
        },
        "item": {
          "id": "8e5bb4ba-fa68-4ec0-8a02-f9d46863a5d6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "030ab3ab-a99c-421f-9384-3b2c322e5f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686b61b1-6a2b-4285-a42f-720571a7cc8f",
        "cursor": {
          "ref": "2745c93b-da23-4111-8765-03f7b98bb3bf",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c395baee-dd3e-467f-afce-27191b1eb202"
        },
        "item": {
          "id": "686b61b1-6a2b-4285-a42f-720571a7cc8f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d185b2b8-849a-4c65-9608-a6f5d06ec75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed696fa7-fc12-4fc4-bded-aa58897febbc",
        "cursor": {
          "ref": "8035f516-c56d-4081-a979-3d359e294585",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "183b01a8-a736-4013-815f-e844b5d9a45e"
        },
        "item": {
          "id": "ed696fa7-fc12-4fc4-bded-aa58897febbc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "65570d77-d603-45d8-a336-6c830bf88702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3d5766-6c90-43b6-9171-0a53c8512827",
        "cursor": {
          "ref": "27f79a78-578e-4310-ab7b-5fcf68a42a04",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0ee76991-8ed8-4f67-ae93-864316a27945"
        },
        "item": {
          "id": "1a3d5766-6c90-43b6-9171-0a53c8512827",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "61109af7-a9b0-411e-9822-e77683d96fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110d219d-c7fa-42f2-bf1d-71b29183d232",
        "cursor": {
          "ref": "561cfaa7-501e-46ba-a80d-68ab30a53e19",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "59945ad9-c7ca-418f-9d76-e27c78a10741"
        },
        "item": {
          "id": "110d219d-c7fa-42f2-bf1d-71b29183d232",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "04295f00-16f3-4f49-b7c9-690c5c2ee074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf8fd96-9ae4-41e3-af37-5f723dc64a71",
        "cursor": {
          "ref": "d0971d86-c0c7-4ea4-a6f9-30c8801c7958",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "943d886c-63aa-4ade-b2f3-ffb6a40a158a"
        },
        "item": {
          "id": "bbf8fd96-9ae4-41e3-af37-5f723dc64a71",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4c9fcaac-9958-4cf9-bc38-b15a92bcde87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38dbafe-f013-4bbc-bf23-819b47e32ca9",
        "cursor": {
          "ref": "49602eac-5581-499b-b466-0ae0add7ae9d",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f846eb36-93bc-41c9-be5a-0223ca6b14e5"
        },
        "item": {
          "id": "d38dbafe-f013-4bbc-bf23-819b47e32ca9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3b883888-831c-4f9c-b0ee-5a15052396b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4edf03-45a9-424c-ba92-308f17e20a06",
        "cursor": {
          "ref": "9112cf0a-cb32-4b09-80d6-0c9f968ca622",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "571da5fe-c1fa-4e16-ae99-7fe1ba22d201"
        },
        "item": {
          "id": "1a4edf03-45a9-424c-ba92-308f17e20a06",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "00aebb91-8419-4326-9c9c-173ceafb1f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac9d6df-5b21-4b43-81c8-f772c3781953",
        "cursor": {
          "ref": "29e6e16f-a899-4522-be31-ff830fe43336",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "49aaef36-cf85-44a6-93ce-f6cab6811135"
        },
        "item": {
          "id": "eac9d6df-5b21-4b43-81c8-f772c3781953",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "26edf291-13ab-4dda-9071-862ddcff5434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc673dc-9230-40a6-b3e7-aa0b4f6a3a5f",
        "cursor": {
          "ref": "38ad4811-4a61-4b91-8839-46493644f874",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "51038d95-0dcd-46af-815a-adf614a4a297"
        },
        "item": {
          "id": "cbc673dc-9230-40a6-b3e7-aa0b4f6a3a5f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3bc5d232-4c53-45ef-a8d9-f6e7fdf191bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f058401a-3cc7-4513-8d3f-d53ee7f6df67",
        "cursor": {
          "ref": "ccb5561f-f5d1-4b4d-bc1f-d45531cd3c21",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c7d2c947-f7ef-4253-91cb-090d7451b22d"
        },
        "item": {
          "id": "f058401a-3cc7-4513-8d3f-d53ee7f6df67",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4d8adbb8-d5ab-4e09-8db2-3de91913a263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92b705b-7fd2-43b0-bd29-b2ce7f986d72",
        "cursor": {
          "ref": "bf29bdc9-080b-453a-8cc2-8ca06fd64dc7",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cfb481f0-691e-43ca-a396-721c27860e9a"
        },
        "item": {
          "id": "a92b705b-7fd2-43b0-bd29-b2ce7f986d72",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b61630b6-8311-49fa-ad45-0430f510ce51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7aca932-60f7-4fa9-9fc9-6fac6f37de60",
        "cursor": {
          "ref": "227cf41a-b621-4951-a1d8-291cc33ae2ac",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f24ffd8d-f400-47b0-8770-0605e87c04f9"
        },
        "item": {
          "id": "c7aca932-60f7-4fa9-9fc9-6fac6f37de60",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7f360bd1-497f-4744-a529-c204fb3e17cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880f01a1-9ecb-4348-ad47-34a02e1bd44b",
        "cursor": {
          "ref": "fd4f2181-b1fc-4015-9f58-66be7a7aebbf",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ef13004e-c2d6-4291-8be0-5bb1ab31e602"
        },
        "item": {
          "id": "880f01a1-9ecb-4348-ad47-34a02e1bd44b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "be8a8846-2742-44e0-9179-83472763ba82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3751db9b-310a-40bc-b216-89719ce2d7dc",
        "cursor": {
          "ref": "3a66fb2c-735e-4293-8e75-19206ea6ca0c",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d8062a3a-456a-4592-a95a-b05d7f38a5c5"
        },
        "item": {
          "id": "3751db9b-310a-40bc-b216-89719ce2d7dc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3416143b-1305-44c4-83dd-dfef4e1d52ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab4ebd7-a267-4e93-afe9-4d0d9113da29",
        "cursor": {
          "ref": "841f63d5-37b3-4b5d-8199-e57b0783bcc9",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d5b7273f-779f-4783-9c52-0f25408e95ba"
        },
        "item": {
          "id": "1ab4ebd7-a267-4e93-afe9-4d0d9113da29",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7fee525f-3f2f-49fb-9b76-06460a2a3a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8da44f1-4c47-4012-887f-dae0cc5e551b",
        "cursor": {
          "ref": "9e9a22ef-32b4-41ab-afc7-f3fd3be0222c",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "192d8698-3e2e-419d-846a-d95ef060ad3f"
        },
        "item": {
          "id": "d8da44f1-4c47-4012-887f-dae0cc5e551b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "701f3632-70be-4fb4-9738-45feebd15c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a44bf0-06d8-4bbb-a282-3e7d51689e3a",
        "cursor": {
          "ref": "e301edc4-06cd-43d5-802e-af0af3f00491",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0a8f5cb6-be30-471b-9b55-6665297364a8"
        },
        "item": {
          "id": "92a44bf0-06d8-4bbb-a282-3e7d51689e3a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dfba0981-bec4-4a8d-9f26-40d0c10c5481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d72596-8f82-4711-a911-4f19cc7d93cd",
        "cursor": {
          "ref": "c88f2136-3bb5-4efa-acbe-2613b5396efd",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "01ada069-6f5e-4fb5-91a9-a5713e8faac4"
        },
        "item": {
          "id": "03d72596-8f82-4711-a911-4f19cc7d93cd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "52a4f919-dc21-411e-b05d-279c2b86ff9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb0c02e-fde6-4e98-b4d0-cd4a9a8ba701",
        "cursor": {
          "ref": "a1e056c4-d148-41ac-98d9-86975aeaa273",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dde6a93d-075b-4d4b-9229-1080a739ad6a"
        },
        "item": {
          "id": "9fb0c02e-fde6-4e98-b4d0-cd4a9a8ba701",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d4810aae-d363-4981-bec0-fcdd7a8a4afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa91fb29-6f0d-4b35-986b-50bf12e64d6d",
        "cursor": {
          "ref": "338f7de0-494c-4969-8180-d9effb2b0747",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "13dc5e13-70e5-46a8-8579-1f8a8584b7fe"
        },
        "item": {
          "id": "fa91fb29-6f0d-4b35-986b-50bf12e64d6d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3239b073-742f-4781-961e-de4140b3c2b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6ac5af-3ffc-4938-9fb1-c004e823516b",
        "cursor": {
          "ref": "7bf1b299-c310-4c41-92ab-95d836b31dd4",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8c4964cc-9e11-4825-9f77-cdcb2cb90c6b"
        },
        "item": {
          "id": "2c6ac5af-3ffc-4938-9fb1-c004e823516b",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bf17e420-7503-439b-be6b-fe86a3f7035f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 71,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b4cfeb-3898-4a34-ad10-5dba98e8064b",
        "cursor": {
          "ref": "344a26c9-a9f4-4cd4-a3c8-fa617bb64be4",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "71cbffbe-4961-4b0e-8b42-a77b3e8f8918"
        },
        "item": {
          "id": "25b4cfeb-3898-4a34-ad10-5dba98e8064b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "63be34dd-bd5a-4a40-b9b9-31b59aafbc66",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4f6340-a4c4-452c-b777-e0892a4b06f0",
        "cursor": {
          "ref": "a426c5ed-593a-4a90-b536-addcfd965601",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "96e8149c-2479-4bc2-a0ff-d4bcd90e933d"
        },
        "item": {
          "id": "3a4f6340-a4c4-452c-b777-e0892a4b06f0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "675b4db9-c219-4a83-a3f5-afaf6380fa31",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b2f39a-fa02-40f1-b02b-07f4227b8d98",
        "cursor": {
          "ref": "5a98af5f-c4fa-466a-addd-121009922feb",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cfe57aa5-b70f-4b82-aad3-5b0a6e8c3bae"
        },
        "item": {
          "id": "32b2f39a-fa02-40f1-b02b-07f4227b8d98",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d67cbe07-834e-42ba-9f9b-73ad4ca85fe5",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc1cdb0-4b7e-47fd-a305-a704962bd42c",
        "cursor": {
          "ref": "f44b8df4-8baa-4a0b-9fae-4440d49dff3b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c90cb7e4-5917-4fdf-8709-6f4d808c5d5f"
        },
        "item": {
          "id": "3fc1cdb0-4b7e-47fd-a305-a704962bd42c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "25814cc3-1e01-41ef-857d-b8d1d176294a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc1cdb0-4b7e-47fd-a305-a704962bd42c",
        "cursor": {
          "ref": "f44b8df4-8baa-4a0b-9fae-4440d49dff3b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c90cb7e4-5917-4fdf-8709-6f4d808c5d5f"
        },
        "item": {
          "id": "3fc1cdb0-4b7e-47fd-a305-a704962bd42c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "25814cc3-1e01-41ef-857d-b8d1d176294a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc1cdb0-4b7e-47fd-a305-a704962bd42c",
        "cursor": {
          "ref": "f44b8df4-8baa-4a0b-9fae-4440d49dff3b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c90cb7e4-5917-4fdf-8709-6f4d808c5d5f"
        },
        "item": {
          "id": "3fc1cdb0-4b7e-47fd-a305-a704962bd42c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "25814cc3-1e01-41ef-857d-b8d1d176294a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0e0f87-d150-484f-8504-087061108aa6",
        "cursor": {
          "ref": "ccf56846-844b-462c-9e05-711a4bfbf08d",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "33fc8618-5792-49d5-b0c7-c617a9f979d1"
        },
        "item": {
          "id": "dc0e0f87-d150-484f-8504-087061108aa6",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d69a5df6-2b7f-472a-af30-39a14a3490e0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256b8bd1-daad-4552-95fd-07ff1ffa985d",
        "cursor": {
          "ref": "987b1472-1b1e-448c-a555-efb9506cc9ab",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9248a49d-829e-4539-b189-2e6fad6183c2"
        },
        "item": {
          "id": "256b8bd1-daad-4552-95fd-07ff1ffa985d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "039af6d4-1651-4615-8c63-9dd1bd32cc2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256b8bd1-daad-4552-95fd-07ff1ffa985d",
        "cursor": {
          "ref": "987b1472-1b1e-448c-a555-efb9506cc9ab",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9248a49d-829e-4539-b189-2e6fad6183c2"
        },
        "item": {
          "id": "256b8bd1-daad-4552-95fd-07ff1ffa985d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "039af6d4-1651-4615-8c63-9dd1bd32cc2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eed3ddd-15d5-499e-aef5-9cbeeca0534b",
        "cursor": {
          "ref": "fd2c6772-9a6b-4fe6-a27d-a93592eb3acc",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a970bf46-fdc3-4d2d-8ca9-c85011277530"
        },
        "item": {
          "id": "3eed3ddd-15d5-499e-aef5-9cbeeca0534b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "b0990e6f-4c51-4e92-ae31-66f9eda93d3e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d386ce6-cdd8-4c48-be93-bc0c0286f160",
        "cursor": {
          "ref": "d39912fb-1605-4b5a-902c-7af97a759819",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "47009bc6-8c1b-4301-9fe5-97322c8be910"
        },
        "item": {
          "id": "4d386ce6-cdd8-4c48-be93-bc0c0286f160",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "07f3f1cd-d0f0-4454-895e-a73feb59975a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d386ce6-cdd8-4c48-be93-bc0c0286f160",
        "cursor": {
          "ref": "d39912fb-1605-4b5a-902c-7af97a759819",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "47009bc6-8c1b-4301-9fe5-97322c8be910"
        },
        "item": {
          "id": "4d386ce6-cdd8-4c48-be93-bc0c0286f160",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "07f3f1cd-d0f0-4454-895e-a73feb59975a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70853b0-9da1-4312-9773-8b12b23ac158",
        "cursor": {
          "ref": "7229942b-1948-45fa-8e60-b10aa4e25368",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e875934a-217a-4f1a-a7b5-9156a6ea682b"
        },
        "item": {
          "id": "c70853b0-9da1-4312-9773-8b12b23ac158",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "f31e82b0-b927-450e-a4d9-da409d5fe3e8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 62,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}