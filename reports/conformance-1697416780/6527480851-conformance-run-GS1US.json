{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "739e9da4-2357-451a-a6f6-181ea03858c6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e116481c-1820-4578-a851-5c469c34bdc7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13f2e92d-19b7-4514-98c6-e94b360d19ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "904eabd3-3a4c-437e-8b03-4e2ff0fcac26"
                }
              }
            ]
          },
          {
            "id": "7b8f0230-cbb9-46e5-979c-b39282385492",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d95aafc6-2241-489f-bc96-d02fcf81688f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "445a758f-1e73-4443-ac23-70af8b29d272"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "269ece3b-6a54-4b80-80e4-8d74b93807bc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d6e298a5-67a2-4787-b7e1-48d57cfd9e91",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d9eaf40-c6f8-4b71-95f9-efff80b85358",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "381f309d-5410-4644-ad57-146babbe4a1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e85a4980-69f1-428c-a095-ccaafed02a8e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd295175-d942-40bf-b5bd-d23870553026",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ecabc3f-454e-4a36-bc32-d9fc7404a73f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cba7f33f-1df3-4d24-ba09-5871a121b3e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "302ba90f-5e92-41fe-91ec-2ecc0cbbd142"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c1cbc7c-f1a9-4aa8-87f0-05adabf70456",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3bd869d9-55d7-43bc-b00d-ee569145c5be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "987e8119-ef1f-44b0-8b9f-7fa6e9efdece",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd02a773-b9db-49d0-bfa3-aeea5ff9a723"
            }
          }
        ]
      },
      {
        "id": "6edcd2b0-048d-47b8-b03f-11db43a5dbe2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d3a31f51-c9aa-45de-a0b0-870dc1189b93",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1202f9ac-55b2-4258-9ecf-c22e9fc342ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7710269e-6c67-406c-ae70-ca384a3957cf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13bb42f-6c63-4eff-a092-519a41af0ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e281e76-e498-48db-a75d-c8887f25753c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f5ac06-d049-480a-8c81-dc9ecbf79fcf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfda070d-3a85-43d7-871e-9f048fc6befa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41b0a719-63c9-4afd-849f-79340916f169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716f1b42-4cd3-4618-9cf9-ada62eeccfd5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cf5037-7792-4570-9a5f-b62be23fc91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75828da4-b6f3-452e-b6e5-910f1e0f2d1e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad586ead-18ba-4732-b425-928ccc55c6e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "588ee07a-1da0-4558-9768-8e632d21bffe",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3040edf5-d882-4ff3-9ce1-320ded48996e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8352285-185d-4bd6-8b13-9003068fcc86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49205317-e4a1-4e09-941e-9a647a8e8d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7ce566-7d13-4fc0-ab21-314995ebfdc2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0c0f0d15-de78-4eb7-9c4c-144f24d0a6ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9b4c7221-ebf2-4b58-bedb-3c6449201b91",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d958efb9-db36-4195-b53a-672fadf4b938",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "864fc4d7-705b-4c91-9c9c-2ad44da93a7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e739fa2f-a49b-42a5-853b-d168eafe3f9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4f40752b-9f18-4618-8967-c4e8dcf97ff0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54a86beb-ea57-4618-9ead-5b8fc5113fed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5337368f-f053-4c6c-9698-9c0e85be0136"
            }
          }
        ]
      },
      {
        "id": "f2caaf60-0bff-4830-b065-aa15d83c14ea",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "64589a97-fbfd-4f1f-80eb-0b43f75c6937",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eac12461-53e5-4046-a29f-2ecf1678c14c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "eeba2f7f-8d73-489d-b05b-9162ddb35c23",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb593dd2-3594-45da-8411-23aa6308f7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00da172c-30d9-4055-933d-5ed5fa0db8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9531c27b-f938-4e9f-807f-ced9dc14ef80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdd70ac9-8538-431c-a33e-433f05f2f5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cd4f6f-bffb-490d-8ad5-d6f7b10bfead",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835ea3e1-62b4-44cb-a90d-08cd44dc579d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f44fe7-8a2a-44b7-90d9-89a9e9e16436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23794424-bc73-4d83-b8d3-96531888645d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55543d12-9239-4e39-89a6-a7748e0b80ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a8d1ff7-bad4-4e14-a505-f88dc7743bd7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943c92cb-06b9-4bbe-81e8-1285fd4966e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722a4bad-5fcd-404a-bfa9-6097f53ee388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c208a8c5-eca7-4cbf-9c93-918878966b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6884445-d892-40ea-a43c-7c34a29158c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b1aae8-6aad-40ff-8c71-1dbbe6fd4e0a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85dff24-d50d-4e0e-ba7a-f2db4431a70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e921012c-d8e8-4968-8ce4-a06a6c4ab61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb308ff8-22cb-4aa3-b08e-e586171c0fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6709340f-553c-43d1-9c21-cce5664aa149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1d593b-1311-4098-b71d-c7ea0b5d468d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b70e70-cfef-4e51-8aaf-32c741e6a736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc988723-efea-4eda-a25d-e07079e280ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a4b8b0-a2aa-4fc6-b785-73eb52fd0e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5c89bd6-a5c2-4016-b01e-79c423a06de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb1d67a-7c14-4ef5-ae92-75995f603f3c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f112e0-b966-43cd-ac17-8ced1b042bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81ebad9-833e-44a3-b497-c3c3a6f3ce72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb6b2fc-9cbb-43d9-a576-6edf78bde35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a719062d-fc82-46e0-a712-ce06379d03d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21170b6-b798-407a-8fc4-ec8a16be64d9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bbec75-63b5-4b5c-8e28-56967459530d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7049b6-9612-460b-be70-1824f6225a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e940e0-8359-440e-9d17-763b7ff67c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6576203-4bb4-456a-9f84-162ea5f91c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5279dfb-6365-4041-a456-b634edf70444",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd280dd-6e83-4fb3-b079-619fb26a25e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cc8768-cb41-497b-bc2f-81cf2bd1f5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643ef8a1-1ca1-473c-ad61-e43a3240f9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a5c8331-fe73-4af0-be0f-77079f8ad919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af31fa93-b9e5-447f-9b83-80524fcf085c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430dd8ee-eea1-4cf5-b062-0a85fd0765b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94ff851-8943-46a2-b4f9-b18a98a29a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90116a33-00aa-4e0d-af46-5e2bad6fbe49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2805c61d-5150-45da-9f7a-d3956fdfa226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9106465b-a133-42e0-8c57-684a44eab533",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f143f2-a953-4627-9953-ec3b7ed92d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5b1804-1e51-4179-8b22-20e889e37c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef34532-1369-4be7-a981-a4cef06da0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa4416f4-1cc6-4345-b293-1cfe4041ddcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7fc05a5-9b87-4892-9672-bc681ac082b6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d0dbe5-ff46-430b-8191-846686d90bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1b8c55-8c90-4cbe-9bc0-131d16d39293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7d7e9a-0667-4d75-86a5-716489c61596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11b60ff2-390e-4b66-8801-168cfece7c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b72f472-cca6-47a2-afce-096dd90b5748",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3e79ca-e9f4-49d3-adea-07e25fbc0043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4d0910-fa08-4742-a9ba-3d855065aa6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1da40a-7fee-4401-be17-4bc586d87a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ad7be0a-5b2d-4b3d-9cff-6ff8f5c90d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a0de91-e8c1-4cf5-b2d4-8e1406bb1479",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df91aa4f-046d-475d-a0ab-b6929cf37960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be39b065-6fc8-433e-91fc-19ed83385e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2e89d2-31d5-4ba7-be0a-b150ba2f69a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ce94946-e43f-4397-803f-c3ef03b033cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e27d7a6-ff6a-44c3-a0f2-53629398f9ea",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c10d60-48c7-4c21-b636-3ebf061d3577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6e4670-5a90-40e0-9eb6-58dbae5ae1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc1484d-8fc1-4f64-81a3-feac74c631f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5360a77-4b69-4021-bc99-0e4478d6cb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382ec95e-2a5e-4aaa-b92d-0bf57833c299",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41d5da1-0a95-4751-815d-b73c8151fde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f85c5be-a9d2-4cdf-9a58-00f5f56b6649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d14266e-3b76-4e8c-bc7e-9469b3a187c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8553d6ef-0366-4ec9-9be7-c490ae878cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90769e3-c308-4289-8106-2fb4f9e1b4a9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2147d1aa-afe8-4166-854a-52448a008c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667fa556-7f31-4c9d-b4a7-d410f6a5d4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206328db-c298-46a8-8e7a-9f8c1eefc1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f30d8efc-c9b9-465e-ab7c-2b1eab7cc75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e67116-ed76-4132-8ec2-775e8583e85f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60574b3-69f0-41e8-a026-baf45aa34054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512ed72f-4f0f-4891-92e1-657b706073b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b49668b-43af-4d78-9ca7-9afa142bbc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2114a624-78ca-4d4f-88fe-5da55b3139bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fbd630-aae5-4ee0-9cde-e384833fd526",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c64098-42d8-41bd-b3c8-5d955edb452e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f403c3-152e-47d5-abeb-06c00ba7c099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51c25b8-769b-4eb7-bb55-555a16a4386e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f12f97a9-b777-46a0-85a4-817965b58eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66b6b18-9536-4e03-8363-a7c4644342fe",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c6d63d-7a93-4e2f-88cc-05deb25df3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94767af7-d087-4817-b728-cb440e3696f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa08934-06a8-4eec-96b6-ad028a10539b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15b8d981-55d7-4876-b7ce-7d9785ddf8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1e4ba4-994b-4131-92cf-8b69fd4b5f5a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ef41b4-bc2a-4af4-90d5-de0a9deeadc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15086b46-baca-4f69-a9fa-7a731de01187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf898ef-06f3-482c-92d6-c44ba3eacdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9e4015-4ed8-4eee-9fa0-a1fbd22f3504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9026cfc0-b742-4bad-b3e2-961664b2577c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cce1d4-1d5e-4fca-bbb3-e89029b25a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19688b02-a30c-46ed-9fec-14aef5492bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb3647d-dd9d-4c47-a6ac-d0dc34835bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61b7d747-3b06-4f86-88da-bfe8b4016249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bdcc82-c2b1-4425-86c7-236cf68b190e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04089cfe-0eb0-4b06-8936-2845e90bb73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41da908b-a586-4c99-89e1-9982dc38c79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639750af-5cb2-422f-8165-1642a224dfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9331a7f9-b8f0-491f-a241-6806f4497300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c49b96b-9475-4114-b5a2-3bccba8c5773",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29329702-81e0-472d-9017-82f716169bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bcd3787-9204-4bf2-9274-8802deb2a6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85304191-2493-4b3d-aa6a-e29952e811e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd78570-a7e5-4efe-ae0e-556050ed01d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c5c7d5-a519-4982-8c14-b5f4e32e6309",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0027f32f-be2a-408d-b0be-3c7c5d292bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17bce05-c6b2-42e8-bc16-c24d8f9099ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c366010a-85ad-4a5e-8c73-db87c573afed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d1d877-b75c-448e-bd1a-86b133a2fc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83d7024-ede4-4c6a-8aae-d0986035167c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94236b02-7acb-4ecb-b788-deb6e9201903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0340afe2-6a6d-41a4-8ea6-203483db00bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e1c4c3-dc41-4191-9624-c81c2c09d04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09fb573-0dd3-4d43-a195-4f84a08325f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148a284b-a9c3-4342-84fd-063367090e19",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4ec449-b67d-486f-b3d2-3127fdee9362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75188d2-fe52-46e6-91b7-01221124dce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d406038-05ac-4b23-b537-00e58833674c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f83bdb08-dc74-4ac2-b8e2-edc88035b41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2abe45-ace2-4a1b-a388-b1430839d703",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c3023d-9c87-4f31-8026-38c6491b32f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349a73a8-8cc4-4996-9632-9710c72e9cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee232ea2-f0dd-4429-9607-8e42ef2161b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03695bb9-2393-4045-b5b7-8d8b9c607ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad590dd2-799c-463e-89bb-80a03c62ddbe",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fb4416-4be5-40d2-9f02-1b98aeb402b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e868ed65-effb-4e92-8c7c-0b084d6e45b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec07fc4-d4bd-4110-974c-b42ac718152f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c42091f-a812-41ab-a912-b568f5e4205d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd3833f-d64b-4507-9d8e-56743bf7c06e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca81a49-a953-4f82-92ba-314848331945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca10d8f-ddef-4447-98db-d6d57d6943a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fa8226-a600-4a28-a7b5-56e7c65b76a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "643141fc-bd76-4991-8944-9daac2c53aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e5f6c8-5803-480b-b90d-2f5bb8541879",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86645405-16d5-43b0-8636-a95e452cac96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6de33c1-aefe-486b-99ab-7f57f2f51708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e51144-e6d3-4ed2-9de4-196d1b086fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "65f6b5df-ff24-4e04-b223-acd4adaccea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365f29e1-169c-4f75-ac53-4c6fa7dd0e5b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5277ab-8b31-4e5a-8697-b8ef30711349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd4eb40-7394-4e7d-aebe-9bdd016d37db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8b1037-04fd-42ee-bd69-d103fe0bdc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ad4134-b788-44f2-a737-475162627fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e475a8-37c5-42ff-8683-4ea574a38794",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8861339-a247-429a-a303-839bab635686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f673f5d-18f9-40f7-b8de-2765fc8c0fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b627b0-4bea-4849-82ef-0045a2ea30f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "accb0509-045e-4f92-90e6-6f897cb16189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60fc849-46b5-4669-8980-5c1c45906b7d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bcf2d7-d0e9-4cb5-8637-0616999f4337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110e8c62-af02-476c-9d67-f9421907db91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c61ae6e-9c24-41e7-87c9-4d1afd0f242a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71ac0dae-4f14-4f5e-a230-368990bf7c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f20c168-4d60-4d1b-8779-8cb96c962200",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba73d8d5-1ed2-4175-9079-0fe3c25f9be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70b7552-ead9-4f2e-a188-441f2cc29479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17214c5e-762a-4982-b03d-d6a256537cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e5907a-0a19-45b0-b8d8-3b3e496e3dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360514bb-9e7b-4531-8793-890577384eb5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c8c4a0-252f-4e6a-8087-32d12849b0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9538dbb2-cc29-4dd8-9102-b5289febeb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca7647c-2123-4c36-9491-a636ee31da32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a2532a35-ab35-416a-9a06-512b2ea786dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b515a32d-39ce-47fa-a2c0-b0333d7f5275",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecb5d3f-a789-4e4a-8ee7-85609961f8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67c29970-59c9-4cba-83f9-5625098bccaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26e8b3b-e20b-4d6c-b2be-b384cf1f167c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ebc7f0-3f7b-4491-b76b-68d9fde6d52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db978aff-f9e6-45ca-8cb8-3ef67662b3e9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e94c5d1-1f43-41e4-852a-eb2d00ce970a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a606740e-3dd5-4fbb-8cc7-40d1440c7c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8aebed9-9317-4250-bf8c-7bbf570750d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48c9a702-f9cd-4a50-a16a-a0aa9bdc3728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73822ce4-ad92-4982-af7c-fc4c1826bc64",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e11b091-13be-40e7-839c-6731328a3b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073b2672-b728-489b-80f8-4319ce894bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc47a44b-b3a9-4db7-be67-b36cd5d23194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ea3043-3df3-4fd9-947f-58edab92a612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4cad85-1fcf-4e0c-ba6b-590e2319258f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e9215f-73f3-4b4f-b5d3-7eefb1053948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a1e4e8-bade-49c5-9ec9-98a02f232968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75ccd55-23a9-43f0-b74d-c87c0b8dda04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8a4300-54c1-4739-9ca1-3d02c253a005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914dea15-0c47-4213-b340-443038169287",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef5ef72-75c3-4930-941a-5f9f1a850eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdd1038-c4bd-494b-ba68-c3bb33b859b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0447724f-f27c-4dce-94be-fa79ed1dc1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc5b973-f6cb-423c-ad0e-08adb190673a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfc5fae-49c7-4c6e-b2e9-9f75180c262c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f439cf2b-94f7-40a7-9353-14d967de46e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46572da0-5b7e-470a-a349-5ac69294db03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a672801-b083-48d1-839d-03756fc59d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9794717-dbc3-4c7a-9233-a432efb34e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12245884-de82-4d2f-ac0d-80ec3823d651",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0767761-5c20-45d0-b3d5-702d554733e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339a7b5b-552b-4a69-832c-b730e09f465e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0861afa1-553c-49fd-814c-60f23072b7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "777f2c79-3655-4cd7-b667-d0bdad54c1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351d7844-dff4-4d86-830a-d771b7fc02da",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a059407d-8d77-4ec2-b361-9ef123c3c149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5541da52-2d69-4518-ba94-34d7372ee4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa829fe6-c66b-45e5-b1ce-0e66f1d53821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e361d78-921f-425d-a953-493838cb1d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2dfcd9-f85c-4099-bc10-b7a968d818e4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b0300e-b567-4905-afbb-1c32096deea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e89459-bff7-4f44-a75e-beb8b3df59c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f26607-b65b-4b44-a09f-78f84a474b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9e8e91-d86d-4df1-8efd-8967c8b5e6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6421bb-ccc3-47a6-a7b0-6caf60e6e728",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f723ab2f-6c16-48d2-8578-4992e87688ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddff4366-e8f5-4cef-bcd0-8262c6c55544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efc92cb-f53a-4a74-9812-ab5f8ef49224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d22b32a8-caeb-4075-9780-09b3e17739fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648e2a16-f77e-4d84-8129-6fe076376177",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71952e65-2527-49e5-a30f-98f3f290211d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf806e3-dcce-44fa-a9c1-c78d053fd214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac14777b-6526-4975-a31c-751ee2dacec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a87f8bea-3cc8-4253-ad67-90fa97574991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17866db3-7ba4-42ee-8d2d-d6e5ed45c166",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d054a4-4866-4850-8549-afd2be1c3000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4267505d-fb12-494e-96be-578b02b6ea8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3499088a-6c47-4c64-a387-71e5bb7ad5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49629eb2-1dda-4ef1-89b1-4118089a193d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee548a1a-98a6-4b72-9938-00f7e506f9a7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca88516f-54f8-4b4b-9826-bfa82c891f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85d11e3-6477-4bf1-a212-a60e01e7f36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdffc615-291a-4457-8855-f61e329c920b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c26485-fdf4-4a71-8c39-2a33ede7a05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa681f5-cabd-4536-95ee-6f02f45c6690",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24519a66-951a-4112-9d3e-d56ab3455560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ded524e-79fc-4dab-83cf-bbe30f2d88c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1c5d12-e1ba-45a4-a373-803bed8dd62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9fd3b5-637d-40ed-aa82-166a8e36b7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fcb022-5934-4f06-9926-20a1d8971ba2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8953cba-f8a8-4178-bd69-0ef649bb4808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f543fd3-3638-420d-acf8-64ea834ab750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddac843-3c2c-4083-b27d-f17af51d6cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08336113-f559-4f85-a99d-db24205fd7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a09e12c-9981-477d-9c19-7edfe05e64bb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779645e2-25e5-4616-bd56-ba3a2d3b4566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d94281c-fe40-43ab-8af7-b2af988367a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3df2cb-50ac-4b86-aea7-6b59e8ad7b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "21ede045-77d6-4096-8dba-df1f3cc30305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4808f6dc-0633-4d8e-a58d-e04ff446e642",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96aad796-2a2d-472e-984e-123dbb85c92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4377aa93-3627-4888-83c0-48a1d11a6c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ad665c-3793-4936-b485-1af5b911e130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60a620cf-30d8-4cee-a742-f2f79a5d39e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6444946-c7c7-4fe4-b51a-a84a05641623",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b81500-49d1-4f62-9fba-0fa9a7a09fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a055fcd2-493b-4799-a81c-8bfa6c3795de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e1bfe9-92c8-4a36-afb8-4aa7fcd1624c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cada5e39-48c9-485a-8653-bc8a3158771a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e2d7af-3917-4945-a182-fc2da73a3584",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7c413f-aafa-4d73-849e-aa5c0771e797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c9f394-2f89-4fde-80b8-5813f0857f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c429c8-26fd-4e9f-80de-f086ff567a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73402439-3e66-4032-a349-6fcc76bcc086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0d363f-c2e2-4b81-b682-817e7eaa818e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3be4643-f5b2-4a71-8cc9-e71b5aed2241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a021d0c6-cc61-430e-b2b3-93d90752e047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b953b79f-4ba3-4874-831d-026fddc386a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57300cc9-0c3e-4944-a764-5c9ac2147397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8550f2a4-a247-4143-99d7-8df44ccdc175",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8371d479-bb7c-452f-90b3-11d3e4383e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c91223b-1554-496c-b42a-3e33f4b0dc78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1c26fb-aa63-4d55-b4f3-81635ef0cec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "24eadf8b-f7fd-4711-a353-d65185579a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e63602e-ecbf-460a-8e12-f186c5f1970b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ff580b-6bdf-4e13-99e4-2446f447f73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a926e11d-5e8c-4776-a3f4-af95c8cae1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548cfa0d-e1e5-4a56-bf83-c9449f80266f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f32e393-8bf9-4c0a-9379-f8ad45b23475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b7e0eb-4f6d-495f-9844-e1882cf077bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bc0670-d5c8-4210-a1e3-baf5d5a549d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7409d8-de41-4bf7-92c0-b8c76cf82109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e42ccb4-c2bc-4891-84e1-8929ad31d400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7c9c29-7372-4cb7-9248-5156e7af1b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e729266a-aad4-4bf7-b15f-c9aa6d9fd66c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374dedf6-cff4-465e-b175-a9779855c968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269ce871-fdd3-466f-b36d-45360e199b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eccc90e-dab8-4c7a-b6de-b5e00c0c4b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9541e8-6af8-43ea-a50b-bd70cae2b854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615d63be-7e6a-4a4b-a312-8902b2c711af",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f101c5-a8a4-42eb-bab9-df4b2e0d088e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6f711d-078f-4ade-9e51-53258d09cab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f307ae07-d69b-4ca0-9317-90a092457521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e816c9a4-ff5d-47b8-a2d2-41be5518a177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9240346-4ffb-464a-9c4b-b5288e1ccc60",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5804589e-e6cb-404c-a1d6-4391ba77a805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56580a04-46ed-4bd1-bdc5-dc5f24de9640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3955947-7c16-4405-877b-630e8fc76d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "890fa343-08d2-47a2-b33f-c401f8f4eaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31356e81-695c-4c42-95d1-8bf0f594c0a8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ea5880-d5dd-4953-9a22-0cdfb73778e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326effc2-ed6a-4e47-b7b2-e5f24b6edd2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9daf64-cb5d-4943-8921-fe837b407c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e0c8c8-f4ed-4f7b-a990-f1712cd82f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f4508e-4f05-4e9c-9386-302836297f7d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef668b4-fdf2-489b-aa97-8c5d0eccf167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c481128f-d53b-4878-b9dd-f1a671424807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896d73d1-49e9-4d28-a31a-9f33718e65ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "76bef711-78ec-49ff-8cc9-c6bfa34e31f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24bf86b-c54f-4a5a-a492-1b1d81fcfb76",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940b0d9c-c8c7-443f-b2f9-fb23a9a5e87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7603823d-9db4-4521-8af9-0ece683d6179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a781f1d9-0187-41c6-a3f2-cc01a822e31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f394e931-be58-4d23-83cc-2ca312bb653d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720fe6d0-57e5-4b44-9e91-d18244b671a0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e1e9eb-b00d-43a6-83a6-84845fd1a932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3120f2ed-6d64-4706-abbc-daf68af9c066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f42443a-9ccf-48e7-b991-9e3b32ee403c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7fe518-7c18-4cd2-b4d3-93018e1e8d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f18e46-181f-42d9-a711-0ab99816fde1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2322e764-b2a8-4d23-97fe-40613e704d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed30a0de-c4e6-424e-87ea-dc6ab885dd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859be088-c75a-4b00-82cb-1ca69962b4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "530d081e-8d56-4928-ae4e-70ac50838b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6f96a7-f549-4ffb-b0be-41385af71b11",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3128d894-34fb-4bf4-8e76-987f69acfa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b831decc-9942-479d-8302-fc8a3d93cad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e028f9bd-c8ad-4cb1-a116-0ba9b53462bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0522237f-637c-4ab8-8b9e-8a6b4e6c0e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034d853d-10d9-48e8-be3e-6f8140bddd5b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a290b86f-d6f9-414a-b011-5493a1b1a91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ea4756-beb8-4b82-b6ed-57e816eb2cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91549eff-ff31-484a-a19f-50ea00bd1af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "86efd801-cc17-42c8-b24b-723389ce6289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ee9659-f7b1-42ca-9e88-1d15eb5be7a4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a986cbfc-ca36-4e86-bcbc-30e0e9b4f030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77010d4b-b370-4642-9def-573dffab3033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28318f62-feaa-4745-85e3-c1dd5add497c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c125faa9-e4ae-46f4-b176-daef23d53ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64666d1c-a4b8-4021-9d57-c1110ebe0d35",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6285a7-5b20-49fe-bc2a-d73ca3911110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b16cfc4-3ff7-499c-a02a-d3d055206341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f34934-0e34-4c97-a3b4-128c999c5ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b025081e-4a78-415d-a654-317542b7d240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72303e0d-f35c-4d9d-ab7a-d81dc4307932",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a986d7-ab09-405c-bc81-5320587cba5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb061b1a-d350-44b4-9b05-85f01fa2752d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f3c96b-783e-4854-a8fb-5b8b068e3f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d3b87d-a72e-4be5-a8aa-aa9722b9cace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfad527c-2bac-4b17-873b-37245b563ee2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a8357a-7087-49cd-b308-6a9f50e0ba43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b7c01c-f164-416d-9642-b9704365e001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f72099-6dcf-470b-9cd1-46443e0ba0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45df3647-121f-4dd7-acab-b2c5db6d1529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c3958d-8902-4f4a-a53a-ce0e4c619692",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfa215a-8367-47b5-83d8-9dd327ab70b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4b46ad-d498-487a-9e0b-0d21fc6d39d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df61881-9b50-4756-9ec1-5e51f24e3527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d52e91e9-a0a3-41bd-8c64-aff4742b9c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476bce62-84b5-429e-9b7e-c0bfc87b752f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afc48bb-6d93-4f57-9222-6c7ff1d1586e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a59132f-3b48-4da6-84a6-93d7d44854a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b567a736-7d77-4f2e-9048-8b0279c019c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af928fcd-8e72-4b57-9c60-5ad43c96620f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa699f4e-aabf-4bfd-b2c0-07c829606b58",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd3f9c2-5d21-4ed4-8aa1-eb8262b04c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360e9c6a-75db-46c7-aae7-080a5a68a0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64889ab5-b7f3-4247-88e5-9b150054d190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1511ceeb-2c5c-4703-bfc9-a6a6977c2118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf8f04e-729e-45ec-83cb-94785c5b5e4f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d632222-9282-4077-906a-e1a0ad898a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b493a06-85dc-41f5-8a8e-9e46b4f0113c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712c1184-8090-4603-a7ee-1c03e2f52b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab05a39-97eb-4bf6-b618-cb8c832ce9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127c207c-fd1b-4121-8d49-08ac8714d130",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3979e34-40f6-48df-be53-a153a162ede9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad5c331-2b94-490d-87b4-8ef2b58aed53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ed9b50-2ecd-46f9-a580-67b7614329dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57b25d3c-0e66-4df5-85bd-9806a119524a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953e6b71-f186-4ede-a436-819845ee2722",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904666ab-2054-4fca-9c80-06c3c0224e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3747fd94-183c-4c56-ad37-fd868a604d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc2fb6b-8354-40cd-b7ab-548619468351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e12095-f1b8-4a27-8afe-c2e5bf03a92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a3bb43-048d-401d-8e29-0be71d67cca1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e44727-f66f-4191-8ebe-641d77cb62a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb1d994-dd37-42ed-97c2-6882cb24d553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4a6655-a23d-4b30-b500-46a97257e2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fca6eee3-99e1-4db2-bb7d-1cde2434fc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cc9625-d794-4ebe-8c98-276a2720e29b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a6ca06-a7c2-499c-877f-3fc3b513a9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5821faee-78c7-4d40-a35c-94a1ddfdb4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cf1c42-4dee-4bea-b86f-c26b77a3c7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07862e85-46e7-4e09-b072-45e3462a9f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e856c95a-e70c-4cde-b68a-2cc9b64f70a7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ec61c7-7f39-4dac-81cf-9852d5f7b80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29029ab9-454d-4910-926a-ca75f4313a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd396d95-fdc3-4706-b120-629f37ab8cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bff2967-545b-4587-b877-6ba3f527ed1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0914ad-5c7b-4c5a-bb6b-8a72dc7489c6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a414014-09e2-4748-ada5-161211416bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a61ff05-68c9-4966-b978-7728e08640d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfec1d89-b053-4f47-bdd8-f2f11c8677ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "360c1139-d47a-4dc4-9d50-ae557bbf1ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb2381c-bfd3-4513-a349-b2af2ecc0a29",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002111ec-ea9f-4535-b51d-ac51dc94d3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfe7ae8-93a2-4cfc-8036-56c125699f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49793a9-74cc-49c1-898c-404b3ec3fe51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8cfa348-3a94-4933-b4f6-1e369760f456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb64ba7-2460-4d2f-9da6-c4798e0b021c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5847e569-1d73-4398-898b-6f3ceb7d0c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff498aec-2f50-46d6-b39b-d9fe9b2f26c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d60a2f-4cc9-4274-bdc7-3bae3457e8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d79c4c1-0bb2-4483-9d72-cedd302d301a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa016ea-f563-490b-9eaf-d97b69f984b6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b890bbdb-959f-44cf-aae8-59ab9172ac64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34eec3fb-c60f-402c-9d68-375b4f381601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2be0b65-bb81-4e44-a77c-b6cd502a0117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f321c068-9dba-44c0-8b8c-8b726b524bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206440cb-1cdc-4f97-acd8-6ec4f47d2f37",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178a7b0f-8d77-4681-82d5-607bbcfc8b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8747dbc6-16c1-4eae-bde1-7d03b6b25d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6a5093-1251-41d9-8ec1-b520a01e7729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f1079e-ba5d-4eaa-a4db-f4983651dd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef74b241-65ec-4f75-901c-7e94baa8c7b0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ad2b86-f7aa-44dc-9f4f-9f6ccd83a2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba37e547-e307-430e-aee6-084c53b86555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd4f067-a8bf-4160-919b-fbe7a7086928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e954851c-19e8-44cf-bfb6-d483fb6f5656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecec935-ea16-4612-b91e-7ac6ac31d5c1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2c9496-0c0a-4981-bde0-afc35e071202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f51910-17d1-4d5d-9038-8803724f4257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0043f4-5444-4466-8178-a203f22afe17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "904a65e8-2f36-46c0-86d5-d265cea7ac6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6453cb53-2ce5-41d1-bce6-8dbfc4f17f05",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b165c0cd-ef12-443e-8679-f446a309647e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c094e3-7b77-4441-aac1-f2b8a150fa67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9bf557-e72e-493f-b220-9af002b1e0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c04526a-cd21-4327-b7d8-d139df8abef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b110ae-5f68-44c1-9604-a4bea27874cd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb9be68-16e3-4288-945a-4ddd27a0da9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c562218-f906-4d1a-a520-802869ad11f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2b0795-a3c5-4858-9804-14d8961426a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdb0682-41b5-499d-82f7-34b4fe1284ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f80950-2e74-484a-b655-d868bf6313e1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e134e676-ea49-475f-ae3e-5dd8d3116b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3828b3c4-733b-440c-881e-9fe06f512b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0a34f0-eb35-4e3c-b965-5c90dc8cbc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "948a33ab-39ce-487f-b947-430875aa0506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd63d8c-7324-4456-9e51-69aebb0ab07e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17f78a8-3bea-4759-ab14-169209ab851c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1b744f90-d13d-4377-b40a-14db15ede6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5219fe-c066-4d7f-ab89-ea4d390b67f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ace87d83-2e5d-417e-926a-2c21fc62ee43"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60595a0f-71b1-40d7-b6f3-69451308442d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "994a91be-1b3e-45fb-8fac-29ef398f2a00",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725a5e2d-b84a-4563-a9fa-5189f9205c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1272bf55-29bd-4841-9be7-2ce9425e69a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b364b6-2469-4116-a180-c12c5b52f87e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f4fad38-8616-409c-86c5-d9c76894c72f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a6e8d5d-f077-432b-a4b9-77e9bcabedda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05eda182-60ff-4b3b-be9f-b00acf6e2358"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "470a1a40-cf1b-44c1-b234-d7d488905425",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8da78d85-ac42-47ab-974b-8285b968bd88"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "194232bd-411f-488b-b5df-4a64a01e8e9e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a98bf786-02d0-4f3a-8017-8e6e52c8c62b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "652b625d-6d95-4bfb-b3c1-e8330b0ea207",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad712d49-9a92-499c-a919-0ca5eaa541a5"
                }
              }
            ]
          },
          {
            "id": "d2695c92-9125-4df4-9f38-6d307daa9556",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5164a0b1-0c1b-44d3-8ca3-129be33e7894",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91ae6019-fab5-4a27-ad62-802c913e0ddd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af5edc33-9033-4040-9a9c-785c18c5a965"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f54f420-8f56-495f-a593-ca7cebb8f860",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9cb3da16-1c80-495b-8fc9-1eb83b9c9fe2"
                    }
                  }
                ]
              },
              {
                "id": "a19291f4-fed6-4a3e-beed-7a41143fc818",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f701957-5554-47ea-9bd9-7d4b25b14e36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d9ffcd7-52dc-4dd6-b9b8-9aac8b723e7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d84a590-1fda-4e44-9079-0c1421c671f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1bb3eb3d-2541-4833-9335-14a8daad6d78"
                    }
                  }
                ]
              },
              {
                "id": "033e0d7f-4991-453f-b5d0-f24ad5ec808c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c0a755a-52ef-4824-83dc-c77c06b43252",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a826c9b5-90b4-400d-8623-44c91a7630f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aec04abc-39a1-46c2-9acb-053297f59f88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea7a0daa-d4af-402a-90c2-1c851ba674e0"
                    }
                  }
                ]
              },
              {
                "id": "fef36ccf-cd8c-4837-add6-107084f2d1ef",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bdb8c77-ac30-448d-97f4-5a61d6f79fc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6194b19-b731-4f03-b453-639584ff60e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4a92d4d-d2f8-4456-bd78-90ba39e93e8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e43d6d48-18e1-48f3-8147-0fa55c0a25e3"
                    }
                  }
                ]
              },
              {
                "id": "42a294b4-5c7d-4f8e-964a-952a5699d187",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e5f9301-d4c0-4c5e-8a2c-66ee30ffddc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c6724a3-ea9b-4eb6-826f-d1fbcd45d563"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9ef3239-74d4-434c-91f7-fb851b021ac7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7e2e21ac-ad25-4911-a713-d04dc096e350"
                    }
                  }
                ]
              },
              {
                "id": "09cfde46-af3c-4cd6-ae4e-adbcec1bceae",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "972c6fbf-d9e9-4201-889e-00998dce8b67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9063f7ff-9807-4089-b7ba-1f3b94bf8467"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff84ed54-64c4-4c1b-a69e-26a455c68874",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5083e3dd-ef4f-4dad-8fae-d8acf3f4a190"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1346852a-9686-4992-bebb-90e1b33d1408",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae8c5242-efc6-4cfe-9057-d06a878eec2a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "39681faf-de27-4a68-8d81-ede818e1ca8d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a6e388d-80e8-4a47-95b0-fc4a8827383b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1be1bfa4-0020-4b6d-a40a-8039088c5749",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ba3a472e-393f-403b-9c16-f872931d8ec0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3376cc2-1b70-41a6-b053-f56136f061b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f330fa47-facb-4b0b-a26f-536d9a088c17"
            }
          }
        ]
      },
      {
        "id": "0167e481-57ae-41af-a45e-f4ba746cf77b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ea2727a0-e7d1-429a-903d-f1e1e2f1068c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa481c69-75fd-4592-92d6-c3555476e765",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "822c9306-cc7c-4360-bdc3-d8f6e296165b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f659b9d-97f8-4af8-bd5c-17e8dc9c1c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836bbe4d-92ac-47cb-bf43-1390d6ecc92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601b15ae-dcf4-45c5-817d-4f4d41f5f123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5776448-94ca-4f0c-86b8-0888ccc3535c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff76a947-a492-4aab-a199-e0a48c0784a2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4168f90f-76e5-47b2-9d60-96b604f8f731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51919f9-a0f1-445f-95b8-79ce81bde6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dea921-5e86-4eca-bf9c-4b487ce8e6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a99681-1bd3-4253-aa61-828b751e8837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5585cf95-f1d1-4a5c-9a39-ce15cd74c765",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b748384-2177-4c52-82a9-409bb5764598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e446db04-0e3b-4703-a37b-1d8d92480a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d2c199-19e2-4017-887e-0ca51cc59489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d37f52-59c3-4ebe-8c33-1e9460020e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81827631-a417-499f-9deb-a34071ad18f6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafbcdd9-ed3d-4e43-81aa-f9963ad3294f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13ec4b9-ee90-4521-9623-7d7b01684b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6d45e5-663e-49b7-81f6-0c4d22531f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce298f8-c17a-4fa7-8a4d-457716905df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b04c429-9832-4b55-a511-9ca0945c52da",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3a26a5-650a-42a3-8e4d-996ae7119e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd26aa9-26ab-489a-b477-efa8c1084165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918bd7f7-2596-4136-ae0f-ce2ea3f2e124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07bb298b-4a3a-4b94-8838-1d40d93f423e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57989d3b-c9ef-4598-82f7-68b83759c142",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de98d5e5-5cb3-4f0b-a08e-7c3f9bc94272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0fea55-2ae0-4bf4-89a9-9ec021f52e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8961d010-fa3d-4712-9046-50b4cbde45d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bb05d8-b5b7-4b20-8fc1-ab2c4eb57f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb60c90d-247a-4545-bba8-6709744c7817",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a660b8-e206-4ccd-bd3b-5a0a626438ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7326960b-1cbe-4f21-8789-b5addc07b7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1353a8c-27ab-45d4-9142-97861c3e54a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "87f40323-74fa-469d-8bba-f13c202d42e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e011ed03-e730-4e02-8f60-2137dcfa1451",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422cd05a-8f81-49b0-b8dc-00ce9aca937b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e09103-1ed8-490d-aaf3-a8321ec5db8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb905bb-635a-47d3-98e6-b354a16227e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff95d83-3531-49a7-8a38-445e9924a7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095c0ad9-ecea-459c-90ad-a0f0ffc6ca64",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5341c1-1e73-4886-bd48-f6ca1893d5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ba1ef8-df62-497e-a9df-d2574ec7a3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62748ea9-4ca6-4629-a598-adda3842b0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "058c852d-0270-43d7-a9da-5f548ad23ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77597f71-8fbe-45f8-b4c1-2ecff28815eb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e7342c-2739-4b67-a024-a61fa4a33309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df62e54-7fb7-4677-ab31-c345b2bcb7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd4c821-8324-41ae-bbcd-5b8610bfc75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c093e4c-8f0c-4c4f-b699-a2e5ad89fe5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64cfea3-6217-4edb-947b-75f48726f775",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d7de8d-1e48-4f35-8d04-0871b0a29597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4eeddf-1694-4648-bf3f-d022fd12e51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f728738a-660b-4143-8d47-a41ea459c1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "805d1756-f13e-4d7e-aa30-adc14d901a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac90058-85b3-4ef9-befd-8110ceba46f5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb63ad4-ea07-4b77-9e79-18836775f32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c569bd9-7d74-482a-a7d7-6e7e4994dba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fc88b5-3b0e-42a6-8353-89d7f59913ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b27c4b67-640f-4de3-82a7-822d0dab1a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd011020-f7b6-4e06-b5ac-6baf2409bf96",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40318d7-588f-4e92-be3f-064b88244a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7ca846-f729-4175-9d45-7ad71b827d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c1e44f-e765-4855-a2e5-94acc694b45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c35b787-9843-44d2-a156-088f4c6052c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86d6fe2-b3d1-4a5a-89f0-8fd46663dd0f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb6432a-7d1f-4d0e-a21e-0d8c2eb1c915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1e8a10-05a0-435d-aa15-86cc552fc7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b579039-c5b4-40cb-b480-47043b07796a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a0ed40-1a4d-40df-9031-23daf8e3984b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecec0bf-fc73-493e-9ae4-8720f0f88dd8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176e84d4-3672-45b3-b58b-e3d20510cd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9b8d5d-985f-40de-b691-41bc707073e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67507d8-d619-443c-96cf-4e3ae794cc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc617351-23ba-4c73-8180-9b837be4086d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57336921-2f07-4659-abb8-8d040a4cf28a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1be79f-f665-4231-a3c7-b91bbfc7893d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dec635f-d329-4734-926b-afe4da6d93f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca3a3ad-0a85-4fae-b01e-31b12b63bd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "745548b4-676b-43f1-a52e-63e32dc7fd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70db857-f550-439a-916b-d4b9cf28bf6a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4604a471-6981-4450-b623-d2d2bc4e0cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ddbbd9-52b3-4a22-a9c7-42b04ebca61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c9c2ca-d7c1-4542-b237-1b1843581c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "936fe03c-004a-465d-ad14-aba252b44e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37cce1b-39af-4e0f-b8db-9ee09b34f851",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21219896-6a21-482e-aa66-f97c18825740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213eeb23-4e61-448c-8fc4-780507003127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad812392-ab06-4f6e-88d8-1098ac3819de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f806773d-7ccb-48dd-8c44-eeb98b8dfd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26531107-21b5-4855-9f7d-59c8be1c7074",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21857f8-7aa7-4473-9f7a-cbb43b7204a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458abfd1-0f5e-4628-9ae4-c582bbffbcf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0937269-7738-4b39-9825-8e39dea7b55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "450bb4bb-3a2b-4ea6-923e-bb498a07a553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e171449-e79d-4235-8b29-ba187418a814",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbec9ab-413f-4cf9-8061-4a4f49c26aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf1b10b-517f-433f-aa4b-cce9a659c868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16aee5b8-ac3c-4f4d-85c5-d24bc182354f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33af6be0-11d5-4fad-9ebf-b8814a2e2b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c1d544-839b-4d56-883f-ae0883479d1d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29063f43-7637-400e-9c00-98d60e1445d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eeef293-0475-45e7-9f08-d9d2b8c4d468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7c60a1-8b63-434a-9057-f5d0df61d5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20665468-e45d-411c-a094-5601aa722e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47da7cd6-05ee-4faa-9c79-26dee1d0a0cf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7473851d-da6b-4fd7-843e-166fa31844aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1606a682-5575-4cf5-a587-cbb4673dec81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852b57f2-01b3-4ded-b527-9e6f57170b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49981b39-8056-442b-9b86-f28f0fed1195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd475f1d-764b-44e8-ac9b-234d7d55fbb3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28dfcff4-3f61-4b28-ae9d-15c370abea31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c810420-8052-4100-8b4c-2cdcecb25aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce64209-4050-443e-a1cc-7fbccff3632e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d83f361-185b-45a8-8eff-325d0b0f660c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b88521-6be2-4f14-a199-b07f1a2495b1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e433721-36ae-4a50-b289-f84204bd877e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08bac577-4a01-4562-a355-aa14f9974384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c9cb4b-0bd6-4742-8e39-3e4952b6dfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88785d9c-c980-4fdd-ab28-c4d55825504f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86d6e2c-3a77-4582-87f4-344103dce4ad",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88deb46-9d19-46a3-a14a-483fd0d6c3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea6e539-f83b-4f14-993f-de5754c8dc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552803d6-4029-4000-83ab-7f07f0ce241d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6bcf2bb-9c91-45ce-847b-ea88e9f35333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcc02c0-096c-42e9-8ce6-5b1a484546cf",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ff8ef6-98fe-4ec4-9358-4d790b369b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe60c8a8-6985-487f-8eb3-2f671e15c05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4543b4-5b6f-43a4-a1c9-88777ae2eb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b06a67-aad1-4e5f-adce-909ef520efcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c7d4a5-ef87-4068-a16b-98926040acc9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b134796-a7a6-405c-99f2-17136eac38c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993edfde-a7db-4c6b-a59b-2b2888501f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bd7bd8-4c5e-43d7-9bf4-6e5949859f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da364b87-2572-4620-9eb7-b39f4804914b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb934100-632f-461e-a175-37b02f3b558f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed736977-22d2-4656-8647-609bbe859989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a13e5f0-e78a-4987-97e5-94c3bc5d08b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8662d5b-b6b3-4276-8c07-370361806747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f4e9ea-2eb8-4d91-b9a0-ee940d6366b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52af2264-5b63-4e49-9e29-eb8626996166",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac6401a-c6b3-48a9-b7bb-937e2db65772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c0f637-9d39-4fb3-9245-72c9647cc7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04189af4-61fd-488e-9589-e72bc7a4844c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc899284-2ccc-4874-85df-5560ed7501bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16211e30-1dfc-4b16-8e6d-c9cbb0eb4e6e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e26133a-0148-4035-9606-c91b23c67157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b04310-9530-477d-a02f-38e5dc82cd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dde9d57-f44f-4c69-8203-94560f61300d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "308919c7-6489-41e8-a7d8-04bca2faea42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c359d1-801a-4e54-92d2-8d564a8fefc3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a93de8fc-859f-4e1f-9d13-c6665585177d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81fea017-e56d-414b-810e-aea18e467108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078ffb75-e07e-4436-abeb-c08396fe5f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a96c023f-2d89-41d2-ab40-52ae908b0421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dc2dab-783c-444e-a4f7-48518d1d50dc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0baff72-08e2-47ee-b6f9-f01b85fa2b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6ea05c-4768-41a2-a4b7-1d698652451f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0316a3e0-63e4-41db-ad18-3099f0d04ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d37eb010-e986-4370-b52a-3289508f112f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0b48e4cb-c35d-45e0-8b35-85036904ac6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17e15d9d-600c-456b-be82-18cfd70dc2d8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9b3af2-370b-460c-99be-4a0f9195ba3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "45d44f54-815a-4b5a-ac9d-d23d9dda5924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1900ed-ab26-4bc0-b7cb-ac3f9b52ced1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d65fee67-d8e3-4641-9cd9-dff958636b98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e2e0e30-2b7d-4562-9c6f-688e5e64e641",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "872ae301-139e-4f77-9368-07de99dd1641"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cf21db9-8968-4c04-9c3a-8745e56a84db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0e8297c-1db4-4ac7-8730-545777556ec4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a9b5b4e-6066-4e54-a359-c1f03376827d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "75a98ef5-e123-4840-a2bb-c5f72318af89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79a96421-ac7b-46c6-ba00-17bd92214181",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b000ae9-bc9a-4544-a051-212f8d7fe5da"
            }
          }
        ]
      },
      {
        "id": "61a04837-6d98-4881-a0b8-3e25760304a5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b60d224a-15cc-4699-9e5c-b35763423b01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "141d55b0-54a9-4cee-a4f7-0488b07ce801",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e51cf853-ebda-4e79-ae07-bf5a878f6bbf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19498ef5-beb3-4b0a-b6c2-ebeb3d01d346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2179f6-a57e-4d0e-91c1-c647dc63a1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e15d08c-1f50-4c9a-ae04-cab9a3b5f926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "968b0e40-48b7-4e8a-a5db-941968588eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069d7709-8aa4-4768-ba81-a80a8eef437a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7584b5-0ef7-4261-ab45-3d4a05e443ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20e72f9-3cd9-43cc-a9d2-6d1aa1385578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ff901c-869e-4ead-9de4-d328acd89d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7fec2e6-feac-4cce-89e3-926eb3990f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2098fb3-ae88-489c-9fc7-10e58a1473d1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3485476d-2cd7-406f-af5b-28b06dc80416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcf364d-14ce-4da8-b634-85e983042da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5046130b-9b27-4007-9a43-8728fc77c32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ed3711-19e0-4d01-bdb3-13156625b1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f965f301-1168-4697-a2fa-c267bd76537b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1726c3e9-1ec2-443c-94f0-6098c0985ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca552f6-c6ec-462a-b8f6-630ddc8b7e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d353f1b9-6a38-44a5-84b9-6a2b47d408b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0150b941-6aa7-4e62-91a8-b8076ac68bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6672f70b-fb7c-4f03-a073-525b49f4ce0d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2835ce2b-ca7c-48b2-a724-d7409ad731af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd39ccfd-ab51-4d1f-9daf-4c646fcbb015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d86eea-aaa1-444e-a94d-5e3206411f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "085c2848-fb5f-4217-ad20-d466c5d1f903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d90b99-98e8-4008-9bb1-cd6d79dc64a8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e12e296-70a8-42d9-b40a-3c038b699f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a7de99-32b9-41f8-9be1-829ef7619e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70271107-85ea-4fab-a241-a5c371deb002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43dc5e0b-a797-4698-9f06-7c536b9c8b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c95c9c99-283d-475e-b34a-ad66dfc2ab0b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10645b27-0cad-47b7-93c8-6bcc8a52ea0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1745e9a3-70f7-4d74-b3a7-21c9a9aa61e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99b9c2d-c824-4931-adb9-cb33e58aa4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f68151c-7d47-41fb-adbe-b458085d011a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc17f3b-d089-4e0d-a49a-57f2382c4bb4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd18a964-8940-45ed-b3e0-21b005650bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695cb86d-3e0d-408f-968f-a376b6e26598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85edf37-5c27-4b60-a5df-69773e7503ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bc3f8d2-6362-4ce5-98b0-b54dbcf59038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2210d0c2-bc7f-4530-b346-f132b468be1b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76548e6a-e643-4952-a2c3-72f4d58bd7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2d1e7b-e827-4a77-b0a9-567503f05883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bf9e66-9a93-449e-91c9-ad6210bfae68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c29ab1-bef0-48f0-b376-e220b4f2f35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15ad6ff-21f1-45cf-9079-c9c5e3035286",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74541dd4-73e5-4d10-a6ed-d7a44c6f4858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "709bbe82-f0c1-4dfe-af4a-5daf775a02f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031ce15c-85a7-4e8f-99c2-508af0c44149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e91a4ad0-2e33-4170-bf6d-93e60ab4a022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e0fbde-b73f-4e81-8659-c2b638314eb2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f5f03c-1916-4995-8a08-e3a3c132f5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def490f2-ec7b-431f-a4ee-35976c00b232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f493375-f10b-4380-97f1-0fa74c74b66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6ce3aa-a99b-465d-bcf5-ecf39c5634a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b6c4cf-a280-4075-bfbd-e88f6353fb05",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecd94a1-f2e5-4695-80ac-8faf960dd8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cafe78e-01ae-4fc1-ba50-8ba88fdc9345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f15f3a1-7d96-40c0-bb02-80c5a677239a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1147c97a-994d-4541-8072-131e46301e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79710a29-b192-42f3-ba5f-702d75d3a2b6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876ad295-fd01-4d91-83a1-25021c9b72c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca6ff8f-f127-4006-abc5-999aefe791f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fd9ca0-3d96-42cc-b548-a4e1bb6b6590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3496fbba-2e0b-452a-913e-c84046f5e945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875c1618-8ae0-49ec-ba3e-3d997434242f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1392368a-29ba-447e-b844-279cf5248ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f4245f-ad31-4ee7-9606-e78cecae9532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906a3e46-65b7-42c6-8830-5088695e9aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8e2c45-22e9-4b33-97dc-ce90f1dd3d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8c660e-00f2-4e5f-8c1d-5a12d5733182",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b606d3f3-a5ef-4280-9799-a858a453134c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ffd723-6444-4ba1-9b76-12733530b8fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6a7206-a76b-4387-94ce-3e084bf0fdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae1a4bf3-7429-44e9-91c3-3419e19a45d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2448a832-fe45-42a6-b761-8093306d6911",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f5fad9-b39e-44f5-a526-15fe0a395fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4573feb2-becb-43af-8b7a-ea06e780e9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d4bf69-4de1-490c-b19b-cfe89d61724f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "414ddfd3-8f3d-4103-9dd9-d144cf44cfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78108e32-09ba-439e-952f-eacb18474db5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1442af0-4442-4170-8f3f-5781520d5e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596e339f-fbcd-458f-90c6-95e104231a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc46bc0a-15b4-4e3c-a433-48c4461285e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "48528eb8-04b6-4bf3-a2d6-64961821a84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ce0a38-6d3d-485e-bdf7-c8d4b739b140",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9545e8-e608-4788-9150-a8958196058d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e33143a-935b-4626-a146-bb39aaaba9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91a98c9-d478-46e1-9483-abfaa51c3f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "77653262-9fff-4b9a-a8cb-f2542c128b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c6fa86-5329-4ed5-ad5f-eccc3f0f6685",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0711ea8-b3c9-49e4-a807-2a448a28b723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3babd643-47fe-4bff-8386-ed61f3c05ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceee8e44-6dca-4d4d-a444-e9529c624ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1730b7c-061d-4eba-8ff9-094556b78e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb84703-6123-4c12-b01e-ab0b388fa8ca",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d364eb-a14a-46c1-80da-a3d3ab55188d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1fc3ce-2948-45ba-854a-93fd8e8c9ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e53f1a4-1580-4295-ac84-001de6a380ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b89c5e-87ad-42c4-a292-7a4a77c8464d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0c6018-beae-4c73-aad9-5143d1f855c0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c009964-2223-45d6-b762-75102a109db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aebf5ac-196b-4bf4-847c-9ce3426ac55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e5ad6f-3267-461a-94f2-85ca6000f74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "280741f0-be8e-4689-bcc8-ff2789d11b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c43c84-b69c-4a32-b315-1ca0ade9a61c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b653ce47-2f40-4795-8c33-adb0a0e483e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af49f673-bebf-42e1-ba27-07135881a39b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d916ea95-4c1a-412f-b8ea-2bb7a1b27fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4a16f5-4ec8-49a3-a897-56f45a96bf16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14d9789-2065-4609-ba18-abdd96e98cda",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a94a463-ec63-484e-b2ff-55cf55c1a6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e9056d-0b2e-4616-88aa-6aa92504c32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3317424-59ee-486d-94e6-23f534a86ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb119fd-d559-4e1c-b4b2-8bbf80ebf036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdab8fa1-007a-4541-90d7-1420be03eaaf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52a0278-479b-4d1b-bcda-333a84db9c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769a3032-f3e3-406c-ad66-440f06351a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0e8f21-0fce-4241-b550-c9409e86bee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67e62c42-42ec-4f39-a5c6-7c617d90830c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83e59d4-2f4a-4252-a821-51e1bb3aaecc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41551b18-94da-4c53-8dc6-590bd82558fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d526d5a2-862e-45d2-9daf-f678f76a4d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382c02c0-0ce1-4c86-9bf1-df7e56c5d7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8feafcbd-7c7e-40fe-b823-f56af4f1dc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5296103-4afe-4d0a-a5b7-313c232de1c5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e71ffae-376d-419e-88cd-632d0a6485d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc02bffa-f5c7-4373-a4dc-583c950090db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c461a6-0e28-404e-9104-6b504a6c8a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e627050-ae73-4faa-b24d-c51736dc2795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0159a122-f750-4b16-b716-c78a1217e3f6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0701d3d0-b924-4a5f-bd56-4774dbf7681d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0314032-fc47-471a-ac21-3a4a8e6d456b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967e0566-c9d9-4cf7-8339-a7699daddf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a5c9456-4da8-4fa4-9618-4e430410f0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbdeb43-12a7-432b-9ac4-df068b08639e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4b7071-dc72-41ea-a056-3e147d168b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c10badf-5dd5-40dd-97e2-626b7e97ddc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8234b97-0e88-48ed-8ce2-37bc714700df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7fe3615-9c2b-4769-87e9-fdd8ac51f688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9524e60c-ca82-4e21-a64a-54cb611776e5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75be2f4d-232b-43b1-8523-a7f1d0620c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd456d5c-d048-4bee-9fe9-3d1ea70aaf4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631ee8c5-13d6-4ffe-8a52-2d8fca9df74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "212ac6fc-ada0-45ba-bb90-edf77255eebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51284aad-541a-4e7b-8842-71e4938f85be",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c277e0bd-6ef8-4eaa-9a5e-3484ee82c98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06b07ec-ef60-4e23-893d-04c118aebf7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7335785b-87aa-4d89-afcd-26e2c53588a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10489368-16ca-4e03-a18e-151b3e9ed40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df499672-4bae-4ec5-9b8b-2a6eff7a6471",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd97bb4-475b-49c0-8ccb-4942806e890b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df765578-d275-444d-8094-59f38646b3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7600c44f-988d-45e7-9fc5-aeee653e233c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aec9c5d5-7936-4026-a185-61e74ff91641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b430f669-1a59-4aeb-8123-4ff9244edb6f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a92275-fbd2-4352-ade6-a74bb88e93b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9947e5af-acee-4d00-be22-f06589863cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a04c68-2d35-4d7c-b11c-4e5eef5e4955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e77cbcbc-d93f-4c5d-83c5-c7c5f2a69530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb20ceb-ee1a-4cb6-b7fb-9c0350f1e99f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25917cce-9468-4acb-8798-32a87cccd83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6684bf6-4314-45f3-be51-2724b25edf3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77eb2170-78f0-4056-a3cd-2914cbb22c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10fceaaa-a797-4282-9e05-37262c890f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe28178-2a3a-4092-ae64-700f1c19b8e1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b379d5e-fc75-4214-945e-16679c486c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40c47cd-38b8-47f4-a650-d64bde714b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974f9a95-e5e6-4c50-9adb-b16fbce0831d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a85fc4-de6c-491a-819a-d71bbcbf2271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b98271-0ce2-41da-974f-7b6302c79f63",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb08fc9-9b1d-48b2-bbcc-9306ce57baa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5fd806-aeae-4573-8084-96ed1c013a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dac201-4b48-439b-8b32-7b4f385510c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4062aca9-489b-4319-be3a-bc3931385619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc806a4e-d319-4884-9312-af177b850feb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cac866-e7e2-4677-a185-e2989fea1f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7020c7-7b80-4bb9-9f09-12c0fa8aaefc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5038c6-3602-4dcf-844f-b68628472b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12699ed0-60ff-43b4-9e69-e084d39da98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c216db0-3119-4fa5-bc20-e218b05a87e9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52a00a5-55cc-4141-a8cc-e0cac0b9ec0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc7146c-4254-44af-8176-70fc22dbe132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea30d5f4-929e-4808-99e5-7f79749615aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a65c53-43ad-4abb-98ea-eb31aacf3895"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bcf3b651-b704-484a-92fe-06b10a72ae58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2d463ee-b738-41ba-bcb2-f1c14ba8953b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f2392c-f14f-4c73-ac5e-a9f81e487442",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3b1d99-201c-4ad6-8dba-468516e84fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab7bcbe-f4cb-4775-9d63-19fec1a18f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7b3d4ea-e822-4d55-aff4-bf488ab5ac5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d77606ee-a21f-4f4b-bdbe-9b69db20455f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f11ae4b9-4516-4864-b2e6-8b3fd0b69d8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df36843e-05d6-469a-93db-1ff0983d964b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37f470fa-3351-4ffc-88e4-14e067bf8066"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "535532ba-3abb-456f-95bd-7d655e4d1ecf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2801aada-17ab-4a36-a354-706f74d2e493"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "527a2ae4-1356-4b8a-8c47-1af08830ead4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30f7c039-34da-4294-a79d-b0fcdafad496"
            }
          }
        ]
      },
      {
        "id": "88e404cf-0bf6-4054-8371-ff65b5832033",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2732027d-b148-452b-95c7-7d420729af25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c443c68-4f0e-4309-941a-8fdb775f6568",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52d2a9a0-e3ea-4a8e-ae59-ac9c804f24e8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4312003-1c60-43ef-b096-741fc8e49f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546f2892-098b-4f41-b5ca-1992bd1e2aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675ec7d9-ed87-4a70-84b0-a1d47adee2e6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d0e950-3f49-426e-90d9-e40c6fffaccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663e9a29-3d84-4fe4-bda8-831145150d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35b2aa3-ee49-4211-b9e7-0f6e77c70441",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c0ab5f-f033-41d7-9efe-923616d905e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894b0ba2-7378-4c4a-bc6d-224feaa11a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad6e251-c8f6-42de-b517-4efd75403558",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dbec05-92a4-4da0-b02b-cc18c5ba26ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08a91b8-1b7f-4b4f-bdc8-15e8dc5d4795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b878cc1f-6800-49e7-a3a6-4052ab6edabd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff6ef27-0eb8-4a01-a8d7-4fff01caf267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6d5f55-a02a-4ab4-be48-c1ca3588e4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d030df42-6da4-4da5-b012-a53a376457a1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccd5b42-8a3b-49de-9bee-606478d385ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5fa7429-c9ea-4bf1-a708-48205c233552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f36e57d-c274-4fff-9fe4-f920db0a4382",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f566ca51-2146-4e39-9d5d-8497014779d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d76cd6-647b-45de-8908-255096360c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d98ccac-6f79-4d39-b327-aa5352d2d9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f38045-f54b-44c5-8f71-24bc6e29876f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2945abec-31fb-4cd0-8ae4-daec038742d3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c520c34-40d1-4b1e-81a2-88acd8580ea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45ae5f92-6ee8-40f5-9429-c5d08e74a2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a421ae-0d08-49c4-a39a-c00696324097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148e3be1-0524-4423-8429-4fbc76b1a270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237135ba-7416-4e7c-bb50-d9ef72b5e146",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4ca2fb-9b55-40f4-ae29-d200b1a90cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f89d189f-e4e4-40bf-a69d-daab4463e1f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e136573b-1854-42d4-82ec-ffe03bae57f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b1afcd-a4cf-4ac3-a061-c129a16fc659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e03f0e-a349-41a0-8c58-d7d6d0ad0024",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496e40d6-5197-461d-96c9-8c3f19ff4dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a2c96a9-41ed-4e55-bf35-aa3d28a6171c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeeca8f8-4a90-46e7-94ba-3f2a1b82945c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff043da-cf44-4a49-ad54-3dd258b0f855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaadd664-01d4-4f55-8b7b-175079a9496f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e15c2c2-b263-4a46-8fb4-9a65430d5f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e405f35-9644-4c99-b41a-2734e9fa197a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6655e4-25da-462f-8486-9075ef134c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3242089e-22b1-4733-8e88-1cbc05da4cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85e2c16-a37a-4f43-aea5-5a0fc7bf0c0f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ce971f-4e56-42f5-ae88-dc5bb96e4427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c5742e-cae1-4e37-a280-67d712d11230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f951c0-3ce9-4b0a-a709-86e3a4c4e1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e1ae1c-e647-4db8-9a6b-031053572801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5b358d-702a-45c1-b6e7-011527e59d5d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16dfb18-5856-46bb-8682-f985b089664c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "142ae00c-5228-42e9-a6a5-cab11951b341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831ba20e-6f1a-4f0d-b48b-47256f67c31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cc7bab-c3a1-4610-9a81-460874ab8ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0f8e7b-7f1c-4eab-8045-8bf3d1567db4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81c3807-7967-4fb1-a8fb-175e55816598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eccc7d3-2e0b-44a9-a9eb-cd1158aef85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e4430a-9b72-4687-b214-5c019d931335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5dad005-ed66-48a4-86e9-b895e0cae889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18692268-12ac-4f35-9959-5c4358d835a6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c564ddb0-b8c1-457a-9a72-4ad68cfc7717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae758ca9-f05b-4202-8496-f5005e08b029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f857ef56-13b6-412e-bec5-3a662c563bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ac4a0d-57ad-4243-9c50-1e79e00ac127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bdd4a5-9592-411d-b888-c636b7f2ed57",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f524e2d1-2a0a-4949-8e70-ba4b36cef74b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c392bbc7-3f38-491e-939b-ea63bb52ee7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ed3d1f-e200-4a09-91aa-d26f0a130c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b55cff-9f18-4c09-80fa-a69a1f09be24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63775c3d-5f9a-4058-ae42-9998016c3634",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6585f590-a5e8-4bf5-8efa-d782c68c6067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6a8d65-e394-42e3-a3b6-1eb151c85124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9e2b07-945f-4ab8-9fa9-0e6f3a0d382b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98f2fce-528b-4236-8ace-fad14cc608b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c57707-06ba-44b1-aea6-f0c0db6a069d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f60b60-94ad-40d9-aab0-37e4cccd6f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f94fcf-40c8-4327-98c8-6fc647c8610f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb7b87e-f56b-4b16-a526-7d426a35e906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c647df77-3753-4f0f-9b52-b6bdf1c4aec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6670ff-8a6e-446e-8169-8e331dc30795",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8b517b-cb16-4d5d-848f-c931a19179a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02fb405-6457-4472-bb2b-68b547e8e568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949ce4a9-1c08-4b30-ba3b-7e7a1aad2f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92474ea2-1a54-4f90-bc46-bf1340d452ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b285f38-68b2-4a8e-bf3b-2e5be04a88a8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51aec91-2a3c-402f-b679-a57b3ffa1cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5d0b3f-657f-4bde-a699-05e8176a3fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c8e431-b910-4e6c-b156-131cab4daf62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79986a14-5391-4676-8f09-02f1644e729a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b881d600-5866-4c44-be08-b7564b189f3a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2444fcf8-f8e1-4a05-8353-ee63e62dda16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181bfb16-d916-43be-abe5-c4ad79b5f227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75bcc49-7fea-41c3-b295-c0e27a9580bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f8e36a-99a8-4624-9d2b-31eceded3cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f772b3-e5fb-43ec-9226-e1048b8770ac",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a456ef2d-85b1-4aa4-941a-49ee91ecc0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8707b3ff-65cc-41a3-be19-8f24ebaca9f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd3248e-c13f-4c1a-9009-e438e157574f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c491a1-da32-4621-8db6-6ae4f64d21bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcd34cc-a69e-423f-8fd4-9afa803cb49d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de4342e-6465-4106-a08b-39b84e6df144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae06b3f-9416-4ea6-8a6d-c73ebfca6dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ce398e-445b-4fa2-9c3a-ef9a4dd5bce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bb016c-09fe-44d5-beab-48b6ba8736f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9429a6df-c971-403b-9d23-3790f62e85f6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bf0a7f-90b8-4627-af5a-e1041fa17ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550e4d0f-28de-425c-be78-a159f6f80415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8039a536-0f36-44d2-937d-affe0e1b2c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f432fb6a-d65b-4866-8e65-8bec902c896d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74755434-683e-4d1b-b695-10c9d7b06664",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69acd961-734c-41da-9189-76aa791cd501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a4edcc6-e670-40d5-8276-e5189312d78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "813552bb-c00f-41bb-9248-64ec42fcd23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6ed6ac-5593-4f76-8425-800dcd21b67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b86c523-41f4-435c-a050-6f3ea979e50b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a545b2-b746-4fc7-808b-43f2716ed036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5684101b-a282-4054-b91b-50bac9e1eb84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67054d04-4d20-49d3-a887-1a9c25995c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f063e3e-0e36-4518-84b0-01521c2c4964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111b767b-fea5-4033-810e-85785a9df67f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722cdd4c-fd20-48b4-a015-bdd60ca4abd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aced5bd1-9127-4ba2-ac1e-31af8717bec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5e22f6-df41-47a9-8c6a-04646df18222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da299bd6-86b4-42c4-898a-81ead190ca6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd2dc0d-8dac-4979-abb2-145dad3d12a1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f5e119-a099-4498-9d12-0398f06a2bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b598362c-dba8-45c2-94d7-675c87859e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a946ff8-129a-4e05-8f99-685cd2b8e5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9048e7e8-7ffb-48a7-b531-be99a077fdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b3f2c7-7e4b-4af5-9f86-6bc8bd59025c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f6aea4-7e53-4b51-8dbb-873495fe118f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c20a1d-f005-4651-9a88-de0cc27f4421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95194f1-0b5f-4bb9-bab6-88afdc278152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffb8ae5-a60a-44af-ab6f-cff71ef88944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767f938d-9e84-4782-a1e4-21b70d181381",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24956c1b-1ef5-41d4-840b-622790d11b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d799bc13-a32e-400d-8a59-9ba30292dab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b28879-7858-4064-90fd-82a29fc3d4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98722aee-1e10-42e7-bbe2-f2c3e071f86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c528ef7b-6ccd-40e7-b508-658c89be4a65",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed69cb34-2b1c-4977-b40e-6f74db84515d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c2861fc-856b-4a44-8152-54e5c8addb1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14266146-51dd-4dcf-b1c1-71ff643361df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbf88a9-a130-48e7-986e-22dd2e646f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa909e1-7d73-452f-bd8d-f597dd787aa2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbc50dc-1799-45e5-bdfd-c9e14b835c2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d91b278-de54-4b0f-b48b-c9ce6d1fc5ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ed8634-2e17-407a-a21c-e12b16e5d8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b4de45-f899-4c1f-8249-8cd413627435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e043065-3b2a-4dd2-802e-7c768e8e62c5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03483d0b-0efd-434b-84c7-4d5c0f690344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c3620a-6a7b-465b-b6ba-f5aea5ef6d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7596bcf-dd11-42e6-b3dd-edda0fda0dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3103bfb9-ce68-4c15-b1d5-6ef1d046813e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f458cd-15cc-472e-b0b7-0923fdc02d5d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b04bb76-b797-4590-9cef-eb83731e6522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f036b47-66ae-41df-a243-44ee03194009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a30143-0dae-4cde-b73b-e3a4451d90b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f951242-215f-4c83-92ae-d373f6352597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ceb0d76-2f82-4e32-89de-426d38779418",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25df09c-27cf-4152-8797-0852dd4d65fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0715b991-a5e3-4ecd-8405-f4c0448b16af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c17051-1ca4-43f2-905c-f86218e8f1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff2857a-19ca-4b3c-8d5e-bc5c7a6d898a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd47561c-ade0-483c-94fd-2bd08eff130a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cee757-b8d2-4e51-8769-2d58612ef192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad291191-564d-4289-950e-5ccb801fda47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788262aa-9fdb-42fa-96fc-cbb775f9bd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc9b2b5-0932-4596-8b52-acb1ec517e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d1cdae-6870-445d-b740-0c626d71b7c3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd31dd8-05c6-405e-b2e6-7d1c9618c166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe28ca9f-997c-485b-bec3-315f9c2efb5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43947c1b-52eb-4445-9ebd-fc8e2d386fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b804f7a9-60c0-4c93-91d2-280beba10de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d53f76-6b18-4faa-a69e-3f40c9d53052",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ee9239-2804-4a32-a308-57a6be69e1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7843c7a7-2d2c-4673-9b0c-ea3bfff42db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed7a2b2-2f43-4469-9ad6-2fac57598ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a537cc6d-3700-43dd-bae3-de810d27ef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e7291a-c9c5-4f22-91c4-93ec15e2a1aa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a59f65-6e6c-4eb1-9d4a-a7522b4b9ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4249ce9b-9266-4275-b11a-4f0d96587796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8416396-dbb8-4a1a-bf59-3954c94d58fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6934db67-5f2e-4be9-9df7-3dcf9488d762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec069ccc-a80f-4f74-83d3-b094c14e73f0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77671a57-6790-4ab4-8606-f84317949a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f25940-d4f4-484e-b0cd-2a0326f7ee4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1f9534-54ea-4753-bdb0-e716b019a062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652eb9b3-65a6-444d-ab6a-2c2ecb2ca170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d9f408-2725-4c88-a5ab-640dd7c0ff4e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41450ddf-7c6c-4417-8d69-d59236d44cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd3e47d-7b13-4f05-beba-bc8e54ac6146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880bd943-b9fa-4f30-b24f-1f11f083eca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffce6948-4053-4a74-90ed-39762a54521b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebe6517-000e-4e38-9fc1-2038c9227b2b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf933ad4-67c0-4784-8164-d136e4de43ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c40a803-50d2-4510-9f61-94a31167ea41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acac3c4-ba34-48cb-8295-115d000718d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85649907-1e99-453c-926c-4e8ffaea2b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37182918-3f98-4203-92a2-6d90a90ff1e5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a79c88-6cba-4f3d-b0ce-5ab4e589134a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca15a52e-4934-4b7f-830b-3a7aa6a118d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e3c950-34bb-4847-9919-bbcc756619e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663fd494-4963-4666-9a9f-97b0618067cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d4dada-3a3b-4c89-bd67-586144e844ed",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2705009-622f-4cc3-a6d3-42253b27a5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03367dc1-ba7b-4724-bb86-a090a511273e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63ee9c5-76dd-4cb4-b3f7-5630611049a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d1e4e1-c76c-4f09-bcc2-644ae250b3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490a2153-85e9-4704-a697-a3fa53c576b5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff86f9a2-fbfc-448f-9985-9a39819679dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c982dd-8b5f-4d37-a49d-fd39ff305024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652d9baa-4b2c-46a3-8402-be35cc067f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe34fb9-2bae-4830-b6bd-0387d865ed14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c19d67d-5999-46ca-bdf9-c9b0b817a25b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10eed29d-9af8-4af6-a20d-c37c194f996c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f61048b-1d7a-4eab-9e36-ab9d4764ae7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ce7f0b-dd1e-4398-881c-3cb83dbf93cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1231514c-7ca2-4d70-832d-9497d6128605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff51c6c-9076-4050-90c7-5209111d54ec",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16675201-8f9c-496b-9021-33fde37b5399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182fbc99-c49b-47b5-9314-09868712a5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fdf744-6769-4404-965d-d88f5ccc412e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3049513-b810-4cb7-9261-b7eeab99dfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023de3e7-4266-4d5d-9c08-f844c3ed219a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62882171-3c65-4978-8e14-46585e28e47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac8a211-1fab-4483-a21b-786a407a6fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d75530-d4e7-4f0a-bfb7-92a8f095fa8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6790a462-3ced-4fdf-98a3-10cc9d09344c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c56917-26a1-4377-ab6b-5a9d73ad9081",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1c6954-f9f8-4e40-bbf8-2c569f9c45fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029ad139-342f-48e9-972f-18617bd53bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b00fd2d-7d8a-42a8-8f6c-e70fe8fdc943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68ac5b3-79c1-4c2e-96ae-7a8cbea28bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb25299f-c454-476e-9b44-eca7e0098259",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ab2d50-db5e-47e5-9e7c-cb49b2ba15ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9793db1e-1591-4dba-973c-a7987dd4e719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef2446d-dea1-40e2-aa3b-3981513df92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0174c9c-f523-44e3-85ae-f42f39746d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2417b4c3-291f-4ac0-801e-26cd44b52c6a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751ece63-3c15-4e67-b84f-4177a0328c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60f0a08-8dab-44ae-bff5-ecb14865b98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edb4cfa-2fa1-4352-a2fe-d4203eba980e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f95757-9026-4ba9-ba93-f35618bc0550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da90ffaa-9aa2-47fb-9ce3-16cc381e6dd2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3068cbbb-3417-4bd4-8d3b-b7a681c56f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06b648c-f870-44c6-b39a-94bb225aee76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c886f8-31b9-4d19-a130-30459a40557a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ed9731-3cd3-497b-8348-45e7186204b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68545bd6-eaea-42f4-bf48-68e930227099",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9e880e-f391-423e-b63c-a306028d40a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70969f50-5ef8-45d1-b0fd-5897a3def2ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ae5962-3ca4-4a10-8256-e6102a712242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d59385-5117-4738-bb2a-e649715ac2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829f7c3d-a74b-4603-9967-3f4d6a07667f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5aa243-9c9d-4bff-871c-d906ae62b548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09705c62-09b9-4618-908f-9af5e0bbcab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c621a3e3-fc90-4f67-8214-c33efc1aaa18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17ce8ba-b4fc-409e-a263-b88faba8a4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22010dc1-e082-440f-b5e6-77b02c209099",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43ea891-58cd-48b9-a581-b0f0c649537d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7ca8dc-1e36-4f9e-b137-4e67fce2f297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4ffabf-1450-4f4d-8ca9-2957c27252c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663affb3-e61a-487d-9bf6-08483e8b7a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd580239-f512-4d6f-a3af-2669fffbb6fe",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46d1d89-3984-4ea9-ae05-83b753083751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e1ce47-af27-49f1-ba67-662927064bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade22627-be5d-4160-a41a-ae58f269bf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee70fcd-22d0-4894-b640-1bfff31c3e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d244a431-ff51-4d1e-8fe5-48d504978860",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3869d1-097a-4008-91c4-4e43738445d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "742a96d6-d925-4a77-8f25-e430761c89e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e79b111-ffa5-4ac1-84ef-9434c6a27375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f382a95c-e57a-4dd0-ad2f-84a44e359397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec445cf-cd85-4dd0-b520-d8c9e72c0754",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60819122-28de-44a2-9efd-fa9b37647c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d290b3-000b-45ee-bb42-6e6133b29c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d904a8d-01c8-4df6-825f-5c5f85810dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b822d7ee-b910-40f2-b6b6-b13ee693a2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41720594-5630-47b5-8709-7231650193dd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb4555a-d19f-46ba-89e1-5df67e72a79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d1ede6-1b2b-410f-868e-12bff216d2c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975f740a-665c-43dd-93cf-a5f24ea2837f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477012eb-b621-4592-887b-8d855d4fdb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f6c97f-4272-46c2-bbd1-0bbae294e5ee",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b2f4f0-2b0f-4711-b1c9-3b705f3c9398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdf7c30-5a50-4cf5-bf08-7ba95b554d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8618fa87-3488-4dbd-8d65-89fb11a112ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa538e85-2288-4375-90b2-570435a6e1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416446c1-dc0e-4fd3-8421-d2b89fc083f8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea755212-b168-4a2a-8688-ba512841a330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4141d79e-c1e6-4a5e-ba5e-8ca92fd2cb65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bff87fc-59f8-42be-a440-75e23282dba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8ddfb0-062c-4c49-b025-b8431ac3df77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e554ab1-4294-46af-8cc7-2f62138c82c9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76acd729-5eba-4465-8721-9b2c3d39cdf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93236efd-c21e-4852-a70b-c8b4d3f2db59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8722496b-847c-4d2c-b085-919f1c02f103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee530ee-ffc8-460c-8ff5-4b46eda412c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcb2ccd-f1ef-4d2f-93e4-b7c442062964",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd1836e-6060-4c62-bc6d-bca62894c290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703f9b40-e36e-4fbd-b564-5a251e03e41a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56c58e4-e291-4985-aed9-b03bbe86ca08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb64eb4-5e70-4635-a44c-78626888c032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1a074f-6134-4439-b19f-2a47aff26366",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ae94ae-11b0-4410-bac5-abf266d7e179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "320d47ed-6104-4bc1-8057-c30e0997d20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597820f9-9352-4e8f-9a95-61342945d4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899c1253-5a83-4bde-99e2-ad743fac582a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846e6753-36c4-4cf1-a92c-3a634014662a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d94e1a-44c1-42c7-a3e2-c94e4da38412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50053a61-7a2d-448c-87e9-70102701b87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d6bd3d-2769-4e53-b251-73ac07b1c448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1cb887-d2bc-4b73-8859-e2726d54dbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5664ca-8356-42d2-9828-9a24b0ff8243",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0be0860-6289-481b-9f7b-5e4e49cc9b98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b558183-b6df-421d-b874-1f00c4bfd6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5b388d-35f9-49d5-a40c-c618d7517dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb86b647-6c2d-4db5-8088-369abc1120a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8d0980-651a-4d96-9c54-03fa38ede5a8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e26366c-059e-489e-93d7-846012d861d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dbb782e-ca68-47fa-9ea9-2b4bf36927e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385c2813-7246-4b56-ae7b-50d3fea90449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea90de7-cd58-4a32-ba83-751b25f0e775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29de7d6-1584-4c69-808c-4f7a1601ec75",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964f9c96-ef09-40e8-96d1-c6dc40e1ad81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db1b795e-86f7-41e5-89f8-3653000f998a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3742221d-8d41-4a78-8ae9-24f55a226597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fa3dfa-a3a6-49ed-95b2-0e2b6b4c2371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebd3209-dc20-4ddf-b89e-61c5e97fcee2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f574b81d-954e-4248-af75-6680daef8458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a5a6318-f850-47c6-9a6b-9aae69942a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9c6e90-22b2-4534-a236-5e8125118e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579b0272-6f68-4ac3-ad0b-904c0df0cd55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73635312-6ca9-4620-b3f1-8a2fd95cb75f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf863cf-396e-4811-8ded-3abe8a64a576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b90734e3-e132-4340-96b2-b093e46da464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a14646b-f2c3-489b-a654-11a43ad02bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd03805-19a5-475a-894c-35d40b74a59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f6b775-9a76-4a42-9bd3-d4f27761f946",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c2c0ae-7c97-4e1e-83fd-52528f3f48a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ed4e87-8793-4a25-8d14-a8b388eba429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa9ca44-7bdf-47f8-9502-2337c9a42427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400e3b64-e3b5-4904-982c-aaa606a11ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686437cf-bc87-431b-93ee-7363aeaf6cd1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e26d24-734f-42c7-a2ba-764f290474fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "211cd9c2-2f8c-4fc1-ab55-6769061d59f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f263dff-d3ab-4cda-bb3d-34cb3f34d591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4b7e85-5339-4fe2-94c0-bbe6297902a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb42f0c0-2efb-4a85-aa4e-5554f2fadb15",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657090c6-a60f-431c-8e86-a10518c6af6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d79b5862-0e92-43bd-b8ba-b33cd0943fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1bec51-b58b-43cd-948e-cabf7a6fede4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18815ec-4101-4e00-a180-0be397839cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362ef69e-657c-49ec-9280-b3370f0b9582",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f8554c-ace2-4802-9741-62ec0b31fc0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0763333-ae81-48fe-88d2-b62e7f167388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc946477-e32c-477c-ab33-0da61648c33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad7ba3f-dc96-428a-917e-9827637d4cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4d5d89-8f92-4065-96ee-736abdc0e126",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a1f7ad-6617-4dcc-a0a2-d5c9c408db3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d373bbaa-3eac-4e2a-afca-4affd5de4114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4273d856-d187-442b-90ca-0dfc2da36e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24281cfb-245a-42ca-9c23-ff728e8e4f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1efe23-6a5a-458d-a38d-03480c57489b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714b5acb-f604-4938-930c-082d9bad96c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11359666-0f9d-4f15-b53a-9a4f3798f053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d05f610-26a7-470b-90cc-6b48f07f2080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5caecf28-0d6d-4d83-8a65-01ba90b84941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eab46e8-b79f-4c55-9127-a4c7c0688f8f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d83070-ed91-45bc-81de-800bb42ff1d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74858cdf-0ff0-463e-96d1-db2f37fd1186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e072485-cd10-4933-af0d-1ce244c7c722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "079bb6dc-458a-4350-9369-6833b90e558b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a132eb-6ee5-4ffc-9989-763adae4954a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94995be0-ddb5-463f-8ce7-e566701df212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b070e0d-4eae-400a-abd6-67327f690a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65b3406-d2ea-47ab-99ce-2a4a3d2fcf12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41247d2-9987-477a-8427-625f0fc680c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c99c82-ace2-4a1b-b232-e4bb0d705144",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4e3afd-60c4-4df9-85bb-b0cb52980571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dcd316b-f931-45ee-b0a7-e2ba049c4f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2c000d-9262-4aa2-b62f-910e9e3699da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53ad6a6-f8af-4552-be64-aabf11fc728b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12a2890-bd46-4528-882e-14be2827f31d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de88c9a0-74f4-42ab-96a8-0281abc0f915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a5d22b-d028-471a-98ba-63129a484652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b38763-806c-460b-aadb-22b1929c838e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc4d88c-5403-44d2-9fec-beacadcef21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6e7819-2f20-481e-a5d1-aa2ef97f0021",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7963cb9c-24a4-4a0c-b094-97ebf7aa9b8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "881ca32a-149d-4456-8af3-512ef090e9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5562701-cfb7-4991-b2d1-d1ee752c85b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c9c9f5-bbb1-4bf5-9e60-da825a71477b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216931e2-5cb5-41d2-bd2c-4e78a22a0e5b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f71349e-9dbd-46a1-b672-bc2bba10c6d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a82fe6c6-1585-4b2a-974c-06f2481ac7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41961935-b0dc-49e9-8c04-436e327a7271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad757699-e8c8-40cd-834b-2a7817b514db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fbb40d-342b-4403-adbe-f0c804345398",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f2c24f-d967-4b59-81ac-7b665d79d317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f054144-96d2-42d7-8bbc-faebc5ee6cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613efb00-17a2-4f5c-90ec-13904a231493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61735c24-def7-45f7-805c-7296805b76e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1722a12-706c-49a2-be51-61547026b281",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e549efee-6be1-4268-981a-4881a7e7319c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1de6cb6-9dc6-4117-93a6-73443a644e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9dabbdf-4d6c-4de5-9291-7eb10dcad866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2def9b42-ae01-46d0-b2ad-eb6471365d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ada64fe-51d8-4305-ae31-87a929f551b4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7e0270-2e2d-4bd1-a970-f25358aaf12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d13b2611-61f7-44cc-81a9-9e3cc84cc640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e64f00e-1186-437e-bf0b-cae1485f50bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ef9dcb-87e2-4581-9a20-20a96e0e1b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8c1e20-5254-43a5-8c2c-b574f04e550d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e42bb5-8a65-4c73-bd5b-cfddb97b5df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "782f97f3-2c80-49c8-a2c8-0335c57d62d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2ffadd-798a-466d-9a00-aa180682d4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95b7eb8-2999-4019-a659-d6b194dc0b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece2c27a-b377-4db5-bd09-1a27810f4557",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c006a5-15be-46cd-a550-eaca2bb30af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6b83376-c066-41de-81d3-c995e2e9462f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b66c98-b1d5-4d24-a471-502fd12b5233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac5f844-9ab0-4024-b930-785100efd444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c2ff08-b24c-4c8b-b811-15d3cc3ae019",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0715b55-dabc-4760-993a-bb9b11c50fa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae7f6014-2840-40a3-ba8d-8a650e579fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422f5e55-4d7c-4273-b57f-07ad54a1b48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7032cf41-ec2e-4809-a2ad-13d0d7ca2f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142f00a7-3b16-438f-8445-1dd699a9a4f3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b6903a-a54d-4b3f-be37-be6a304d14a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0951fa6d-dca3-408d-8532-6a86f663701f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aacc758-de91-45cc-bc5b-ef884e108182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949738e2-e3ea-46cb-9a98-da919154d7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a735103f-6a24-4398-bbeb-044aa1a8fbc3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2942310-60d5-4654-920b-781ac87cb356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93f208b4-ceaa-484d-b0db-462a586c14a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "697dea67-2755-46f4-83da-1d5014c10006",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722b67eb-bab7-4bc2-bee5-b95d23495c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2fdbfe-f455-44bc-94fe-8c2dec3d4a93",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0d4bfe-4e77-43ee-96fa-d490fca8ea3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc92e841-5870-450e-97af-0ec96f0ddaa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6909c323-f4bc-46fd-b361-52da7e72649e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9017a1ca-cb47-409d-87ca-c75483ff72bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a071db99-09c9-43ef-b383-3227294d2efb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff604130-beb9-4f37-a1f0-0bf683ee8245",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36bf2000-6732-4f8a-8e12-c3c1ef28df21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f647aa38-b367-4171-bcd4-07dbcd83533a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88eb4049-204c-440d-93eb-95aa95e53ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8118503e-c0ae-4e0e-be23-7b2b271995e0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c067f83-10d6-4d24-aec1-06cd2e6292c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a6921c-50eb-49db-ae8e-52444cac85a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8aa396a-ae5f-40a7-ab9b-fd208ca477f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1761cac3-0b40-4f4d-bf34-8f684213bb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f23df1e-daa7-48b9-894a-a5c353c72353",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af53a08a-18e4-415c-89ee-c02559651ea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "311b9e48-63c9-42af-928b-aede60b3bcd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afadeae-9fbf-441a-8dd3-f7ebc41163da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf5e549-f3da-4027-b91b-24818c619906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73b6ac5-558c-421b-9480-fd89ea27242d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323239a8-dbdc-436f-a777-906232d4d693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b1dab7b-1506-4c51-8117-93f27020d86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0083e3-6bf9-44ae-8711-5687d3be4c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ded9ca-878d-4dad-8f74-d445476aba9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c063d89f-1216-4b43-a3d8-5d94d4ff9868",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d502abd3-8f45-4617-9b5c-f9e198a3ef6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6f5ebf-3eb5-4004-ac8b-bd8055c7c325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe919117-af31-48ee-a331-b185b4847f95",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61877eb3-e20d-4380-a9b7-e1458d979bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08067d5-856c-408d-8c1a-4810ec4fe940",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20900383-da89-458a-ad79-f18eabe957bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de39f41c-0a8a-4fba-b9af-66088dda5b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a556c96-a432-474e-9544-9339e04b5981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f59ef5-ad23-49c9-8258-ea271861a6d3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10199a1c-dd89-44de-a1b7-c505a6f2aaf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b508c130-38ab-4028-80e6-49774b4b0735"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "104694ff-5777-4f3c-8f78-540a19fc0251",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9b82964-8896-418a-8665-19b394d460f0"
                    }
                  }
                ]
              },
              {
                "id": "1220e167-8acb-4864-af29-10f51ea08f36",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0dab085c-4d1e-4da8-88ee-280acd7eaac1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15aeb1bd-10d8-4f9a-b8e5-72e709e509b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0b5a97eb-ca22-420d-8200-045c2ddccf54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adae8bee-1c01-476a-b0c0-c1e9508e4d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e36b4743-b894-4492-bb4a-852dff743479"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c4ff5fc-b02f-49f9-a505-3afb272bfce3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c6f9b37-7b65-41a2-801c-7a88ffba30bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d7803ca-2d5b-4386-87fd-e3f67f1ed3c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9092e65-bb46-4da2-b9c0-4c65302decf3"
                    }
                  }
                ]
              },
              {
                "id": "f6218cf9-ae16-4b18-8025-388751c90c25",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "93da6482-c85b-4502-a424-2d7c06616d29",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8adb5e-5f47-41d1-98d1-379ca675d8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9c662c7a-db3c-4725-96fe-eeb8b81a47c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74129467-4729-4232-a4d5-9b8cfa811241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e652fc-766d-40d1-bcb4-64058d62a1c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "83197ff3-a43c-4f25-82e9-6044af8e4552",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec79e03c-8b40-43f5-a67e-e75ac2dbec27",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20bb567e-eb41-4d78-b1a7-0cff921e33f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b3aecba1-2f03-4190-8696-aebe4e549197"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "140fe311-625a-4223-9999-a0876cfafa71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6498ed4-1221-4e37-9f5b-36e7e2b8c60c"
                    }
                  }
                ]
              },
              {
                "id": "7a0b0add-0f60-4ff7-8e0a-8d289a0655c7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c74eb31-6424-4bca-bce2-aa14f1482b61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b296a8b3-b783-4202-a2f9-23953190b69f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "078e8bc5-85ef-45d6-b7cc-e7d775828181",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2e5f62f-be01-4370-a093-1dc223019a93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cc04b91-9a09-4a1c-99c8-a7651483c40c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "46052791-25f3-4e1a-8f31-b52202677c10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4191063f-5205-429f-9c55-aa07fa17bd63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c80d434d-2a24-4809-8a36-df0fe0eac7be"
            }
          }
        ]
      },
      {
        "id": "32418f78-fec6-470e-9a6e-5b392194b4f4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a74534ea-4dba-4871-956a-44c89cc78e12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7607727e-8a87-4d54-8fee-2e6d97f8c1c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0763c50f-6f10-4fc8-afc3-cf349310cf06",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ab5455-9f9e-4b48-93d5-30badb9ae9ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1df50afa-73ec-4d49-b7d2-858e3ee2f666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91e406e-f33a-4172-92cb-ffed763617c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "028807c5-e78c-4e5f-9d6b-f2cac09ee2c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaf7b12f-0335-4c5b-bed7-d6760d9dfc40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "accb0d5b-b8d8-4f6f-9313-244a7dceb717"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aa42663-9281-4f8d-855f-c2fdd10e6c60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcdcfd95-5e6f-4820-89ca-5febf90c0468"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c093282b-8b3e-425a-bb7f-cc3c5147d87a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5c49ac97-d3e3-40cc-b609-e92473721220"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63105968-2c6c-4c16-81cb-4816d557313e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b5fab85-a33c-48a4-982b-4db6e366bf0c"
            }
          }
        ]
      },
      {
        "id": "7ef70fdb-c7f0-4e00-a5b2-e1f9cdea24dc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "24513210-f31d-49d5-b5ad-30c5d2c5e7d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c08070b6-44d4-443f-87ef-131d62913e75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43141eb0-ef16-4454-a2ad-d8c17b335130",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c018fce7-b03a-4c66-8b90-0c0c147658cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ad82698-b8da-485d-a006-ef9859016903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76e601d-68ec-4bd6-83ba-1362bb5889fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f0c7f1b-00cf-4522-a93f-cf6c2aeda072"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83d70445-2942-4a06-b8fd-684dd429614a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c95991b-855e-431e-85e5-df064aa0b05e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5507f50b-1e7d-4ce1-b000-d4499d2a4aae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "986f4cf2-5604-4983-a915-864a829fa9d2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bef93231-47eb-4f85-9207-eaeb3ec5fc8f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41a054f3-3a0f-4003-a7ef-e911a1c875b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73926cc6-83ca-4d1d-9748-ee12c2e2db3e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad1cb218-3dfa-4ba4-8615-d351d80b3ba9"
            }
          }
        ]
      },
      {
        "id": "4f98c4b3-8c1e-4b7d-9116-18c65cd6613e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "65bee00d-085e-443d-872c-17738b45e8b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7e0f6c2-cbeb-4888-a26c-deb57a77114d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b1f72c2-7fa8-4332-a8f4-081236698680",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f957d3-8938-4241-b05a-43b0d9647325",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd7c971a-4f7c-4bf9-95b5-408ace529826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15206cb1-2d90-484b-8f01-3cd021f2e93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b22d37c-7ac8-4ea9-8c77-9f1ee0bb11a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95839456-e479-4bf0-b926-47401069d044",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4498d432-16a8-4dc4-b288-9457f1529be7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eaca5a2-b013-46b5-b1d6-186dc60651fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91c928a8-8185-4181-9347-70e05a7347c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22d66a15-79a6-4a53-a59f-8e8a99ad9f5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "06a9ae24-3b83-4f7d-8517-f80bdc5053ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e210caf-e3e3-435a-b27a-a73abe01a335",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff7f0ef6-f6f3-44c6-88dc-168ee98d3f18"
            }
          }
        ]
      },
      {
        "id": "0f1426bd-3aeb-4243-a673-9b5a34f5bb49",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce9a6ae0-0376-41cf-a1d5-8d2f5587f70b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97571503-35ec-4221-aeb7-aee78050e488",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3e61f819-5986-417f-9d17-fd87cb58f871",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff8a0ee5-4b09-426f-990f-da01a8fc29c5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "523cde73-fc7f-4ba2-81d4-5b0f1e88ff71",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 72.63028169014085,
      "responseMin": 11,
      "responseMax": 5303,
      "responseSd": 415.7631460219409,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697416471929,
      "completed": 1697416504261
    },
    "executions": [
      {
        "id": "e116481c-1820-4578-a851-5c469c34bdc7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "35663a14-d884-4d17-9b5d-2276962e8602",
          "httpRequestId": "81985c17-b74c-4917-8d00-0de58f6b10a3"
        },
        "item": {
          "id": "e116481c-1820-4578-a851-5c469c34bdc7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5a35d4ee-292b-41b6-9e02-8140a4e87894",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 0
        }
      },
      {
        "id": "7b8f0230-cbb9-46e5-979c-b39282385492",
        "cursor": {
          "ref": "57df584c-b218-4d8a-9354-df2ecf20a3cc",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "23e2cacb-f4aa-41d4-95c8-99b2908477b4"
        },
        "item": {
          "id": "7b8f0230-cbb9-46e5-979c-b39282385492",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "eceed44e-e24f-4c63-a8c7-206d32d1ea94",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "1d9eaf40-c6f8-4b71-95f9-efff80b85358",
        "cursor": {
          "ref": "3c201551-4ffd-4ded-9aab-b9d595244fa8",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "057169fb-0a2e-4b26-94d7-6ff3a7bd84b2"
        },
        "item": {
          "id": "1d9eaf40-c6f8-4b71-95f9-efff80b85358",
          "name": "did_json"
        },
        "response": {
          "id": "f120d11d-ae90-4f4b-998d-08f468ff6812",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7710269e-6c67-406c-ae70-ca384a3957cf",
        "cursor": {
          "ref": "514c0d0d-a85e-46de-be69-64af49225b01",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c194c6f4-9c38-4c4e-a9a7-a3b8915416a1"
        },
        "item": {
          "id": "7710269e-6c67-406c-ae70-ca384a3957cf",
          "name": "did:invalid"
        },
        "response": {
          "id": "347fbcfe-8759-450c-a32a-c1530bc4184f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 567,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7710269e-6c67-406c-ae70-ca384a3957cf",
        "cursor": {
          "ref": "514c0d0d-a85e-46de-be69-64af49225b01",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c194c6f4-9c38-4c4e-a9a7-a3b8915416a1"
        },
        "item": {
          "id": "7710269e-6c67-406c-ae70-ca384a3957cf",
          "name": "did:invalid"
        },
        "response": {
          "id": "347fbcfe-8759-450c-a32a-c1530bc4184f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 567,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f5ac06-d049-480a-8c81-dc9ecbf79fcf",
        "cursor": {
          "ref": "813824b6-f5c3-4652-9ec4-35ef5531cf2b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1989e200-b53f-4873-95cd-8666a80be962"
        },
        "item": {
          "id": "77f5ac06-d049-480a-8c81-dc9ecbf79fcf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1342d2b8-ece3-4e7a-9e0e-42b66dea06a6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716f1b42-4cd3-4618-9cf9-ada62eeccfd5",
        "cursor": {
          "ref": "da563e9c-1cd2-4358-b14f-97a03c876f40",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "aecb07f6-d6e4-4174-b087-f2f1c0866b5b"
        },
        "item": {
          "id": "716f1b42-4cd3-4618-9cf9-ada62eeccfd5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "df941ebf-668c-4b6e-b787-384f50030958",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588ee07a-1da0-4558-9768-8e632d21bffe",
        "cursor": {
          "ref": "f9e8f8a4-1d17-4849-ae92-25a9eea4db62",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7eab35d8-ae31-4c77-9bed-8cb40f9a3bd1"
        },
        "item": {
          "id": "588ee07a-1da0-4558-9768-8e632d21bffe",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a0e4e0b6-2ee6-4c37-bf9b-51bde5f3f34c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4c7221-ebf2-4b58-bedb-3c6449201b91",
        "cursor": {
          "ref": "fc06c016-4d12-4586-a195-36b1447c18c3",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "70ae6f4f-5ac3-40e4-81ff-39d278d27497"
        },
        "item": {
          "id": "9b4c7221-ebf2-4b58-bedb-3c6449201b91",
          "name": "identifiers"
        },
        "response": {
          "id": "711d6d80-d318-46e7-8237-7b0762951768",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeba2f7f-8d73-489d-b05b-9162ddb35c23",
        "cursor": {
          "ref": "1e2d26d8-5b16-4f5b-aa3a-ba55acc414c9",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e60b64ef-1655-4bff-9f32-90accc6b1f24"
        },
        "item": {
          "id": "eeba2f7f-8d73-489d-b05b-9162ddb35c23",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f254c939-3be5-4b44-855e-fe507a9d69ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cd4f6f-bffb-490d-8ad5-d6f7b10bfead",
        "cursor": {
          "ref": "e361529e-2737-430e-acd2-1d59ee702407",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cd71f564-f388-4d97-8e38-f14bbde9487a"
        },
        "item": {
          "id": "01cd4f6f-bffb-490d-8ad5-d6f7b10bfead",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2b3bf8d8-9a76-41f9-bb8b-dcee4743d1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a8d1ff7-bad4-4e14-a505-f88dc7743bd7",
        "cursor": {
          "ref": "45d91570-d5f6-4586-9932-a37e2d3f90e4",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d193af47-577d-40e1-a162-766ad0e04a0c"
        },
        "item": {
          "id": "9a8d1ff7-bad4-4e14-a505-f88dc7743bd7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f7fac4bd-7a14-43af-9131-6c7eddec5e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b1aae8-6aad-40ff-8c71-1dbbe6fd4e0a",
        "cursor": {
          "ref": "c843d1a8-5674-461d-89ab-0b5da205268e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f9c4fa7d-7461-4726-a0b2-fe863aa6f7fd"
        },
        "item": {
          "id": "94b1aae8-6aad-40ff-8c71-1dbbe6fd4e0a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c66ded10-c7a3-4143-ba78-ef7cfca90dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1d593b-1311-4098-b71d-c7ea0b5d468d",
        "cursor": {
          "ref": "25a5a976-8cee-441a-b5d5-c5d76c55db18",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6c18f3c4-fbdd-4440-9612-b709ad3f3977"
        },
        "item": {
          "id": "bb1d593b-1311-4098-b71d-c7ea0b5d468d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0b300eee-c38c-419b-8274-ef808558d634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb1d67a-7c14-4ef5-ae92-75995f603f3c",
        "cursor": {
          "ref": "1f0e3e3e-ba6b-4107-9698-da115b0d8911",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "818a8e1e-330b-45a7-a90f-c93928b4272a"
        },
        "item": {
          "id": "efb1d67a-7c14-4ef5-ae92-75995f603f3c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "33611727-3ffe-4eb7-8698-cb91265e1d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21170b6-b798-407a-8fc4-ec8a16be64d9",
        "cursor": {
          "ref": "4a27623b-7b67-4a0e-b09c-70b7b2cfa12b",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dc9b2c90-78f6-4e46-a49f-85cb69562213"
        },
        "item": {
          "id": "f21170b6-b798-407a-8fc4-ec8a16be64d9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b112094b-6294-4df3-a119-a25b508973df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5279dfb-6365-4041-a456-b634edf70444",
        "cursor": {
          "ref": "1bd88ac4-2c73-4a25-aa16-685616d4a8f3",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "27c8b187-9f1e-4d26-bceb-b08fd24ad41f"
        },
        "item": {
          "id": "b5279dfb-6365-4041-a456-b634edf70444",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "aea18ffc-00da-4a4b-885b-d6adbdb2f6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af31fa93-b9e5-447f-9b83-80524fcf085c",
        "cursor": {
          "ref": "fda089a8-c98f-44dc-aab7-4d031741d908",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "25950999-38fd-4ace-8ae0-909aea08bacf"
        },
        "item": {
          "id": "af31fa93-b9e5-447f-9b83-80524fcf085c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "741c827e-7eb9-475c-a07d-667844780ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9106465b-a133-42e0-8c57-684a44eab533",
        "cursor": {
          "ref": "7f180a7e-8f62-4c05-9fcc-6f7222968d76",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "43a4cfc9-d03e-43a2-a43f-28425213155c"
        },
        "item": {
          "id": "9106465b-a133-42e0-8c57-684a44eab533",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "de182283-418a-4937-ba45-b3e416e88513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7fc05a5-9b87-4892-9672-bc681ac082b6",
        "cursor": {
          "ref": "14bb3915-aaa2-49cd-bcca-6d37fc0838c5",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1bc937fd-709d-437d-9478-ec56b875c714"
        },
        "item": {
          "id": "a7fc05a5-9b87-4892-9672-bc681ac082b6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "534b781d-cc3f-4392-8d87-15607b055336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b72f472-cca6-47a2-afce-096dd90b5748",
        "cursor": {
          "ref": "0b6261f2-5acf-4c63-b5e0-d247453dca99",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b8060cde-ad4d-4563-90fa-365d11c2480d"
        },
        "item": {
          "id": "4b72f472-cca6-47a2-afce-096dd90b5748",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7d55d837-678a-415b-86a7-e048f4ddabb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a0de91-e8c1-4cf5-b2d4-8e1406bb1479",
        "cursor": {
          "ref": "7efeb9aa-3887-4b4f-9a42-213ad56e4a17",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0fc329a5-3f5c-46b7-bd17-d57ad09751fb"
        },
        "item": {
          "id": "a3a0de91-e8c1-4cf5-b2d4-8e1406bb1479",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "05251a68-83e1-4035-a7a4-27c8805dc46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e27d7a6-ff6a-44c3-a0f2-53629398f9ea",
        "cursor": {
          "ref": "c91d114b-bef0-4b21-8c30-4dc373c383f9",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5a48aa8b-cac6-4b10-9095-38f189de3fea"
        },
        "item": {
          "id": "7e27d7a6-ff6a-44c3-a0f2-53629398f9ea",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "723cc80f-847e-4a44-bf81-260176b7fe7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382ec95e-2a5e-4aaa-b92d-0bf57833c299",
        "cursor": {
          "ref": "f74d6284-67d8-4ca4-a490-3834d9184c58",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "799d2660-8e9f-4703-aefd-985f077e94c8"
        },
        "item": {
          "id": "382ec95e-2a5e-4aaa-b92d-0bf57833c299",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "61381f46-4bab-469d-8451-33cd87183dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90769e3-c308-4289-8106-2fb4f9e1b4a9",
        "cursor": {
          "ref": "5d9317bf-0ee5-4325-b236-a2f76f0a2b46",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7a2079ad-5a4a-4b2a-bf83-dbf2738d1a6b"
        },
        "item": {
          "id": "e90769e3-c308-4289-8106-2fb4f9e1b4a9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4bcc2db9-1d4f-4696-be38-550b1268e321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e67116-ed76-4132-8ec2-775e8583e85f",
        "cursor": {
          "ref": "86556021-5b95-410c-88ed-61d2f78ff508",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "82c37d4e-5cd7-43a5-9324-07820e68922f"
        },
        "item": {
          "id": "a5e67116-ed76-4132-8ec2-775e8583e85f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "db9dfba4-dd21-41bc-b239-851c0009d3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fbd630-aae5-4ee0-9cde-e384833fd526",
        "cursor": {
          "ref": "3b51235c-7ad2-48ba-bc8f-6b83861e217f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "29dc7989-535a-416d-9da7-2e24b7359c66"
        },
        "item": {
          "id": "93fbd630-aae5-4ee0-9cde-e384833fd526",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e25df635-bae0-4c07-ba39-f42f19d279e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66b6b18-9536-4e03-8363-a7c4644342fe",
        "cursor": {
          "ref": "9c2bf60a-4d42-4c54-9d42-011070e9a975",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8debc94b-78d9-4240-acd8-3a50142f314b"
        },
        "item": {
          "id": "f66b6b18-9536-4e03-8363-a7c4644342fe",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c6a2da39-2a69-4e23-8b86-e70057c078eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1e4ba4-994b-4131-92cf-8b69fd4b5f5a",
        "cursor": {
          "ref": "412c86d2-b4d1-43e4-8fc8-081c456d5773",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c6526a28-10cd-43af-a995-02f97ec21ddb"
        },
        "item": {
          "id": "5d1e4ba4-994b-4131-92cf-8b69fd4b5f5a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "213d5ab8-f3f9-4c22-9e9d-3fc3867f314b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9026cfc0-b742-4bad-b3e2-961664b2577c",
        "cursor": {
          "ref": "0fd3d667-2a03-413c-8bcc-e29b209c3f7f",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9fa485d9-67dc-4327-949b-7d4ed7c10877"
        },
        "item": {
          "id": "9026cfc0-b742-4bad-b3e2-961664b2577c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0f883fb0-b0a8-4e83-957f-c6c1bf35ebe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bdcc82-c2b1-4425-86c7-236cf68b190e",
        "cursor": {
          "ref": "25d3310b-5f95-41b3-8dc2-07724a5ab02b",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1809cf12-1c0b-410e-8e8e-46e6f83d3820"
        },
        "item": {
          "id": "62bdcc82-c2b1-4425-86c7-236cf68b190e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9ec37e01-35fb-44d1-9b64-005f8548c79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c49b96b-9475-4114-b5a2-3bccba8c5773",
        "cursor": {
          "ref": "55a97e52-309c-498f-8181-1db9f3925954",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "530eadf5-a2cb-457a-ba0c-cf9cb3464c03"
        },
        "item": {
          "id": "2c49b96b-9475-4114-b5a2-3bccba8c5773",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5ffecc15-497c-4858-ac03-993252bc834c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c5c7d5-a519-4982-8c14-b5f4e32e6309",
        "cursor": {
          "ref": "5c33c309-9c8b-428a-b450-6ffd7e620021",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a8b372d3-2032-4b35-a5c3-eb07416c4726"
        },
        "item": {
          "id": "97c5c7d5-a519-4982-8c14-b5f4e32e6309",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "53eff185-9daf-4394-a685-b02c34d8e195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83d7024-ede4-4c6a-8aae-d0986035167c",
        "cursor": {
          "ref": "92f3d411-d5a7-4cf8-a1fc-e6de41f3001a",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7bab5733-aff0-4e29-a618-0bf3ad339144"
        },
        "item": {
          "id": "a83d7024-ede4-4c6a-8aae-d0986035167c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f450b122-c828-4771-b13d-37924a77307e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148a284b-a9c3-4342-84fd-063367090e19",
        "cursor": {
          "ref": "5df7cc2f-9a36-4cec-9139-9ef612519625",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f61f53fe-25b5-47c2-b4c1-d0ae51122b6e"
        },
        "item": {
          "id": "148a284b-a9c3-4342-84fd-063367090e19",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a52780af-b66d-4f76-a9bf-e03eae4c9e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2abe45-ace2-4a1b-a388-b1430839d703",
        "cursor": {
          "ref": "354c21b6-845e-45cf-adba-561eec87f86f",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0f389bb2-75a9-4395-ade7-3a5bfdadfc6f"
        },
        "item": {
          "id": "6d2abe45-ace2-4a1b-a388-b1430839d703",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bcbaaabc-8b63-4996-9361-ebf917fa08c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad590dd2-799c-463e-89bb-80a03c62ddbe",
        "cursor": {
          "ref": "92fdfb5d-8d7a-486f-88ab-9c4057e52dea",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d2ba914b-2769-4818-8e1c-f31d660ed50b"
        },
        "item": {
          "id": "ad590dd2-799c-463e-89bb-80a03c62ddbe",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0dbb3676-0fcd-4b3f-8332-eb28df14d1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd3833f-d64b-4507-9d8e-56743bf7c06e",
        "cursor": {
          "ref": "639b10f4-5566-433e-bc93-aa3e13215578",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fa9c04f4-2320-4648-81c8-efcf49153255"
        },
        "item": {
          "id": "6fd3833f-d64b-4507-9d8e-56743bf7c06e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2d9e9d35-ac2c-43a9-8e5f-ae574793ad60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e5f6c8-5803-480b-b90d-2f5bb8541879",
        "cursor": {
          "ref": "1e4e0888-70e2-4af0-9b48-387afce89244",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "690ff615-211a-4aa0-8cb8-1d9ce3e75696"
        },
        "item": {
          "id": "84e5f6c8-5803-480b-b90d-2f5bb8541879",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d741b400-7110-44f0-85bc-2c5afa1ef8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365f29e1-169c-4f75-ac53-4c6fa7dd0e5b",
        "cursor": {
          "ref": "3c41eecd-6cb9-497b-92db-3dd4158219bf",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "42ea8246-a31a-4727-b2ff-6c2645939ca4"
        },
        "item": {
          "id": "365f29e1-169c-4f75-ac53-4c6fa7dd0e5b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "80018b1f-ed08-4ff4-a042-be9ad731ab1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e475a8-37c5-42ff-8683-4ea574a38794",
        "cursor": {
          "ref": "8c52e637-b298-437e-81ab-e4f0adef0408",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1b0e483f-9bcc-4ef8-9ad2-de0c8d2d98dd"
        },
        "item": {
          "id": "28e475a8-37c5-42ff-8683-4ea574a38794",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "013428d2-3a29-4ffc-8ec8-3acea8c115f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60fc849-46b5-4669-8980-5c1c45906b7d",
        "cursor": {
          "ref": "f515f697-1a2b-439b-b644-ec872781ec61",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bd16eba5-7428-4ce4-93bd-6fae6e891e6e"
        },
        "item": {
          "id": "b60fc849-46b5-4669-8980-5c1c45906b7d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "53439540-b08c-42c7-aa64-842a7db1e2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f20c168-4d60-4d1b-8779-8cb96c962200",
        "cursor": {
          "ref": "272a57a6-e038-4f87-b801-aa1158dd5980",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3781ad24-33ea-48f7-8aa2-95c138a34cb9"
        },
        "item": {
          "id": "1f20c168-4d60-4d1b-8779-8cb96c962200",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8543f179-1bca-4b7b-a867-dc1d1fee158f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360514bb-9e7b-4531-8793-890577384eb5",
        "cursor": {
          "ref": "801852f9-b70a-451f-a1fb-ea0e9a6e467f",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c4ae7ebf-e49e-49a7-87dc-2e6ed257bf6a"
        },
        "item": {
          "id": "360514bb-9e7b-4531-8793-890577384eb5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3c9eb034-3a36-4060-8e5a-ed111528edaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b515a32d-39ce-47fa-a2c0-b0333d7f5275",
        "cursor": {
          "ref": "a4b5fd2d-548a-43b2-a6c3-17006e8f579f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "369d9bb8-358a-4834-8332-4a3d8d408bd5"
        },
        "item": {
          "id": "b515a32d-39ce-47fa-a2c0-b0333d7f5275",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0e020e88-6cbf-440a-b01e-bdd69a450a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db978aff-f9e6-45ca-8cb8-3ef67662b3e9",
        "cursor": {
          "ref": "4e9a5852-5c27-4be0-aa68-1e9a58c2b881",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "687c7c45-8f0f-48f0-af46-8821e00b83ee"
        },
        "item": {
          "id": "db978aff-f9e6-45ca-8cb8-3ef67662b3e9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "774e162e-ad3f-4336-92dc-fd9a0afeec4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73822ce4-ad92-4982-af7c-fc4c1826bc64",
        "cursor": {
          "ref": "329be20f-a35c-4c59-b264-ad4339ebf4d8",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c3f91166-186e-4f0f-9cd3-a5be2e4c2f45"
        },
        "item": {
          "id": "73822ce4-ad92-4982-af7c-fc4c1826bc64",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1955fd30-14ef-4e8f-b6c0-ea8d8de70342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4cad85-1fcf-4e0c-ba6b-590e2319258f",
        "cursor": {
          "ref": "bd0cb7bc-76c8-4a42-8d2b-4271c2174b12",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ecd65492-2416-4ae9-b800-0f4dd2ab3d29"
        },
        "item": {
          "id": "bc4cad85-1fcf-4e0c-ba6b-590e2319258f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9e7fbc7d-51c4-4e69-81ac-1559caa207d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914dea15-0c47-4213-b340-443038169287",
        "cursor": {
          "ref": "51c5805d-54b2-4619-9f7b-af58dcc98800",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d2680592-be02-463f-8c6f-f6d50b9085db"
        },
        "item": {
          "id": "914dea15-0c47-4213-b340-443038169287",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d4aab1c6-8380-44ce-96c3-ac1abe997719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfc5fae-49c7-4c6e-b2e9-9f75180c262c",
        "cursor": {
          "ref": "9b09ef5a-0a1a-4d6c-9b2a-0beac7da3a8a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "19d136e5-d9ff-4477-8d78-450a6d905bd5"
        },
        "item": {
          "id": "adfc5fae-49c7-4c6e-b2e9-9f75180c262c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "138d95f0-2a77-4105-ae5e-df25b081a2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12245884-de82-4d2f-ac0d-80ec3823d651",
        "cursor": {
          "ref": "d85048ff-7c47-4bda-b40a-89b4f3e54a90",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2ab6e088-2cad-40e3-97df-673bc6815f22"
        },
        "item": {
          "id": "12245884-de82-4d2f-ac0d-80ec3823d651",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b829d7a3-4f71-4d81-907f-67ddf4757c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351d7844-dff4-4d86-830a-d771b7fc02da",
        "cursor": {
          "ref": "01adc35e-1e4f-4100-b5d1-295000207c1e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "43e8c516-74e2-4fb1-9d8e-b3755777385e"
        },
        "item": {
          "id": "351d7844-dff4-4d86-830a-d771b7fc02da",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bb792387-d636-46eb-97a4-ae2e38ec2f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2dfcd9-f85c-4099-bc10-b7a968d818e4",
        "cursor": {
          "ref": "d6f73822-8a3f-43bb-85bc-ede335351945",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "08127278-d5f3-4301-97e6-db54a53b4752"
        },
        "item": {
          "id": "4d2dfcd9-f85c-4099-bc10-b7a968d818e4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "762d5f52-e66c-4330-8553-db764976c5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6421bb-ccc3-47a6-a7b0-6caf60e6e728",
        "cursor": {
          "ref": "c9d85e55-9425-430b-9eef-447f37c1759a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ed5cce0f-9399-477c-bf02-3a9338eab513"
        },
        "item": {
          "id": "0f6421bb-ccc3-47a6-a7b0-6caf60e6e728",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a0e95969-162a-464e-8e03-a676ad47f86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648e2a16-f77e-4d84-8129-6fe076376177",
        "cursor": {
          "ref": "a757dc3e-62b2-4e06-9207-4182e3d36456",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "30b0debb-87b9-4452-90cc-998454d0abac"
        },
        "item": {
          "id": "648e2a16-f77e-4d84-8129-6fe076376177",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "14d3d7f8-5e24-40b1-9316-ebf90a11be23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17866db3-7ba4-42ee-8d2d-d6e5ed45c166",
        "cursor": {
          "ref": "82e8a695-2564-4e1e-b077-12826da614a0",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2955d008-bea8-4b81-91a6-7f0763836a5d"
        },
        "item": {
          "id": "17866db3-7ba4-42ee-8d2d-d6e5ed45c166",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "abc24e21-448d-4ea5-a713-a37f30985292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee548a1a-98a6-4b72-9938-00f7e506f9a7",
        "cursor": {
          "ref": "bdfe68d0-3570-4224-865f-4387fc097965",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b901c061-d9f4-4446-b4f9-3b01206564bd"
        },
        "item": {
          "id": "ee548a1a-98a6-4b72-9938-00f7e506f9a7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2a08e741-235b-4040-8c63-ce74cea7225e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa681f5-cabd-4536-95ee-6f02f45c6690",
        "cursor": {
          "ref": "73e0b1ea-edc1-40eb-970a-6fd2daff3b4f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ec81cfff-2766-4020-8fb5-954e6233cf89"
        },
        "item": {
          "id": "afa681f5-cabd-4536-95ee-6f02f45c6690",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ea9e5807-3461-4166-b7e3-632f760ed5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fcb022-5934-4f06-9926-20a1d8971ba2",
        "cursor": {
          "ref": "40e1a2a3-a2fa-403c-8501-9032ed109340",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3ce071a0-c645-498b-a2a5-fb205347f6a9"
        },
        "item": {
          "id": "f6fcb022-5934-4f06-9926-20a1d8971ba2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "96dfa208-299e-450a-88f2-f66bbfcc750e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a09e12c-9981-477d-9c19-7edfe05e64bb",
        "cursor": {
          "ref": "b9cda57d-5d76-46b5-a3c6-c18213fe4ffc",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6cf18d16-ee35-47ba-a973-35e578b71503"
        },
        "item": {
          "id": "0a09e12c-9981-477d-9c19-7edfe05e64bb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e3879875-ad9f-49d1-a8d2-dbcadd6b5a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4808f6dc-0633-4d8e-a58d-e04ff446e642",
        "cursor": {
          "ref": "36070ca9-6dba-4255-8754-d61c0db36fb0",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e1a319e2-46b8-47a9-b58e-c93d675e179d"
        },
        "item": {
          "id": "4808f6dc-0633-4d8e-a58d-e04ff446e642",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1db71108-0cfa-4b92-bc0a-c2e4a3681260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6444946-c7c7-4fe4-b51a-a84a05641623",
        "cursor": {
          "ref": "97e76924-055d-48f5-9542-f430323230d4",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "278e14a1-1e5d-4982-8b63-087829e782f9"
        },
        "item": {
          "id": "d6444946-c7c7-4fe4-b51a-a84a05641623",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3d986a09-975a-40a9-87d7-42c5f2bcac3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e2d7af-3917-4945-a182-fc2da73a3584",
        "cursor": {
          "ref": "d8d4f876-dba8-4817-9f01-a8dd16ba8b5f",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "01558527-d200-4dfb-a459-3d2f6e13af55"
        },
        "item": {
          "id": "c9e2d7af-3917-4945-a182-fc2da73a3584",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1e9e6d02-63df-4390-a38f-8f0910b07968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0d363f-c2e2-4b81-b682-817e7eaa818e",
        "cursor": {
          "ref": "c02dedc9-5ec2-49a7-84fc-7ffcbcd29848",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "10b0ff8b-dd07-4729-a114-69bafc392f5c"
        },
        "item": {
          "id": "8b0d363f-c2e2-4b81-b682-817e7eaa818e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7ab83814-b5f0-4245-a31d-73de2aa43c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8550f2a4-a247-4143-99d7-8df44ccdc175",
        "cursor": {
          "ref": "6d3d6bb6-776a-4f70-b494-624bf37858a3",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "52e49b02-c517-4b2c-b914-cff37a30d52b"
        },
        "item": {
          "id": "8550f2a4-a247-4143-99d7-8df44ccdc175",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f1a96b1e-64de-48c8-9a13-bb0dc7ba814c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e63602e-ecbf-460a-8e12-f186c5f1970b",
        "cursor": {
          "ref": "87aec8df-7910-4177-802a-f7fe05d27b32",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a41d223d-a294-4ad5-b819-35fb15995caa"
        },
        "item": {
          "id": "2e63602e-ecbf-460a-8e12-f186c5f1970b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c8608b2f-0f75-4d5b-aea5-f264df14d04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b7e0eb-4f6d-495f-9844-e1882cf077bf",
        "cursor": {
          "ref": "e781ea21-88f2-445c-b69a-95b7b81f6593",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b2c1e74a-c924-468d-891e-f6e3d05c2eac"
        },
        "item": {
          "id": "e6b7e0eb-4f6d-495f-9844-e1882cf077bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3c28f66c-f5a7-4839-a54b-bcc3b67ce0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e729266a-aad4-4bf7-b15f-c9aa6d9fd66c",
        "cursor": {
          "ref": "7b62ff30-d584-4485-bb39-9d943c1e32aa",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e2413a15-0923-432c-89d4-b27da156fa4f"
        },
        "item": {
          "id": "e729266a-aad4-4bf7-b15f-c9aa6d9fd66c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4c8934e4-d4bd-4e7d-88c2-0199d4ed1bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615d63be-7e6a-4a4b-a312-8902b2c711af",
        "cursor": {
          "ref": "79a8ff59-fc4c-4ac8-8ae1-247026d6bf9b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5a23f841-4e14-4bbb-a56e-df275eaa6ce8"
        },
        "item": {
          "id": "615d63be-7e6a-4a4b-a312-8902b2c711af",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fe9e2020-eb30-47a3-a782-d7bf2ae7be39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9240346-4ffb-464a-9c4b-b5288e1ccc60",
        "cursor": {
          "ref": "207bef3f-b0e0-4908-8cb2-a39293227cf6",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a01c7156-8e67-4874-82ba-11a69cf0d0b3"
        },
        "item": {
          "id": "e9240346-4ffb-464a-9c4b-b5288e1ccc60",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5117f384-8862-4cdf-9316-23ad16a07f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31356e81-695c-4c42-95d1-8bf0f594c0a8",
        "cursor": {
          "ref": "30fc643b-41f6-44d7-8d99-54ead06ba0ad",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "25cade2a-4a46-404f-a0f4-2a766c60f624"
        },
        "item": {
          "id": "31356e81-695c-4c42-95d1-8bf0f594c0a8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a027607b-b6c5-43e6-b21f-3ba8c69c9040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f4508e-4f05-4e9c-9386-302836297f7d",
        "cursor": {
          "ref": "9d30cc56-4aae-475e-ac8c-38febe4eef5e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "288af4fd-d2bf-4254-8b57-6a57d476714e"
        },
        "item": {
          "id": "91f4508e-4f05-4e9c-9386-302836297f7d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bdfd02f6-f0c0-46b2-8dce-f42c19f4e078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24bf86b-c54f-4a5a-a492-1b1d81fcfb76",
        "cursor": {
          "ref": "6d0707b4-5c86-40a9-a646-ee8c3130058d",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "968f0f88-f572-4cd3-833c-144b7f8e6c50"
        },
        "item": {
          "id": "d24bf86b-c54f-4a5a-a492-1b1d81fcfb76",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fee2b432-7655-4f73-beea-dc3c3e169743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720fe6d0-57e5-4b44-9e91-d18244b671a0",
        "cursor": {
          "ref": "daa581ed-d8d8-4b57-81df-557a993c33a9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "74fecb20-12d1-4b72-8fc5-5cfe4b40224b"
        },
        "item": {
          "id": "720fe6d0-57e5-4b44-9e91-d18244b671a0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c5c32348-c452-46aa-9d85-48b04fde7bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f18e46-181f-42d9-a711-0ab99816fde1",
        "cursor": {
          "ref": "0844dbf3-59b8-44fb-a383-ae5b226889a2",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ea975e12-83e9-436f-9c8b-5a64de692793"
        },
        "item": {
          "id": "87f18e46-181f-42d9-a711-0ab99816fde1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2a332f4c-74b9-42b0-8657-b5727e1a5196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6f96a7-f549-4ffb-b0be-41385af71b11",
        "cursor": {
          "ref": "76482fd1-cf02-444b-89ce-eec738a18b16",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0dd28b35-024f-4857-8af7-a8bc56e81486"
        },
        "item": {
          "id": "ce6f96a7-f549-4ffb-b0be-41385af71b11",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f335ba1e-6caa-4d45-97b5-6b5460289529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034d853d-10d9-48e8-be3e-6f8140bddd5b",
        "cursor": {
          "ref": "55080259-5924-4667-8298-7e856521d94b",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e278b736-6b4b-489b-bd20-7b3ff7dd2e29"
        },
        "item": {
          "id": "034d853d-10d9-48e8-be3e-6f8140bddd5b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b6babcd4-a2d3-4b45-a419-15e43ca63f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ee9659-f7b1-42ca-9e88-1d15eb5be7a4",
        "cursor": {
          "ref": "a846f8c3-1cd9-4169-82c8-fd6500430869",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "89abb672-9c39-4f92-b239-1b3a90d6f123"
        },
        "item": {
          "id": "b0ee9659-f7b1-42ca-9e88-1d15eb5be7a4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6bd67d9d-3f79-47b5-9b7c-e6140b09c6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64666d1c-a4b8-4021-9d57-c1110ebe0d35",
        "cursor": {
          "ref": "f342e13a-74ec-47fe-a7fb-f64f6377046b",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4b851718-f6f1-4f91-ad6a-37095fe2413c"
        },
        "item": {
          "id": "64666d1c-a4b8-4021-9d57-c1110ebe0d35",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0722b451-e290-4c51-8495-373af6405fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72303e0d-f35c-4d9d-ab7a-d81dc4307932",
        "cursor": {
          "ref": "7c531915-e066-4b88-b276-a797104f6573",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0248b92b-821e-4434-b60a-9b14bb68fc70"
        },
        "item": {
          "id": "72303e0d-f35c-4d9d-ab7a-d81dc4307932",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f6b79007-490e-4d9d-afd2-000350a6f7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfad527c-2bac-4b17-873b-37245b563ee2",
        "cursor": {
          "ref": "88fc997e-511a-4b20-8879-d34a65c703f0",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d386a943-b8f3-41d1-b98c-04fd74ac2b98"
        },
        "item": {
          "id": "dfad527c-2bac-4b17-873b-37245b563ee2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8069164f-1f94-4e69-90fe-ca3170a9645f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c3958d-8902-4f4a-a53a-ce0e4c619692",
        "cursor": {
          "ref": "7830a54d-427f-4a20-a72c-b043ca7695d2",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6d11e8fa-56ea-4dab-b249-ae31ee0c06b7"
        },
        "item": {
          "id": "78c3958d-8902-4f4a-a53a-ce0e4c619692",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5683996b-f6d6-4903-8545-093d98a8479d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476bce62-84b5-429e-9b7e-c0bfc87b752f",
        "cursor": {
          "ref": "ac2fbd77-34b9-4831-8b5f-853c4b7842d8",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "474f179e-c741-4d4b-ab7d-553fd1f7ef17"
        },
        "item": {
          "id": "476bce62-84b5-429e-9b7e-c0bfc87b752f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b6c00edb-db1d-4d52-92da-a02d017b4fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa699f4e-aabf-4bfd-b2c0-07c829606b58",
        "cursor": {
          "ref": "f232998d-1cc8-4ae4-8612-5bb313bbab59",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6a80ea99-277f-4ff6-a695-3ccba09ed124"
        },
        "item": {
          "id": "fa699f4e-aabf-4bfd-b2c0-07c829606b58",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5cc083e2-a46a-476e-baf6-7a151468035b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf8f04e-729e-45ec-83cb-94785c5b5e4f",
        "cursor": {
          "ref": "0d19aeac-4d71-4f46-b89c-6ac5352f9dbc",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f725c847-66d8-4ddf-9277-b3eb461e6289"
        },
        "item": {
          "id": "1bf8f04e-729e-45ec-83cb-94785c5b5e4f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ac065b0f-8b05-45bb-abeb-854bc931386a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127c207c-fd1b-4121-8d49-08ac8714d130",
        "cursor": {
          "ref": "aae99714-3a0c-4d9d-a5a8-5eec3530da22",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "29479037-b78f-4452-a2a2-e091c71621fc"
        },
        "item": {
          "id": "127c207c-fd1b-4121-8d49-08ac8714d130",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7e8908fb-e10e-49e2-bdb3-a118db1026b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953e6b71-f186-4ede-a436-819845ee2722",
        "cursor": {
          "ref": "500da094-b8c0-4ba6-a15f-59ff422b4342",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2221b7ca-fd42-4a27-90e8-13f371cbbd79"
        },
        "item": {
          "id": "953e6b71-f186-4ede-a436-819845ee2722",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c9b3d7e0-4f83-4cd6-8106-b687146730aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a3bb43-048d-401d-8e29-0be71d67cca1",
        "cursor": {
          "ref": "fed78e32-a814-427b-aed3-8e851aee1192",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dff3419d-0433-4efc-9f9e-6ddc69a8dc40"
        },
        "item": {
          "id": "21a3bb43-048d-401d-8e29-0be71d67cca1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "405ac0d4-68df-48ca-805c-67d4d619b104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cc9625-d794-4ebe-8c98-276a2720e29b",
        "cursor": {
          "ref": "0bdc29ba-a7e4-45b8-9e88-7a61c98518d9",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7bc85a6e-161f-4622-9d11-2bb83bbc0e34"
        },
        "item": {
          "id": "53cc9625-d794-4ebe-8c98-276a2720e29b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2a7b0edd-7d2d-4756-88b9-21b65718a658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e856c95a-e70c-4cde-b68a-2cc9b64f70a7",
        "cursor": {
          "ref": "07b31f20-0e59-40a1-95d1-0f356ff310c8",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c5c75f29-a334-4889-9bb6-7133b8bff35c"
        },
        "item": {
          "id": "e856c95a-e70c-4cde-b68a-2cc9b64f70a7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2e5dfd03-aeff-4bf2-850c-ecb2066dd540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0914ad-5c7b-4c5a-bb6b-8a72dc7489c6",
        "cursor": {
          "ref": "f3107101-c405-4944-a6fd-f678ddd21f1a",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "57c90461-298e-48e7-a3d3-bb31857fcad3"
        },
        "item": {
          "id": "fe0914ad-5c7b-4c5a-bb6b-8a72dc7489c6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d3c18e85-f86f-4af0-bed7-25174d5a0664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb2381c-bfd3-4513-a349-b2af2ecc0a29",
        "cursor": {
          "ref": "93457516-859f-4381-88e0-ae967743d26e",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "057232b9-44af-4c82-9f65-c916e101a134"
        },
        "item": {
          "id": "abb2381c-bfd3-4513-a349-b2af2ecc0a29",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a044d9ce-2e17-4f31-97cf-ba968a20fb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb64ba7-2460-4d2f-9da6-c4798e0b021c",
        "cursor": {
          "ref": "20139e20-0062-482c-9a06-17cb18d027ba",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "43b0598b-a9bb-4523-ae67-0f297f784e33"
        },
        "item": {
          "id": "beb64ba7-2460-4d2f-9da6-c4798e0b021c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0060b42f-3731-4d4f-9e32-c43afc4fee40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa016ea-f563-490b-9eaf-d97b69f984b6",
        "cursor": {
          "ref": "ed738818-7178-4681-8cbc-05cc931d4697",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2dec6740-5d99-4026-8f16-4e69c68dbc1f"
        },
        "item": {
          "id": "afa016ea-f563-490b-9eaf-d97b69f984b6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d85b2c57-b374-4da8-bc00-cba1ecbc5ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206440cb-1cdc-4f97-acd8-6ec4f47d2f37",
        "cursor": {
          "ref": "28f1368f-c06b-45d7-b240-71caf1aefac4",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ae8581ff-66a6-47c0-88f9-0988794ae6a4"
        },
        "item": {
          "id": "206440cb-1cdc-4f97-acd8-6ec4f47d2f37",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "db37bbbf-b08b-4f1d-acdf-f01897082ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef74b241-65ec-4f75-901c-7e94baa8c7b0",
        "cursor": {
          "ref": "8b89ba94-a652-4149-a89d-9bbf5caf478a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f97d7f8e-1b93-4dbf-a428-f48e8cfa2e6a"
        },
        "item": {
          "id": "ef74b241-65ec-4f75-901c-7e94baa8c7b0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3d36a48e-2ae9-49ba-b6d1-d0226bbd7480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecec935-ea16-4612-b91e-7ac6ac31d5c1",
        "cursor": {
          "ref": "210c338d-c98a-4a06-b1f9-b97b7d41b6c1",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e8a26f06-ad46-422f-9a56-2716e63fe2ab"
        },
        "item": {
          "id": "3ecec935-ea16-4612-b91e-7ac6ac31d5c1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b63dd264-eb40-4eb9-98b6-82ceb8aac420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 920,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6453cb53-2ce5-41d1-bce6-8dbfc4f17f05",
        "cursor": {
          "ref": "19ee79f4-3f23-4310-8695-0f07f62f9f4a",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c548c3dc-146e-4303-b07d-86a261154d49"
        },
        "item": {
          "id": "6453cb53-2ce5-41d1-bce6-8dbfc4f17f05",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8f96e0d6-2e39-40cc-b10a-ccb521efe255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b110ae-5f68-44c1-9604-a4bea27874cd",
        "cursor": {
          "ref": "aa58fb9d-f010-45c6-ac25-37adbaac6f82",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4c9f1ea1-1b8a-47d9-b545-72e2a182df40"
        },
        "item": {
          "id": "f0b110ae-5f68-44c1-9604-a4bea27874cd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d092adb8-f70b-486e-8b99-7f1e4b9aff81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f80950-2e74-484a-b655-d868bf6313e1",
        "cursor": {
          "ref": "12afd30c-a71b-4fa5-9569-a85a3f61dd87",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "92ad4167-129b-4f27-83ae-934db6b9ee9a"
        },
        "item": {
          "id": "a8f80950-2e74-484a-b655-d868bf6313e1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "56075b51-8cea-4447-9e04-f890ebe8fe14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd63d8c-7324-4456-9e51-69aebb0ab07e",
        "cursor": {
          "ref": "c8b00714-637d-4f47-a797-6e12299855ed",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dac559a8-f198-4ef3-9285-95ad545b9901"
        },
        "item": {
          "id": "3cd63d8c-7324-4456-9e51-69aebb0ab07e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "432eec30-4c62-4857-8e37-406b7f270a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994a91be-1b3e-45fb-8fac-29ef398f2a00",
        "cursor": {
          "ref": "362ee229-bc4d-4178-b5fb-8ce473ba5e17",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "90cdea5f-e5c3-4837-b39b-476b9aa92897"
        },
        "item": {
          "id": "994a91be-1b3e-45fb-8fac-29ef398f2a00",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c0c5b97a-2875-4d21-be51-7ecbd0e39cb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5164a0b1-0c1b-44d3-8ca3-129be33e7894",
        "cursor": {
          "ref": "cfe6f7cd-22f9-4fa5-a52a-9128d1fc0b15",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "10b22aa1-d8f7-4047-893f-5b58ea6946e9"
        },
        "item": {
          "id": "5164a0b1-0c1b-44d3-8ca3-129be33e7894",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9325978a-1815-48c3-88fc-fac9afda667a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "a19291f4-fed6-4a3e-beed-7a41143fc818",
        "cursor": {
          "ref": "14577aaa-eaba-4350-a037-6de0725b5ae3",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "59c468a2-37a6-49b7-8f6a-56d06d606e96"
        },
        "item": {
          "id": "a19291f4-fed6-4a3e-beed-7a41143fc818",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "64925312-e242-4e6c-baff-c59d46a56243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "033e0d7f-4991-453f-b5d0-f24ad5ec808c",
        "cursor": {
          "ref": "c3cda8aa-f18b-4e54-b77f-ac491eff41bd",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ac97f5cd-6824-470d-b8ae-d0af24ea78d6"
        },
        "item": {
          "id": "033e0d7f-4991-453f-b5d0-f24ad5ec808c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b08aaf91-bf56-4f6d-b713-cba51579f3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fef36ccf-cd8c-4837-add6-107084f2d1ef",
        "cursor": {
          "ref": "fe2e2861-6b18-496f-9cdd-33dffd8f4719",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "073544f8-7946-4b77-a259-d6c10289acbb"
        },
        "item": {
          "id": "fef36ccf-cd8c-4837-add6-107084f2d1ef",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "823e5ff4-2dc0-482b-843f-7192a07cba9b",
          "status": "Created",
          "code": 201,
          "responseTime": 5303,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a294b4-5c7d-4f8e-964a-952a5699d187",
        "cursor": {
          "ref": "6e916b40-e5f3-43ff-8eb6-c3c0e6c84f91",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2b75dd1c-b425-4b2d-94e1-3d23a038ab93"
        },
        "item": {
          "id": "42a294b4-5c7d-4f8e-964a-952a5699d187",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "906eabdf-2b7b-443e-b1d4-d5c249b80c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "09cfde46-af3c-4cd6-ae4e-adbcec1bceae",
        "cursor": {
          "ref": "ec9713cd-a7c7-42be-9aff-aa1937be5292",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e4249c4c-88b7-43da-8f21-5092a6e83307"
        },
        "item": {
          "id": "09cfde46-af3c-4cd6-ae4e-adbcec1bceae",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3514dba4-b281-4919-865d-84428617ec02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "822c9306-cc7c-4360-bdc3-d8f6e296165b",
        "cursor": {
          "ref": "28617b9f-a9f2-4a32-83fd-1f37ba5e3042",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c28d9bd2-dd04-42ab-b370-df10fa5fe3ef"
        },
        "item": {
          "id": "822c9306-cc7c-4360-bdc3-d8f6e296165b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3089498b-dfe1-42cf-80f0-9369e2af0675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff76a947-a492-4aab-a199-e0a48c0784a2",
        "cursor": {
          "ref": "a5c074e4-fef5-4c7c-914a-254bab920d15",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d4c10126-8e3a-4a39-a820-281a94b3be92"
        },
        "item": {
          "id": "ff76a947-a492-4aab-a199-e0a48c0784a2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8f7f6a33-3239-4e0e-8d3e-458145ab01eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5585cf95-f1d1-4a5c-9a39-ce15cd74c765",
        "cursor": {
          "ref": "bb34ac7d-e595-45fc-b540-56d215f264c8",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "817f4eff-d2ac-4c06-b825-e39e2e2465c1"
        },
        "item": {
          "id": "5585cf95-f1d1-4a5c-9a39-ce15cd74c765",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6313aea9-b472-4f7f-8505-3830f0d86082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81827631-a417-499f-9deb-a34071ad18f6",
        "cursor": {
          "ref": "91a116dc-9528-464c-b3c3-344625f9d5de",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "46f5333c-49fb-4a72-8cc4-9b3acd846ad4"
        },
        "item": {
          "id": "81827631-a417-499f-9deb-a34071ad18f6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2c460e87-988f-4dee-a056-b1dfaa4b6777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b04c429-9832-4b55-a511-9ca0945c52da",
        "cursor": {
          "ref": "115d25a6-982c-4f5b-a1b1-9dfe4638b9cb",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cc100de3-7ddf-4cca-a7f9-46ef0e9d736e"
        },
        "item": {
          "id": "8b04c429-9832-4b55-a511-9ca0945c52da",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3344bc94-13f6-4e45-9460-dc87a218195f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57989d3b-c9ef-4598-82f7-68b83759c142",
        "cursor": {
          "ref": "9844cdb2-5cba-486e-952a-1ca85344d5f8",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "413dfe4e-db1d-4cd7-aed3-fbae33d19602"
        },
        "item": {
          "id": "57989d3b-c9ef-4598-82f7-68b83759c142",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4b89d7d9-65db-4df7-8770-bab27f6aa856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb60c90d-247a-4545-bba8-6709744c7817",
        "cursor": {
          "ref": "21fb340d-028a-4535-86bc-6b222cb59a68",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fee2784e-1c5d-47ce-adf7-df274bd03c40"
        },
        "item": {
          "id": "cb60c90d-247a-4545-bba8-6709744c7817",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "264f234e-507d-47ae-8795-42649912896a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e011ed03-e730-4e02-8f60-2137dcfa1451",
        "cursor": {
          "ref": "b1d10e22-3467-4483-ae64-1628a99001a9",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ad913c3b-c17b-4c11-ac65-20536bb2fc1f"
        },
        "item": {
          "id": "e011ed03-e730-4e02-8f60-2137dcfa1451",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "791dcd16-400a-4819-8d18-10dd82e0c412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095c0ad9-ecea-459c-90ad-a0f0ffc6ca64",
        "cursor": {
          "ref": "c08c27b7-1622-4819-b981-e55bdc42d11e",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8cbc0980-5e36-4aef-8d4c-9dd1612ef8d6"
        },
        "item": {
          "id": "095c0ad9-ecea-459c-90ad-a0f0ffc6ca64",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "21bc1f35-efdf-47f8-82c9-f6f0427609c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77597f71-8fbe-45f8-b4c1-2ecff28815eb",
        "cursor": {
          "ref": "b3165c8c-2130-4664-b834-4a582fbadc69",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a7c38055-b541-41ca-97a2-9a74ce11344e"
        },
        "item": {
          "id": "77597f71-8fbe-45f8-b4c1-2ecff28815eb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "77992634-a8a4-4958-955c-f38c0a75a629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64cfea3-6217-4edb-947b-75f48726f775",
        "cursor": {
          "ref": "7abd1a12-ea42-44b9-a087-717b6eb86504",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5b0e9e33-0d73-4d8b-bed0-882dbb42d288"
        },
        "item": {
          "id": "a64cfea3-6217-4edb-947b-75f48726f775",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "62e26082-91dc-4f21-91c4-774355076910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac90058-85b3-4ef9-befd-8110ceba46f5",
        "cursor": {
          "ref": "6c225392-97c9-42b2-a87a-041e0f8ab760",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9bb1aaad-7bba-4128-8a08-0751a394dd4f"
        },
        "item": {
          "id": "4ac90058-85b3-4ef9-befd-8110ceba46f5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "52490109-9cd1-4b3c-a11a-a14894d9c9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd011020-f7b6-4e06-b5ac-6baf2409bf96",
        "cursor": {
          "ref": "008b1f70-cc17-4bc8-a12a-b9e48603ff7e",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "31a940b3-403c-4c5e-8560-4b997e728fd8"
        },
        "item": {
          "id": "dd011020-f7b6-4e06-b5ac-6baf2409bf96",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c66b0ac5-9fcf-4930-bb30-8c8d5c11d80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86d6fe2-b3d1-4a5a-89f0-8fd46663dd0f",
        "cursor": {
          "ref": "0a5a3150-3ae5-4833-8e13-6e224db3e394",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8b3eca82-e1ec-478c-adf7-e36b710631c1"
        },
        "item": {
          "id": "f86d6fe2-b3d1-4a5a-89f0-8fd46663dd0f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cfaff7ef-e6f7-472d-b28a-43ab9fe5ca6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecec0bf-fc73-493e-9ae4-8720f0f88dd8",
        "cursor": {
          "ref": "7c349383-3604-41a8-bc34-ca58474a4251",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b2f0cd43-50a8-479f-a729-1a0762116181"
        },
        "item": {
          "id": "0ecec0bf-fc73-493e-9ae4-8720f0f88dd8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f1a4edae-a1c6-4bd1-9d1a-cf35abeb74fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57336921-2f07-4659-abb8-8d040a4cf28a",
        "cursor": {
          "ref": "018f4111-53b2-453b-b3e0-dbac67ba4bee",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1f8c1c02-a17f-4831-9abc-5d0039aa5f0e"
        },
        "item": {
          "id": "57336921-2f07-4659-abb8-8d040a4cf28a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "778d2544-ee38-49cf-844f-3f7ca5571e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70db857-f550-439a-916b-d4b9cf28bf6a",
        "cursor": {
          "ref": "7cd9fa8a-c55a-459e-97bc-755c5bd202a7",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f9f6cc1d-13e5-4887-a833-b62ca194e789"
        },
        "item": {
          "id": "b70db857-f550-439a-916b-d4b9cf28bf6a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e46db184-eccc-4c6d-b6f6-be2dfcc53f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37cce1b-39af-4e0f-b8db-9ee09b34f851",
        "cursor": {
          "ref": "ff2ad1c2-c8f5-4ba4-8bbb-df3059c11025",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cd0cc90a-c4a5-4398-9a09-cbee8ada2c36"
        },
        "item": {
          "id": "c37cce1b-39af-4e0f-b8db-9ee09b34f851",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5ff1adf4-f85f-4fed-af70-c04a927a42a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26531107-21b5-4855-9f7d-59c8be1c7074",
        "cursor": {
          "ref": "227b4ff5-d9cb-4991-a622-5764d788b391",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "82321f05-7743-4b78-a656-98aaa22a997b"
        },
        "item": {
          "id": "26531107-21b5-4855-9f7d-59c8be1c7074",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4da4037e-4555-4ecb-9f0e-e61a65cbd89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e171449-e79d-4235-8b29-ba187418a814",
        "cursor": {
          "ref": "b0570db3-6b2c-4882-baae-a359daf20f8b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "20841300-77b6-4c3d-b7e6-5eeb4c9f9887"
        },
        "item": {
          "id": "9e171449-e79d-4235-8b29-ba187418a814",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4ab2b513-d284-4c67-9b69-7cb165601d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c1d544-839b-4d56-883f-ae0883479d1d",
        "cursor": {
          "ref": "810f5ffe-00a0-42e6-8557-8db20667a08e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6630ce4a-e731-412e-aa2e-3602a67126b8"
        },
        "item": {
          "id": "57c1d544-839b-4d56-883f-ae0883479d1d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c64612b1-f781-4759-a4c6-a2da655ce2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47da7cd6-05ee-4faa-9c79-26dee1d0a0cf",
        "cursor": {
          "ref": "1655fc01-7e1b-4474-ad56-c5e98bba78cc",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "955e74a7-aa4a-441f-9156-9e6d8266e60a"
        },
        "item": {
          "id": "47da7cd6-05ee-4faa-9c79-26dee1d0a0cf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f5c48ff5-5a8d-4340-bdb6-2ee89cb54a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd475f1d-764b-44e8-ac9b-234d7d55fbb3",
        "cursor": {
          "ref": "cee480fc-ecf8-4ae3-bd78-317571a4ab8b",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "91cec4d1-f520-4c56-bb1d-d306fbcdf006"
        },
        "item": {
          "id": "cd475f1d-764b-44e8-ac9b-234d7d55fbb3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5bbaec3e-5152-4578-9eaa-9d1d7fa2b2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b88521-6be2-4f14-a199-b07f1a2495b1",
        "cursor": {
          "ref": "e7e7af7b-71bf-4758-b9e3-f2fda0a37e7d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4d36cf7f-1479-4eb4-956d-c761c1c4c040"
        },
        "item": {
          "id": "44b88521-6be2-4f14-a199-b07f1a2495b1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d7625015-1023-4569-8be5-896804f803cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86d6e2c-3a77-4582-87f4-344103dce4ad",
        "cursor": {
          "ref": "23895000-819d-48e1-87c4-990a75f282c9",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "aa648ff8-e34a-429a-9359-9ba9ed1a1ff4"
        },
        "item": {
          "id": "b86d6e2c-3a77-4582-87f4-344103dce4ad",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "354ba0a5-355b-4baf-9320-0e16fe19e31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcc02c0-096c-42e9-8ce6-5b1a484546cf",
        "cursor": {
          "ref": "e8ed0374-f421-463a-9f4a-05c55f33a0f6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "31dce2e4-c098-4679-9cad-f054eb4b8a70"
        },
        "item": {
          "id": "bbcc02c0-096c-42e9-8ce6-5b1a484546cf",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a1ac1cfd-a1d3-4ee3-af82-87916b778332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c7d4a5-ef87-4068-a16b-98926040acc9",
        "cursor": {
          "ref": "133fe7c4-6d60-4436-b91d-1884c5c99e9e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "68436796-8d72-419b-85a4-ae30161b79f8"
        },
        "item": {
          "id": "d8c7d4a5-ef87-4068-a16b-98926040acc9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a1842267-d93e-4635-80a2-c88731bda6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb934100-632f-461e-a175-37b02f3b558f",
        "cursor": {
          "ref": "03449a0d-eaf4-4cb0-85ff-55caba5838e0",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b85eacf4-521b-44b1-a18a-138ba58f5b6d"
        },
        "item": {
          "id": "cb934100-632f-461e-a175-37b02f3b558f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "562efdf5-a8d3-455d-a2c1-c3eba1a6fbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52af2264-5b63-4e49-9e29-eb8626996166",
        "cursor": {
          "ref": "2b96db4a-ce74-4990-a0e9-52ebfed7083e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "45a08a36-e1c9-4868-aedf-fc2ebe0ea0fb"
        },
        "item": {
          "id": "52af2264-5b63-4e49-9e29-eb8626996166",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d9e74a42-fba6-4401-b61f-f0d504300fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16211e30-1dfc-4b16-8e6d-c9cbb0eb4e6e",
        "cursor": {
          "ref": "0a80a7a0-9db0-479e-9557-26e50df8e8f5",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "8a89b280-70c7-4f87-87cf-37978666fc00"
        },
        "item": {
          "id": "16211e30-1dfc-4b16-8e6d-c9cbb0eb4e6e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9642a3ec-d9b5-4d34-94e4-4774fd0a6bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c359d1-801a-4e54-92d2-8d564a8fefc3",
        "cursor": {
          "ref": "35579688-16b4-4334-9f7c-6e20e8cf29c8",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "82498587-6d39-465c-9b98-04f431b7b9ca"
        },
        "item": {
          "id": "e9c359d1-801a-4e54-92d2-8d564a8fefc3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d19942c1-35e7-4d29-a253-8b848ab89692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dc2dab-783c-444e-a4f7-48518d1d50dc",
        "cursor": {
          "ref": "31ebae73-8294-4f1a-baf3-1c0a4ce26ce6",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "71924b67-86af-40d6-be9d-844c9c2fc0f7"
        },
        "item": {
          "id": "e4dc2dab-783c-444e-a4f7-48518d1d50dc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "31bf478e-240b-4c9c-96e5-784755264c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e15d9d-600c-456b-be82-18cfd70dc2d8",
        "cursor": {
          "ref": "d5478af6-70e1-4ec6-8f99-438ae4bfc251",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dd6efc23-158e-4919-8448-2253016ebcaf"
        },
        "item": {
          "id": "17e15d9d-600c-456b-be82-18cfd70dc2d8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a1e9e2d1-3e35-4040-8c52-3367f64de01f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51cf853-ebda-4e79-ae07-bf5a878f6bbf",
        "cursor": {
          "ref": "93ed9f52-e4e9-4a9c-b797-79fdea556f0d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "00789ebe-939b-4344-b26e-5b60d6ce3353"
        },
        "item": {
          "id": "e51cf853-ebda-4e79-ae07-bf5a878f6bbf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cefd9fec-686c-4508-a127-a40e0e1d3646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069d7709-8aa4-4768-ba81-a80a8eef437a",
        "cursor": {
          "ref": "208a8d89-5fad-4ec5-a3f8-ae732fa171d5",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f4ea275a-9fbf-4138-bbdf-5bd5c767a0e8"
        },
        "item": {
          "id": "069d7709-8aa4-4768-ba81-a80a8eef437a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6cafd962-cb8d-446f-b068-3aca933d8344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2098fb3-ae88-489c-9fc7-10e58a1473d1",
        "cursor": {
          "ref": "afa5e067-6a80-40df-a24c-634bbdceefa8",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4cba5ed4-17da-420d-870a-6a099517cc1b"
        },
        "item": {
          "id": "d2098fb3-ae88-489c-9fc7-10e58a1473d1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e839f35f-bbbe-434c-b0fa-0f80c9654ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f965f301-1168-4697-a2fa-c267bd76537b",
        "cursor": {
          "ref": "28c5b9ba-9ed9-4672-827d-a19e0e9e432b",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b5948f5b-4ad3-456d-82b8-112c8317918d"
        },
        "item": {
          "id": "f965f301-1168-4697-a2fa-c267bd76537b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "97206059-2997-4650-b8d3-7cac38913090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6672f70b-fb7c-4f03-a073-525b49f4ce0d",
        "cursor": {
          "ref": "c565335e-ac93-4b18-a795-7a27131eaba6",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "55e451f2-8109-401d-862e-1cfad68bee6e"
        },
        "item": {
          "id": "6672f70b-fb7c-4f03-a073-525b49f4ce0d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1f87dd45-c63f-471c-ab88-b5b2924d0dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d90b99-98e8-4008-9bb1-cd6d79dc64a8",
        "cursor": {
          "ref": "778c1a34-dc66-4bfd-b4f4-fe990df2c01e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "17cc57ba-132c-4015-99b6-593b2081087f"
        },
        "item": {
          "id": "e8d90b99-98e8-4008-9bb1-cd6d79dc64a8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "db5744f9-b931-424e-9390-f148d434b5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c95c9c99-283d-475e-b34a-ad66dfc2ab0b",
        "cursor": {
          "ref": "ae727529-d390-466e-9d96-2c8f7695da77",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1095e0d5-8c80-442a-9cdd-73575a5977b0"
        },
        "item": {
          "id": "c95c9c99-283d-475e-b34a-ad66dfc2ab0b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5c17ff67-87cc-40b9-9667-c8457a806f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc17f3b-d089-4e0d-a49a-57f2382c4bb4",
        "cursor": {
          "ref": "0574f307-21a8-406b-8a01-4949c8487f2b",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4c247fde-6bc6-4188-80a1-915a4a2d0a8d"
        },
        "item": {
          "id": "adc17f3b-d089-4e0d-a49a-57f2382c4bb4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8c99be85-ae0b-4d8f-a8e0-123496d45fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2210d0c2-bc7f-4530-b346-f132b468be1b",
        "cursor": {
          "ref": "b0b27510-3ffe-4fb5-a85e-790984c1e6af",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2f2607a0-7e25-42af-8ced-21dd39142ded"
        },
        "item": {
          "id": "2210d0c2-bc7f-4530-b346-f132b468be1b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f6dce237-5f43-4c5d-a904-cd9f5fab4949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15ad6ff-21f1-45cf-9079-c9c5e3035286",
        "cursor": {
          "ref": "002c72af-f30b-4cdf-8af1-90822017f00c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a75472bb-fa03-43ad-ad04-db16e477c650"
        },
        "item": {
          "id": "d15ad6ff-21f1-45cf-9079-c9c5e3035286",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0b79da44-f1bc-4fb3-adcc-b2b24ddb5a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e0fbde-b73f-4e81-8659-c2b638314eb2",
        "cursor": {
          "ref": "20b813cc-8d62-4a62-ab8a-6d48ffccb1a0",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "db044b13-f519-41e2-a331-293013b688e5"
        },
        "item": {
          "id": "78e0fbde-b73f-4e81-8659-c2b638314eb2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0b597834-59ef-487b-a1fe-c258dc8402f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b6c4cf-a280-4075-bfbd-e88f6353fb05",
        "cursor": {
          "ref": "a9901f9c-6e40-46be-82f5-a12d6662e585",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "29ab3210-c5c5-40a0-91ac-4b037c98924d"
        },
        "item": {
          "id": "b9b6c4cf-a280-4075-bfbd-e88f6353fb05",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3f0ae487-3543-470c-91b6-4636f0aeb0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79710a29-b192-42f3-ba5f-702d75d3a2b6",
        "cursor": {
          "ref": "26af29e0-ba7a-4a22-a21b-f3344b25bd62",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f2602498-de2c-4ea4-b151-cf9dda9ef479"
        },
        "item": {
          "id": "79710a29-b192-42f3-ba5f-702d75d3a2b6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ff2f4777-9a5f-460c-9f4a-75f6e9a4a04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875c1618-8ae0-49ec-ba3e-3d997434242f",
        "cursor": {
          "ref": "7b236807-df41-4966-bd1b-44d5a3730216",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "16f3a435-8a73-4bab-a449-21005ff9c0eb"
        },
        "item": {
          "id": "875c1618-8ae0-49ec-ba3e-3d997434242f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ebabae18-691f-4997-b1ee-47f6b499ce0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8c660e-00f2-4e5f-8c1d-5a12d5733182",
        "cursor": {
          "ref": "976c0861-4f5b-4984-872b-b306a5ae7850",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c61186b2-d421-4cc3-b2ed-1be6480c82c8"
        },
        "item": {
          "id": "1a8c660e-00f2-4e5f-8c1d-5a12d5733182",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "eb8f6cfb-e3fc-4890-9334-04afc07a948b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2448a832-fe45-42a6-b761-8093306d6911",
        "cursor": {
          "ref": "926b3576-b510-4e9f-a4b0-0548e25afef5",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e4e2a857-b645-4819-958f-9f91bf3cd2d1"
        },
        "item": {
          "id": "2448a832-fe45-42a6-b761-8093306d6911",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "28f62f25-da23-4716-8d08-8f921b809021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78108e32-09ba-439e-952f-eacb18474db5",
        "cursor": {
          "ref": "b1f1a0da-1400-48af-9403-03456ab50e98",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "68052535-14f8-4ac6-b956-7b97a3efc81f"
        },
        "item": {
          "id": "78108e32-09ba-439e-952f-eacb18474db5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3268f3db-1053-42d7-99c9-2e726315c3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ce0a38-6d3d-485e-bdf7-c8d4b739b140",
        "cursor": {
          "ref": "3aad09e9-cafd-46d6-bf2a-bed9554ee03f",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8fcb049d-b266-4c68-9db5-3899159e8692"
        },
        "item": {
          "id": "62ce0a38-6d3d-485e-bdf7-c8d4b739b140",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1b361015-f449-4923-a0ab-26defa8c4625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c6fa86-5329-4ed5-ad5f-eccc3f0f6685",
        "cursor": {
          "ref": "e4a8221e-ccc3-4142-82ad-6608b44fa513",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "58e07e0a-2f7e-469b-b36b-b0a29e4b3d6d"
        },
        "item": {
          "id": "34c6fa86-5329-4ed5-ad5f-eccc3f0f6685",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7642b411-c033-4220-8dd4-4b16edf2e767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb84703-6123-4c12-b01e-ab0b388fa8ca",
        "cursor": {
          "ref": "f06da994-3ee0-474f-94cc-bd68b4287afb",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "37095653-0988-400d-8491-6b40a1cc0373"
        },
        "item": {
          "id": "efb84703-6123-4c12-b01e-ab0b388fa8ca",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "45104d76-3300-403c-9809-0ce354d9338c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0c6018-beae-4c73-aad9-5143d1f855c0",
        "cursor": {
          "ref": "6bf74fd8-c524-4ef2-9ba9-fd9461a94b3a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b3fedbd0-b8be-4204-b805-e29c7a97973e"
        },
        "item": {
          "id": "db0c6018-beae-4c73-aad9-5143d1f855c0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7ed77010-2159-451e-9ad3-6bdcf577e84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c43c84-b69c-4a32-b315-1ca0ade9a61c",
        "cursor": {
          "ref": "4275119e-59f6-4077-a76c-b59d8aadeab6",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "538b3fbd-4bdf-4681-b6a0-df1a11891e2f"
        },
        "item": {
          "id": "b0c43c84-b69c-4a32-b315-1ca0ade9a61c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bd61e8c2-e5aa-4f27-9d79-2496f0815917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14d9789-2065-4609-ba18-abdd96e98cda",
        "cursor": {
          "ref": "5dea592f-a760-4157-89cb-ad4fe6df6b27",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "82e7bde7-2972-46a9-8951-74138e8b2c7f"
        },
        "item": {
          "id": "c14d9789-2065-4609-ba18-abdd96e98cda",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "56a6915c-ae40-4b77-a7dd-8fd49f0daec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdab8fa1-007a-4541-90d7-1420be03eaaf",
        "cursor": {
          "ref": "80526911-e562-4761-9a98-dbe71ff43e4c",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1c50a102-8809-4572-b42c-3ded6763f931"
        },
        "item": {
          "id": "fdab8fa1-007a-4541-90d7-1420be03eaaf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8de88063-7cd1-4325-8069-8932b9ff18d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83e59d4-2f4a-4252-a821-51e1bb3aaecc",
        "cursor": {
          "ref": "cd1be29e-42b9-4983-9e36-f2e2e4531238",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0a7e02cd-5bc6-4ebc-8112-232eb0d8b3b4"
        },
        "item": {
          "id": "a83e59d4-2f4a-4252-a821-51e1bb3aaecc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b63dc3ce-249f-4bc5-acf0-26f410616670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5296103-4afe-4d0a-a5b7-313c232de1c5",
        "cursor": {
          "ref": "6319f387-5b32-46b1-8a36-27e86d81c6a8",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3cf7befd-6c5d-4c5a-afb7-57f10c566423"
        },
        "item": {
          "id": "b5296103-4afe-4d0a-a5b7-313c232de1c5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "278ae4c3-31d3-44af-a369-0fe8375a91fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0159a122-f750-4b16-b716-c78a1217e3f6",
        "cursor": {
          "ref": "65d6bf42-17d6-4353-b91e-9a4c59beb186",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "71e8f2ce-6649-4c1e-a9c0-e75d1c1091c2"
        },
        "item": {
          "id": "0159a122-f750-4b16-b716-c78a1217e3f6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e130b85b-1f7a-4618-a941-31b4c6556a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbdeb43-12a7-432b-9ac4-df068b08639e",
        "cursor": {
          "ref": "6928c1d2-472c-462b-86e0-c29a3d0ba030",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bf2f69b4-700d-42f4-bc8a-5bf77b872ca7"
        },
        "item": {
          "id": "7bbdeb43-12a7-432b-9ac4-df068b08639e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d28ef1f0-ae3d-41db-ac94-4c5318c9a442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9524e60c-ca82-4e21-a64a-54cb611776e5",
        "cursor": {
          "ref": "44e78f6d-3d0f-4f98-86d3-11331d403399",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dd947e44-898d-4de0-a65d-467ae376df45"
        },
        "item": {
          "id": "9524e60c-ca82-4e21-a64a-54cb611776e5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3fe8bbc5-52c5-4bdc-9d69-91846d361c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51284aad-541a-4e7b-8842-71e4938f85be",
        "cursor": {
          "ref": "468ce864-2e8c-428d-ad4f-8f3750f6794a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a15d82a3-91bf-4236-ba0f-4cf92622ab51"
        },
        "item": {
          "id": "51284aad-541a-4e7b-8842-71e4938f85be",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "48226ebf-15fe-469d-ad91-c479c38357c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df499672-4bae-4ec5-9b8b-2a6eff7a6471",
        "cursor": {
          "ref": "935c51eb-1045-48f9-9225-77ebadeaa5d0",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f8af3043-832a-4a93-90f9-802f65f51f51"
        },
        "item": {
          "id": "df499672-4bae-4ec5-9b8b-2a6eff7a6471",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "168294f1-6657-4c63-9925-6b1ed607c4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b430f669-1a59-4aeb-8123-4ff9244edb6f",
        "cursor": {
          "ref": "674b3a54-e54f-4994-a2c9-9e486baf29ea",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "78ea6017-4217-4eca-b101-34ded2e4c524"
        },
        "item": {
          "id": "b430f669-1a59-4aeb-8123-4ff9244edb6f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6de726ed-a0ce-4e42-9c51-7700a1dc5b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb20ceb-ee1a-4cb6-b7fb-9c0350f1e99f",
        "cursor": {
          "ref": "b82868ff-9792-479e-834b-7a48ebe7333c",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a1042017-b21a-413d-adc9-3484ac3b15f6"
        },
        "item": {
          "id": "4cb20ceb-ee1a-4cb6-b7fb-9c0350f1e99f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "710bbf74-0c15-49c0-aa1e-10f491c6c3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe28178-2a3a-4092-ae64-700f1c19b8e1",
        "cursor": {
          "ref": "61584d11-5ee3-4c0e-aab6-a875c1820638",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c059c761-ba66-4b33-927e-17cf25bd2651"
        },
        "item": {
          "id": "6fe28178-2a3a-4092-ae64-700f1c19b8e1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e12df281-dd08-46b2-ab2a-89b1365873d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b98271-0ce2-41da-974f-7b6302c79f63",
        "cursor": {
          "ref": "70b28ff0-9ad4-447b-ad3c-e7e3d9bb3b61",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6bd1ddc1-959d-42e4-9602-5faa9bb62309"
        },
        "item": {
          "id": "58b98271-0ce2-41da-974f-7b6302c79f63",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b6d281ef-c302-4ed2-9510-d4d48f95e952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc806a4e-d319-4884-9312-af177b850feb",
        "cursor": {
          "ref": "137bbc88-30dc-48f6-bda3-da0703e6b0d8",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "93c1d46b-aa13-4869-8788-a10566715510"
        },
        "item": {
          "id": "fc806a4e-d319-4884-9312-af177b850feb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "969c52ec-9509-4b41-9cfa-5206a6213919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c216db0-3119-4fa5-bc20-e218b05a87e9",
        "cursor": {
          "ref": "1cb87f99-77f2-4158-9b40-a74c5de83294",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a0713b6f-3499-412d-a09c-8b4c5ce32141"
        },
        "item": {
          "id": "0c216db0-3119-4fa5-bc20-e218b05a87e9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6dc88bf1-112f-4240-a7be-d8ea4c7e99c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d463ee-b738-41ba-bcb2-f1c14ba8953b",
        "cursor": {
          "ref": "6c226615-a704-42b6-9023-1be2ea891043",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "72f10ab4-5d75-4131-ac41-ea874c03371d"
        },
        "item": {
          "id": "b2d463ee-b738-41ba-bcb2-f1c14ba8953b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d1bd1f3e-ceb8-4720-8674-cf82a2ff5292",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d2a9a0-e3ea-4a8e-ae59-ac9c804f24e8",
        "cursor": {
          "ref": "83a56165-ba92-4849-8850-eb7ef367e249",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "09bf36f5-a2cb-4126-b973-1bd718e43e1f"
        },
        "item": {
          "id": "52d2a9a0-e3ea-4a8e-ae59-ac9c804f24e8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d924220c-6187-4871-a6e6-9b01377d62b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675ec7d9-ed87-4a70-84b0-a1d47adee2e6",
        "cursor": {
          "ref": "c17eed4a-d626-4278-a7d8-dcb2cbeb5a91",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f1a5f9d5-30ba-4c37-a659-ac5ef4c474b3"
        },
        "item": {
          "id": "675ec7d9-ed87-4a70-84b0-a1d47adee2e6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6e0c59c8-dfa8-4bc1-81da-e578f56fedbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35b2aa3-ee49-4211-b9e7-0f6e77c70441",
        "cursor": {
          "ref": "5f1194e5-8ec2-4a5f-888b-c339d600837d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4468c287-254c-4e38-b8f5-8aff0f6a4795"
        },
        "item": {
          "id": "c35b2aa3-ee49-4211-b9e7-0f6e77c70441",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "df3146b3-7bfc-4cdb-9719-d2b6a7c69e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad6e251-c8f6-42de-b517-4efd75403558",
        "cursor": {
          "ref": "999c8fc3-8633-46e5-bbde-c8184d73ee3b",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "20d0aa47-79a8-4f9f-9d30-97b423812ab4"
        },
        "item": {
          "id": "cad6e251-c8f6-42de-b517-4efd75403558",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9c3460f0-3511-450c-b23d-130c8f38f9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b878cc1f-6800-49e7-a3a6-4052ab6edabd",
        "cursor": {
          "ref": "6fc5c4be-3f3a-4b78-aaac-1d262106fe41",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d98dc582-0649-44ce-8c29-b69c750b9f0a"
        },
        "item": {
          "id": "b878cc1f-6800-49e7-a3a6-4052ab6edabd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7bb50ad9-2339-400d-a50d-5f41a592ff82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d030df42-6da4-4da5-b012-a53a376457a1",
        "cursor": {
          "ref": "9dfb86b4-1ecb-40f3-8e9d-76142caa65ec",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "92ab9be2-464f-43ec-9a86-a5d754b06e62"
        },
        "item": {
          "id": "d030df42-6da4-4da5-b012-a53a376457a1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8658e46a-2efc-40f5-85e2-9d35622180c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f36e57d-c274-4fff-9fe4-f920db0a4382",
        "cursor": {
          "ref": "c2f6a1fc-e827-4a3f-8fb6-22aa8c51231d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4ef62162-be17-44eb-a1f7-36c439729447"
        },
        "item": {
          "id": "6f36e57d-c274-4fff-9fe4-f920db0a4382",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a1d0bea4-6d54-4418-a368-00352dd79bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2945abec-31fb-4cd0-8ae4-daec038742d3",
        "cursor": {
          "ref": "941ee1cf-7a16-48a4-b65d-a4b4a134f5f0",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2831b9ed-e3af-4a33-aaec-79058f6ef913"
        },
        "item": {
          "id": "2945abec-31fb-4cd0-8ae4-daec038742d3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d86f1b98-9356-4427-8ec3-8b7e14fd1d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237135ba-7416-4e7c-bb50-d9ef72b5e146",
        "cursor": {
          "ref": "850d9475-2c38-4a81-8940-cf1e1cc736cb",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7a73855f-f680-4f9c-a247-d578396dfb95"
        },
        "item": {
          "id": "237135ba-7416-4e7c-bb50-d9ef72b5e146",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d9cd9555-d3d6-4f04-98e6-8b2aca766f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e03f0e-a349-41a0-8c58-d7d6d0ad0024",
        "cursor": {
          "ref": "4b17a94d-ec87-4091-854c-61bf8d53d121",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cb749574-fd1b-44ef-9897-2c7200f94c1a"
        },
        "item": {
          "id": "16e03f0e-a349-41a0-8c58-d7d6d0ad0024",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "669c4da7-379a-412f-b6a9-b88791bacea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaadd664-01d4-4f55-8b7b-175079a9496f",
        "cursor": {
          "ref": "15981c1b-7c0a-4ce0-a4de-a8ce7ce642a4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "91e84b93-c7b1-4739-976b-b890e566224e"
        },
        "item": {
          "id": "aaadd664-01d4-4f55-8b7b-175079a9496f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f26de73e-be3f-408f-ae7a-34e7406b78d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85e2c16-a37a-4f43-aea5-5a0fc7bf0c0f",
        "cursor": {
          "ref": "07491698-a642-44bd-930b-3b8d2f9654e7",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "84da75a6-3121-4908-9a68-726460963079"
        },
        "item": {
          "id": "f85e2c16-a37a-4f43-aea5-5a0fc7bf0c0f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "eb511c11-bb41-4e2a-b172-5d0076100191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5b358d-702a-45c1-b6e7-011527e59d5d",
        "cursor": {
          "ref": "bee3da10-5072-4153-ad75-ce8e40750443",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5dd72288-1366-4fbb-9738-380ac2eafb1e"
        },
        "item": {
          "id": "ae5b358d-702a-45c1-b6e7-011527e59d5d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8adf4103-0933-4ffc-b0eb-2b29f160966f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0f8e7b-7f1c-4eab-8045-8bf3d1567db4",
        "cursor": {
          "ref": "5a39cb2d-f8bc-4863-af37-cc7cf20f3b72",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a10342b8-0bfe-40e7-b650-db224103dfbe"
        },
        "item": {
          "id": "df0f8e7b-7f1c-4eab-8045-8bf3d1567db4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "36685a5e-8039-4c8c-be67-3b83e9ad82e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18692268-12ac-4f35-9959-5c4358d835a6",
        "cursor": {
          "ref": "53977585-8f49-4558-b7f0-f3123fddc53e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fb2a96e4-30ff-4c22-8953-b6ee509b218b"
        },
        "item": {
          "id": "18692268-12ac-4f35-9959-5c4358d835a6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b49b1019-35a2-4af7-af4c-ef992568016e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bdd4a5-9592-411d-b888-c636b7f2ed57",
        "cursor": {
          "ref": "d211d702-b94c-4717-918b-7ead6c019109",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5d7a502c-3e75-4a1b-90a8-b5e0779c28b7"
        },
        "item": {
          "id": "b6bdd4a5-9592-411d-b888-c636b7f2ed57",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ad927567-89b8-403e-99a2-09416327fad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63775c3d-5f9a-4058-ae42-9998016c3634",
        "cursor": {
          "ref": "dafd8211-daee-41cc-800f-0a686820c6df",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "83c62bb0-279a-4d49-80b3-5f04bec24194"
        },
        "item": {
          "id": "63775c3d-5f9a-4058-ae42-9998016c3634",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b15208df-a262-486d-b209-f11a10720932",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "d4c57707-06ba-44b1-aea6-f0c0db6a069d",
        "cursor": {
          "ref": "1011a26e-9680-4619-85fb-271d586b72c4",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1cde740c-1abf-4669-ab55-26aed905cb6a"
        },
        "item": {
          "id": "d4c57707-06ba-44b1-aea6-f0c0db6a069d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bdf38e60-d067-4456-9250-2272ea3a8956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6670ff-8a6e-446e-8169-8e331dc30795",
        "cursor": {
          "ref": "63cfc214-f421-4ee9-8f0c-882fba5e7c16",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f62d1324-1eb8-4995-a813-b79a956f510c"
        },
        "item": {
          "id": "cf6670ff-8a6e-446e-8169-8e331dc30795",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3f4f98bf-0a84-46f8-be18-8c2eeef45320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b285f38-68b2-4a8e-bf3b-2e5be04a88a8",
        "cursor": {
          "ref": "bab35461-e555-4433-898a-e4d96210088c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5428788a-bba7-4124-a5d1-1ee8d5d6055b"
        },
        "item": {
          "id": "6b285f38-68b2-4a8e-bf3b-2e5be04a88a8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d790c40a-231f-4e93-8db6-a26209677b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b881d600-5866-4c44-be08-b7564b189f3a",
        "cursor": {
          "ref": "6ec550af-8682-405a-a65b-e8e9b72542b8",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cbf87133-e5fa-4264-ad83-6f3da3bb34ae"
        },
        "item": {
          "id": "b881d600-5866-4c44-be08-b7564b189f3a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ee4e352b-7cee-418e-847d-b1c487d52527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f772b3-e5fb-43ec-9226-e1048b8770ac",
        "cursor": {
          "ref": "200ae331-9f2b-40d1-bcad-73f2d9dc6746",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4233c9a0-8904-4f9c-9431-7460c969c246"
        },
        "item": {
          "id": "85f772b3-e5fb-43ec-9226-e1048b8770ac",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1f3f5c0b-5b99-4802-a500-c2ef0bd49ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcd34cc-a69e-423f-8fd4-9afa803cb49d",
        "cursor": {
          "ref": "bec2f898-eb39-42ef-97b6-69445e8d9d64",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fb137214-456c-4dbd-9b92-c08dab9ddec2"
        },
        "item": {
          "id": "dbcd34cc-a69e-423f-8fd4-9afa803cb49d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6fc8ea82-4025-4b47-b43d-ba1896aae118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9429a6df-c971-403b-9d23-3790f62e85f6",
        "cursor": {
          "ref": "192c434c-a44c-42e9-88be-9f41c19ba0df",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c4c4efaa-4af7-4417-9d16-9527050cd6d3"
        },
        "item": {
          "id": "9429a6df-c971-403b-9d23-3790f62e85f6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c2cb7b6f-5c90-4fb0-8c59-bc61f3301dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74755434-683e-4d1b-b695-10c9d7b06664",
        "cursor": {
          "ref": "69aed0d7-c2e1-416a-82ec-e007b5a264de",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "198e4460-d6ed-476e-af07-cd0d5fc14f4e"
        },
        "item": {
          "id": "74755434-683e-4d1b-b695-10c9d7b06664",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3770a73e-2425-48df-aae3-bea7117e0389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b86c523-41f4-435c-a050-6f3ea979e50b",
        "cursor": {
          "ref": "49e60952-a31c-4b92-8a19-a97bbeb32d15",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e03b5ee8-5ae2-454c-b532-ef0d7602742a"
        },
        "item": {
          "id": "5b86c523-41f4-435c-a050-6f3ea979e50b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7ff57ccd-988b-49d3-ae92-b03d9535a355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111b767b-fea5-4033-810e-85785a9df67f",
        "cursor": {
          "ref": "46aa28bc-e628-4e41-8a7e-714a4568af59",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "273f0018-c075-43a6-b863-81bcd66f29ac"
        },
        "item": {
          "id": "111b767b-fea5-4033-810e-85785a9df67f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2ab3f08e-f0b8-4fea-b632-a8cd3a348f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd2dc0d-8dac-4979-abb2-145dad3d12a1",
        "cursor": {
          "ref": "53517b34-b96e-47bd-809b-55416764b130",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e4fb345c-9c2b-4830-b120-52a4008f195d"
        },
        "item": {
          "id": "fdd2dc0d-8dac-4979-abb2-145dad3d12a1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b9638eac-d224-499c-9814-75f1387c6b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b3f2c7-7e4b-4af5-9f86-6bc8bd59025c",
        "cursor": {
          "ref": "d087ae7f-1f47-457d-8e46-4d64c60f693b",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2cadb524-0aa1-4068-9d14-548549216433"
        },
        "item": {
          "id": "20b3f2c7-7e4b-4af5-9f86-6bc8bd59025c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "385ffa30-2c61-4be8-8ea2-d19061ace731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767f938d-9e84-4782-a1e4-21b70d181381",
        "cursor": {
          "ref": "b3cec548-50ef-4447-9dcb-5d0bc2fab9b9",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2ff66db7-618a-4551-8985-13cacadbfda0"
        },
        "item": {
          "id": "767f938d-9e84-4782-a1e4-21b70d181381",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cef480b7-c9cd-4bb9-9853-a201ff7b9a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c528ef7b-6ccd-40e7-b508-658c89be4a65",
        "cursor": {
          "ref": "9c47ecb3-323e-44e2-8d5a-3a144169b12b",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d575c3c0-ad99-416d-970c-f62d29475e2d"
        },
        "item": {
          "id": "c528ef7b-6ccd-40e7-b508-658c89be4a65",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c882f3a9-f177-40f8-ba7e-10ad3d32ca73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa909e1-7d73-452f-bd8d-f597dd787aa2",
        "cursor": {
          "ref": "851ddf54-93d5-49de-894d-718cef1a46c5",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b3f59bc9-4a1c-4fd3-82f7-42c7c459adea"
        },
        "item": {
          "id": "caa909e1-7d73-452f-bd8d-f597dd787aa2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d4e91792-5798-4944-b484-8fa6f49d5a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e043065-3b2a-4dd2-802e-7c768e8e62c5",
        "cursor": {
          "ref": "0aaa1486-0f5f-4cdf-a532-ecd4f926eb74",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6b83e5f3-fbb2-4d87-af4e-fa487b03824c"
        },
        "item": {
          "id": "3e043065-3b2a-4dd2-802e-7c768e8e62c5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3370bdc0-1dc2-41ef-9bae-e12cff4a6d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f458cd-15cc-472e-b0b7-0923fdc02d5d",
        "cursor": {
          "ref": "e0c2e990-6743-4be4-8cd3-0dece086ff2b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "79f90b0b-2afa-4193-88b1-0ab879e7ebee"
        },
        "item": {
          "id": "22f458cd-15cc-472e-b0b7-0923fdc02d5d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f5179e13-85b5-46a8-9443-b350825033d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ceb0d76-2f82-4e32-89de-426d38779418",
        "cursor": {
          "ref": "bf9c64fb-d26c-416e-8e5c-824b1d1d2053",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ade90952-967b-45d1-b9ae-233bb1438fbc"
        },
        "item": {
          "id": "6ceb0d76-2f82-4e32-89de-426d38779418",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cc742d5f-e590-489a-82a1-68ad0eeb0461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd47561c-ade0-483c-94fd-2bd08eff130a",
        "cursor": {
          "ref": "321e291f-c5b5-4111-bd49-079780a0b394",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b2b720af-9285-47a7-a502-2e63bcc0ebf3"
        },
        "item": {
          "id": "fd47561c-ade0-483c-94fd-2bd08eff130a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "06f9646d-d17f-4aaa-b9f6-45df2b6cab33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d1cdae-6870-445d-b740-0c626d71b7c3",
        "cursor": {
          "ref": "0c538ee2-88f3-4ed9-9cfd-2bf760dcbe54",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "60a68033-ccd8-4525-9219-c6ff6e4bc860"
        },
        "item": {
          "id": "94d1cdae-6870-445d-b740-0c626d71b7c3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5321a7b7-9c50-466a-986d-3b02fa3e46ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d53f76-6b18-4faa-a69e-3f40c9d53052",
        "cursor": {
          "ref": "eae81d33-513c-4b0f-8a14-2105d35c7d8b",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "700110b1-c018-4376-8811-43e7a4a302e0"
        },
        "item": {
          "id": "86d53f76-6b18-4faa-a69e-3f40c9d53052",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "846c5b86-26c8-49a7-9945-d31f91b357ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e7291a-c9c5-4f22-91c4-93ec15e2a1aa",
        "cursor": {
          "ref": "47396da3-541a-4ad1-90ca-a1c054280708",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "20b77c1a-21fb-45ec-8c8c-e0c3dc677f24"
        },
        "item": {
          "id": "a5e7291a-c9c5-4f22-91c4-93ec15e2a1aa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6e32f197-35ea-4262-9c64-b927c3865626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec069ccc-a80f-4f74-83d3-b094c14e73f0",
        "cursor": {
          "ref": "7294698c-f617-4644-a01f-771f27bf564e",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "794b18d7-fd91-4840-8fc5-3545e5505f90"
        },
        "item": {
          "id": "ec069ccc-a80f-4f74-83d3-b094c14e73f0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e5c7f83d-0d3b-45e4-a3bb-cdeb321e3b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d9f408-2725-4c88-a5ab-640dd7c0ff4e",
        "cursor": {
          "ref": "9afd9f97-8735-4a0c-9a86-bb82860e106b",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8a5adc81-d3cf-4368-8b29-5a5deec99447"
        },
        "item": {
          "id": "60d9f408-2725-4c88-a5ab-640dd7c0ff4e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0884de0a-6e01-48f8-8522-023f7f25781b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebe6517-000e-4e38-9fc1-2038c9227b2b",
        "cursor": {
          "ref": "502bf814-14e8-45d3-aad1-92bda5a9c9c1",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d2d36c89-9829-4eb8-b98a-cf9c0a4d2fee"
        },
        "item": {
          "id": "cebe6517-000e-4e38-9fc1-2038c9227b2b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "46725305-3a4c-4340-9861-c74a85c625aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37182918-3f98-4203-92a2-6d90a90ff1e5",
        "cursor": {
          "ref": "26c2ab9b-3975-41d4-a5d9-2c5d983aeaed",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8afad349-501f-4024-b27a-a9cb5672e4b6"
        },
        "item": {
          "id": "37182918-3f98-4203-92a2-6d90a90ff1e5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "57f81055-846f-41b0-a3a4-501399f12b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d4dada-3a3b-4c89-bd67-586144e844ed",
        "cursor": {
          "ref": "9dad472b-6f65-4d78-9528-814c543516a5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0a2ea2d3-5363-4df6-9371-9fc946240bcc"
        },
        "item": {
          "id": "49d4dada-3a3b-4c89-bd67-586144e844ed",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3d6e4a68-ebd1-4e7a-a483-c71760c92e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490a2153-85e9-4704-a697-a3fa53c576b5",
        "cursor": {
          "ref": "313e5699-a31a-4825-a50e-81503ba95aca",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9b3e1daa-e814-47ce-9f0d-99de807fea50"
        },
        "item": {
          "id": "490a2153-85e9-4704-a697-a3fa53c576b5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "171801c4-6d6a-4e75-a100-166e4a2f0b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c19d67d-5999-46ca-bdf9-c9b0b817a25b",
        "cursor": {
          "ref": "b81043d6-cfd9-4405-82f3-0468482f372f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7faa23c3-0090-4652-9b99-87f49fe4b8a8"
        },
        "item": {
          "id": "2c19d67d-5999-46ca-bdf9-c9b0b817a25b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fe1e17a5-2f6e-4185-bdb7-971cfb5960a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff51c6c-9076-4050-90c7-5209111d54ec",
        "cursor": {
          "ref": "8dad8fe3-4d49-487c-95a7-4041bc511c6f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "96b9567f-6d9a-40da-adc9-2f2cdc470c5b"
        },
        "item": {
          "id": "4ff51c6c-9076-4050-90c7-5209111d54ec",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "759981f6-09c4-43f4-8f6a-036862d63f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023de3e7-4266-4d5d-9c08-f844c3ed219a",
        "cursor": {
          "ref": "7fce3471-0e14-474a-8aa3-b02d80e362d3",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8fa6a834-0cf0-4bbd-b878-b8e8f86f97ee"
        },
        "item": {
          "id": "023de3e7-4266-4d5d-9c08-f844c3ed219a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "09fde291-e22d-43b4-a971-3820e273af15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c56917-26a1-4377-ab6b-5a9d73ad9081",
        "cursor": {
          "ref": "419ca900-0de8-4b52-870c-6a58bc8d5315",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6a29301b-c854-4e23-99ce-6a101d1a3fa9"
        },
        "item": {
          "id": "a3c56917-26a1-4377-ab6b-5a9d73ad9081",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3144f5c3-09ee-4b15-b0e4-ce33cd3b4325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb25299f-c454-476e-9b44-eca7e0098259",
        "cursor": {
          "ref": "0e3aa099-ed1b-463f-9cda-1d7103b32150",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4739c022-3e4b-4527-a4a6-fc3f7efc0cd3"
        },
        "item": {
          "id": "eb25299f-c454-476e-9b44-eca7e0098259",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "99071519-0002-406e-b357-e2fe9d766475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2417b4c3-291f-4ac0-801e-26cd44b52c6a",
        "cursor": {
          "ref": "4f8b49d5-4bf7-466d-bb9f-38ce648897b9",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4506d111-1ac5-4b0a-9e74-ff51b14c8ab2"
        },
        "item": {
          "id": "2417b4c3-291f-4ac0-801e-26cd44b52c6a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8847dc49-30ae-46b0-b2af-a539c0d83675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da90ffaa-9aa2-47fb-9ce3-16cc381e6dd2",
        "cursor": {
          "ref": "c66938f8-1b41-4c4d-8181-8afe9bb5d667",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b10f8a0b-2910-42c5-bb69-b39b67c32090"
        },
        "item": {
          "id": "da90ffaa-9aa2-47fb-9ce3-16cc381e6dd2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9bf32c8f-8d98-4e02-b4af-21eb19e7b6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68545bd6-eaea-42f4-bf48-68e930227099",
        "cursor": {
          "ref": "2910baf2-125e-472a-9de6-4854b9238dbe",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "081191aa-ac8c-4eeb-bf9e-a3bbab1048b8"
        },
        "item": {
          "id": "68545bd6-eaea-42f4-bf48-68e930227099",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f7f27f3c-8197-4715-97a5-58db6f557329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829f7c3d-a74b-4603-9967-3f4d6a07667f",
        "cursor": {
          "ref": "369e9c0d-3365-48d2-94d2-49a65e81feca",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dc64931d-1b4c-44ab-9cfe-2dec1e196bf8"
        },
        "item": {
          "id": "829f7c3d-a74b-4603-9967-3f4d6a07667f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "16fac603-456d-4091-9201-987823d8b1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22010dc1-e082-440f-b5e6-77b02c209099",
        "cursor": {
          "ref": "4c98fc41-05c2-471b-a061-3ad277cbc397",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7c0c8809-46e4-4611-897a-05e65d770dbf"
        },
        "item": {
          "id": "22010dc1-e082-440f-b5e6-77b02c209099",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b5bdb9da-3341-4642-a095-38569ef45bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd580239-f512-4d6f-a3af-2669fffbb6fe",
        "cursor": {
          "ref": "8c1b8f6b-ec32-47c6-ad3b-013b7d3e5f4b",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5df78713-a78c-4913-9237-da21d4df45ea"
        },
        "item": {
          "id": "cd580239-f512-4d6f-a3af-2669fffbb6fe",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e12ac62b-543e-4340-8401-465f356dc0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d244a431-ff51-4d1e-8fe5-48d504978860",
        "cursor": {
          "ref": "c8c04f84-441e-45ea-ba0a-e8159eb69f05",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ffa0e56f-2347-4a76-bba9-837db81217a7"
        },
        "item": {
          "id": "d244a431-ff51-4d1e-8fe5-48d504978860",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c9222b9c-5a8a-481a-b9b6-04e0884db4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec445cf-cd85-4dd0-b520-d8c9e72c0754",
        "cursor": {
          "ref": "2bcd8109-03f5-48f2-828a-848d13d3d546",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f821bcdd-1cfc-4b5f-8ad0-4dfe502f6738"
        },
        "item": {
          "id": "1ec445cf-cd85-4dd0-b520-d8c9e72c0754",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2cce3aaf-8619-4fab-b096-eebee4f09088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41720594-5630-47b5-8709-7231650193dd",
        "cursor": {
          "ref": "b6bad897-dbe5-426c-a68b-5407842b30b5",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "55e533dc-a5f3-479f-95df-8c71144db2bb"
        },
        "item": {
          "id": "41720594-5630-47b5-8709-7231650193dd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8940d251-017f-44bd-a140-73235cb8f618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f6c97f-4272-46c2-bbd1-0bbae294e5ee",
        "cursor": {
          "ref": "89955e15-5067-4e6e-8ffe-1de6f43a8eb8",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2105c929-4783-429a-b478-9900662c0a0c"
        },
        "item": {
          "id": "76f6c97f-4272-46c2-bbd1-0bbae294e5ee",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e050f4aa-b1b1-4b37-a12e-d05fed19785f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416446c1-dc0e-4fd3-8421-d2b89fc083f8",
        "cursor": {
          "ref": "bfda066c-6239-4458-b104-efab264e050b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3fdc96b5-f0cd-4620-b7f9-3a0484cb3933"
        },
        "item": {
          "id": "416446c1-dc0e-4fd3-8421-d2b89fc083f8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9ac49799-b4be-4359-8e0b-a3a776077ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e554ab1-4294-46af-8cc7-2f62138c82c9",
        "cursor": {
          "ref": "5e0b7e95-f7c4-4785-b947-1e0bd8cc7968",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ca823ce4-832e-4894-a792-96682c894b8c"
        },
        "item": {
          "id": "2e554ab1-4294-46af-8cc7-2f62138c82c9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8e9c1dde-1920-4a7f-a943-ec373c70e364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcb2ccd-f1ef-4d2f-93e4-b7c442062964",
        "cursor": {
          "ref": "6e544b7c-94ce-4071-b0ee-672066bec4ab",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "343885f3-97b1-4102-9e4e-e60a12f7c722"
        },
        "item": {
          "id": "ddcb2ccd-f1ef-4d2f-93e4-b7c442062964",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "90bcde4b-6f7b-4c3f-90b2-7ea020f44494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1a074f-6134-4439-b19f-2a47aff26366",
        "cursor": {
          "ref": "ddf47a01-472e-424f-861e-b15c0107e3da",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f53c8f62-7c05-4d59-9f93-63f6ff67f2cc"
        },
        "item": {
          "id": "9a1a074f-6134-4439-b19f-2a47aff26366",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5bc953c8-2f7e-4e8d-ad8d-7740446ba08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846e6753-36c4-4cf1-a92c-3a634014662a",
        "cursor": {
          "ref": "7da004f3-7249-4e0c-87a3-6783b55c90c5",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c2db47bb-1e67-4e9a-bb21-7d60aa1f258b"
        },
        "item": {
          "id": "846e6753-36c4-4cf1-a92c-3a634014662a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "50440929-a8e7-4949-a97a-9672272188cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5664ca-8356-42d2-9828-9a24b0ff8243",
        "cursor": {
          "ref": "370f0150-4cf3-49f8-a0e3-492ecd6295d8",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cfb0b240-7cf3-40b4-a0a1-338bb4e4002b"
        },
        "item": {
          "id": "0e5664ca-8356-42d2-9828-9a24b0ff8243",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "eeddf01e-7f63-491f-a7f4-723e9f8d224e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8d0980-651a-4d96-9c54-03fa38ede5a8",
        "cursor": {
          "ref": "93a3372a-5104-4137-88fa-f839a5818e94",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e30d0d52-51e2-454d-8fff-a01afa8f2dd5"
        },
        "item": {
          "id": "7d8d0980-651a-4d96-9c54-03fa38ede5a8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8db6d6ba-c18f-4fc3-9bde-5cbe22233916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29de7d6-1584-4c69-808c-4f7a1601ec75",
        "cursor": {
          "ref": "6244e8e6-ec55-4e54-b9aa-d3ee612d310b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "85ba8b0f-65be-4313-81dc-cea5eb73f7cb"
        },
        "item": {
          "id": "c29de7d6-1584-4c69-808c-4f7a1601ec75",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3b104971-092a-424b-88f8-3608ef1224ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebd3209-dc20-4ddf-b89e-61c5e97fcee2",
        "cursor": {
          "ref": "bbb2b28c-ac8d-413d-be39-7660f76cc2cd",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8d3a7804-c3c3-46ac-bbf4-dff9b12bc133"
        },
        "item": {
          "id": "4ebd3209-dc20-4ddf-b89e-61c5e97fcee2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "02c63531-7c29-4763-9811-5f5de96e0a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73635312-6ca9-4620-b3f1-8a2fd95cb75f",
        "cursor": {
          "ref": "8ef12876-bf4f-4569-acaa-4e78b2698559",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8a24e572-f3b1-4c6b-bfef-f945fbfd8915"
        },
        "item": {
          "id": "73635312-6ca9-4620-b3f1-8a2fd95cb75f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "393bef94-2635-4163-b22d-595cff80741b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f6b775-9a76-4a42-9bd3-d4f27761f946",
        "cursor": {
          "ref": "a7606490-8905-47f3-8ff1-230f3f5e682f",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "72579aee-11d6-4dbe-a234-c4ca0d8f9cfa"
        },
        "item": {
          "id": "68f6b775-9a76-4a42-9bd3-d4f27761f946",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0c2f0199-f95d-4ae2-91b9-3a296aa0d357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686437cf-bc87-431b-93ee-7363aeaf6cd1",
        "cursor": {
          "ref": "af9935ff-d3ae-4843-afd3-023c7f64c175",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2ab5831e-8026-4899-a804-97b7397c3e3b"
        },
        "item": {
          "id": "686437cf-bc87-431b-93ee-7363aeaf6cd1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "095b8def-a219-4648-91e7-961e55afddf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb42f0c0-2efb-4a85-aa4e-5554f2fadb15",
        "cursor": {
          "ref": "ce131841-d4cc-49a9-8077-02fa5a8f4711",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "24cd01fa-c699-492a-b5ed-37379b172bca"
        },
        "item": {
          "id": "eb42f0c0-2efb-4a85-aa4e-5554f2fadb15",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ede80ec6-37f8-4ba4-82f8-a751536622d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362ef69e-657c-49ec-9280-b3370f0b9582",
        "cursor": {
          "ref": "f06e721b-ec86-48ef-96d5-1727aa9e545d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "98446bda-a360-43d0-92f1-dfd29e436084"
        },
        "item": {
          "id": "362ef69e-657c-49ec-9280-b3370f0b9582",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4c2cc16c-1b07-4a07-97f1-7eb6de373b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4d5d89-8f92-4065-96ee-736abdc0e126",
        "cursor": {
          "ref": "34437a79-07c8-4b49-a7ea-8be3826b6786",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8537073e-bc5a-459b-8792-d4f7ad3087f7"
        },
        "item": {
          "id": "7c4d5d89-8f92-4065-96ee-736abdc0e126",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0819de51-a762-4c38-8c76-ed043ace2178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1efe23-6a5a-458d-a38d-03480c57489b",
        "cursor": {
          "ref": "85c54926-5655-4c13-adf7-fc28ecb1fa85",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e392ba48-7476-4ee5-9e12-3925264dbc55"
        },
        "item": {
          "id": "7d1efe23-6a5a-458d-a38d-03480c57489b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cf8fd0c2-c0bc-4062-a105-6735734604df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eab46e8-b79f-4c55-9127-a4c7c0688f8f",
        "cursor": {
          "ref": "ed189ade-29ab-4823-9944-946e1913d9e7",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1b1e7ce7-c324-4fa0-9912-693a50ab0f60"
        },
        "item": {
          "id": "5eab46e8-b79f-4c55-9127-a4c7c0688f8f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fff26bf0-b46c-4f43-8a5a-b5a0d68d378a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a132eb-6ee5-4ffc-9989-763adae4954a",
        "cursor": {
          "ref": "b43c55bd-de5f-46ee-a523-625d93c014ad",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7e3add6b-eb97-4740-8931-20b342e77b39"
        },
        "item": {
          "id": "80a132eb-6ee5-4ffc-9989-763adae4954a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "48cad43b-1cbf-4424-98d3-aacec21e2208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c99c82-ace2-4a1b-b232-e4bb0d705144",
        "cursor": {
          "ref": "1e18b6dd-66d0-48dc-bef4-8db7614f8b82",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c3b2dd10-5cb1-46b6-a11e-9cc94cda1d24"
        },
        "item": {
          "id": "63c99c82-ace2-4a1b-b232-e4bb0d705144",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "219534be-4e05-4f8e-9309-c2c43c77c01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12a2890-bd46-4528-882e-14be2827f31d",
        "cursor": {
          "ref": "383f7181-265d-426c-9893-a8c59ff38429",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b3a5f187-9719-4b45-bcc1-a8d4ee8634bf"
        },
        "item": {
          "id": "c12a2890-bd46-4528-882e-14be2827f31d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "220e3cef-2bdd-4173-a3d3-487c1aecdb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6e7819-2f20-481e-a5d1-aa2ef97f0021",
        "cursor": {
          "ref": "a97e5950-77d8-4411-851c-de8517752bf2",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "93a50262-b178-4e5f-b600-97c9a6b762f4"
        },
        "item": {
          "id": "bc6e7819-2f20-481e-a5d1-aa2ef97f0021",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3d3306fa-001a-4813-9db6-d8b0a85db166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216931e2-5cb5-41d2-bd2c-4e78a22a0e5b",
        "cursor": {
          "ref": "caf99ab6-2d37-4468-b90d-9e0f7404c41b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b8063752-068a-412c-98fd-7b52e7f15945"
        },
        "item": {
          "id": "216931e2-5cb5-41d2-bd2c-4e78a22a0e5b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4e625168-d662-4c5f-a577-78ba84a2b66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fbb40d-342b-4403-adbe-f0c804345398",
        "cursor": {
          "ref": "678085c1-92b2-45e0-8cd6-110738d16a53",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a1970461-a9ac-4517-ade8-cf13fca2d4cb"
        },
        "item": {
          "id": "60fbb40d-342b-4403-adbe-f0c804345398",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e81610c7-d302-432e-abb2-29fc6077a473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1722a12-706c-49a2-be51-61547026b281",
        "cursor": {
          "ref": "fe777ce1-642d-4a49-aa94-4af5d93f843f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "80967a45-83f0-4bd4-b12f-9815c8c5ddd8"
        },
        "item": {
          "id": "b1722a12-706c-49a2-be51-61547026b281",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d362d021-5008-4ed4-9b8d-f01bb1e15c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ada64fe-51d8-4305-ae31-87a929f551b4",
        "cursor": {
          "ref": "01ffe085-1314-47fd-b762-b2d1c5263ce3",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "197c5370-9fe3-4f53-a610-8572d269b4a6"
        },
        "item": {
          "id": "3ada64fe-51d8-4305-ae31-87a929f551b4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "88eaa66c-ded9-47a7-8009-811844802216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8c1e20-5254-43a5-8c2c-b574f04e550d",
        "cursor": {
          "ref": "cae2f8fc-4fe7-4334-9940-d9719f46f855",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "df0f189c-062f-44c8-9e3c-36474e4e024c"
        },
        "item": {
          "id": "8b8c1e20-5254-43a5-8c2c-b574f04e550d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a6d484d7-2fb9-42b1-ad89-50260a18aea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece2c27a-b377-4db5-bd09-1a27810f4557",
        "cursor": {
          "ref": "8f715ade-5f4a-4d81-b984-78475a3bc64b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6ec07e9c-b281-4ee2-9f3d-f93cb0170af7"
        },
        "item": {
          "id": "ece2c27a-b377-4db5-bd09-1a27810f4557",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "90395117-bff9-4b37-910a-297e4ef5eeda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c2ff08-b24c-4c8b-b811-15d3cc3ae019",
        "cursor": {
          "ref": "4d660b81-e47c-43ee-9068-6379e2934bf1",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b0db6211-1494-451f-ac0a-516f58b85f53"
        },
        "item": {
          "id": "a6c2ff08-b24c-4c8b-b811-15d3cc3ae019",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "24b72154-3ea0-444d-9bee-0e48eaa426da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142f00a7-3b16-438f-8445-1dd699a9a4f3",
        "cursor": {
          "ref": "55ebfa03-2aef-436b-b750-d7e7d0b1fdfd",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "52cfd6bd-9cf2-426a-9f61-817babaf1d9b"
        },
        "item": {
          "id": "142f00a7-3b16-438f-8445-1dd699a9a4f3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2d52ad5c-5f58-485e-9ce2-25f981926991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a735103f-6a24-4398-bbeb-044aa1a8fbc3",
        "cursor": {
          "ref": "a6740959-a3dd-4336-a764-c72b34d375cd",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "341a6065-5162-4b81-b404-07e9d4b5a7f3"
        },
        "item": {
          "id": "a735103f-6a24-4398-bbeb-044aa1a8fbc3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "80e4ce45-3343-40a0-aba7-c35f92d268f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2fdbfe-f455-44bc-94fe-8c2dec3d4a93",
        "cursor": {
          "ref": "135ffba3-8eff-46ea-b42e-a817a8dfdc5a",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "72c5ad13-6dab-4039-ab12-2e91bf01a9c1"
        },
        "item": {
          "id": "bb2fdbfe-f455-44bc-94fe-8c2dec3d4a93",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "da68657f-036e-4dff-a1d3-fbafb85a5d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a071db99-09c9-43ef-b383-3227294d2efb",
        "cursor": {
          "ref": "50b87900-e0d5-4d59-950e-6ba6ed48eb86",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b411f7bd-4c36-42ef-8bc9-9384950e0561"
        },
        "item": {
          "id": "a071db99-09c9-43ef-b383-3227294d2efb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "61518d86-34a4-4698-bf1b-0364a4d4636f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8118503e-c0ae-4e0e-be23-7b2b271995e0",
        "cursor": {
          "ref": "8a11ff26-0b01-4ee9-b96b-45a39c1c04fe",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f8163cc9-3263-4591-9751-ddcf8306bc00"
        },
        "item": {
          "id": "8118503e-c0ae-4e0e-be23-7b2b271995e0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4351ce79-08ee-4c00-8912-fcaf2b84e52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f23df1e-daa7-48b9-894a-a5c353c72353",
        "cursor": {
          "ref": "5ed76f64-92fc-48c8-b165-f23742a46019",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8e275f71-2f0d-4ef1-946f-bbf0e5cfba8a"
        },
        "item": {
          "id": "1f23df1e-daa7-48b9-894a-a5c353c72353",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ccb1a660-9e48-4eee-9c0b-0732cbd5e5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73b6ac5-558c-421b-9480-fd89ea27242d",
        "cursor": {
          "ref": "7b573d6a-5ad4-45e8-bf92-ddcf7f5a4429",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "85371878-87c7-4d52-896e-c415db6b3be8"
        },
        "item": {
          "id": "a73b6ac5-558c-421b-9480-fd89ea27242d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8628cde6-8bfe-48c6-b62f-fd1c823dc6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c063d89f-1216-4b43-a3d8-5d94d4ff9868",
        "cursor": {
          "ref": "d8e1182b-21b9-42a9-8966-cfb751486759",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "658f0a4f-3269-44c6-8d56-145fbfd016ab"
        },
        "item": {
          "id": "c063d89f-1216-4b43-a3d8-5d94d4ff9868",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "15a4ff06-6837-4637-9478-48b5278ef03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08067d5-856c-408d-8c1a-4810ec4fe940",
        "cursor": {
          "ref": "71a6dcfd-8f9c-4094-8aee-76f2e5742207",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0d013408-9b94-4485-9306-e6ff8e0cfffa"
        },
        "item": {
          "id": "e08067d5-856c-408d-8c1a-4810ec4fe940",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "34320299-b3ae-4aba-9c66-49926fc4a976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dab085c-4d1e-4da8-88ee-280acd7eaac1",
        "cursor": {
          "ref": "4da93d41-a2cb-49c9-a4b2-53a1a45de20b",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "18f04e2c-6ef5-42ca-b869-ae795740bdc8"
        },
        "item": {
          "id": "0dab085c-4d1e-4da8-88ee-280acd7eaac1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c8294cf8-9da9-46cc-831d-aa85c86d1b0d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93da6482-c85b-4502-a424-2d7c06616d29",
        "cursor": {
          "ref": "a353b8bf-ced6-47fd-94c9-1dc93ad9e2d7",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "37cc26ad-e650-4f36-85af-4124fd142c0c"
        },
        "item": {
          "id": "93da6482-c85b-4502-a424-2d7c06616d29",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "139ceb26-034d-439b-b6b0-7b02e8c61326",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec79e03c-8b40-43f5-a67e-e75ac2dbec27",
        "cursor": {
          "ref": "27486c3d-b97f-4663-9090-a604bb09e7d9",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6eb79e04-4e6d-45c8-af40-4ddbfb0885af"
        },
        "item": {
          "id": "ec79e03c-8b40-43f5-a67e-e75ac2dbec27",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1661a629-fe40-42d0-a9cf-050c0562077b",
          "status": "OK",
          "code": 200,
          "responseTime": 2930,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0b0add-0f60-4ff7-8e0a-8d289a0655c7",
        "cursor": {
          "ref": "2db5df5c-2877-404d-b82d-4b241007d309",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8d26d697-98d8-4d78-b4bc-dcf01c9cbb23"
        },
        "item": {
          "id": "7a0b0add-0f60-4ff7-8e0a-8d289a0655c7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "70159175-6964-40ac-b209-2903a9cfaf68",
          "status": "OK",
          "code": 200,
          "responseTime": 3484,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0763c50f-6f10-4fc8-afc3-cf349310cf06",
        "cursor": {
          "ref": "360eaac2-24ae-4ec5-bac3-5d04abb6a4b8",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7d3ae99e-564f-437d-b0ee-c9972d44f3f7"
        },
        "item": {
          "id": "0763c50f-6f10-4fc8-afc3-cf349310cf06",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fbc1eb1e-3746-4da0-a56e-79ac4a8b6d6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0763c50f-6f10-4fc8-afc3-cf349310cf06",
        "cursor": {
          "ref": "360eaac2-24ae-4ec5-bac3-5d04abb6a4b8",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7d3ae99e-564f-437d-b0ee-c9972d44f3f7"
        },
        "item": {
          "id": "0763c50f-6f10-4fc8-afc3-cf349310cf06",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fbc1eb1e-3746-4da0-a56e-79ac4a8b6d6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43141eb0-ef16-4454-a2ad-d8c17b335130",
        "cursor": {
          "ref": "cca0d33a-73d6-4f99-9036-ec2514daac85",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bd0664fc-5243-42ee-8a67-31905e10788d"
        },
        "item": {
          "id": "43141eb0-ef16-4454-a2ad-d8c17b335130",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "265cd02d-76e5-48f8-95e0-6aea80175f0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1f72c2-7fa8-4332-a8f4-081236698680",
        "cursor": {
          "ref": "d2b7e0d9-3448-4533-818c-ff6edbc65e86",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c95ce7d6-ba2b-4237-985c-18b0c12d0d21"
        },
        "item": {
          "id": "8b1f72c2-7fa8-4332-a8f4-081236698680",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "39389a04-3943-4cf3-a504-dae4891d0af9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}