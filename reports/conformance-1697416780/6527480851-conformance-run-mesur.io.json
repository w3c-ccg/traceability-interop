{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bf169131-39f3-4fc3-b922-374495c9ede9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a530e453-82d7-4ea9-ae1f-155377aa5e24",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4245ecf3-26cd-4c12-bf10-7d0777422baf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bbd1421c-6bd2-419a-adaf-34a85ab9247d"
                }
              }
            ]
          },
          {
            "id": "7f9f01ba-7807-4685-b867-911c068a12f0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99cf67da-4520-4635-949b-c91aee7aa63b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a3b55bdb-8096-494f-a68d-904be4e87018"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fbc66018-780a-42ef-ae92-b86c6cf7b7a5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "486b10f0-a05d-45b4-876c-d1086761703e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f7e6c9b-232a-4879-84a2-04f593df8933",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "442a13d4-bfbe-43af-9a68-7bf9b6f7f433",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8f76322-87d9-4daa-8e2b-69d48df5af9d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "213485f4-6914-4fec-9ca2-82b1034cd4df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63ac8872-692f-4250-80b9-113ce3c09f78"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4400a5bb-5ec1-4f25-b998-1b8da69cc0d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e31b3be-f815-4f39-be56-3f6cf7294093"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33e380af-77ae-4532-b5cc-5d7ccc33779c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5bebbd40-71e4-44b9-b948-941fbdfd23c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c64c1d68-1c6d-482e-9588-a9259f612828",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b918646b-11b7-4955-9a01-fd6e5ae33e92"
            }
          }
        ]
      },
      {
        "id": "33036e50-d42c-450c-9238-a412e058ca8d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "30e962a6-b98f-4df1-8c03-2139281fb0bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "732a2769-043c-49ed-b5e9-70df4b5ee38f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "953f9e3d-cf96-4141-9499-45aebf3dde37",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eeb79a9-d023-451c-b3f7-34881753da50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62845626-e337-44fd-b74d-a9de5799e16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b14a06-ff35-4f00-b41f-04ddd6b746a0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3cfbd1-86c5-4a18-9e3b-9260edb7db2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff04e566-d454-4576-8fb1-7103c4d3182b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c04a6a-f89f-40ca-8f9e-f61c386fefb4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afa0f37-2741-4a6b-9057-2d59f03cbae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c2bb69a-3b65-4994-b302-c10dc0b40a74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3d75a3b-431d-423c-ab2f-79970e2fc24f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9528c9fa-2386-4218-9aa7-fc0d66bae282",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3dba68-bb4b-4a19-bf31-3962c4a67bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "560a3d55-cd60-4be6-9ce7-a59f007d65d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3cd9c3-b15e-4b0a-a015-1b463e85cc58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444c122e-5cf0-40ae-b3a6-e34f01615f0c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "826a62bb-9eb4-4b85-aa48-1c2c8557dc24",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fbdc08fa-f62e-4ed8-a915-57d294263b6b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b735d20-2281-4b89-9617-17868d5b3976",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ccf45c18-9154-464a-a158-58f0e400c26b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5a37c94-0a95-4a3f-8692-8d89bc6f8690",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "34a19ea9-a0ac-4b24-9f37-37dc58c723ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c39464df-6281-426a-84f7-35ad12a9e434",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2f55a35-0ac8-4555-92ad-5cfc4a393278"
            }
          }
        ]
      },
      {
        "id": "74b08f20-4ed4-418c-b5ad-66f5139605fd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5240abc4-5232-4dcf-a245-a0dd27cd5042",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a1d615e-d149-4107-8b57-b9b70f84dfd8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "40ed8c19-e258-4e5f-bc1b-46c3f76e505d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fb29de-a887-43f7-a34c-9aa15f4e531b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bd5c95-ae5f-47b6-841f-b282d1024ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273c0a2a-df12-46d8-a47c-26261fcfb336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "317816a1-956f-461b-840f-e44f53615398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68710eb-60de-47bb-b2ff-edc21fd0e0dc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657d0f61-fc0f-4b3b-92cb-8fa460c1683e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af059ed6-8f3e-403d-8fcd-57cd51861981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7651345-3528-4d38-ba11-15cb233961af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "819e2b0a-8409-4986-9ddb-795fe8ee3acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c328883e-0124-4802-ab22-c8145ff6638a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc95e072-8bca-4e1e-9dd7-deaa29b17179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d04779-4bbf-4804-982d-6304bee61125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1901c04c-5930-4cfe-a1ac-d635dae1c83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17decac8-da6a-4f58-be58-687717a6610a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f20687-869e-43fe-9890-6845ed959948",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22555e79-c2c7-495e-98c2-ff579a2c030c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83342ee-e68e-42cc-967f-617e2c596523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3844af94-c3e9-4efb-b359-d218f3e7a3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ab9b07a-9950-4ea1-ab93-c3d3469aaa56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57870b9-8923-4da0-857e-724da302ac96",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917d3338-971e-465e-a335-79a158fee255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f906f90a-3b50-440b-9d18-e0950c313109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42d4175-0674-4244-87b2-b39961eaa3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ede2354-4e61-42cb-9957-9f62bda6ec7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f9501a-ffb2-4897-b31c-c348627247f8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9061289-06fd-4205-9c17-d7658ce1676e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a765c498-2e48-42de-b2ef-868365f6048c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0754c79-950d-4f2d-a18a-53a006b98655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89dede83-7875-4183-b1d1-be4aced2d41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19613b5d-eb6f-4e51-8490-50a85e0bf71a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273d704b-c609-4f5e-b55b-21469a9223d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62e9e22-86c2-430a-8691-b46152554aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80c0308-d20f-4f2c-a7d6-8586dfd18e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e10951c-96b4-458a-a982-755b2811fddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e08058-6456-415b-a46c-dc5aa4277f18",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab205f1-2b62-4986-8d82-bf13e96f2e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaaf3b6a-7411-43fb-8455-b748d4b4321b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fde2bf-1957-433d-9fac-a837b2a95609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3b50354-b51f-474c-882b-694edbadaac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d054419-20da-409e-8e7a-6f5907e55803",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a64144-d55a-4a6b-835b-e285a68234c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955a8fda-558a-437f-b592-f42802a6e7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f467dbd-52d7-4ab7-ab23-dedc41561d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fed10ec-c056-4e12-87fd-f7cf75e89207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367e9d52-6dda-4639-b1a7-ed5d8bff085b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8378c3-22ec-4ec5-994b-cd778659fcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7baf42a7-6535-4dfc-9b63-6c7685301f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa7e253-83e1-415a-8234-ff565d903fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3adbef7-581d-44a4-94b0-00917e12ed72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1000d0bc-2f1f-457f-b9e0-d0a796e7d22d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43075c1c-1c8b-4abe-8d08-490d24b4ca35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c32843cd-37c6-47e9-83e0-16ce172d56c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4326416-61a0-4d4a-b1c9-63b93aad892f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dc4a834-2958-48e6-9b9a-784fe562e262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9f2c4b-e02e-4731-a7ed-766908a5564a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc24f3b8-0d7e-42ab-895f-732e849cbebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62472261-541f-46f8-bbca-fcca97151c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f67bd2-09cc-4590-9835-932602e2b8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "504dd187-dedd-4dd8-91d1-e5c734ee3e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de573f23-1faf-4aac-8d15-570977415a1a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3871450-ae9d-4396-a06f-e5b6ee996952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ac2af2-e072-41be-88a5-7f394ee1f18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e225c0d8-f5e9-4bad-8f56-05e4f25bbf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b40888f-106f-4118-9267-91eab2eb03b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69250a03-1cb3-483f-b5bb-85d57a3bf3be",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f518f1b0-5b45-4eaa-9891-90358bfeb99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266050e2-f56b-4ec8-a655-3a8234309c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de97b600-fa7c-4c6d-b670-bc33c0be9459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8071bfd-baa0-44cc-9758-1e4b5ea7c4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99929dee-549a-472c-aa49-fcffac18b539",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db581175-077d-4282-9b1b-f79cb14fbbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85045d4-19a9-4fcb-bd79-832394b7e16d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71c058e-7deb-40a3-80ab-3d0ea2b0b29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76d0f2b0-f602-4f04-87ce-df650bedc22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8a99e8-cfe4-47c6-a12e-351ac5b0b596",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c168f556-27f8-4f19-a015-389754ccd702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2877d6e-41f0-445b-8c2a-2dd0915f4914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c844e3-c541-4a4f-a609-3a431ae7df4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff5edbaf-9089-48d9-9f45-8356ba94e193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405192d2-f690-4219-bf6d-5a37408d9d2e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced8b144-cd0a-4fc0-b86d-08bd118280ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16eb5d23-09de-4529-bf01-c28e408e099b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a62221-009c-4ae1-90d5-afa50dac89fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e7c05a7-9aa5-41b4-beff-34a147d1fcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c0d28c-1506-4438-9878-38dd44a8a9dc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e0f14e-e37c-437a-a3de-3f591660766a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e605ab-da3b-4f6a-8b6f-3f48b39344d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25754fd8-e00d-4852-8845-0e2fe58f4851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "148fd696-5a52-4724-b1cc-1230021d87bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad9d8a9-2c6a-4619-a28d-00cbb0b16c9d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8b2fcb-f452-4ba4-aabd-dbea8bb2fc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca459f7-fec0-4576-8e25-58885555e3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0393ec8-ad0c-453a-a6bb-3051c6382c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2b869c-ef17-4d7c-9ce4-46030e49ef4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c18d80-23e1-4396-95ff-8385fac96ef1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d941d7-8697-4980-b0ff-c6759190db6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a90a3e6-37cc-45b2-ac54-fa4504b18304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935d7307-09cf-4141-9f31-f0de5261521f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5f0c78-e111-411b-a474-8babbb2f6740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5acae3-921a-412a-9b2f-3c1241f5db48",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbde064a-8e94-456b-a236-050fc19e70ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e084a3bc-cff2-4d73-afd7-f81663e484ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc48713d-8fa2-4b86-8c66-045a284043a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87b4571e-d30f-451d-b3c3-d47fa07bb98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4530e2d1-9b81-4363-be04-f4960fd8b83a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743005c8-29c0-450a-8e3a-f89880bc7a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ff1629-9fbc-40dc-a191-694135010232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2cd494-8faa-43ea-998c-2529ddd1a380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88fa4586-8bcb-4eda-80f4-f71a76efe179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0ddc1f-d534-42c6-b0f1-1fdc81a8bb22",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd4b271-9185-46d1-a629-c5733c72f9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef5a3ac-94ad-434b-b848-359bb863d3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1d6a3e-37d8-4f44-95e5-8ed96dd6cbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b89e47f-1c72-4c02-8e4b-d2dfae785ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd371e0-2246-4e1e-92e0-54c9b7ebb495",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dfbe1e-6a50-43f3-bdad-593ec0d8f8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c66596-7d18-48e9-93ad-781f6bc74215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4c37e3-e998-4065-ae3f-353155f2aea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e2fb97-1969-4756-bc46-7868fedd97ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db1d700-65cb-4f16-8869-94d87c496dc4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2940c145-19e4-4fb0-97e8-119620f0f518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a7bc91-b65c-4bb1-be87-ba334237742f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81fe342-3fca-4aa9-90af-0c3e1ce77f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "735e1e46-cdef-454a-ba6a-946bfdd4813f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ccba5e-7768-496e-b308-1cebe5973c04",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5d9ff5-b1af-47ab-9861-f679fa82be16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a77892-fa80-4b14-aa7a-a3cc1456b909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201f7744-18b6-4560-b093-7764950ed0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aba421e-ae95-4c2f-b9b1-f2e7a8e45c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e7afd6-b729-4157-8a66-5f9d5db2de7e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ddbf3b-c7cb-49fa-8691-51f02aa058c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3720f0d1-c9d5-4ff1-8a16-533014cfe271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c94b2c6-e8f0-4440-8f27-e8770eff03e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "70b3b9b9-9664-4c4e-a4bb-6130e2d7ce89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511ffec6-6c59-4947-905d-6444e49b3004",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4238d038-6017-4b5c-bbf0-2b4b40941424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91fb42d0-89f5-4cbe-a0b4-09a586f25997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43f3057-1380-433d-ab2d-5d65494b7165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "726aa9b0-75c9-48db-828f-a9fa17c9dcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4027e808-17b4-4b8f-9e62-bd5a9bf33e31",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efccb0a9-9d8a-4439-b900-32bb3a44a03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47600132-8604-4ee9-ae6e-0c6ec18ce752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d804e67-2c7f-4c66-a018-0e32d27b4695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d496b1-ec1f-4cb1-92d4-4e7a49e9a096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c715b15b-5cb7-43ed-be7e-f0accc06eac2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e0ad47-1433-4908-92e1-75a947d54b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78b1f2e-58a5-4a1c-90b7-22cf9daea9c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7754be-2c32-4404-a405-14161b700b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8dee0c-8b8b-4c60-995a-addd1c8101a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02b7cfe-0183-4b18-befe-2372298129d8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cb908d-4a54-48af-89fd-89fd23a68123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103b23f1-9bbc-44fd-b89a-bb4745e0a878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21747b25-8777-415f-9858-93cb0ab09706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c9e94a-cf8b-48f4-aaaf-a90463a22835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1249297c-eb47-42ff-85c7-6ea4cae1e9be",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93abe401-9d58-4570-b092-4518b7540721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605abce6-302d-4007-b9fd-3b186ee8df2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3f507f-5318-4ac6-9d9b-e050274c9505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68d7cac-2b8c-417e-8331-c6d090ec8617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b2ea5f-4e8e-4f33-8179-871b6b5233fc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a328569e-2771-43dd-9b1e-54c3730a1b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5325ce81-a37e-4f0e-b886-928d9c86c399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3c2498-e969-4988-bac9-ffbdb1109a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ce92fc-2138-4ad5-a361-33aa7abc8bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7611ef2d-df53-4683-984a-772713fbd3a6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53df552f-3643-43ee-bcca-57f69954f96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569b5259-f0db-42f1-b38d-1a50906dcbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48696365-3ba9-40e8-aeae-286d521120d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c905297d-2f04-4c40-adad-2f798a402ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c6065a-363e-4666-8586-0c8da63b9487",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b29e3e-4e3d-4d7b-adf2-99a1fe01fca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846e827f-999d-419c-a54e-d8bf0ff8d7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2990ca-a110-4e51-a2e6-79a8941c02d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "acb060f8-9d16-4b92-9315-37165ae281b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a782e438-55fe-4fa1-a3cc-2bb4d91229fd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c80ff0-0eac-4cf2-8697-18ec60c1043a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab7bab1a-ed92-43e2-97e8-9f9e227fa0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07813fc3-b2fe-4fd4-b699-97f13bd060b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7334ec-a452-48c5-b763-a134a460118d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02926bc-5251-44b1-b9aa-61b772337938",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b735a46-ad76-4f2f-be5f-6bf2425349bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160aaf61-5951-4a1e-a96b-eda6ee453513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8751708-0e60-4ed2-ad1f-314cd673c43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1bf16a-c922-4b7a-b55e-0ea369bf5569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4eac148-84fd-4391-aac7-246b32469170",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e8f609-ef7c-45b2-9062-dcf7df24f78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db2613c-c72e-49c2-83b9-f772b7094cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655449b0-8b49-4f9b-8e3b-438bcda34ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d94f48ba-0cda-474b-9168-5cc9ceba7b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3344334-413e-4f21-b63d-ebea04c0ee19",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2232e8fc-4b06-40af-8fb4-c20813d1f0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faeaed7e-ab33-4cae-849d-bd5d278c85d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f3ae31-4960-4006-aa1b-b3079eeb7bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b60c6da-f373-40dc-bdc5-62e7c8641cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176187ea-6ecb-47e8-96f5-8b087fbcf5c6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f93980-f738-4a20-a0db-625377fa5f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a77b19-1fd5-4e6e-81df-376bd2e37fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155721b2-0039-457b-8942-0a44466dbbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f213ea53-9a04-4434-9428-252b3a822b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41614aa-25b9-4a57-a434-8272aa404d41",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf1e9b0-0c68-4995-9ff9-33f2823bf2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09d5c6b-6761-45d5-86f5-ea36eb8908f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a6ec79-3a81-438a-b78b-82435bb75dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d05505dd-192c-4122-9ec7-24d1bf35fece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c442c89c-2934-4d6f-bf42-89c82f492ec5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f403db87-21d8-4ec1-8ba2-26f3c5d3e812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f48fc2-34fe-4973-a91e-9126fdb0fc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ebe81b-697a-4239-a5a3-edbbd3d60098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd6bc88-5213-4ee6-a604-b4e98a239910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3db54a-d84d-4a18-94af-023f76a1f1d1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e536eac2-a32f-4dd7-954d-3caee90cd9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c0c7a8-3e2c-4e23-a16e-00674922203a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ce627b-86df-4b1e-a3b6-4172fdb35145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "753ac94f-0c1a-4b4e-a712-162f0cff84e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcbc6a4-ea2f-4903-83cf-ed48361ede11",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36b4eae-b3d1-4ccc-9b10-d9a0802cb60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d074a855-c666-433b-987a-f6b31ed3eead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c66efb0-e220-4fb3-8a66-26cd99f30672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "036755ed-0a01-4679-b460-0b35ceff5307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994acf79-c1f9-45b9-9290-3c68eae0b4c1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d760c0b4-0a56-4f7c-b987-c478f032dd94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a01573a-7150-4809-98e3-ec697a1fd21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3accfe4e-93ef-41b2-934b-b87e38f3de4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "07f930af-9c3b-4bbc-aa13-dd6e084cfe8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e85959-055e-40ac-9ecc-a19796eb7232",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "517605ef-641d-449e-94cf-e4e1473de6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455c5641-e6cc-4932-9355-775fcd6ed0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa56ff7b-dd42-453b-9c68-2cd02a17503a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfd2f47-d268-487d-be3b-95efd82e8cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e892655-abe5-4271-97ab-22ee0bb5a3ba",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c48c3ef-450c-4ff7-bc7f-14b9f6f1b096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51694c4-4ef0-4e67-822f-511b4096175f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cc9a5b-8278-4407-ab83-2deebcc32e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eba342d2-3b66-4efe-a16e-970664194602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43c1b9a-430a-449b-a5bb-bd5c6ff680d6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3650638-d0ce-420a-bb60-e6be47b0c1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317277a7-734a-4bc6-802f-e028f9b1793f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11d095d-c9cf-41bb-ad03-d2814df9ede4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eab5843c-befe-4d33-a677-7b56e386fd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fae29c-0877-4d8c-b5a6-74ae6e342923",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e889a3-53ed-4958-a1f9-36117e220e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6c039d-5874-463c-82bc-912d634fff31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb802531-8881-49e7-8b5d-b39db7963351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03467513-89ab-4f9c-8876-d0eb805a1083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9441f3b-bb3b-468d-ad92-f40001afce1a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11ce60b-96be-4990-b5b7-97bbe2dbfa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd0b336-6eac-4bc5-9c42-f4dd67965e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf3c016-2e91-44da-899c-ef3a7a4a06c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "591f8d0d-897a-46e7-85cf-5d71ed9af572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618e2b12-94dd-4b80-ad55-3ea05c71fe30",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2299f75f-40d4-4ca6-bf23-db8cbf040f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b9feb2-d1f8-483c-904b-c5609e742fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb90ea5-db46-4eb3-9a49-49e7734cedd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba66fc6-13e6-4046-92a0-307fb77e5780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80c32ac-15df-42ae-80ef-a63a5542f4e7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f123f072-4a86-4251-8c0e-5359876629ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c053294b-e7a3-4342-9186-d45a1bc0907a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f59d4f-08b7-4010-a9a6-8c4b81258764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e82899db-6df0-4819-be84-0e12df1142d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cf6be2-2a62-4071-a70a-d004827e5f68",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ba7fbb-3fd0-461a-bfdd-6d4db1637fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e660f796-23df-4d71-965a-c9ee425490f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7138bdad-51b4-40e8-a672-704ea189a6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba65637f-6fb6-4436-8944-b684bc7eb5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0584bf16-575d-41ac-b167-d6b4622c7f33",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081dfe27-5d78-4d04-8362-b5abe0e1f62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447d5d23-1a44-4d9d-9c4e-43b281881b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a84acf-ad56-437d-9747-035329b1d9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e069fb06-faed-4d3e-b44b-0ecef8c87d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db819cc-0618-4609-8c8f-f8790e0cb95e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bbbb59-92bb-41f0-a0b9-17b0b2885f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d50a519-3a2c-4250-8787-8d25b5b5f414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777de6ca-e9c5-449b-a636-cca87ed3f37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4124f209-0b0e-4e12-86cf-7f0380cf8d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479537a1-92a3-40d3-8584-3397b28f3463",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a4cf5d-bb03-4c68-be8e-3098b2dea913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363ca810-0f77-423e-8984-bd5aa388f71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f18801-2c23-4399-80b8-9f413bdf17b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "31f371ef-6d98-4563-9586-53c0111a66d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1222e3c5-c578-4b8b-bd9e-a13edc346e27",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7f443b-55ed-4a78-9af9-32b73fdc46cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f79691-0f87-4fd4-bc98-6ee9ba93959f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b6538f-59c0-431a-a6e3-392cb7a5dbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "704b520b-bfd3-4a20-ab10-f36da187e30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a6c8d7-1d0b-4aca-8003-e49a59d59f5e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901ab914-b0da-4803-9242-d62f52c24344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acee217-90f5-476e-89bc-09bd5d34010d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3070f5d-bb63-4eec-a4b0-3683e159af70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b2edb6-06eb-49e1-a59b-6dc1e3795968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9de4499-7fdf-4c6c-87f4-bede4e3ca4dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf15119-11df-4524-ba4f-a7a0c6a07fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab0728b-05db-4e19-aa3e-97bacbcb7eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bac5d3-1ba5-418c-8119-141b16247d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "da4d09db-c49f-43e6-9205-ed0a738f93eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dc2dce-ada5-445c-8f7c-53379e365de6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc01c986-9ea7-4472-ab03-fe209dbbaa3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f64525-2ff5-4d72-9a65-335e796b4160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b81865-bfeb-4e42-b590-075fb7ffa9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ff701b1-838f-4c72-83a5-5e78edaa82eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3f3cb9-ab17-41fb-b257-ce79b19cf796",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c17ea2-94ff-4967-a26e-527bb10ae866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d27fcd-365d-4b4b-b294-9a1fa98507af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815cd0fe-5528-425d-9a3d-30c0348378d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "85d1bde7-ef3c-426b-b980-ac06a2ce8ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbe7069-b3d7-4e38-9b94-5f7fb3a51653",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911408ce-9f0e-49a1-a6c6-c7d9e43c5bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3b2b07-9102-4498-b6f5-8296e0e8f22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec675103-bb28-4f30-acd2-a154a0c2813d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dbc3ba-52b2-4127-a04b-d80441cec822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1aba7a-5bcd-48ed-ad81-b9435c80175b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19a5d0a-0201-4770-b15c-fb13f2100e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12093070-aeaf-45e1-abb6-5889d7acc21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921e720b-6e03-4e3c-95fb-81d349982ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fff1523d-ff37-4aab-b48e-b030f74c98d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae4592b-bad1-460d-a721-1599cb2defc5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec76dbbe-bda1-4076-af83-b5f632420f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd260e4-0e12-4d0f-a112-89e2dc1cef51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972babde-f305-4e5d-9b20-e36e92d028b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce3fc06a-67b0-44fa-bb28-fdd5a429f1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd552a1-da07-4bbd-9fcf-96bb46511611",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42a6138-2fec-41bc-be74-a4861f2f553f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00841bf-c5d1-4370-8181-e660d81d2d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0482667e-c07d-498a-a09b-9ddb838eadd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "907e4e88-3117-4c33-a644-5d11040d3e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748956b1-72f3-40e2-931d-e6ad5367e6a1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5f43f9-e5bb-4ed9-9b61-a3314e978258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0ddd05-61df-49e2-be33-3797e3c5d48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c616c48-b47d-4388-a64d-46c1627fe5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd74435a-d56f-433f-8b38-9d5912d43deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81be7746-6619-4fbc-9125-608ffeb1778f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf02ffe-ac6f-44fe-8175-e9e0a3141ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ea9fb8-61e4-47ef-9899-0db5b935f2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de28337-b661-4e6f-a3c0-f1857687bd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa190563-76a3-448a-83ca-b4212c15ea41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b318a3-bdc4-4657-9d9c-0d14605530de",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a1465e-57b3-43ab-9087-3a08f8c59e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4a94fe-44b9-44d3-ab0a-913b96be8726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0e3c56-2bf3-4849-8d54-bd29e62a8288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "77a817e1-dbf5-41e4-a664-d0baa2392d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcff0aac-b2dc-484f-8145-cf7495dd5897",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a0f436-de38-48cc-9de4-28082e6b8324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f35d6f-ae1e-4228-80ea-257a709fb4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabd0791-1844-43dd-b6b3-7118228547e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9f44fd-60dc-4b66-9dec-a2162998cced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77eae870-1ede-43d4-af2f-30bef1ba3f7c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d377df-e455-429b-96ca-ee93d66c20d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c161173a-57ac-493e-bba3-b99f61c83516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f6cf3f-6474-432c-a849-aad69340d2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a82c8b8-1219-49a3-a047-0b0b8cef17c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c184c0-94bb-486b-a779-fc6719759264",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa62bcb-03b4-4c51-b9f9-30ae1870346b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acdddc6b-a750-4739-a8b5-8120e9324632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c630b9-fd76-4b13-b7ff-afee20a66a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdaa86a-2f9c-480a-8c4a-d09a63cb4efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190ae156-45ac-4b6d-a55e-7872e62be936",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9eb8c6-b5f0-4175-8da8-17e06d933eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5db282f-91db-4006-9de4-b1126f65b486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bf32f5-963b-47af-a197-02847e284881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f8a09ba-d323-412f-99dc-c405b7bf9501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40d7326-30cf-4447-b512-e9676fd5b350",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8926d8-5107-4dfc-a8d9-e2151c099bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c70ed4d-d840-41b6-a527-9129174d489e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1865ce4-4cb3-4b08-9d1e-bd9965541e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88f47d0a-bc47-4e3e-a1ab-da5f3cdc6d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1df9ed-c75c-4a73-ae53-34157f608a59",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e8deae-4bad-4576-830e-809b282ef61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf68df19-0c46-414b-b445-eb5b9313d3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cda461-6f3e-474e-8ef2-d094631989cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58e4b4ca-3921-4e8e-a6c1-01f60f69c7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c347ed60-b870-4552-8815-6ca20fe30d99",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d090a88-2bf4-45b0-aaa5-302d8829e637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19e5175-0d50-4327-9d0a-03d382186ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b07f471-da62-4efe-8f09-36a71e8c6832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9373b01-5cb2-466e-babd-b1617875271c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa95837-5cc6-4ddf-bf8f-9a7679ee8c67",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814ea774-bb00-45e3-90af-ced155ac9f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea5a36a-9141-4455-a785-7fb328d09731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670117e9-0e2e-45f6-9c86-03f39aa0bfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00c61d89-9e97-4030-9e08-bd488cbb2d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733ba069-860a-472c-b812-72f6e9d61891",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b05c6d-3373-48e9-b570-47cc312337d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e916176-83f2-4372-9c5f-91de9f78e582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcdc6b3-af90-40de-92dd-3cb003e02979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23f18373-759a-45d1-8de8-f644419548eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e4dc74-0e63-4465-afff-59bda5d2f1f4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9df4b36-5668-41fa-b139-3eab2080bf78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ef6dd3-c8a2-4026-b7f9-4b62c3311ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e4ca52-a54b-4f96-a4c7-2913e8250b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9571da8d-fd9e-4fa9-bea0-d0ec1d083473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd6af58-1d7f-4838-ab33-09a19a9dda22",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb581963-3a1d-4d95-8f51-c606b958d8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0c63ad-da90-430c-8375-2cdc3b102c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fb1942-419a-44c2-ae96-e625e66f6ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6cb658a-1060-4886-b0c3-a38d18e03fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0886888-1d7c-4ff5-9890-0519ff05533f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bfdc4d-7d7e-4d27-9e88-3da0b650476f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f96772-1458-43c2-92a3-a478faa40cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1010c28-fc27-4cf4-92bd-85f89f31309d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8eb6794-df4f-45bb-9f44-cdff58f05b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9f6a89-82d2-4329-a619-8315ee26e0bc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd6fd96-802b-475a-88b6-d8b20b9fdc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08350fe0-0ea9-45ab-9967-7b96171be4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9146ecc2-ebde-4704-b094-554e180dcc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e85317f-9634-4548-88df-d7a2342878cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a88907f-78aa-46a4-a1e2-5666606a39d7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba68ec5-674f-4694-8582-7f15e77f6107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98233af-d50f-4eb4-b3e9-8721f8810d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e5be4b-0c25-45b0-9633-e66564cb1192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f182c9fe-e087-4dca-a91b-5ef93c3df7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb59724e-425d-4bf7-b7ca-41f3c5e3558e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc262c58-23cc-4812-b2e8-41a903b6577d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe101682-ba87-4a87-a048-47808121f7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca14a091-aa5f-4d88-8889-e4603b122c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17302b0c-2f52-4a16-b3e4-ae900e526c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109f90fa-f522-4c3b-b003-f5525c398269",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43d692b-8289-48ee-869f-d65e8f3ae8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf93c996-a20b-4b56-8723-12d4adc101e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf04a83f-862e-455e-a7c1-558f5ae00270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1db66a2d-e1e6-4720-8176-abaf72cb680b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf02809-e869-4e8f-9960-55f3614ad52d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098b1949-b665-4fd7-8adb-57d2b58dae61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed30e315-355c-42b3-b40d-e501a1faf7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838ac367-c648-4b6a-b5e3-960268396728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69ab2682-2399-4bab-850a-72cc04fd14af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6514b50f-63c3-4264-a9be-b0c958abdc56",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c37573-7491-472e-80b2-06a12f407a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b510e602-999e-4d03-9d75-174f4348c299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482eb139-5499-43f6-9f1c-56bd95116854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "690849a0-ab48-4464-96a8-e9222f417c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856c154a-d02e-4837-9d60-6daf831870e2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f614a9-c605-4a87-85ff-00d95c3d1d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e830e567-8dcf-4368-b5a1-05e898d0dc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d140ec0f-32c3-4fef-b222-46cf90cafdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "51fb67f2-1071-470f-9a85-3611d1b9e5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f679d2f-c81b-4e31-ad60-4d6e4f848e39",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245678a1-ee45-45a8-be57-7c17880f0505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d39ff0-4792-4410-bc4a-f15539539c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd67f0c7-85f7-42bd-8d70-177a5295b5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3f2abd-aceb-4642-96e4-a84375a80d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2a4871-5e83-4252-b645-0502c1140848",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c101a502-b013-4267-a528-5767d05ef8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed94791-08fe-4abb-acb9-4894bd400886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b81d7f-e5ea-4606-a342-0317620ffc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5215ed8b-7ab4-47e5-85d4-2e8275f23703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac58cb4-4408-4973-be69-8ec94d8cdd6d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c457ad5-da4a-4549-94cf-057e607d50e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a963abb-7570-4804-a21d-c885d2b8e079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d0094f-6145-4949-a063-1cf8a9c854e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e72914d7-3a5e-4b6b-bd87-146c4aaa8882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dedb13a-e873-42ca-8de1-acf5c76417cc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11aea25-4df3-478f-8f1e-fe74aab14c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc982ca-8775-408c-ae6b-69647531cfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8d2904-5fd6-455e-8586-79342046871c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "12d420d4-f127-46ba-a473-22a3832ff718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa6f664-7d68-4b5a-bc6e-9ac35c5c3a3a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530c905f-9c6c-4357-ae0d-d45049b62d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0f120d47-95ab-4682-bf8b-38926e6d80d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee41bcc-564a-45c2-af6a-a327ed177076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c576c7-61a8-4e48-b246-40915d6c916e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dfe25994-6121-453c-a400-acf1bda2ec8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85c25b74-ba48-40e7-9035-c32ef5470867",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dded831-f6aa-466c-829c-a823fd20621a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1b982ef-4c0f-4c4e-89fa-6b80049482c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292d7a4c-ac62-4a47-9dac-aa7f2d666bfc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fd7ecfc-6a45-4099-9d86-6c1c5c36e9d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ca892b1-55d1-4ed0-b206-a7434596e25a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e46c00e6-b5aa-4b8c-af2a-e69fbc3d9bd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "531c3c46-1e0f-44c8-ac84-ff05854a4f59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c23a86bf-d39c-43a9-8b88-ace3358f161a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bbe6b03f-aca3-44d4-8296-e04be63f9a2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3577dbd3-185e-4365-8f0f-77b006ccf7cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "05addd8e-e61e-469a-b6d8-2cc6508f8ac8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e38f13f-4186-4353-9285-dd778c93cf30"
                }
              }
            ]
          },
          {
            "id": "ab975c04-c46a-40d5-b7be-5808ab97bd60",
            "name": "Positive Testing",
            "item": [
              {
                "id": "432c679d-cf58-4982-bf61-1a877334051b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c61a2573-a657-4d4c-8bd1-464dfc2cced3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87162b50-1d34-485f-b9f7-e2e0d1edc0a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edbffc24-2448-4640-b701-af36236b1a15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a67dd263-4d1e-40b2-9b55-8fcb474acdab"
                    }
                  }
                ]
              },
              {
                "id": "85f90f09-a9ba-4da4-a4e3-1656b0d0254b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44188bc9-e9f7-4267-857b-5e1a950388fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b25ce441-a8f5-441d-8b06-23b04de4a0b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e627478-cf1d-4b86-99c2-024e5ca6ffd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9db1dbbc-3bd0-45e7-8d0e-519e61611f9b"
                    }
                  }
                ]
              },
              {
                "id": "dcab9de8-9dbd-44e5-99d3-f70a2d21c9eb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f896a294-72b8-4b2e-bb5c-3fb11329306f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2076bf11-96d8-442b-8cde-f656f5a61364"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9079b30-c679-4292-92ba-e048708bfd10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db24b259-a8cd-481d-a0e1-bb896cc0498c"
                    }
                  }
                ]
              },
              {
                "id": "a7ecd207-c0ed-42ab-8c22-f47e473a2120",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47be2d39-f4a6-4143-a180-97de8ec5bc4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69602351-1230-4f8b-8110-942f393531fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52c226b6-9ab6-4bdf-8b65-7e02fec09d0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4e7b2d09-a6cb-4974-b53a-2b62cf542973"
                    }
                  }
                ]
              },
              {
                "id": "bd8577a3-6fa0-4803-a0ee-f7b0a34e60d6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b870cc14-e101-49d8-8c90-1fe8071712fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78e08e30-4e0a-4936-85ee-9c7ef39719aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a427b15-e8bb-4ef3-9761-8f6ffb1d5e3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cf81481f-025f-4ef0-b82f-e0594cdf600b"
                    }
                  }
                ]
              },
              {
                "id": "4a4fc22e-8f37-4ce8-936d-e86fe4db893d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e70fe84-b900-4850-a317-d116b629419a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b16ee3f-9efd-448a-b7d0-9d15ed336978"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "511713d0-c667-41e0-a636-03b9bcba0bc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dfd3128e-9148-4017-9ac4-b2207c9a6a94"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59d284ae-38cb-4bb4-9a60-dd2d32acf532",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ae52171-857a-4809-9c85-82949eb3218f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f7219f75-a8dd-495c-8d43-b0a2eed7f8cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42080120-10f0-4ad8-8a0c-bc7961da49f3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0553fcb7-bea0-4b23-82f7-9f926e5b443a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2d5d2f9a-dfea-4b6f-aa90-c1bfa18b10a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86e9de95-37b3-4769-a2fc-776d53b60e6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e320b0b2-d7f5-4a61-8db5-d1c0ddbc7eff"
            }
          }
        ]
      },
      {
        "id": "e3cacaa1-43b8-4cc1-bb92-394131322a4e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3d28405c-2b3c-4222-8269-fc2bc70beb2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb7475cd-a925-45c9-91a4-9ef2c9724715",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a79474ed-aaa3-45e5-8d87-b38523be6612",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab378ae-9164-463e-aa7f-1c28ca221bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947e2cdb-535f-4add-8076-6b99dc96f848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a162854e-9068-425b-9507-4357392bde2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "51013cd8-fd64-4331-84f0-2ef07f54e2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc372fb5-e5f5-444a-b3e5-22cc2d3678f5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30505276-6871-45c0-9f83-67342bfba9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc73cd5e-b436-472d-9ebf-80c3d250c12f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835ef482-cd88-49d1-800d-d5c933eaf418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1809ca8c-bf77-418c-8892-b2abf2479d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84638e6f-1fb0-48da-8d45-05535ce92319",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6fa333-c6b3-408c-91bf-3e5b88f36257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec15a9a-8678-4c73-a87a-50be7829ced4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6189a426-c46a-4c86-bad4-5fe4d70e6bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63b8d549-d7f5-4de7-8074-24906bc05a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d97de7b-23a4-4add-a1a1-5a3797f138e5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71de6faf-076a-48b8-ba39-0f25a3ff9e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bedf68c-40e3-4a36-8fa2-77750cf98af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecf710b-4941-4131-a843-744665b03cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b79e13a-ec60-4b92-95ce-59857b1cc35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339e69db-f97d-40d3-b9f3-df97bec29d6c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3914601-3ebc-4c1d-a640-b9ebeb6c2a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b226e40-0e55-4ce6-952e-7dd8b467585f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5875e92f-bb5f-4d1c-9aab-87dd7981f6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf15477-081a-4efa-a413-6ae6603e3fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9061378c-9fd5-4c5f-adbd-158781412212",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7130cb17-e366-4881-8959-0d2c33377108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983cfdc7-fade-4f0f-b9ca-b2fb6f1d2aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff1b383-174e-42ac-aa06-f8b34d425920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "341ba152-2145-40dc-897f-3c0844008a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67034f98-fc79-4c85-9e11-e0a275e507f6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb7410a-cf64-4c63-8dde-145ab7325723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c440df-5366-40ed-a739-5c0b179ee14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d296fc-adeb-4d4f-9c16-111fde8b9ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "163d63b9-b2ff-4a0e-ba97-3375ba4f005b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7127b8a-07b6-45be-b8b4-2e0ea6209669",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fa8bff-5eee-461d-8f00-392499b71297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947cbf3a-df9b-4bcb-b505-8c570c9c6a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c83b40b-a3ba-4b77-884f-0963eef7b5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98a5d01c-b919-4812-827a-a136c3a08d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2a049b-b9e5-4cf5-8d7d-4c53fe7c9761",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0970aa37-331e-4cb5-b08e-43863be8ca5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e539e019-d573-4be1-984d-7afdd144380a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91354798-050f-45af-8ba9-7c1601b5156c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e107d9c3-e272-4af4-a1a6-e1b04af8b277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438a5e84-fb3b-4847-a087-e318a7e5ce8c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b586720-9e2f-4b6a-8d10-34391e944de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be82f74-62a3-4306-92cb-29a407606425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89716b58-0ed7-4ea3-bfe6-854991b12574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3be194c1-5486-40df-8100-7a2ed131179e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f70333a-37c8-40e4-9f24-41ed9d4e7b41",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ed854b-24ac-48f1-b760-5e0467bee004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01616da-1062-4c8f-87fd-f9602158b55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa416d5b-5e49-470d-a904-7ba9bb9c7314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8226db92-6096-4654-8e32-32c8b0482cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832816e6-63b7-4401-bdb4-ef54ff24b0a8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a130bf42-2a0e-4db4-95cf-418b9d4b8c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57badbe-df27-48ce-86cd-73917b2a86a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5abd99-2c3b-4fb7-b5ac-596b3ce46f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7224ebbc-93b0-40c2-8cea-fb84152d093e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eec0767-edd9-43e3-a439-61c6e849b479",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737bb6e5-2beb-4bf0-92a6-77c935ffe082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0880e15-eaff-4d11-9f01-0eb25824a037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f001111-aa9b-493e-bc5d-9c02a90583f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddd3458-d370-4231-aafd-b69104655c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71a9aff-dd9d-4338-9164-eacfb146dc30",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b735d3e-5d86-4fa2-b98e-e8b3b76cb451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3481b95-395e-446f-9fcf-b9d352db4ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbb47d3-0069-488b-885b-935423bf5b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca9e915-fe2e-484e-a9a3-0ed2f8b082b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289caea4-3cf2-44a6-936c-ef71cc1ea2d3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612a429c-5831-4369-a06d-01447954ae67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a0dcad-4ac9-4682-87c6-e24f02937a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47d529c-98fa-4cb9-9cd3-cdeab35b5b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "160acf87-84d1-445c-9628-05eb5744d1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ef8a19-83b0-4fcf-a8aa-56fae0170881",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903eeb44-4aaa-424c-abd6-e05d022a24df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b349f8-766f-4384-8a25-724d19ffbd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25ab3c6-3996-4de3-a41e-21da4099c06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "20666ca2-54c7-4dfd-ab3a-bec677714ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcef8eb-0f21-4d62-a4c5-61d0302b346a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f34f01-290d-4990-8109-38ade63e800c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ea980d-f7b1-437a-9460-426eb7b8a5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bb61fe-3c4b-441e-b4a7-a1160b14749c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f447d442-b654-4ca3-b39a-343d6e2e0cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b4a746-7425-4293-8e81-7a94f69eeb5b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775a5bde-1c27-4f43-ba22-eee2cb779a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e471e2-ae63-4a4e-825c-3878c9890c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bff2147-30af-4de0-83eb-f8109b416682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "843974d2-a570-41bf-9069-e729df9034ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15f9bd5-88cc-4c9b-9654-65bd41a6ab67",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fce02ad-a0c1-4c17-a4e0-c4b12374b7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6baf5bcb-ca94-4387-9d70-c04498164cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b41e23-aed9-4531-8be6-031793c8ed48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ddb033-7daa-4d18-8225-2ba7c28d37f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e0afb7-26cb-40d8-9393-3a84306d3766",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b47b63-be1d-4abb-aae9-61336d8b9faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f7be69-e38f-474a-b548-2089fa6e79c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac67533-ab9a-4985-96c6-566533ff445e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fff815c0-17e7-40f8-8f53-576d5f12da36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924061a0-0769-4c16-aae5-d4ef9ca3fc24",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24228025-eb60-4afc-98e1-035cb9622cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eaac31b-605e-4d17-b526-d7dcffb664f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3055d2-65e1-4cdf-8da3-fd476cee7633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb140ec5-1711-444f-8107-d1d290a32eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c32625-2f98-4562-9608-0f91e9d21a78",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90d5322-88a3-460e-b174-3066d2954aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded41fc2-bda6-40cf-9402-70eed5e63546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1ec0f7-3287-4fd1-b5fe-2c970e1a73c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7818da3-8cf5-4cf1-859f-9318a242558f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0a92ba-9777-4859-83d1-669e0c3bad5d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b4e0a8-fff4-423c-9ad1-8af312ec0857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1619a16f-1b77-46f7-8290-84724602ff59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf744a2-5eea-4b8e-b4cc-b56d18ff5dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c52864d7-f168-4b8a-b66f-bab3c295e43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80d6e6e-27da-4e50-bec2-655d654d2dc4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e281d3f-3935-4bc5-9a0b-188f5daafc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d74995a-144e-4bb3-90fe-03206d37c84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b16c33f-60aa-4066-83de-d572cfd15022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a2537f-abb9-4dd0-874d-10ade6714887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36511928-2e30-4ea3-8f11-c9f441e7fefd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b65e467-506f-4ad3-b841-9800b3b01a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7889b684-a45c-4372-950e-652562fd9b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a90540d-e737-4d46-a238-f92a047e108d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2bcc43-8ef3-4157-b51e-95b9fa07975a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd4d622-1b85-48d0-8a47-a410d6d45142",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a003ebf-7911-46d0-b07c-010181bfe595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24cf2bca-4993-4856-8bd5-ac3f35c822f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a66e21-8fed-4cc7-98b0-586b777bc2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2572cb-bd7a-4cbd-bf58-77557ef34a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbe63f6-f783-4acb-b53b-5ee0ece168e9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c7e1c8-73a4-4d5b-80f6-51d822ace62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6728e8d-85bb-4544-9151-f6fed14e0975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842c40e9-ed9c-46ad-bfb9-d308c0606a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb482a5c-050e-45aa-8a37-bba990338a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a8d626-c162-4a88-a816-04be9577c8aa",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf12114-8dd0-4ac9-a2e5-c3a0c477dda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac64f255-585e-4e96-ae50-cd5af82e8a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d57d161-8548-4af5-9ca4-2faa8f68600b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7045d46-9438-4068-90f9-67a922725418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a209fa4-745b-4c6f-bfa3-a497070eb569",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15136ea1-f160-4cd7-8a6c-938626e654bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830cb4ca-8ce4-49b7-9f1b-4ad8a0df5882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b81f13d-2b4c-4923-b21a-8cf64487560b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed6110e-2d74-4ac9-bdd5-838fa6d2d150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f545210-30ff-499f-b2b4-1e314d76e95d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d8f344-e865-4b07-bd61-0ccaf097d2db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbcaf3d4-725f-4946-8297-53ed7b8f48df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968061c3-cd44-4a0f-9e53-8301b0d8e807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a52870-7a63-4592-96d5-1b336ea4748d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ec0bfc-a111-4b50-ad43-e0136349aa05",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be50e6b3-432d-4fb0-9514-3450e29e2962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407ae9d5-87c4-4847-8dad-7eb10ac9ec28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916cef06-388b-4276-b2bc-2d2cebf7de40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35b950d6-2fa1-44d9-9a9e-a02347ce33c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e134743-350e-480b-8f43-55a2be862dbd",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4eb64e6-c824-4603-aadb-91fc7490a359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512d56a4-4292-429f-9147-95cd30a5ce63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d0a39a-49a7-45a8-a910-3ee86829cc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24784f92-2386-41de-8e3a-642fbce626b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4aaba8a-1ccc-4480-9e84-c2d453a7341a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31666b04-8318-4587-9c3d-b3d3517b41e8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d772df-ddbb-4ff6-8f25-db0b7bf80554",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8b23f7eb-eb82-434b-af9e-330183de9864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b12b96d-36e4-4c71-9ae1-4a05dfc80834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "babbc335-a1d8-4141-a1a7-2fe1f5a7539a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e62f7b6-77a8-463e-b7a7-8d26459426e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b816a87f-8a7e-4184-9f54-44ae068fde67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "339d2cfa-103c-4034-ba95-4ec178fad3ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c28dfc5-83db-4e68-87f8-1b4be1e9ad7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65b94674-3040-4f16-a938-99e02b6cdedb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eab2f2eb-7c83-49ec-9c2b-95cc4f4e2888"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3221b9ae-3af7-4fca-b0e1-022877fddcec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb6c93ee-2224-4443-ac88-25fc7f726592"
            }
          }
        ]
      },
      {
        "id": "b58f42fa-5c0d-45d5-9655-620ed3bcd6ac",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "de4b3224-97c8-4036-aaf0-36541044fc83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "506b2214-746a-4342-9eb1-8efc6442478b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd93a225-3a75-4b47-84bf-bb538cdcbf36",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dd64c0-7d1f-4904-9b2e-80c46ee8ac47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f317a8c-2d05-42a3-9e36-5e6d49feb41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97591c2e-7ac8-41e8-b304-ed4a45162f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5219a9d4-5a89-4815-aa0b-176e2467cb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df05cae2-eed0-42db-98b7-f88ed7d97a4a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6af4462-6497-4345-a695-3b2886104191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0495ab0d-5a3b-44a3-a1e2-fc7c5b3a18ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1f66f5-10f8-4800-8b7d-48ca5da21506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b09b1558-4a8c-4417-bf18-e39a61eab138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f694fa2d-f220-4964-8f05-811e9aa25474",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f431ad1-07be-48f3-ad69-4ff2a07d47af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e9fb2e-93e9-4e88-89a6-18f5da85abaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5f0bd0-d95b-4b19-a789-c977504243cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "603eddbd-3c7f-408d-9461-cd8178ec3634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d7bfdd-1c7c-43c4-b9e0-f77a6eda8369",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8342b2b7-6138-4fa4-b609-ce91b54f29bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fe9d69-3fc3-4206-9c95-78a5c51971e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cf15cb-9274-4bf1-923d-2d550a429c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "590a6e8b-be6c-4de3-a97d-100c313e4316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfb06f4-1397-4ec9-a4a5-149bc705a81d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0632d8-3ead-4464-82d7-c7dee2c0d061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e96696-7c4d-43df-bc4a-fc77332aa288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef364c43-09f5-4f1b-8607-f72db8b151ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f877e986-7f14-46cc-a925-5d0321b4743f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad469d9-f5df-451b-86ad-37fb93cb7c5f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c5fa79-34c7-41a2-9076-f93fa9f52682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadeecb9-f23f-4330-97c5-57e9a53579a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43495b4d-1bdb-4b2e-91ed-8b54f1f8af5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12029daa-6640-46e3-873e-4ab354340afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9159d07-e3c1-4124-8ad3-bea87126f984",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e929aa7-5da4-43ad-9470-a59e8979663c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cf9d76-9d83-4f9c-9dc3-fc828a11223b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ba5a58-234d-4fc8-b197-ffffa8dfdb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9fdc4c-e0ae-41a9-9dfb-c69d16a91540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f0a758-6e53-4a00-876b-837aa3ac2caf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c960697d-08ef-48b2-b2a1-3efa2b8c5666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561582d2-969c-4136-8f3b-48d9d08dc5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378f64cb-3fea-4fba-8c25-1d90b2c1d81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b25c5a8-f29b-4db0-985b-e556d4a2d6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d29c26-d342-4b77-af42-aa8252d2504b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd937a0f-816e-4c17-8034-f8449e4a1b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda31080-f392-42c4-a432-92adb4355ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12ab239-5865-402d-b984-d0c5deff6a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f8428f-58c1-48c0-a256-fb993e0ace71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59d9b8a-fa28-469c-b9cc-cd9bd839e52b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ba929d-15b9-4879-880e-b5d081c5ef1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484ca4db-d6e7-4e6d-b569-9c9e3084d04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc742846-c79d-4a3a-bd5e-b44d72791f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "acead45c-ac3e-4bfb-9b42-037daa90a653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcdbdd5-a754-4c88-b135-051fe3636724",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0b4e4d-5624-4521-aeaa-15d128311c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8706b042-c1f1-4f65-9541-e5c92d2d4ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116d94d9-453a-40ae-b347-14936ad75ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcbfa03-e81a-4482-86b2-83ddbcb887d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d287b10-8314-453b-b688-73c7a616e4a1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd515f4-2650-485c-8c64-ef429a3550fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2dfe778-5f99-44ae-ae89-91f1d0f2a822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ae2afb-62a7-4633-8a98-666ebaa3cc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce5c4cd-7727-48ab-8289-b58c44aa1096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60f77e7-95c4-4a6d-9570-8cd7a243b303",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f5178e-52c9-4a53-a3e7-f7ba1365434c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f658b37-02dc-4652-8ccb-55342b6e69f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e9e423-2dc8-41d1-9d84-321d97bf5d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f8286e6-0ce7-425e-8545-80c26d844751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715e1214-8a26-429d-b502-3fb575820c02",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2a16b6-3d4e-4d1f-bdd8-4081477d5ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae7abda-b4b2-4464-9130-48215a05ac44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462c95fd-02cb-4577-9c63-8e7cef4ad5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "792aeafa-f02b-46b8-b8fd-e68a1f118435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebe065f-d8e8-408e-a7f1-62bb4bbf278b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddbbd48-a412-4b59-9249-1411ef932e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536ee1a5-4e1f-4946-9803-541a1d0a290d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465a8df0-32a9-4c45-8ff8-7adaaddfa413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "028db738-6234-4b8a-80c4-1f7caefc6f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b636b4e8-22eb-483e-aadc-284ecdbff5b6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418a1b89-e6c5-413e-a65f-54ec82949396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec0b358-cb48-4053-9433-959e6b5ba5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810c2857-47c8-4420-aec5-693cb0bc5c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea28a810-ee7a-4ffb-8ec0-191f1ec8687f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7feefd9e-06e8-4372-b69e-da5430f6d91f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbec4be2-b2cc-4239-8bec-7eef63eebe6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58f7fe1-a7c6-4885-887e-610343fff082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c184512-e068-487f-a7c1-b9dac7ef7dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c19a7d4-5358-442d-898a-261ce0abf33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb305d2-a733-4bb4-b093-08ae46f95b6d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c7b1ae-1372-4cc4-aae2-008c69774ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b5e85d-eca5-41ed-aea3-404495532191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb416bf2-99a6-450b-a123-c1e7fcf6db5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c766c479-d4e4-47e2-8993-972053ecc3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780492e3-062b-4fc8-92bb-bb2dd0a8d865",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccb23e1-af64-4b38-93af-114985651111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac9bac0-51c6-4110-a163-14e96a7fca67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa19772-a6eb-4ec7-bf43-f770ffafbb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a5a686-fc46-4af7-9f97-84fbed45990b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a2bdad-3353-40ff-a943-f06275c02fdd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31995dbf-41ec-4680-a0c4-6ecd96e31abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb214fb-1614-4745-bc34-aadd5d56f8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5651e016-aead-4fa3-9e3a-197adf86b088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25877f50-4b84-4c0e-98ad-97405bb727bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e168ca8c-463d-4352-b0c9-818582075631",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249785b6-3418-4d32-bef4-a708809a9e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329829f6-a6d5-4b71-9482-7248e5c6bdc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21848c17-92ea-425f-8821-edc0090aba58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08ed0f18-38c4-4c2d-9b46-4ecbf0bbaa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92838ec7-446c-4cd9-a824-38ee315dd852",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e253c9-5209-4dbd-acf6-9096641affb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeaa5b04-b726-4730-8b5b-699a60e6b8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b412f73-7fa0-4376-a159-cd49498757c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb80f0b-6f4f-44f3-a6ac-919e30c5709c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c128e7c-791c-4f54-a9d1-8de8380bd31a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9659ceb2-c151-4188-abcf-b2ec0d895659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c0c8e2-738d-4d4d-a86a-16c2a1902509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cadb5d3-995d-4df8-9d85-58a2a033106f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e614be37-a6eb-46b2-9c24-36977fc5532f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a626a15c-6d97-4ac6-8ce4-50358cb616ae",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c73bf6-e481-406b-8286-42dee05a0a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0c48ef-dc02-4b31-83fc-cc0967860ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4433231-62ac-4a33-892d-971142c021fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d735242-3bf2-4fe2-9205-a8e4c45bca90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc75b9e-2be2-4df5-a4e4-ea7c50b3e712",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59b2a5d-bc55-4b1d-a730-cfd7b59577e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860aed39-5da5-4495-b964-8addc75dd14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b5681e-abe6-4e14-8505-1031e6494cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "104036de-8f58-4d10-8e36-8d4082e2cfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88c2244-cea5-4d06-a584-8e57302031b5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37b918c-5354-44cd-954a-2d9d2c23691e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea3d293-588b-4d74-bf8c-c3eaea01dc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4119613a-6beb-4c63-8258-bd9ea79e8b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8292d1d2-ca3c-49ee-80dd-942365e3351d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357fa1e5-c287-41c7-ba2c-0b70b5fa2736",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf6f271-fb90-465d-a777-d9598d937a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d3405f-7a22-49b6-8ae9-21b442da289f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37888c4c-1d1c-4b65-aa4a-6c87751dfc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff52a1a1-f88c-477c-93a7-a5d41635eb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628e5371-d85c-4534-bf47-4d0cb2097eb8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66dd92a-1839-4c96-a971-970bf4c26483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c565aa-6f6e-4b38-9c31-b9d2ddd99033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f560f900-66e9-4234-af05-8c0ee4e527e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbada4af-a429-4fe4-b7ae-a9f6eb5dde0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdac7ed8-b710-4d24-986b-307eb75313f8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed7d7b2-8300-4139-94dc-9956e7a0b2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dace11bf-127e-4b7e-9d07-9bc7cdbf74a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd4bb4e-0c4b-4bb0-b11f-a71957cd6578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54db2eb3-a870-4772-9b25-28d2d46c5b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01db0d58-6165-4c7a-90a6-42d0d7b81897",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c626f7c8-5028-4ac6-9fa5-e0135b7f5e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60110b5-9b7c-4722-a647-f02dcc8770f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f39add5-1441-457c-84cc-343e9df5881f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a1be01-7a78-4f92-95cd-bf7bcc134f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9034d3-da6e-485e-9b2d-cda3c8c52f6e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa80baa1-aa4c-4e00-8e00-01578c5e917f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730bae77-1267-4ad0-8bcc-4ffe54223811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96181997-7009-4bdc-bb5f-436c8d13f863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83091559-7b21-4047-ba92-d9a4991cde02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f9ab49-4d6c-4e68-a255-5d9d93f05eaf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee499b1-94af-4a10-b687-60a83ea47add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623d3368-f437-43d4-b4a8-4793f8175c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745228a0-7360-472e-ae64-8bd0f6fb35e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea45c87c-443b-4f9f-b8bd-aa19221b3b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b73c51-94d8-4a8b-a668-69e2e5c7d801",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc9c80a-555c-4fd6-a17c-1962951dacb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348c5547-ab7b-4e89-bdc0-db8e02edf21d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4f50ea-3172-43f9-b34a-ff7130cd1848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "711a7eee-df34-4d68-909e-b5bc508de4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1138b41e-c2f1-45d9-9708-53bf0ee49d0a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78a517e-3430-44df-9ee1-e2316b1a1896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af08c94-8e4f-4857-bc08-fc068a11d547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701769f3-2e82-4ca1-aae1-7237ee347e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "706b587b-324d-403f-9292-935eae0c0300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec03d0d-3148-4965-bbdc-07447d5264b7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece68364-45e9-4683-97a7-b113e932312e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b31022c-22c7-4ecf-bda6-f2d414fbe082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0ecb82-91c4-4527-875a-6a80cc1968f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4cba92-2476-4596-8928-296ab5336c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae43db3-ae75-4273-bec5-efdac524f7e2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51aa43e-ce2d-4ba7-a07e-bba96438aa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29cda809-448f-44d2-8644-0366eed900df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99722481-d87b-4913-9c6e-a0b1f43b3e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e2b3ac-e52f-41c6-8718-34f208dc2037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e7b873-5991-4200-ac17-d23368b1f3fa",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeeced81-d228-4a68-aff0-970b865dfec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7cef36-e882-4d54-bb3d-1bf3b637e2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19b39c3-0713-48c1-a13e-9eff6d2d1a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28b37110-4f2f-4f8f-a574-cc087a657417"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d978ed5-ab5c-4a62-b53b-4cd4eccafbfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abaa0877-12a2-46a1-8722-52911c6c6461",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b815f9a-a74b-4fe0-aee4-402f1d708703",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f4819276-a85e-4df7-a82e-1caa58db1545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba3b93f-081c-4830-ac1b-2eeeba5a718c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7346643c-efa0-4415-83f9-a4b24d07b182"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c1d5ebe-d099-4190-9b9a-c49ab22e6bc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49f0fa16-fc47-4c74-8585-1dc491baec0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ba6235d-363a-4822-8591-fa095e24c8b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2061c421-7d0b-4f22-a8cd-6b5f10ac95bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b3e3ee4-1d3e-43bf-af17-28d474e5d4de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bf9fe93c-7ae0-43bc-9c35-f3d3575381a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f05cf3c1-f00e-47df-b41a-c272a89e43eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5d561fd-4059-420c-b9bb-e8ae90ad0b7c"
            }
          }
        ]
      },
      {
        "id": "c131f50a-6df8-4640-ba1a-313926c8ff5c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3ed3e7af-e46d-47f1-8ad0-8bb9a7463f0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aae15b71-6d0e-4560-91d0-57facbea4f21",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ca02bd0b-fc1f-424e-965e-8c96eba12094",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57d9ff8-c4b2-4d5e-846c-024152bcef8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6865cead-4b88-4764-9455-4a25ff77e423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe49e97-1d00-4389-bf57-dc471b535fc9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da834f7-a4e3-4a0c-a951-6b7094f902bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b80d4a-eabc-49bd-af31-8255a4dd30fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae7b0ff-9c6e-4b29-a4b4-0ee16828e91a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c4d2e3-93e8-4507-9b40-727051409ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4e861d-4888-493f-b65f-43270c099454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a6e2e1-b0d5-491d-b5c0-70132eb41825",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070b6614-6835-4b2d-923d-3a0a71102ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba067c6-4ac9-4f65-9477-4a7f2fc80eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e415014-6ddf-41ad-9f17-6b6c64d04109",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2412ce6a-e7d7-4706-8a2c-d0ee3637d8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81899b6c-c4aa-4624-9d30-a42ad2db8131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c918ddb8-75bd-4cb0-b6f0-92b5c1a33618",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992461c0-eaf1-411d-b10c-2777036ae2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d453bec7-28c8-4047-88b4-dad2ceb0daa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a42e0e5-1d2b-4815-82ec-f1d225c64e3a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f857a4-577c-40e9-8a24-1fb15568c1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca36f40-8329-435f-a8d4-ff4ca8adeada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6381deee-8d14-4ed0-b396-c05ec4e7f12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06f8b3b-ae95-4c00-b101-e1342ed1148a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1828e2b3-58c2-4e15-a2ae-5fa8eb6bba96",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b10ad14-507c-433b-9f66-202761f01ce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22465c82-f858-48ae-ab4a-c5c9b242ac98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756a5b71-ac7e-4876-ab0b-7d48029a4f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b839a9-e05b-4dec-bd40-0e3580c6da7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44a810a-7113-40ce-9491-4bf61b34ffd3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff38ade7-5d88-49a1-97ce-719d0d1d5ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d21845-1af3-4ef6-a3c3-f7beb456320d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36cf96e-17c5-4ad1-9c2c-810b96443194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6222ee-524b-4678-b60b-a7b423a71a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267fde7e-fd19-4bf3-bc8c-da8b498c6d3a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13925768-20d1-4b59-a461-39a8672f65ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfbc56e0-d8a9-460e-9643-05c95068950d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b151b0c-c4b0-44a1-9ccf-b4365daeea4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d27bcd9-383a-4d66-962b-359494a5dc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864deb6f-95e6-4195-9e48-a01c846066fd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d24efd7-17b4-4251-81e5-3e54993feb1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070a555c-14a3-48fc-9266-761ae84dff05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b9a3c3-371b-4952-9d93-8111dad74851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ebcbcd-4e4f-4ff5-b934-1a14f7022e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d4405c-0ed3-49f3-b7c7-f422ad22ea0f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024bd3bc-fc79-4f2b-893c-ceb6a5055a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7bf91b-5747-4ee0-8e45-17d847da7a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014825fb-62cc-48d1-b991-99d3d7f17375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56e9800-6fca-42e1-8c1f-7bbcacc08d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c07d72-4d95-4469-a922-82b531b3c614",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfdecf4-bb50-4512-9994-a4d78bbd3618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77933dc2-2940-4297-b0df-804b7c2a3335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc89623f-1b81-4782-8977-2b52ddc0cf59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039453ca-1777-4f38-a5b5-f2b97fff4051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296456a6-f567-4723-9ab7-3723e8368696",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b77cae-79b1-41bd-8ae1-e5dd14ab7c97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cbc4587-03dd-4dbd-a0a2-40aeb31474eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae429ed3-5e87-4af5-aad1-a6164b0dce31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b67d21-5797-4998-bca9-72170b0c652a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16e0e35-ff11-4562-a99b-ddfaffb8306a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5377739c-5ff5-4bea-9b9a-214922de3bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d694cd-2a19-41bc-9086-6856eb2a20d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423e4e1c-43ee-4af3-beb5-93af8b8502d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3e7e77-3331-40dd-8928-342d6bee3998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800bf1a1-d528-4595-99a0-71e3b88e91f0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e6742a-91f7-4f27-9780-5adacdf94294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb8aa875-bbd2-46a5-9af6-555b65277ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1843b7-fda5-4b9a-b525-f10605d4ad79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d87e73-a9b7-4af5-a663-1216084a1c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deff1745-cec8-4349-ba80-ae36a059a889",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2809616f-277f-4750-bd1b-dcf9c3fd36e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbadc0d-9e2f-4775-8e06-df30df7389ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4056a400-8c0c-4105-9c88-f06f14cd1618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c918c5-e081-4830-8256-c001b8cb35ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf356f5-ad3f-44f6-9615-a575cc1833ed",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620a4f37-1584-46ee-b09a-ee619a67be07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd796c2-a530-4c30-895c-08d57deecc47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f43ee7a-149a-4867-b206-b59ba00ec663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc52a92-82f8-499a-897e-10531e0d238a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13337f20-74cd-48f7-a845-16b9cb1f28aa",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf976902-eb2d-4a86-ab04-a9708b3b27db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57e89765-eac8-4495-9b77-760381007218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccf7909-9307-4e56-a614-039f89226db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58077cd7-cb0d-4165-b554-3ade2a799356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3042ed-d5c6-4b91-9ff8-8f4095281d21",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ae6bf6-4346-4ed9-b27d-9cc24bd17471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d60985d-5a13-4813-8f17-7f14135f0841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead04b2d-bed0-42dc-870b-a103faafff34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc24e5c-72d3-4826-856c-584312c69693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56abf914-b809-4240-9dd5-21b2e520ada3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41995905-4482-4d0a-be0c-36632ed051e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39dd2a5e-9c48-4a12-b203-84c26a9d7c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e330e13-d8d9-48a7-ad13-30c7ee095465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1f9908-6498-4c3d-a39c-9feb1496883c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64edea3c-15ee-4a7e-ae81-43720c0e7b6d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d514c3be-2db2-424a-95c1-0d83d91a9d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423cc683-d470-4cee-af49-eb4b3c2f3c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fad910f-f07d-41a8-b35d-5010a72486f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd55c83c-7a0f-40d2-8290-603f410ee003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e28bbe4-eb48-45bb-adfd-bceb681a84f4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f125d418-bc1d-40d4-bb3c-71aec90c6019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a351dca2-530a-4e26-a329-4e52b166339d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d33909-fdb6-4804-960a-1dd5046be3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c3050a-0828-456f-815c-4d0f7d260955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acde75fe-734d-4b8a-b449-1071fc2ff2a5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1140f994-9e5e-4770-a4fd-37b3a04745f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa8bdd3c-7f19-4911-b9ef-4a77dd58243a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a5a52e-e72a-42d8-a46c-be37441f89ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1ffd41-c8dc-48fd-86dd-3aef23f727dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31aa8a3a-9ac9-4863-823d-07d339c180d0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7877d30-6914-42ac-b97e-4ba17a468bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c7c330-63bb-4fe2-bcd1-5e5b27d0c01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaa8b5c-2e64-45df-b7f2-9b0cb10c7fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1af51e7-d914-4ab4-b236-82d7bd758184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac948252-3f6d-4ab1-ba9f-e281b00c777d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb605b3-6394-4edf-8ec2-4e9752b202ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31fc85a7-0b94-4a29-87dc-b0013f62ee0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a3d16e-db65-4a99-91c1-3d2304fc3ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d3d74f-70ef-4ee6-b2e1-044edadfbee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3044e1e-db85-4471-b413-2d3b0ad2501b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4530b3fb-f25a-43c1-89f8-de2d0d204d44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0bb85d4-d28f-4a01-a42b-033eaa7bff6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878e37e4-6c7c-4602-ad8e-0bca3bec3975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be6804a-8e81-41fb-b031-1b347c8824f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68946e68-b8d2-43cc-b766-aeadcabee4c4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02908a43-03b9-485a-a266-40faf1ef2e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82a6250-4a27-4a69-af51-3c6620f9e547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684970e3-0785-4cfa-a0b1-27846f4a1779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79ec8ee-192c-488b-8c93-4b8b77b92d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca369e2-68c7-4320-9f06-589f31e0969a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336ef9bc-7395-4d0f-950c-06fdb8c6f30a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "181284a3-fd1b-4938-87dc-e0ef0c853094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b08c12-4a5e-483a-9689-d64c75baaa1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1252327b-f416-4d93-af46-703dcfafa9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc620a9-5aff-4798-9b33-34c455d2bf56",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dba4a40-162b-43fb-b2e2-c8ebe5e161d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3cc50b-b6ac-4e32-b725-16697f3a5fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad00d441-faea-4b4f-9360-c46175a69267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4984f5e-235c-421b-ad08-6663787a4094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b03d44-8835-4cc4-b9de-38aee2f0d63b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c7166f-e0a6-4be2-8f80-49f97bdf4d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f28f0dba-b886-46d7-bf9b-e1bf48035c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbae1df-a76c-4808-8ed9-d1df7f93b87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e29b811-cf5b-402e-85d7-b7668ee9b973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097575cd-8b85-49f5-9dbf-a1484c97ba39",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bd57e7-ab88-4e7c-adcb-d71de25d770a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9b0ffe-23e7-4b12-a804-0cd42fe21242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e162100-20ac-4dc0-bd6a-6b83eda5a7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cbfce72-8f67-4f3c-8295-8b71ec7bc741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51310040-b051-4c33-9ebc-2abea5caca53",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82436c57-3bad-4be4-86ac-a07264e7bb7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88c8253-d867-44c5-902c-82e786ebfe6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3178f395-cc9c-46b0-9d25-19166a2d5a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d593f97c-e3cf-40db-835c-e75e035e225b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4913505-492d-4e56-a550-d02448416489",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cd4b02-1112-421e-8544-81be39935063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d055b5f1-056e-4a0f-89e5-b051351054b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88167e79-4a1d-458e-949c-c6a397b5d3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4dbcbbc-37d8-4747-9459-35b43c43a4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a3e986-e324-43e8-a0b6-54435062fb61",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42004064-392f-4968-a0b2-2aaf40faa98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee34cf1-645f-493a-ab51-1948d17d3957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7132910-c6ad-43ed-b880-7b4e75de0860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0cbd99-86da-42ab-941b-92efd515af05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1696fe8-888d-45ea-b37e-02d097302d4c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2742deed-f57c-4c29-8d6c-ab0352f72337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4ca51a-f293-4c00-97a5-cd4c86190055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7340554e-9f11-490d-8ae2-987c0bdcb998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b052e085-40d3-470a-a7f6-2a056dd0c8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de995d1c-3460-433d-9eb8-b7f72fda7065",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93292cb-f754-49cd-861d-1609224668ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1093250f-2d23-420f-9478-c45c52b9017a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca460fb-cff2-4ebb-8128-31315dfdb899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06734211-c153-43cb-a76b-d4177718c919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f59721-7438-440d-97c1-a080b0e51817",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d48b8d-de1b-42af-b402-1f8d45f72bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2048b86-8c00-4b28-a60e-eaedd5806ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ba01f8-6efe-4cb3-8d33-4d31c72c92c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb887826-d710-4d72-9004-7f99a4e79869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb0dda3-000e-4af3-b7ca-b7b4296184e9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc298005-2538-4fb2-bc0a-ff1951db7e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199d041a-ba00-4e01-b0b9-c210cc793fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e7913b-14a1-46d6-b082-5f3f93a1b58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bda2fac-3ef7-444c-8f3c-10f4fc7526da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4158745d-be3d-41bf-98e5-b64b71ad3204",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfe3d0f-ab25-404a-9eae-7abf4688c9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf05f8f-2960-40d2-89e2-d00f29b0e56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fff7520-514b-45f1-bd01-325ab0d30cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49d5a01-2bab-4bae-bebf-912140f401ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1b24cc-7209-4baa-b4a8-6461399cc380",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dca103d-66fa-42ea-85e6-d8714cf1b207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd850e05-971f-4493-9bac-c59e49b4e2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "521a599d-082c-4ebc-a88e-776a5c4a91d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2725be-4098-4870-9608-132e3f0e2669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5d7900-d139-4383-a13c-625b15d5cca7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7c153a-3526-4574-bdfd-4486ef3522d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4b8a4c-1b4b-4ce8-a86f-4c10f7de03b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d4e1c8-a7e0-4549-88c0-ca0010dffaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b3e274-e35b-4ff4-9a42-92e89a938512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea3b95b-6192-4398-be46-74dbe5bbba3b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be1fcc0-b8c5-40a9-8ad6-baeb4a388108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0ea968-9d45-4fb1-bae1-94fb724e416d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4d343e-a760-49f4-96f3-7489c5c981f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4088664a-891c-4861-9afe-8545dc94bae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be23e97e-cccf-4e30-9fc5-b161410c7af8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62964038-f49d-4449-a893-257c1f7f697c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab87e56-db4d-4f7b-9510-89e5946dfcb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24245659-2747-4f87-a17c-257f655ca212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1e6ec1-bb13-4412-b065-65fa3e792003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bf13ff-1e11-4a55-a549-c2d9e70f6470",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73bcf2d-0693-4523-b960-54decc59994e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ba3bc9-35e7-4c91-ab91-7b64eb3f5eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da535bce-b173-4880-be7f-4b26228b98e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a48ac1-9384-4057-915d-180f12dc89ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8696886-12a4-4e6c-946d-967b46585a81",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030de5e8-0557-4e18-814e-490960a0ff90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6add01ec-597b-4e9a-916e-3a769b6f48fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a2ad5f-29bd-4c2e-9868-e2913e855748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b46525-95c1-4fa9-a34f-07ba351eaedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1c5ed1-6e8c-485b-960f-bd3d8a38937c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35b219a-a16e-481d-9a6a-3f1df67b6a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1439ce13-fa06-4086-a98f-102a157d92a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e32968-0ac0-4ec0-bb14-5c9988d26d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ee30f8-b127-4406-9d75-eeb5737a8759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ae1701-1d2e-4710-b6ae-6897168782a2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151c5787-e2aa-4c21-a070-5413259a6ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8373c706-986e-46e5-bb0a-6059533603c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626aba9b-6e87-438e-8dc0-393c3a43bf24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e585c4-d947-4965-8a8e-4a0bc971cb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37302fdd-3a33-4030-88e2-5b0d6ffa75e4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669eeb86-c59b-43d4-9dc9-d7b9788e7b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44fd7d8-b366-4e13-bcb1-a8745eb8a134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0b3cf1-896d-405e-815a-f9a5ccdb6525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a587670d-ca9a-4ecc-a4f0-879eae743681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8aa4245-d783-487e-82bf-aa67c1de64e2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8254163f-ef4a-4de6-a20d-99f8d9c183b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8f0dc6-7685-4d8a-aba9-059c6c54b562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d7e6e1-001a-4074-9852-f5c1fdbe6485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13961e19-ab67-4052-88ab-811023823d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac981ab-0cde-4859-b75b-38b75533b8fc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac9ee2b-239b-45a9-9c1c-4f16cafe6711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0368d30-4b20-42bc-b8b7-37a4e2fc7a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bf8143-5e34-4a2e-9945-5539f6f86039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e5d3a9-6ce5-46e5-ab12-86c435ddd748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4734c35-49b5-4f44-9574-47881d61158d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db9c37e-312e-4f1c-a6ca-bcd11261cb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d5a605-3a6c-42eb-9005-4d877e19b317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d806905-6edd-48c3-abe6-37070cfbc71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb44c227-61b2-4582-bcc3-5464b326e09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a481abe-1857-4a29-b96d-de64974ea313",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5abe35-f88b-4f02-966c-80cd3aecae26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe92295f-ee29-493a-8d88-ada0d7aa8d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f180ed0-f805-45e0-a8e3-47b3793a2cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d51abc-1bef-4c6c-8b44-43cf4b6fe86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051e9dfd-5895-4bd0-badf-f9fdbe9f40a6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59d33fb-cce2-4c24-bd5f-a8e835994abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0ff703-c987-4095-8517-e9941b16863e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a82562f-6d99-445f-b95d-236f85182a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900a65e7-6b53-4e00-9133-53555c9f93f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675aad6c-b23e-4b0f-9805-c3bbf897162e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c778944-c850-4731-86fe-e5c9e5ec49ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ad77e9-4c1c-4cd2-824b-d77af3a58cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b66d80-fe09-4ee6-ac41-43bfe591aefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c6cad4-7856-48db-a98f-eccd58eb1179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaeba5e-1009-478a-bf5d-39197d5ec793",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63b4492-ccc8-44aa-b494-6a3544744ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537e127e-6d54-4580-9610-09d325cf62eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6643d73e-6600-472e-86a8-4dac99258166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d85d35c-d4ba-4616-b584-9ea97661459a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69467d0d-9fc0-4a13-91aa-f8ecc8ed5dfb",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42faeed-205d-4e8e-86b7-85cb09d231a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6120853-ab51-4752-bfc6-5ae251c5a0b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba771c8-797d-4949-b5d6-68f809085ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc2f388-6b8f-4b2a-bf5d-765532154d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78228d23-18e8-4e67-a35e-88b2cf256a69",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57db549-5c1e-4cb0-9ad2-2658cc5643bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469c22de-3af8-473e-a5da-fbd5959e308f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fa9b13-cda8-4e7b-98e5-79b1f0e4747c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcce24d-3a63-48bb-916d-3fd8742856e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66962dc-833e-4e0e-85f2-61440b5de38c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845bc2ce-eb93-42c6-8099-d3be9bd34c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13820c69-f1be-4fc1-a480-9f727075baca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d406a654-98ab-4f4e-a751-96c208dc8c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4510cc65-4a9b-4802-9706-ce7ba323e33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1bc7e6-b64a-4c58-934e-001768de0939",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2b0906-2805-4457-9b84-c643e086b7e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afeebd73-11c5-4796-b138-92df39f0bb0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38c4d67-3776-448f-926d-d3653de5a7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3bb497-a7cd-4f32-ab27-20c810a1bffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed895c5c-949e-4d7d-868a-914c71fc0a9d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b365088-dbfc-4d2e-8274-0349d10c1244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9d6d99-913c-4727-9a3c-071c50cc0f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d8d1db-1cb5-47c4-bf63-eec7a9942965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636041ba-810b-406f-ab6b-39e455502711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde4563b-b020-42c7-9602-f0a4015445fb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddad70a-b55b-4bd5-85ee-76758d99f228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18db2974-efd2-4241-8867-c48f9b9b6a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e766438-bae4-4939-ab48-cda5fc9bb3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73490db1-a05e-4941-b885-242b47beed5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290c720e-83c1-41c8-b824-cdd9e66b4e01",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d21975c-18ba-4b34-99f3-a5b7bddaa44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c339ab44-8708-49c9-ba6b-45995c0e0cc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234a6cdd-813f-4c00-8629-fa58400f5897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e8af51-9f10-446d-bd4a-093c60bc50a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f857e981-59db-4e70-be11-c8abf7925790",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74680c0a-5267-4895-9882-da4aaa676f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "943cfaef-3e07-490d-aee1-7784668ed8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727441e9-dd37-47a3-8f0b-1277c827a4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ea7eb8-6f6b-4ade-a8f2-8db4ded6cbae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e32a5b-5c48-4154-93d8-3eb43c3f1a62",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19bd0d4-94eb-4d3b-96e7-761c8b0d2749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b7c5432-922e-4a33-873f-9e1bda236965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e50ec1a-a960-478e-9e11-041e326b9265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b073e9-1e98-4b77-b6d1-2cf49300f376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70575dc-f4b8-4f1c-8288-f0f26a2ce759",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de915c31-5b56-4014-89eb-08f7e8239263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69510493-0e26-48f9-865f-1580486fb025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8569c3a7-6f6a-43e8-bd82-b913efdaca1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116725be-eba7-43e2-b0b0-5bc4b69bf703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b12a13c-7804-4984-86e6-6c90f1ea6380",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6302e594-d513-43fc-a91d-c52ded9b3b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d963cfdb-3166-4d54-9c70-c1733d759b57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee6b4c3-eb21-451a-bc98-3cb2162ee150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a20541c-42a5-4794-b717-f01adf581bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2202c1ab-5b8d-4ee3-984e-fe54426cca41",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bf5dc9-4815-40b4-ab9a-924c0557dbbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c2f997e-aad7-43f7-9905-2f81efca9c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c294e7b-c57f-439b-80b1-0c771975cfd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb43c28-d4d8-4c15-86d6-1b8411599d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0888119c-8d5a-4c05-b2d2-d78e4d2a32d9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f860f8ea-0a07-4519-9af9-2367a533f308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df299032-8f91-4c17-aca8-3b3d4d246c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c0c848-f5d5-428b-9c21-3fef1a5dd9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052a4212-a7ce-4f16-8c59-c9db530f6713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413b83dd-29b6-4cea-9a21-250796509cb3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21594349-9385-461e-8cff-2bfa1b2550c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac81705a-78b6-4cfa-a7cc-a7a8b5d3f5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb7875c-4f0d-4648-ac40-11c79ac52fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85e104b-0c8f-433d-88f5-bd9c1d51451d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ec06d3-a60d-48fd-8d3c-4cb3e52b05d7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db58687-e928-4e32-8440-de4890ed4e29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b3e517c-9c27-4fbc-a224-199338470ee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43adcf8b-91ab-4f71-a012-d3ce537fbbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb289b37-ec41-40b1-b32e-cd5439167b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75fd1b9-b9ca-490b-bdb9-6b92cac92062",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab8e031-517e-43bf-b6b6-f3803415e9a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa670256-df00-40a5-89f5-710852ce8b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a035b30-868a-41ec-86f8-d2f878ed6dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd39445-578d-4b2f-8116-a116e74a4d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92ab5fa-f3fc-418e-bc79-ae683d8c0a64",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae4913f-73d5-40da-8e19-d983482ccbb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52b8225d-ed45-4f46-9498-ce744d306ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3a9e6e-6a17-4921-bcc5-5e18288d4b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a295ea-e7b1-4167-9ed3-f8250cb36e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd43bf2-408a-4823-9522-145ee4563e34",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3af8605-27f4-40ea-bf29-0f3f9a610d40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c0e29de-c119-44f2-9cfd-d02d31c7329c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04a2076-188b-4ad6-926b-846da514964f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce3778f-80a7-4de0-9aa2-b44241c457db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c613ade-e081-46e5-b473-5b19b8ac0b98",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c33f6c6-f8ec-49fb-8b86-248e6e1024b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96b8adf7-4466-4c03-9ca0-4a5109958d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3ab496-e6ef-40e0-8e8e-31fd508a0a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5be0376-f993-46f1-8413-0c8065d2c5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db31872c-bba7-47bb-a433-5287dd0fcea1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b22903-386e-429a-a69c-4aa0ed12e1a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad0ed230-1fe7-4d33-9ed8-d5ebc778b948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162c324e-41e9-4f94-bb67-1293d2402800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c953f4-066a-4b83-aac4-b0afe41b37f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139fe920-bd71-4c5d-a590-657f5b7d300b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5a5f70-5feb-4628-93ab-1ee35548d819",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c907a9d-d3a2-4584-8753-6b17b965997b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9700093b-8d29-4a2d-9f06-2fe8d65552cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4205f0f-a756-4673-85e5-5033b1c3c21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ee37ed-4982-400a-99ac-1cd2d640263b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a488bb-6652-4e89-b939-a267549e3a06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26e210f3-309e-4f49-85c0-dbd18243663a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3d1a47-3afb-4009-994a-53322f92bfb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c331534-d0ba-42a9-956e-c375ab1c48aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32305755-2cae-497d-9f6a-e776406e8d0b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92784501-378c-444a-bd56-9d00d718b516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8863341-c360-47f3-be30-be4ce3e86c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9528e67a-8bb6-4046-853a-df3632de153b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7726e4-99fe-47be-9055-b8e5d7abfe9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9707ec-3dea-4f9f-8620-3ae23a962260",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3825b5-3332-42ae-8be0-e334419436e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd84d0f4-384f-47d8-a16c-6eb3e7e57f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be41418f-b68d-4af8-ac99-9123254e9f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e38edde-4d95-4d12-82ed-d997b6bd6e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12e85b2-6411-422a-995c-5a5f54dfef5e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab68f9b9-e1da-4042-83c2-2b7679c339ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "622e6e9b-9869-440b-8ce2-25850ad879b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de59056c-958f-450f-97cd-4c24c18a137b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141b6c79-2efb-4300-bc8d-00e789b8cea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4124dd-8169-4e51-b30e-116737f31bcc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eddcb9a-10db-4eec-a23a-45fa2604bb91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2129175-e25e-4948-ad02-9034e71bfa74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad28d79-f292-49e6-81a1-010145df588e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4209a570-40fb-4a54-be09-63e10dc825b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a50419-3a6c-4dcc-8076-e7a423ea0d5e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8f3c99-37b4-4fc3-b010-50252e5d623e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab698b2-55f1-4113-a1ea-0b72f6f947bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d202181-d82a-45dc-a617-a06f56d08299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4162da3-304d-4e64-9340-c8e73ed96b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce11d77-6dd6-47af-a8de-1b99a30daf8d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6ceffb-af4d-49bb-b46f-d30e1cad41de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "032e1a4c-bf82-42bf-82c9-c2093105764e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da06955-738b-4394-b7f5-0caa266d1d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8c48bd-ee40-4aa4-8869-3224af30dd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f228b8c2-109f-425c-a291-e6d3a56e8995",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd2156f-eda0-4878-a4b1-e4ee01080ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "376c90bd-03b3-4427-a57d-9038ac0fd62c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e405bf6-f075-4078-b8e7-e106b36e674f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba0d28c6-a1a8-4db2-91b2-77cbd83dc8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2f2e5b-03b9-42f8-8b29-9589c0073cd9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abb0985-4fcd-44cb-a6ad-ac3e85e1e50f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef8dbdbb-83cf-4d5a-82db-56c88002e0c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3c9091-f438-42a8-96b8-b081de471a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5b5fc6-ec38-43c9-9142-a34dd946e9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e73cd5b-87a9-4fee-a908-bf8ad0856b83",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c253cb7-7616-4448-bd5d-01dbbca1f7d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6d79b9a-dbf2-4067-b330-41a19ca5446a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468c7f7f-892d-4c73-a1d7-8499e8ade526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe96b031-5b18-48ed-b014-09961858c60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7844eb78-a1a9-42a3-b312-ebc40a5d2bc1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fc24ed-7ca5-40c3-a7a1-7707afe518dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62b9343b-31ed-48d4-a462-c9001d1bf837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a613f2ca-82a0-44a1-95d9-485a822ab4bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d52013-7dc5-49e4-85d7-98b7c46482cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae649914-4992-496e-9dfd-2282a9441d7c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768ca7bb-c178-4eb6-950e-ea1b4db224b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a60a0459-9421-4cb0-ba37-16756cbeb0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed66b643-d26d-48b0-9441-8735b5a6069b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c68e97d-4954-4959-ad87-d90e5e3869f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd27f12-f1c5-418e-827c-711c5fe7e4dc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2273d8-9598-4284-83b8-cf7bd719cc7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59bff105-147a-4ffa-9a62-2b2f72a22ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ce124c-b5e3-4384-b12e-b2f31e69fa67",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4520dfd0-1d91-4c15-8545-74b71f4ddffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75a5dcc-0e2b-4e76-81e8-e7c08ae12715",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96ed353-ae82-4bec-89ef-adaa9acca6d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf67a13-8237-4424-9aab-d009e6708a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6a697c-d989-4647-bda6-5f78f211914f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12a37fd2-b389-401c-ace1-43eabe10091b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7523574c-845d-4533-a01f-8fbe06df5aa3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed1501e-0add-4f93-b559-d2a298e0fb92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c050276-8f7a-44aa-9216-280de9fae78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc75de1-90db-455d-a901-3f1b98870a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0239df2-ff3d-4755-9a09-e65c87172272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de69af40-8e3d-4272-bb05-4b9283b8c159",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0fce65-e260-44c4-a18c-f9728b83a1ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91c4d438-4e85-4b5b-a68a-563b78152514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "203411d9-0dc8-4755-b195-0a2c3ea159d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40760254-db10-4f02-923c-9509dee923ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeca9f9e-49fe-4876-ba29-1b29df504c11",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "410e3599-53d1-44f5-957c-c2f9cf83a455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f764edad-0646-4f3b-8a10-b374505b76fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc66407-9012-447a-8f7b-bcb819923053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f21c115-8193-4795-a0df-8e64e9474722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb8851d-4d88-4e7f-a2b5-52a9c8f665df",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67fa245-f7ab-4892-9782-18196cc6466a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4459f95-6246-4a71-9869-a929825e657d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c7873d-770f-4f6e-8e9c-c316fb6d628d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93feb423-fe6a-415f-89d0-81166c3c0b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48797f9-7871-448c-8a91-5e5aa5af7fa1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dedf9c-cba5-49a1-b64f-b58390bfec28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf636143-ba1f-45e2-a4fd-5fe5f668a2eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93830578-8f41-41e5-8204-dff2a0d9266a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cfa271-a51e-4842-9a7b-20794f687f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2520cb1-0a9c-4870-9116-fe06245835ba",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4913cf9a-98a4-413a-bc18-49bae3069dde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c96d3d07-19f4-491d-a6eb-549b56aacc16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64a1511-abbb-4f1e-a2dd-82e8401f1d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd54855-aaf1-49c2-ae90-933f754cf0a6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a37ef988-05e1-48e1-aa43-05fe99e45ae6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f38c7442-3d31-4360-b36b-13ba480d0916"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3247f61-87da-427a-96d1-5a82b3fc1431",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e835dd2-9fba-4009-a6bc-7c1d4f0d5ec3"
                    }
                  }
                ]
              },
              {
                "id": "5a704bb6-d6a8-407f-a30d-296a035f2294",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6108b05-5168-4852-a737-e657cc855c1b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a2d1fe-c751-4cf3-8ac3-d359284012a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "500feacd-566a-4887-a493-f4a88d1b90dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64afe726-03ed-4024-9fe5-8c1e1635b407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40d952e3-3089-4bee-926f-5fccf1542f37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3457626c-74af-4636-987d-80be896181e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09371947-ea61-4d00-90c6-da95d4668845"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44a3128b-5a72-4ab0-a63e-06c1aff96d69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d91d7fde-0ad8-4b63-a6c6-7e50599a289c"
                    }
                  }
                ]
              },
              {
                "id": "93740f47-1bfa-477e-a6c6-5cec0bb9b463",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "16321277-b4a9-438c-a126-c2c68174fbed",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b7ba7a-4a0f-4272-a1e7-0fb81f09cf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e75dba69-460a-4c35-a1da-e916999222ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977fb680-0d69-4abe-aa19-7869f0ff9035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fd3d0c-96e1-4ea5-a861-5ab7a0251285"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fb6ba84b-a70d-46a8-923d-d0854f5d55da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "42f18fc9-2cf0-4b74-8c45-b3f0c32e609e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "847e07cf-b7b0-4d64-b5b8-3289775adb96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "83799f7d-be73-465e-bc3f-54de9188a3db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "935d41b4-bad4-47f4-83a1-c35c7af61d4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e73786df-836d-4d06-8acd-989f58536910"
                    }
                  }
                ]
              },
              {
                "id": "d542d3ac-70f8-43c0-8ff2-c40bb7f9325a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f19250d-ec51-41ea-8a13-638de08974ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d5636949-2e08-4fd5-9327-c4bc4c693285"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fd0031f-037b-45dd-ae74-b76e12b11034",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89a38205-d10d-4b5e-9b98-ac7e8b13208e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f7eed3f-47b7-4200-a430-cb6cdd944433",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "62b12fe0-1cfa-4f0a-9f06-80ecaadab3b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af80f42d-e53a-4c70-9703-08f3c1339386",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7e924c3-8fed-4829-97af-ba9247bc3378"
            }
          }
        ]
      },
      {
        "id": "31823e0b-c03b-4c35-894e-9606331d80f0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f9aa22e3-5b59-4bfd-9983-a7ffe396a214",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a81b221-df18-4aa9-bc3f-35551f17b4a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65e26503-775d-4122-9ac6-de3dfa96a4e7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29147fa-7bab-406c-928c-7c27d36ee625",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "17b2be2c-99b9-4b2d-b6fd-3adbd2e23edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d00ad12-3ae1-47d6-a9a3-588fba65bf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe047298-37b3-4b0d-9767-596dbf227778"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "135e8531-5b33-4eb3-a87a-32b9158e36c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90c05ab2-4958-4844-a37a-e15e540f88cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14541eaa-30d2-4b1d-a86a-5b415260eec6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f816e40-f6b7-45b4-a4b0-704e302e5b6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "148698aa-695b-48cb-afaf-9c7740fe5969",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "86b25e83-7ca5-4681-bc26-932bb67ffddf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea8997cc-bb6d-436c-8e91-51eef6a81241",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bd821f8-6fbf-47ea-993d-3fbb935b1610"
            }
          }
        ]
      },
      {
        "id": "def50815-d7f5-4ec8-83ba-03ae3a46f0db",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "aa666252-4994-4b25-9f32-69a0d365e8ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddbc73df-4487-46a5-a275-c4ffd7110e54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "605900ce-f2f3-4d06-8f75-d3f11ebbf651",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2073042e-e029-483c-8fd2-c545f6e50e0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d929db1a-855d-4b67-9729-624a0f6fa168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4ab131-73d4-4286-8dc9-f44403423701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a8b1240-477a-4c5c-94ae-bcbdef2ba243"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "565fad2c-cc50-4781-ab4c-6f7cddc4391e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29bbb0b8-5ab9-41e4-96c6-9c5d4fd3cab4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5aa0a69c-7ec9-424d-930d-b540dbaf8799",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cb4664f-7351-4e95-ba36-42a533d960eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ae67864-9b11-4902-98b8-ab8855528a97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2bbcdfc9-315b-44e5-b30d-9f6048c7f637"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fe41155-b5e3-4ef7-9291-32651fd1bdff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f2bbb15-dce5-4af4-85f6-94356eb33152"
            }
          }
        ]
      },
      {
        "id": "7e990483-67c8-4333-a578-245fb9189159",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b4f246f4-8c70-484f-8af0-e2dd18f3b113",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbc3d82d-ae3c-431c-b8e9-e0d2cd8a398d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43c39209-9939-44fa-bda2-3fe2c9b4ff17",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08592f2-af87-4c2c-94b8-22e1e9f825dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08a4c097-1e06-4287-b4f1-e98eeff01ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54896d30-0c67-44c6-bd20-ca6f1c7b8830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05eb5294-db6a-46f1-bb8e-1e207a09fd9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b6921a3-79df-4397-85ce-05137e746e87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94a062e2-d999-4826-8b85-0eece3074dc3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bde7d26-6796-4195-8861-a9b3163b5726",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2a40e72-757f-4570-9187-bea6daa95b62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a0ea525-2364-4767-95b1-4dce823fb035",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "600f2e48-8e5f-48f6-bbe1-02bbd9eb331e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e827e781-d215-49aa-ae9a-d42ed7998fba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acc71eb7-667a-4135-83ed-309d6cfae03d"
            }
          }
        ]
      },
      {
        "id": "c8e1df70-4b38-4f66-872a-86c6a4d8e745",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "526bd3cd-771f-4d08-b7a9-4866fd29841e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1ff520a-4a9a-483f-9120-af579c2fa633",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "77486627-d64c-486c-bec1-0adc2203251c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7e8db79-b264-4686-8dcb-9190e1b0793b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c23f5c2a-2a3c-406b-9bd7-5a5a910d44d2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 34.65140845070422,
      "responseMin": 25,
      "responseMax": 263,
      "responseSd": 22.702026452687438,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697416473031,
      "completed": 1697416494215
    },
    "executions": [
      {
        "id": "a530e453-82d7-4ea9-ae1f-155377aa5e24",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f414106f-f2d8-4b04-b93a-2efb80909f0d",
          "httpRequestId": "4c5b9767-1300-41ba-b09a-b35c4ff94fe0"
        },
        "item": {
          "id": "a530e453-82d7-4ea9-ae1f-155377aa5e24",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "604d24df-72c4-432f-b0fe-a5207e679b36",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 0
        }
      },
      {
        "id": "7f9f01ba-7807-4685-b867-911c068a12f0",
        "cursor": {
          "ref": "5dd256d9-ae5f-4a8b-99e0-ebd368c49737",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e650256f-9e94-40ff-8457-f5c33da3fc47"
        },
        "item": {
          "id": "7f9f01ba-7807-4685-b867-911c068a12f0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "722a1a45-29d9-4132-9218-80974177bb18",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 0
        }
      },
      {
        "id": "7f7e6c9b-232a-4879-84a2-04f593df8933",
        "cursor": {
          "ref": "5f1aa455-8953-49cf-958a-318e8794d187",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e19e0596-3e5b-4497-b49a-5ecc24d3591b"
        },
        "item": {
          "id": "7f7e6c9b-232a-4879-84a2-04f593df8933",
          "name": "did_json"
        },
        "response": {
          "id": "8788ae52-b3c1-4f62-aadf-53d9f8d3d03a",
          "status": "OK",
          "code": 200,
          "responseTime": 130,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953f9e3d-cf96-4141-9499-45aebf3dde37",
        "cursor": {
          "ref": "11dc6e27-6ae4-4eef-9f78-be85dd579cc4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4158d21c-ffb4-46f2-ae72-4dfe4558fa26"
        },
        "item": {
          "id": "953f9e3d-cf96-4141-9499-45aebf3dde37",
          "name": "did:invalid"
        },
        "response": {
          "id": "ffe8e919-a932-44b2-9032-fdcc6b6425e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953f9e3d-cf96-4141-9499-45aebf3dde37",
        "cursor": {
          "ref": "11dc6e27-6ae4-4eef-9f78-be85dd579cc4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4158d21c-ffb4-46f2-ae72-4dfe4558fa26"
        },
        "item": {
          "id": "953f9e3d-cf96-4141-9499-45aebf3dde37",
          "name": "did:invalid"
        },
        "response": {
          "id": "ffe8e919-a932-44b2-9032-fdcc6b6425e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b14a06-ff35-4f00-b41f-04ddd6b746a0",
        "cursor": {
          "ref": "76c142dc-280d-46f7-ae36-4eef2bfe2fcb",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "54dcd817-131d-4fb3-b163-ef8a32d6f643"
        },
        "item": {
          "id": "25b14a06-ff35-4f00-b41f-04ddd6b746a0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "841e36bf-3ce8-4eaf-b2c0-cd362ec1a76d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 135,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c04a6a-f89f-40ca-8f9e-f61c386fefb4",
        "cursor": {
          "ref": "77eec0e8-5118-4c3e-9ec3-72ce702334ec",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "518357e8-5699-4f10-94b7-5015a4b1225f"
        },
        "item": {
          "id": "27c04a6a-f89f-40ca-8f9e-f61c386fefb4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7139a103-5a2b-4eb1-938a-d11557f4dd24",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9528c9fa-2386-4218-9aa7-fc0d66bae282",
        "cursor": {
          "ref": "5b8f2770-6057-47d8-b04d-d7c058a8e0a5",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "680199bb-828b-416c-b815-352e1eace77f"
        },
        "item": {
          "id": "9528c9fa-2386-4218-9aa7-fc0d66bae282",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "291996c8-5432-419b-8397-74fdc3fa0c7b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdc08fa-f62e-4ed8-a915-57d294263b6b",
        "cursor": {
          "ref": "4af541fb-9ffa-4ab8-a769-d20b354e32f1",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "30f33ffe-618a-463c-972e-8f7ccbeb124f"
        },
        "item": {
          "id": "fbdc08fa-f62e-4ed8-a915-57d294263b6b",
          "name": "identifiers"
        },
        "response": {
          "id": "8896bb86-5cb5-4337-90c0-2a69ed4982e7",
          "status": "OK",
          "code": 200,
          "responseTime": 183,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ed8c19-e258-4e5f-bc1b-46c3f76e505d",
        "cursor": {
          "ref": "f2a8522d-debb-4e99-9680-aa06fe7a4c20",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5020abdf-4c5b-4d68-93a6-37f83d5a78c7"
        },
        "item": {
          "id": "40ed8c19-e258-4e5f-bc1b-46c3f76e505d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9c5dac32-77cd-4315-96ae-42712c925f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68710eb-60de-47bb-b2ff-edc21fd0e0dc",
        "cursor": {
          "ref": "76a9db52-37c9-4512-9acf-b2c6c311eeef",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ddcc9664-2763-4fd9-93f0-a7e85377a4e4"
        },
        "item": {
          "id": "a68710eb-60de-47bb-b2ff-edc21fd0e0dc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e485ffd4-eca1-4c1b-addb-4bff22324aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c328883e-0124-4802-ab22-c8145ff6638a",
        "cursor": {
          "ref": "8dee78a4-697a-422e-a1c3-cb4c85332662",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6544ffe8-531b-411e-ad89-db5042c10af6"
        },
        "item": {
          "id": "c328883e-0124-4802-ab22-c8145ff6638a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "885c9a29-c342-4cbc-8f1c-4c90bb75d99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f20687-869e-43fe-9890-6845ed959948",
        "cursor": {
          "ref": "f1acc665-7f78-4607-93d0-7bdee69659fd",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a7b48bc8-9e76-4d15-b01a-6d35e61557e9"
        },
        "item": {
          "id": "92f20687-869e-43fe-9890-6845ed959948",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6b8a8f41-a9fd-42df-ad7b-3bd2eed0215f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57870b9-8923-4da0-857e-724da302ac96",
        "cursor": {
          "ref": "717fb9cb-940f-4889-9985-c74e745715c8",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "70c0ad64-2ce4-4d2e-a2f7-929a0f32396c"
        },
        "item": {
          "id": "a57870b9-8923-4da0-857e-724da302ac96",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d2888fce-ace2-4d41-b757-68cf801f8fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f9501a-ffb2-4897-b31c-c348627247f8",
        "cursor": {
          "ref": "4107da69-35e2-4784-abe2-14af92a08b7c",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1bc6b964-a433-422c-a3cf-0aa813a7f2fa"
        },
        "item": {
          "id": "26f9501a-ffb2-4897-b31c-c348627247f8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8b093d7f-f7c6-4863-8511-244fd52185db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19613b5d-eb6f-4e51-8490-50a85e0bf71a",
        "cursor": {
          "ref": "7b7e2577-a641-4097-9af2-0604b5c518b6",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c13bd509-e4b8-4c06-8253-e479e697cccf"
        },
        "item": {
          "id": "19613b5d-eb6f-4e51-8490-50a85e0bf71a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7b77ddcd-4bc0-4864-b4c2-11ed6d8a6d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e08058-6456-415b-a46c-dc5aa4277f18",
        "cursor": {
          "ref": "6da6045b-3417-4473-9c6f-f7ec327173e3",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d69b46cb-dd30-44a0-ac7b-9fb09991248a"
        },
        "item": {
          "id": "30e08058-6456-415b-a46c-dc5aa4277f18",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c08c3d2d-2fd4-45a8-80ab-71c67249175e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d054419-20da-409e-8e7a-6f5907e55803",
        "cursor": {
          "ref": "60098d60-09b7-4962-ac68-3598192c8de8",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3f6459ed-b831-47b3-8f51-257a1b819fa9"
        },
        "item": {
          "id": "9d054419-20da-409e-8e7a-6f5907e55803",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2ec34e18-0fe3-4fcd-9d7c-08a3117be377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367e9d52-6dda-4639-b1a7-ed5d8bff085b",
        "cursor": {
          "ref": "4a7da642-66c8-43a2-a7c7-8c3cbe2940c0",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "266876fb-bcc4-41f5-a237-e1ec3e5b51f6"
        },
        "item": {
          "id": "367e9d52-6dda-4639-b1a7-ed5d8bff085b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e564cf15-83f2-45e1-a53f-67f7cfedffbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1000d0bc-2f1f-457f-b9e0-d0a796e7d22d",
        "cursor": {
          "ref": "29cd5993-4862-4856-9551-52f5f1b20d3b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "929cff54-5ad4-47a8-8c88-9d901fdb85c4"
        },
        "item": {
          "id": "1000d0bc-2f1f-457f-b9e0-d0a796e7d22d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e68468a0-2a1c-4d2f-9735-debe4e031bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9f2c4b-e02e-4731-a7ed-766908a5564a",
        "cursor": {
          "ref": "9414da10-1a3f-4fef-b63e-53ae10e47a76",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6f14d9d9-cdb2-48fd-a327-314be0f1448f"
        },
        "item": {
          "id": "9f9f2c4b-e02e-4731-a7ed-766908a5564a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "35eff8c6-98b5-4ed0-aecc-803e573fbc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de573f23-1faf-4aac-8d15-570977415a1a",
        "cursor": {
          "ref": "c3ca4898-d285-4dc1-8533-937a8a15e9d4",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "890f70df-82d7-4c65-9e53-4b80d13e0d36"
        },
        "item": {
          "id": "de573f23-1faf-4aac-8d15-570977415a1a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0fa72f43-f466-4a97-9493-ceea7790a7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69250a03-1cb3-483f-b5bb-85d57a3bf3be",
        "cursor": {
          "ref": "6bfcb180-c63a-454c-a7e3-39c614511522",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5984560d-777f-4ff9-af29-65d421532d08"
        },
        "item": {
          "id": "69250a03-1cb3-483f-b5bb-85d57a3bf3be",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "aa8e6c1f-6aaf-4648-9ef5-6420989277fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99929dee-549a-472c-aa49-fcffac18b539",
        "cursor": {
          "ref": "456413d5-7d11-49a4-bcaf-6ca76882f977",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "99966523-6b99-40ce-8d5f-8954b7957502"
        },
        "item": {
          "id": "99929dee-549a-472c-aa49-fcffac18b539",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "29bcc4d0-0929-48a1-9cb3-69c9a0afb7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8a99e8-cfe4-47c6-a12e-351ac5b0b596",
        "cursor": {
          "ref": "6b53a78d-e50d-4d2b-85e0-135c720714a2",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9cd26ee7-b69f-40a5-a8b2-2f72bfe1f540"
        },
        "item": {
          "id": "3e8a99e8-cfe4-47c6-a12e-351ac5b0b596",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e61f7223-caf5-42da-af9f-e2a810b2934e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405192d2-f690-4219-bf6d-5a37408d9d2e",
        "cursor": {
          "ref": "f50e2a22-5f75-4915-99b3-b5da56b560a4",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "92331d49-2f21-4b97-a8d8-a6d3106a7199"
        },
        "item": {
          "id": "405192d2-f690-4219-bf6d-5a37408d9d2e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "28faf673-af02-4d01-8b1f-984f63d4ec3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c0d28c-1506-4438-9878-38dd44a8a9dc",
        "cursor": {
          "ref": "f0007871-0429-45b6-8093-03bca2f32183",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "77b6c8ff-07c3-41c5-895d-eb14c020d77d"
        },
        "item": {
          "id": "a0c0d28c-1506-4438-9878-38dd44a8a9dc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0bc615e0-d49b-4786-8f6c-2ec53951081b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad9d8a9-2c6a-4619-a28d-00cbb0b16c9d",
        "cursor": {
          "ref": "1590a2ee-1a57-4ab6-b8a1-0d8ceab1a933",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d404fd48-fb96-4b47-88a2-e747dcb4da6f"
        },
        "item": {
          "id": "fad9d8a9-2c6a-4619-a28d-00cbb0b16c9d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "40e40257-586c-4039-b955-db72bd78cbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c18d80-23e1-4396-95ff-8385fac96ef1",
        "cursor": {
          "ref": "caa2a9f6-7408-4e2b-9a25-9904fad3e013",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "62476496-1aae-4390-a0cb-69eba4be670d"
        },
        "item": {
          "id": "46c18d80-23e1-4396-95ff-8385fac96ef1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6168f3ac-7c2c-4fd1-b273-45008f5de60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5acae3-921a-412a-9b2f-3c1241f5db48",
        "cursor": {
          "ref": "7c145999-a442-4b4e-9139-21ef1b662ec5",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e616f0f4-03f1-4638-b689-498f48508087"
        },
        "item": {
          "id": "df5acae3-921a-412a-9b2f-3c1241f5db48",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f67b2483-5f72-4e3a-b1c4-79d3d303a2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4530e2d1-9b81-4363-be04-f4960fd8b83a",
        "cursor": {
          "ref": "73dbd7b6-0ab1-434a-a317-7c78ed85547c",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3d5a13d9-914c-47bc-b024-e69e7ab4b85e"
        },
        "item": {
          "id": "4530e2d1-9b81-4363-be04-f4960fd8b83a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e7e62159-a523-40e8-82a1-a34f79bcbb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0ddc1f-d534-42c6-b0f1-1fdc81a8bb22",
        "cursor": {
          "ref": "10226adf-7646-4408-b710-deb76fbd2d36",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f1fee309-5518-4a96-93ec-580144079740"
        },
        "item": {
          "id": "af0ddc1f-d534-42c6-b0f1-1fdc81a8bb22",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2df081ad-50ad-446c-a6ef-d302d4196fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd371e0-2246-4e1e-92e0-54c9b7ebb495",
        "cursor": {
          "ref": "96da89c0-d24c-4dae-9da9-2cb2e9080041",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d62d3639-10bd-454c-82b8-b1b8d9115ef5"
        },
        "item": {
          "id": "6fd371e0-2246-4e1e-92e0-54c9b7ebb495",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6a5c210c-6078-4f12-b346-538d9a208637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db1d700-65cb-4f16-8869-94d87c496dc4",
        "cursor": {
          "ref": "93c6d610-9fb7-411f-b151-8b5ad6e1b77b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "80540fdc-6b75-4c40-9c36-ebce67f4bb32"
        },
        "item": {
          "id": "5db1d700-65cb-4f16-8869-94d87c496dc4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f8fb5d2d-cc43-4d44-a4f1-ba11051ff50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ccba5e-7768-496e-b308-1cebe5973c04",
        "cursor": {
          "ref": "1b42fc4e-8899-461d-8e42-6a5563203558",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "60df14ec-6eb3-4f94-814c-4d944d5384dd"
        },
        "item": {
          "id": "f2ccba5e-7768-496e-b308-1cebe5973c04",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0ac0c5e7-6184-45bc-84c4-9ae362363825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e7afd6-b729-4157-8a66-5f9d5db2de7e",
        "cursor": {
          "ref": "fd071d68-6dd8-42d3-b032-46a84f8bb6b1",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "368c140b-c074-4711-b442-56ef33d0b478"
        },
        "item": {
          "id": "f2e7afd6-b729-4157-8a66-5f9d5db2de7e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "df253949-6177-4128-a8a0-3b1529099566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511ffec6-6c59-4947-905d-6444e49b3004",
        "cursor": {
          "ref": "e1d482f5-0f76-4d06-b3c4-6c1061a07834",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "70ee9f2a-db99-47cd-8371-644634f23980"
        },
        "item": {
          "id": "511ffec6-6c59-4947-905d-6444e49b3004",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8d568e35-89c6-48b9-af26-31c05aaf367a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4027e808-17b4-4b8f-9e62-bd5a9bf33e31",
        "cursor": {
          "ref": "a1eca221-c4cc-4b6f-90bd-48ac10a8e1e6",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b83c912e-a01f-4c94-ac5c-85026af3e7f2"
        },
        "item": {
          "id": "4027e808-17b4-4b8f-9e62-bd5a9bf33e31",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5a860f98-d75a-4a66-a328-919dc4816553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c715b15b-5cb7-43ed-be7e-f0accc06eac2",
        "cursor": {
          "ref": "de66beb3-58d2-40be-af7d-6e08c5d57c8f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c368c745-7e24-4483-bb24-7137232aa1a1"
        },
        "item": {
          "id": "c715b15b-5cb7-43ed-be7e-f0accc06eac2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f49fff64-15dd-4cd4-998e-0372c19f3711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02b7cfe-0183-4b18-befe-2372298129d8",
        "cursor": {
          "ref": "bbc20754-c1a6-4aa2-83b8-af4b04de7607",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3ddda30d-4ca4-4129-87ae-6030fa24e8ce"
        },
        "item": {
          "id": "f02b7cfe-0183-4b18-befe-2372298129d8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8c7759d1-aa82-4087-bfa6-c8c2182841c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1249297c-eb47-42ff-85c7-6ea4cae1e9be",
        "cursor": {
          "ref": "62f33919-9414-4234-97cb-4f19f1e52727",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4f5297bb-604e-42aa-ba1b-13dd35d10690"
        },
        "item": {
          "id": "1249297c-eb47-42ff-85c7-6ea4cae1e9be",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "91bf156b-a6be-49b0-b0d0-f7f17cb90a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b2ea5f-4e8e-4f33-8179-871b6b5233fc",
        "cursor": {
          "ref": "25968f5d-655f-47ae-8966-6a7da232d9f9",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1fd368dc-6f6c-4cc3-bc09-9e10b06b4949"
        },
        "item": {
          "id": "61b2ea5f-4e8e-4f33-8179-871b6b5233fc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fe390927-8cdc-4a85-b1e2-8bb4a04356f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7611ef2d-df53-4683-984a-772713fbd3a6",
        "cursor": {
          "ref": "5986202b-30f4-4904-9cd2-c5642287684c",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b24537b3-54e7-41bf-9e68-f627848f8260"
        },
        "item": {
          "id": "7611ef2d-df53-4683-984a-772713fbd3a6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "67dee064-01b8-42e8-9875-dcfed0c48e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c6065a-363e-4666-8586-0c8da63b9487",
        "cursor": {
          "ref": "e3eec951-0b3e-48ea-8277-098b25b8b0e8",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "709e5f48-7974-41d9-8cfe-720d4d10336f"
        },
        "item": {
          "id": "44c6065a-363e-4666-8586-0c8da63b9487",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "57a29ec4-6255-405b-9242-bfdac4c563ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a782e438-55fe-4fa1-a3cc-2bb4d91229fd",
        "cursor": {
          "ref": "2e7598b0-cf6a-4df2-b4c9-fc319a9c2ed3",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2d03a11b-54da-408f-928d-45918d8a7dcb"
        },
        "item": {
          "id": "a782e438-55fe-4fa1-a3cc-2bb4d91229fd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d95887b6-8bc5-4bd0-a05b-0e61621f9e6e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02926bc-5251-44b1-b9aa-61b772337938",
        "cursor": {
          "ref": "4f7be12e-8b57-4d94-812e-146bc9119a2d",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f7d746e0-fa6d-4cce-a9df-25c8f92ce8c7"
        },
        "item": {
          "id": "c02926bc-5251-44b1-b9aa-61b772337938",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d51723bf-927b-4309-bc7c-83653ef10aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4eac148-84fd-4391-aac7-246b32469170",
        "cursor": {
          "ref": "ef789a79-cb61-4417-b78a-7f34755d6a46",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8642de50-0dbd-4217-9ace-c16991c5a8c0"
        },
        "item": {
          "id": "a4eac148-84fd-4391-aac7-246b32469170",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f75b8e01-da05-4c11-8c3c-86618b79653e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3344334-413e-4f21-b63d-ebea04c0ee19",
        "cursor": {
          "ref": "86c3856a-6e2b-4f6d-b512-e125b4dce2e2",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fece8b3f-2cb0-43b5-8fa5-0eee95b7863b"
        },
        "item": {
          "id": "d3344334-413e-4f21-b63d-ebea04c0ee19",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4477d979-b176-4cf7-a767-0ce20fe1b205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176187ea-6ecb-47e8-96f5-8b087fbcf5c6",
        "cursor": {
          "ref": "e4af745b-26ca-4815-a0d1-73c7265e10d8",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eafdc03b-cb73-4589-9bd9-9bc92cdd645c"
        },
        "item": {
          "id": "176187ea-6ecb-47e8-96f5-8b087fbcf5c6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2e35d5cd-2bd8-43cb-ae2d-1870c37ca446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41614aa-25b9-4a57-a434-8272aa404d41",
        "cursor": {
          "ref": "0c724626-61d6-49b6-97e9-a5aeac202f51",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3c12b084-7a50-4c0a-b5e9-64f6ca494e51"
        },
        "item": {
          "id": "e41614aa-25b9-4a57-a434-8272aa404d41",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6c6e1fd8-d677-42a2-b350-c1e347f3cead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c442c89c-2934-4d6f-bf42-89c82f492ec5",
        "cursor": {
          "ref": "d5338ba1-a833-4101-bd32-fed7fbfb24cd",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "04b67a07-7169-47bc-b2e0-bfd26067cc38"
        },
        "item": {
          "id": "c442c89c-2934-4d6f-bf42-89c82f492ec5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a03509b0-6414-4d49-8d96-95d5fac8baf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3db54a-d84d-4a18-94af-023f76a1f1d1",
        "cursor": {
          "ref": "095a5258-416c-4a39-b9f0-6ab052865464",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9f5f4cd3-f12e-46fe-90c3-4293101e5eeb"
        },
        "item": {
          "id": "5c3db54a-d84d-4a18-94af-023f76a1f1d1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d2f8c077-a534-4d67-b0e2-7c36907f20bc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 44,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcbc6a4-ea2f-4903-83cf-ed48361ede11",
        "cursor": {
          "ref": "6c86e9b2-9c04-49aa-b703-7b70cd576e51",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "986e3e10-c7f7-411f-9763-8fa15c8dda23"
        },
        "item": {
          "id": "ebcbc6a4-ea2f-4903-83cf-ed48361ede11",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e5f4a3da-4872-41be-b04e-07679863e01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994acf79-c1f9-45b9-9290-3c68eae0b4c1",
        "cursor": {
          "ref": "e5746c64-db9d-4c4d-b03c-b05d0bd817f4",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "866396ef-efde-4b34-be9c-145c028ab357"
        },
        "item": {
          "id": "994acf79-c1f9-45b9-9290-3c68eae0b4c1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "13bff047-0983-4d2a-8503-3a380fd54b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e85959-055e-40ac-9ecc-a19796eb7232",
        "cursor": {
          "ref": "e35c49b7-1b9f-4df0-95ea-91fed83ab818",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "108b5e0a-7a21-46ff-9e20-8ba6bcf1cf48"
        },
        "item": {
          "id": "18e85959-055e-40ac-9ecc-a19796eb7232",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3ee25ebb-f83f-4d5f-9fa6-32222f2c2b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e892655-abe5-4271-97ab-22ee0bb5a3ba",
        "cursor": {
          "ref": "324fe97c-8f48-4456-9d04-4ec327467527",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9bffc1ad-7e4b-4c35-a0eb-5ef3321e5618"
        },
        "item": {
          "id": "8e892655-abe5-4271-97ab-22ee0bb5a3ba",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a6df23f1-c68f-4c0e-a14c-aa1bd82da2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43c1b9a-430a-449b-a5bb-bd5c6ff680d6",
        "cursor": {
          "ref": "9fb45f68-4944-43bb-bdb0-d46aa83735a9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cfd93f3e-20c7-43c1-b8cc-b5cedb16b2e4"
        },
        "item": {
          "id": "c43c1b9a-430a-449b-a5bb-bd5c6ff680d6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0e9b6970-fe19-4676-8555-5ca3dbe2b8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fae29c-0877-4d8c-b5a6-74ae6e342923",
        "cursor": {
          "ref": "59c10c4f-44aa-454c-8fd3-ff5f29a7cbf2",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4c6cb8a5-c82f-4ece-b4c0-c272d2656c1f"
        },
        "item": {
          "id": "83fae29c-0877-4d8c-b5a6-74ae6e342923",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1932f3b8-54c4-4832-b1f8-bd93af5bbaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9441f3b-bb3b-468d-ad92-f40001afce1a",
        "cursor": {
          "ref": "060b0720-4187-49e5-9640-89d922e117b6",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "30bc3f78-566b-433b-8a52-c25233bd1f96"
        },
        "item": {
          "id": "f9441f3b-bb3b-468d-ad92-f40001afce1a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "884ad4d4-605f-41af-91d0-51dee4eb036c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618e2b12-94dd-4b80-ad55-3ea05c71fe30",
        "cursor": {
          "ref": "10e27666-6892-4f9e-82b4-c0995c78ef82",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3097d633-895f-434b-9ae8-32c4bbb3ae43"
        },
        "item": {
          "id": "618e2b12-94dd-4b80-ad55-3ea05c71fe30",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "38ecd1ad-ca7a-48bd-bcd6-33a93344e909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80c32ac-15df-42ae-80ef-a63a5542f4e7",
        "cursor": {
          "ref": "31894ad0-1d3f-4a6c-b4f0-045ca0335bde",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e2c1ae66-38cd-4d4e-8375-d3ea622d63a4"
        },
        "item": {
          "id": "b80c32ac-15df-42ae-80ef-a63a5542f4e7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "17a8d40e-34bb-4239-8f47-97f149545a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cf6be2-2a62-4071-a70a-d004827e5f68",
        "cursor": {
          "ref": "66c9277f-9458-4c0a-b263-68559dbba8d6",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4d3a8722-fd8a-4b1d-b989-16ba184d8fdb"
        },
        "item": {
          "id": "e8cf6be2-2a62-4071-a70a-d004827e5f68",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "07d4113a-ac82-4fb3-95b1-afbb32a39fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0584bf16-575d-41ac-b167-d6b4622c7f33",
        "cursor": {
          "ref": "a0602894-082c-4fae-b40c-f179ab11611f",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "43af7060-02dc-4aa2-bab9-5757d3022a64"
        },
        "item": {
          "id": "0584bf16-575d-41ac-b167-d6b4622c7f33",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5d6f51f1-f122-45df-95ce-312a8f297f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db819cc-0618-4609-8c8f-f8790e0cb95e",
        "cursor": {
          "ref": "e64890dc-e3a3-441d-bc58-abae52820777",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "155f3463-6c90-4395-9949-0c1ec92e3bad"
        },
        "item": {
          "id": "2db819cc-0618-4609-8c8f-f8790e0cb95e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "14aed7d8-7341-4c74-a772-0a41c0291106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479537a1-92a3-40d3-8584-3397b28f3463",
        "cursor": {
          "ref": "80e94030-1d15-483e-8c34-db9c26f5e339",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bf914c02-78c5-47af-a5ae-58a34ddfab3f"
        },
        "item": {
          "id": "479537a1-92a3-40d3-8584-3397b28f3463",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7fb173c3-d708-49d8-84b5-1e90101e313d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1222e3c5-c578-4b8b-bd9e-a13edc346e27",
        "cursor": {
          "ref": "105ade4a-c5f7-4863-9b97-fdb71fd90ea3",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "32e947e8-a19a-404f-8fc7-29714477446d"
        },
        "item": {
          "id": "1222e3c5-c578-4b8b-bd9e-a13edc346e27",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b40b5465-4f5d-4fea-8665-d33bf2656236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a6c8d7-1d0b-4aca-8003-e49a59d59f5e",
        "cursor": {
          "ref": "eb786cac-5f42-4165-9666-0c1aa48a38a0",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3679790d-e1a4-46cf-8a6d-15152dfc42b2"
        },
        "item": {
          "id": "48a6c8d7-1d0b-4aca-8003-e49a59d59f5e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8ea84585-9038-47fd-a46a-f773a2d7ba83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9de4499-7fdf-4c6c-87f4-bede4e3ca4dc",
        "cursor": {
          "ref": "0daa2212-7344-4805-93ec-f15272272091",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "81e3f595-3c4d-42cd-b691-69cb6c06bfbe"
        },
        "item": {
          "id": "c9de4499-7fdf-4c6c-87f4-bede4e3ca4dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c8808c11-dad6-4f0b-b54a-61b78fb91bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dc2dce-ada5-445c-8f7c-53379e365de6",
        "cursor": {
          "ref": "49dc7978-0da4-460d-9531-e5caf3212b41",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9e535849-45c0-4c1d-9c1a-df7700bd052a"
        },
        "item": {
          "id": "72dc2dce-ada5-445c-8f7c-53379e365de6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fcb8ef43-1289-4dbf-a5fb-4819631fed4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3f3cb9-ab17-41fb-b257-ce79b19cf796",
        "cursor": {
          "ref": "791cd5dc-c463-457f-a24b-d9d0cb1eea07",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ae7184af-fd90-4f30-93d8-20f71e516a91"
        },
        "item": {
          "id": "aa3f3cb9-ab17-41fb-b257-ce79b19cf796",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a7a5e804-2d1d-4a35-96dc-3f37e969324d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbe7069-b3d7-4e38-9b94-5f7fb3a51653",
        "cursor": {
          "ref": "ad41881c-3049-4815-9fe6-a046a0787e4c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "caf9093b-e6bf-4861-be3c-47c357107954"
        },
        "item": {
          "id": "cbbe7069-b3d7-4e38-9b94-5f7fb3a51653",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ce960047-70e5-4445-9ad2-d8b2962ed629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1aba7a-5bcd-48ed-ad81-b9435c80175b",
        "cursor": {
          "ref": "6724205f-fb64-4592-b36b-e62b018adae1",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "dd6f7d3d-1517-4ecd-9f28-7c10e2a81f0b"
        },
        "item": {
          "id": "9f1aba7a-5bcd-48ed-ad81-b9435c80175b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4cd2107a-76ab-4138-8cbd-958c6715ce6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae4592b-bad1-460d-a721-1599cb2defc5",
        "cursor": {
          "ref": "c1a976e4-ff5c-4d47-a89f-4de50e43539c",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c1ec42a7-65af-45bd-8c40-ab0852813e82"
        },
        "item": {
          "id": "7ae4592b-bad1-460d-a721-1599cb2defc5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c25106f5-4a0d-4940-bddc-481fab15bc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd552a1-da07-4bbd-9fcf-96bb46511611",
        "cursor": {
          "ref": "a13b1e70-8ec1-4ad1-a1f9-93de989d71e9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e5953317-a14f-4916-bfbc-e80bed246ae5"
        },
        "item": {
          "id": "edd552a1-da07-4bbd-9fcf-96bb46511611",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1753f2bf-e3c6-440f-907a-ede1041cd9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748956b1-72f3-40e2-931d-e6ad5367e6a1",
        "cursor": {
          "ref": "3eda7aa7-5b62-4314-88d1-ce66296adb69",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "874f44a3-c82a-4291-be12-ed333d5ac1d5"
        },
        "item": {
          "id": "748956b1-72f3-40e2-931d-e6ad5367e6a1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6fe156aa-af51-4aef-af05-70f4433a2566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81be7746-6619-4fbc-9125-608ffeb1778f",
        "cursor": {
          "ref": "20639524-370b-4ea6-848c-c3b0fbbcb767",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3efbb87b-7573-4870-8683-55d6c674f099"
        },
        "item": {
          "id": "81be7746-6619-4fbc-9125-608ffeb1778f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b8bc3d58-3862-407e-8d64-a7c4348dc065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b318a3-bdc4-4657-9d9c-0d14605530de",
        "cursor": {
          "ref": "174a32b6-9e3f-4525-88a1-3d0db454a64e",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a4c3218e-be1a-4441-a8e3-9294b98065fb"
        },
        "item": {
          "id": "c7b318a3-bdc4-4657-9d9c-0d14605530de",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d02ff573-c3d2-4482-9051-12ebcfff68f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcff0aac-b2dc-484f-8145-cf7495dd5897",
        "cursor": {
          "ref": "4588d925-74fe-4521-bfc6-54328a1fc9b6",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8affc5c6-b157-4d84-9a0c-34e9ec86ee2d"
        },
        "item": {
          "id": "dcff0aac-b2dc-484f-8145-cf7495dd5897",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "78c6259d-6681-4b43-9501-cf42516589b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77eae870-1ede-43d4-af2f-30bef1ba3f7c",
        "cursor": {
          "ref": "13c35059-0f9a-4c71-a918-e87972fe268e",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2a727a7c-fe23-4a62-8217-d34313c15a62"
        },
        "item": {
          "id": "77eae870-1ede-43d4-af2f-30bef1ba3f7c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "eb96a5fc-09ff-4e29-b02c-9c653fa41ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c184c0-94bb-486b-a779-fc6719759264",
        "cursor": {
          "ref": "a807ea7a-5071-4d42-803e-d1d3c6131350",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "863a2fcb-ce24-4524-90e8-ebe252228962"
        },
        "item": {
          "id": "50c184c0-94bb-486b-a779-fc6719759264",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c014c69a-c8a8-4670-b8f5-b97d558e6eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190ae156-45ac-4b6d-a55e-7872e62be936",
        "cursor": {
          "ref": "b89cccfc-ebd2-4c78-90fc-2f46186e6975",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "585b0ca9-f98f-4573-9d46-09d9109e6642"
        },
        "item": {
          "id": "190ae156-45ac-4b6d-a55e-7872e62be936",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d7cee2d2-e139-432f-a24d-ba90ff9324cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40d7326-30cf-4447-b512-e9676fd5b350",
        "cursor": {
          "ref": "8ad22a58-755a-498b-b075-484a552b4402",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "711ed673-c12d-4ca7-8c93-1bf819e5b7a8"
        },
        "item": {
          "id": "f40d7326-30cf-4447-b512-e9676fd5b350",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8b5916d3-74b3-442f-a1db-1df41e05d24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1df9ed-c75c-4a73-ae53-34157f608a59",
        "cursor": {
          "ref": "25301100-c616-4226-8298-672f0faecdff",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "65c5046a-5dd8-4944-b690-8f3f6cbf1b06"
        },
        "item": {
          "id": "af1df9ed-c75c-4a73-ae53-34157f608a59",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7ead2236-422f-4df6-b351-1feb5c4dfc5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c347ed60-b870-4552-8815-6ca20fe30d99",
        "cursor": {
          "ref": "02cf08c5-7167-4414-a5b9-a62994c9756c",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "85d0a332-34d2-406e-9f54-cb9ce2b7141b"
        },
        "item": {
          "id": "c347ed60-b870-4552-8815-6ca20fe30d99",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ebae86b9-c102-4221-a17d-7841c7955efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa95837-5cc6-4ddf-bf8f-9a7679ee8c67",
        "cursor": {
          "ref": "eb6ab3dc-1bfb-428d-bee6-49898792953c",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "faaca163-a78a-40cd-a7f6-9f4f040a429d"
        },
        "item": {
          "id": "aaa95837-5cc6-4ddf-bf8f-9a7679ee8c67",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "68fb0473-12c1-4caa-886d-8286c03a52b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733ba069-860a-472c-b812-72f6e9d61891",
        "cursor": {
          "ref": "864c22e7-4306-46b7-98a1-0f1962e21fa0",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b30c6e09-769e-4f04-9afa-7e4bdc2b8811"
        },
        "item": {
          "id": "733ba069-860a-472c-b812-72f6e9d61891",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1f07e493-8184-42be-bd86-536548c0a73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e4dc74-0e63-4465-afff-59bda5d2f1f4",
        "cursor": {
          "ref": "1918c40b-93a8-40e3-9dc1-a0b3fa1edfc2",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8c4a0315-7a5b-4feb-b7ee-3f35ed13561d"
        },
        "item": {
          "id": "06e4dc74-0e63-4465-afff-59bda5d2f1f4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ee32b6ba-3493-4f58-9763-7bfbcdd93047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd6af58-1d7f-4838-ab33-09a19a9dda22",
        "cursor": {
          "ref": "3bfa90b7-4525-46ba-a116-42e06c611870",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b6d910c5-0fed-4715-b61a-622254908048"
        },
        "item": {
          "id": "4dd6af58-1d7f-4838-ab33-09a19a9dda22",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "68ef7d46-d04c-41ce-bee7-2333bf9c85ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0886888-1d7c-4ff5-9890-0519ff05533f",
        "cursor": {
          "ref": "e628d091-c6e3-40aa-8f53-7c244ba76bb1",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "13d21def-a5e5-45d3-ad39-41b5141ced5f"
        },
        "item": {
          "id": "e0886888-1d7c-4ff5-9890-0519ff05533f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7b956ea1-e544-4917-aab4-40d3536f68be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9f6a89-82d2-4329-a619-8315ee26e0bc",
        "cursor": {
          "ref": "c9a98b86-2f52-480c-8415-187d43bcb26e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0c7f0548-f7ef-4702-90b3-5656e0ac64cc"
        },
        "item": {
          "id": "be9f6a89-82d2-4329-a619-8315ee26e0bc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c3fd43b1-2f0e-4c83-9e09-9e3fd53328cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a88907f-78aa-46a4-a1e2-5666606a39d7",
        "cursor": {
          "ref": "d590db59-9072-4521-826d-1d3d27d9bd0b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0f659c58-a463-489b-afd4-9ec6933f05ee"
        },
        "item": {
          "id": "7a88907f-78aa-46a4-a1e2-5666606a39d7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f4831227-89a5-4c97-91b0-19416635dd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb59724e-425d-4bf7-b7ca-41f3c5e3558e",
        "cursor": {
          "ref": "609a1119-08da-46a5-9fb4-97ead0a5fd67",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1a244263-8dda-4dd2-9046-b2fe39a9699a"
        },
        "item": {
          "id": "bb59724e-425d-4bf7-b7ca-41f3c5e3558e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bc9c5ca1-3139-48c6-88a9-829edae8276b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109f90fa-f522-4c3b-b003-f5525c398269",
        "cursor": {
          "ref": "9176460c-fb90-4d5f-81bf-1287d2e0b516",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8873649e-40d3-4262-834b-b1a0b78b2887"
        },
        "item": {
          "id": "109f90fa-f522-4c3b-b003-f5525c398269",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0e01bbb7-7e06-4d5e-bafc-367350284ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf02809-e869-4e8f-9960-55f3614ad52d",
        "cursor": {
          "ref": "8c375044-5b11-47c0-8cf8-92a1e887e72a",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "77f698a7-a097-4dc7-a8a2-deaf39a1caaa"
        },
        "item": {
          "id": "aaf02809-e869-4e8f-9960-55f3614ad52d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0934be25-2278-409b-925b-203afb680388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6514b50f-63c3-4264-a9be-b0c958abdc56",
        "cursor": {
          "ref": "3e75da9d-c8cd-4442-9b46-412e81c4ca00",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7921d136-fdd1-4815-977b-a0043e375164"
        },
        "item": {
          "id": "6514b50f-63c3-4264-a9be-b0c958abdc56",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8c20b5f3-f37e-4417-8453-ff1da75129c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856c154a-d02e-4837-9d60-6daf831870e2",
        "cursor": {
          "ref": "e7262ac1-e683-4d5e-ad27-5e20b3266364",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "90323806-fa4b-4a10-802d-e84d9218fee9"
        },
        "item": {
          "id": "856c154a-d02e-4837-9d60-6daf831870e2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d1f51eff-ef36-4e3e-b09d-46ddc3cb86d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f679d2f-c81b-4e31-ad60-4d6e4f848e39",
        "cursor": {
          "ref": "7feda4a1-9c05-4bdf-9824-c137903a3c28",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c62a0d63-75ff-44ff-b9ae-bbf16df5286d"
        },
        "item": {
          "id": "6f679d2f-c81b-4e31-ad60-4d6e4f848e39",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0110ce3f-47a7-4fb1-88ee-92266c9cd9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2a4871-5e83-4252-b645-0502c1140848",
        "cursor": {
          "ref": "65cf1baf-ed4f-4d5a-80c7-f08667348597",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "da4fb0ce-b3ee-459b-b1bc-004db355d835"
        },
        "item": {
          "id": "bb2a4871-5e83-4252-b645-0502c1140848",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a3b8f7a7-aeb9-4248-9d26-370acff4df42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac58cb4-4408-4973-be69-8ec94d8cdd6d",
        "cursor": {
          "ref": "2bc76c3a-721c-4b81-9ff2-da7ecc795547",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "26e60003-a349-4566-9534-7882e6a2215e"
        },
        "item": {
          "id": "4ac58cb4-4408-4973-be69-8ec94d8cdd6d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0225fa89-b2b4-424f-8b31-8438c8a80167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dedb13a-e873-42ca-8de1-acf5c76417cc",
        "cursor": {
          "ref": "c2993476-e08a-4598-9c81-c0b8369e67b4",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4ad6e44b-36e2-4343-81c9-100d02a4e95e"
        },
        "item": {
          "id": "3dedb13a-e873-42ca-8de1-acf5c76417cc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "735da9a5-864a-4e4e-8652-99874fdad081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa6f664-7d68-4b5a-bc6e-9ac35c5c3a3a",
        "cursor": {
          "ref": "bede86b3-e1f5-4df2-bc5b-dcbaaad11aec",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b52e1555-7d02-46c8-b1a7-e3a3dd62a2f4"
        },
        "item": {
          "id": "faa6f664-7d68-4b5a-bc6e-9ac35c5c3a3a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5fa0ee48-628e-4778-8eab-5d029398ac79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c25b74-ba48-40e7-9035-c32ef5470867",
        "cursor": {
          "ref": "51961c0a-e9bf-4fe8-b86e-2deabaa6699b",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cbaf294f-5c07-4a88-8232-546a592e82aa"
        },
        "item": {
          "id": "85c25b74-ba48-40e7-9035-c32ef5470867",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f871460f-d7d2-4d58-b608-4e96a184bde4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432c679d-cf58-4982-bf61-1a877334051b",
        "cursor": {
          "ref": "c4af42f4-7ee4-494c-b187-7ce989b27030",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2de30419-9a0a-4a85-905a-c462191a08ea"
        },
        "item": {
          "id": "432c679d-cf58-4982-bf61-1a877334051b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "13ad3d53-961b-461e-aead-442fd1ce19c9",
          "status": "Created",
          "code": 201,
          "responseTime": 64,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f90f09-a9ba-4da4-a4e3-1656b0d0254b",
        "cursor": {
          "ref": "7d9bd167-4555-48a9-a717-6f673379d1b4",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cb0074b8-f50c-4a40-b128-a4266e6800da"
        },
        "item": {
          "id": "85f90f09-a9ba-4da4-a4e3-1656b0d0254b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "eb500e09-98f4-4e20-be1b-4b60e8367b08",
          "status": "Created",
          "code": 201,
          "responseTime": 208,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcab9de8-9dbd-44e5-99d3-f70a2d21c9eb",
        "cursor": {
          "ref": "375fb69d-a4cb-47e5-a7b8-501837749459",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "04a8133a-bf9e-418e-96b8-05b023b9adf5"
        },
        "item": {
          "id": "dcab9de8-9dbd-44e5-99d3-f70a2d21c9eb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "59868661-aaa5-4f92-9048-b2a1c2fefd47",
          "status": "Created",
          "code": 201,
          "responseTime": 63,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ecd207-c0ed-42ab-8c22-f47e473a2120",
        "cursor": {
          "ref": "e165a746-381c-4df0-b25d-b498501ed596",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f36a6069-276b-460b-af7e-6fd98177d9f4"
        },
        "item": {
          "id": "a7ecd207-c0ed-42ab-8c22-f47e473a2120",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f8508277-64f8-4549-ac61-e80f91e1bb59",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8577a3-6fa0-4803-a0ee-f7b0a34e60d6",
        "cursor": {
          "ref": "8284cf4b-27fd-4da1-b9da-a634823ed5a7",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "69f3b819-48cc-46a5-942e-06857067b7f3"
        },
        "item": {
          "id": "bd8577a3-6fa0-4803-a0ee-f7b0a34e60d6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "95502f2e-119e-4fc2-a707-e25c22053fbf",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4fc22e-8f37-4ce8-936d-e86fe4db893d",
        "cursor": {
          "ref": "9b5c291d-94a7-40f9-ae90-85b81d5ae643",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "45b35d04-25a8-4edd-94c4-7ba642dde73b"
        },
        "item": {
          "id": "4a4fc22e-8f37-4ce8-936d-e86fe4db893d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cfcfb7a3-5ae6-41cd-bf5f-dca707f6c9da",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79474ed-aaa3-45e5-8d87-b38523be6612",
        "cursor": {
          "ref": "2907dbbd-3b53-419b-8210-e81cb61d3f0c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "775b4533-ab59-45cf-b87d-e598495247a8"
        },
        "item": {
          "id": "a79474ed-aaa3-45e5-8d87-b38523be6612",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5eb83d37-9175-436c-a686-d4e0f06344bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc372fb5-e5f5-444a-b3e5-22cc2d3678f5",
        "cursor": {
          "ref": "1975494e-c008-4d2a-a2a5-4ed21d4eaa2d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4e537304-ea37-4d22-80c7-d683bcf462cc"
        },
        "item": {
          "id": "dc372fb5-e5f5-444a-b3e5-22cc2d3678f5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6a8dd0bd-5c66-4d5b-a3eb-f6ee6ff27a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84638e6f-1fb0-48da-8d45-05535ce92319",
        "cursor": {
          "ref": "a46746d7-1f43-4a3e-ae09-095869e511f9",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "43202458-eb50-4410-9bb9-18b0b12adaf3"
        },
        "item": {
          "id": "84638e6f-1fb0-48da-8d45-05535ce92319",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4cdd331f-0018-45ba-b25c-f1512f37623d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d97de7b-23a4-4add-a1a1-5a3797f138e5",
        "cursor": {
          "ref": "10b4449b-2c26-4402-b765-a285fa13df3d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cec49195-1fde-43b4-b8b3-fbdf193d5b9d"
        },
        "item": {
          "id": "4d97de7b-23a4-4add-a1a1-5a3797f138e5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "847a4f11-4e83-49f1-ad20-8fb4fa9fec9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339e69db-f97d-40d3-b9f3-df97bec29d6c",
        "cursor": {
          "ref": "8de468fc-6e3e-48b6-a3a2-27317a51c5fc",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f1cf87e8-d9db-458e-9fe1-7867a9b5bf54"
        },
        "item": {
          "id": "339e69db-f97d-40d3-b9f3-df97bec29d6c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0f22e348-1a1c-4ddd-a0f1-ee2609c22393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9061378c-9fd5-4c5f-adbd-158781412212",
        "cursor": {
          "ref": "bec09050-8ee4-4fbe-87d2-cf4162f7ccc5",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "613d5958-a055-4f5d-a04d-8e331c845323"
        },
        "item": {
          "id": "9061378c-9fd5-4c5f-adbd-158781412212",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c9c10b75-d571-4ed6-9cfb-a652d5ba73c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67034f98-fc79-4c85-9e11-e0a275e507f6",
        "cursor": {
          "ref": "17b1bfaf-ebec-4c35-8f41-214feb4db079",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "57f83160-80e6-4004-ad58-461567f63cc3"
        },
        "item": {
          "id": "67034f98-fc79-4c85-9e11-e0a275e507f6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c49f214b-dc93-4397-a000-5ba4df626c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7127b8a-07b6-45be-b8b4-2e0ea6209669",
        "cursor": {
          "ref": "cf77a749-c06b-4503-9ca6-9da40576af74",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1c81d7de-1e35-4152-85ec-2285de0ef404"
        },
        "item": {
          "id": "a7127b8a-07b6-45be-b8b4-2e0ea6209669",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5fb79757-6bd9-4c87-8476-8f515015b2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2a049b-b9e5-4cf5-8d7d-4c53fe7c9761",
        "cursor": {
          "ref": "ee07a05b-0041-4cdb-928e-10ce52b3cdd9",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3d3c775f-54c7-45bc-a263-53f2072ed126"
        },
        "item": {
          "id": "da2a049b-b9e5-4cf5-8d7d-4c53fe7c9761",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "37e905c8-cac8-4d78-9ade-b780f69f1d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438a5e84-fb3b-4847-a087-e318a7e5ce8c",
        "cursor": {
          "ref": "344de500-f78f-40fc-b3ab-a0f14fe8d0b3",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "71dbb5f0-1e5f-41d2-aa43-94dc95b51375"
        },
        "item": {
          "id": "438a5e84-fb3b-4847-a087-e318a7e5ce8c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "074a6dbb-4951-4f19-b5e4-601e5cfb936a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f70333a-37c8-40e4-9f24-41ed9d4e7b41",
        "cursor": {
          "ref": "dc93e46a-8c0a-4687-862a-47f6fb9d1b49",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "40dda17e-7b4a-4f82-9566-33444906847d"
        },
        "item": {
          "id": "3f70333a-37c8-40e4-9f24-41ed9d4e7b41",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ded8a676-55fa-4f6d-98a8-28ed44c0f26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832816e6-63b7-4401-bdb4-ef54ff24b0a8",
        "cursor": {
          "ref": "a4093465-874e-4aff-9b17-ed7e53c26227",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "61a9acd3-35cd-4bf9-9fd8-95e1a411e020"
        },
        "item": {
          "id": "832816e6-63b7-4401-bdb4-ef54ff24b0a8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "40a7a1d5-20ab-4b78-a7e3-e3172efd6c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eec0767-edd9-43e3-a439-61c6e849b479",
        "cursor": {
          "ref": "b33f2398-24f4-4859-bdf8-3b2310d56d53",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7c1e8e96-3a1f-4328-961f-bff8fd621196"
        },
        "item": {
          "id": "5eec0767-edd9-43e3-a439-61c6e849b479",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6f2f0f67-5275-4d86-bacb-b334be6819f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71a9aff-dd9d-4338-9164-eacfb146dc30",
        "cursor": {
          "ref": "c3e4d190-b533-415d-a788-ae8c0f23ce92",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c45f48bf-f84c-4cd0-ab8a-f8746eb4e7c5"
        },
        "item": {
          "id": "c71a9aff-dd9d-4338-9164-eacfb146dc30",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b6b50ce1-7ad8-44d7-a360-188a23babd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289caea4-3cf2-44a6-936c-ef71cc1ea2d3",
        "cursor": {
          "ref": "83a02ab7-7701-409c-b34e-a8fb2a94c493",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9eabc533-f9c5-4892-94e6-a7bb35cde4ca"
        },
        "item": {
          "id": "289caea4-3cf2-44a6-936c-ef71cc1ea2d3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "694e7112-cbcb-46e3-a1e4-c05f79bd8731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ef8a19-83b0-4fcf-a8aa-56fae0170881",
        "cursor": {
          "ref": "ba72d71e-8009-477d-aebf-dfa1234e2b16",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5264e3d2-07a8-4887-862c-f3a8d9e26053"
        },
        "item": {
          "id": "e5ef8a19-83b0-4fcf-a8aa-56fae0170881",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c9e5e0b4-9ae1-44f9-b9d0-037293d7a834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcef8eb-0f21-4d62-a4c5-61d0302b346a",
        "cursor": {
          "ref": "a10c5b64-342c-4c91-a271-fbe9d5e833ca",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "27ce07c0-de5f-4c19-b6a7-c6b09fed1c57"
        },
        "item": {
          "id": "8bcef8eb-0f21-4d62-a4c5-61d0302b346a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bc508c6f-c0aa-4001-955c-7ae3a86473bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b4a746-7425-4293-8e81-7a94f69eeb5b",
        "cursor": {
          "ref": "b29d7430-4643-484d-ba82-cc56768e913b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cdba8b5b-16f0-4fc3-9533-61be41fe0ec2"
        },
        "item": {
          "id": "54b4a746-7425-4293-8e81-7a94f69eeb5b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6400ecc7-851c-4c7c-a098-67cc879209cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15f9bd5-88cc-4c9b-9654-65bd41a6ab67",
        "cursor": {
          "ref": "b6365df4-9549-4a8f-94a4-fa03b74468d4",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fed76064-9040-4ec0-b38b-1d1a996d927b"
        },
        "item": {
          "id": "c15f9bd5-88cc-4c9b-9654-65bd41a6ab67",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2f52a4eb-3a9b-4954-b797-2544b8c70ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e0afb7-26cb-40d8-9393-3a84306d3766",
        "cursor": {
          "ref": "b8588818-69f0-49fe-968f-4cff874c779a",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "17f93335-0429-4eb1-8396-53d514ad2ab1"
        },
        "item": {
          "id": "f1e0afb7-26cb-40d8-9393-3a84306d3766",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "362a769a-5381-4d77-8a03-bef9dc68808f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924061a0-0769-4c16-aae5-d4ef9ca3fc24",
        "cursor": {
          "ref": "1300c86c-2276-4361-88b0-86e52988d85a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "02268943-40ca-4135-9268-3df27de64b8c"
        },
        "item": {
          "id": "924061a0-0769-4c16-aae5-d4ef9ca3fc24",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1e9569e6-fc9d-4c4a-88fa-49fafb86874c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c32625-2f98-4562-9608-0f91e9d21a78",
        "cursor": {
          "ref": "df797008-8f0d-4871-9cb6-517b95d61fac",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bdd495cf-aa49-49dd-b84f-425c98f2f135"
        },
        "item": {
          "id": "b8c32625-2f98-4562-9608-0f91e9d21a78",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "62246f33-5c39-4621-b641-b184e2a971a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0a92ba-9777-4859-83d1-669e0c3bad5d",
        "cursor": {
          "ref": "17e055d4-f0ff-4515-8267-c08d5fc03a59",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7b478a03-6199-4eb5-8ae3-4ee9eb4cc2b7"
        },
        "item": {
          "id": "9d0a92ba-9777-4859-83d1-669e0c3bad5d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b556e8b2-785e-4161-a4ed-02fd323ad6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80d6e6e-27da-4e50-bec2-655d654d2dc4",
        "cursor": {
          "ref": "db711807-f2e8-498d-b543-f7978c9e6886",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "18762975-b302-44da-a76e-74419707cd22"
        },
        "item": {
          "id": "b80d6e6e-27da-4e50-bec2-655d654d2dc4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "24b8d141-3034-45ee-ac9f-94290e70e3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36511928-2e30-4ea3-8f11-c9f441e7fefd",
        "cursor": {
          "ref": "3b8ccac4-8bff-4f97-b464-b75676a71ae9",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2506abbc-4f91-4aa3-9477-a4e7ce0aa51e"
        },
        "item": {
          "id": "36511928-2e30-4ea3-8f11-c9f441e7fefd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b4a3d7a1-eeb9-4795-bcc3-a37819ee3723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd4d622-1b85-48d0-8a47-a410d6d45142",
        "cursor": {
          "ref": "5ade2e40-0fd7-4c7f-9303-cf93dd34b0b6",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cb21beeb-3e8f-48a6-ba19-777a4e1daf4b"
        },
        "item": {
          "id": "5cd4d622-1b85-48d0-8a47-a410d6d45142",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9bbc4219-cab9-4b8e-b9a7-3a5618bd5fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbe63f6-f783-4acb-b53b-5ee0ece168e9",
        "cursor": {
          "ref": "815a169c-4977-4319-a6db-717340a447e2",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9bbade3c-c63d-4a79-a613-19b3e7cd2a0b"
        },
        "item": {
          "id": "6cbe63f6-f783-4acb-b53b-5ee0ece168e9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e7a73632-ab7d-41b8-b62b-446a26266c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a8d626-c162-4a88-a816-04be9577c8aa",
        "cursor": {
          "ref": "0baa5187-d76e-4423-9277-fa09687d20e6",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "44522686-4e90-4170-aa00-373d71fb13a7"
        },
        "item": {
          "id": "80a8d626-c162-4a88-a816-04be9577c8aa",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2c932a6c-02d2-40b1-a647-c69b1d388d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a209fa4-745b-4c6f-bfa3-a497070eb569",
        "cursor": {
          "ref": "6f9a509f-15a0-44ab-8619-a7bd692a192f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e149bbd0-7745-4628-aa72-bd8ac191ae22"
        },
        "item": {
          "id": "1a209fa4-745b-4c6f-bfa3-a497070eb569",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b3ff1dd5-7047-452c-8c8e-eb69b4e31efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f545210-30ff-499f-b2b4-1e314d76e95d",
        "cursor": {
          "ref": "e5320f78-0b52-44a4-88c7-5db6c65027f0",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "72421ba4-9ffb-483a-bd51-4a39f7f29890"
        },
        "item": {
          "id": "3f545210-30ff-499f-b2b4-1e314d76e95d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c98b398-7de3-452d-a6e5-736e72b8ac22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ec0bfc-a111-4b50-ad43-e0136349aa05",
        "cursor": {
          "ref": "fa2cd492-44ce-43a2-8ad5-8f4385c42577",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d9b44773-a717-42c7-84bb-8610c094db9d"
        },
        "item": {
          "id": "47ec0bfc-a111-4b50-ad43-e0136349aa05",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3ae4fae0-d081-4ea7-8814-913d17dcc58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e134743-350e-480b-8f43-55a2be862dbd",
        "cursor": {
          "ref": "66316735-1706-4476-8ae6-106d1dd8fbd2",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d6fbd55b-af27-4aea-8559-66e5bb3dd221"
        },
        "item": {
          "id": "0e134743-350e-480b-8f43-55a2be862dbd",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0ef4fd17-e7fe-4f23-9acf-74d8a9ab3520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31666b04-8318-4587-9c3d-b3d3517b41e8",
        "cursor": {
          "ref": "4fc54228-c387-4d3b-8862-b6f1e39668ab",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7395cb65-9456-49cc-b94c-9d278a7fa206"
        },
        "item": {
          "id": "31666b04-8318-4587-9c3d-b3d3517b41e8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "966b5e42-1468-4d78-83ec-ad50f37ff36e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd93a225-3a75-4b47-84bf-bb538cdcbf36",
        "cursor": {
          "ref": "98072f46-a83c-4244-9074-edf311aca1c9",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a6d6944c-e5ef-4f59-a240-611916074cd3"
        },
        "item": {
          "id": "fd93a225-3a75-4b47-84bf-bb538cdcbf36",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5f08444f-ac67-44e4-8a25-e2bc217c6cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df05cae2-eed0-42db-98b7-f88ed7d97a4a",
        "cursor": {
          "ref": "2b145b5a-f1ff-441c-a603-0d58664565cb",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "10a5a0e1-b151-47aa-bc46-75318a9ecf4c"
        },
        "item": {
          "id": "df05cae2-eed0-42db-98b7-f88ed7d97a4a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5a3f3fd8-5e21-4e82-81b2-2af666a7dc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f694fa2d-f220-4964-8f05-811e9aa25474",
        "cursor": {
          "ref": "b5a3052d-966b-4917-8b41-f75d9f3d3aad",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6eafec34-afd7-4226-a02f-17183e9e59cd"
        },
        "item": {
          "id": "f694fa2d-f220-4964-8f05-811e9aa25474",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "674d4498-528c-4fdc-be66-2f2739d350f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d7bfdd-1c7c-43c4-b9e0-f77a6eda8369",
        "cursor": {
          "ref": "5bc30406-771e-4031-bef1-28bb14a4058c",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cd097d65-6a71-4cd1-9370-2ae56b42f871"
        },
        "item": {
          "id": "80d7bfdd-1c7c-43c4-b9e0-f77a6eda8369",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "43cd3e40-03ba-421e-9fd7-9d2c20b455de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfb06f4-1397-4ec9-a4a5-149bc705a81d",
        "cursor": {
          "ref": "6f221b48-284e-4971-81fb-2eee98244b7c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7d75e3b7-3dc8-4140-927a-7d8c203ed60d"
        },
        "item": {
          "id": "5dfb06f4-1397-4ec9-a4a5-149bc705a81d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "18ddf45c-12cc-4e3e-8473-6c2d9a253eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad469d9-f5df-451b-86ad-37fb93cb7c5f",
        "cursor": {
          "ref": "527c07ad-cfea-4870-b0bf-2b0ec1c99d99",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "156eb3e1-d1ef-4c68-886f-ba448aa27154"
        },
        "item": {
          "id": "3ad469d9-f5df-451b-86ad-37fb93cb7c5f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e5e3f808-e6f5-4d60-900a-ae5d90f8e66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9159d07-e3c1-4124-8ad3-bea87126f984",
        "cursor": {
          "ref": "86613aed-ba6e-4eb6-a1ac-88f5f4b79bfb",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4869a02d-92b5-4aa6-b7f2-bfb55696e417"
        },
        "item": {
          "id": "a9159d07-e3c1-4124-8ad3-bea87126f984",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8912dbb2-4675-4943-b602-0e36dd34a973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f0a758-6e53-4a00-876b-837aa3ac2caf",
        "cursor": {
          "ref": "d61bf8b0-7111-489b-a67f-d220a086ea4e",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "31fa3a92-4550-4953-bace-9ce6c352aade"
        },
        "item": {
          "id": "02f0a758-6e53-4a00-876b-837aa3ac2caf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9d649859-77a6-4ce2-b67d-f4ac3bca2fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d29c26-d342-4b77-af42-aa8252d2504b",
        "cursor": {
          "ref": "35986442-2d42-4990-ade2-6af5abd4e2d2",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9e81f64a-05d7-451b-9721-7deaab2ce6ab"
        },
        "item": {
          "id": "d4d29c26-d342-4b77-af42-aa8252d2504b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "71f9bf55-196f-411c-88aa-119eee470674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59d9b8a-fa28-469c-b9cc-cd9bd839e52b",
        "cursor": {
          "ref": "f7d80428-2454-40db-9f01-280fcc018b49",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d9382a6a-d0d5-4101-b85a-ee69c9f428dc"
        },
        "item": {
          "id": "b59d9b8a-fa28-469c-b9cc-cd9bd839e52b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b98e455c-bddf-45e1-be21-e18c66fb7083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcdbdd5-a754-4c88-b135-051fe3636724",
        "cursor": {
          "ref": "f020e2b3-8eae-4dd1-8555-f92da420d74f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0a21d25f-ce80-4fa6-8367-bed52b6f2855"
        },
        "item": {
          "id": "6dcdbdd5-a754-4c88-b135-051fe3636724",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "56c4602a-d97b-45c8-a847-64cffeba78fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d287b10-8314-453b-b688-73c7a616e4a1",
        "cursor": {
          "ref": "e7c33d0b-5f86-4d7d-a328-6241fff606f0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c4e3edad-1ab6-45d8-8bf8-c89994b69daa"
        },
        "item": {
          "id": "8d287b10-8314-453b-b688-73c7a616e4a1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "88c320a4-f3b8-4f8c-8799-b74e9316f009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60f77e7-95c4-4a6d-9570-8cd7a243b303",
        "cursor": {
          "ref": "e7795d48-8591-4920-bf74-23d123dbc73d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4929f92f-6f7e-4326-85d9-412a6cf01d5b"
        },
        "item": {
          "id": "e60f77e7-95c4-4a6d-9570-8cd7a243b303",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "375a0459-26c4-44af-bbf3-6a1a9e53da04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715e1214-8a26-429d-b502-3fb575820c02",
        "cursor": {
          "ref": "ada79358-ac0e-4e4b-8d2a-244adc3d378b",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "77bb5c08-beea-4634-96f4-c97f0d9cd24e"
        },
        "item": {
          "id": "715e1214-8a26-429d-b502-3fb575820c02",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "65c626f0-568d-4656-8051-8e2c28bcfa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebe065f-d8e8-408e-a7f1-62bb4bbf278b",
        "cursor": {
          "ref": "20c050bd-f245-44e6-bdcd-cc16fff08531",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4ecec3be-9455-4468-8127-8c27dbbbc324"
        },
        "item": {
          "id": "7ebe065f-d8e8-408e-a7f1-62bb4bbf278b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f141958b-ef97-4e19-8c09-3ca9f49e1a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b636b4e8-22eb-483e-aadc-284ecdbff5b6",
        "cursor": {
          "ref": "09f26075-fbdc-4ff7-8cca-5fb595bf28c6",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bbbc5407-4d42-409b-a69c-2cb31d8032c6"
        },
        "item": {
          "id": "b636b4e8-22eb-483e-aadc-284ecdbff5b6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "64543d9f-5299-4e4f-8303-5f9c308230bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7feefd9e-06e8-4372-b69e-da5430f6d91f",
        "cursor": {
          "ref": "94809b2a-adf0-46e0-83f8-512c86f03b08",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7426cf60-776c-4605-92f3-6bf75610eee8"
        },
        "item": {
          "id": "7feefd9e-06e8-4372-b69e-da5430f6d91f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cc9e2780-ad7f-453d-a7d0-f530d1a4317f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb305d2-a733-4bb4-b093-08ae46f95b6d",
        "cursor": {
          "ref": "5344cab3-f54e-4590-a241-2eaa5e0304c9",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6695856f-4980-4695-880a-78fb6a3ac77f"
        },
        "item": {
          "id": "eeb305d2-a733-4bb4-b093-08ae46f95b6d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "31822caa-af45-47b0-ae80-5e51cf69abf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780492e3-062b-4fc8-92bb-bb2dd0a8d865",
        "cursor": {
          "ref": "9b19493b-73c8-4543-b7c4-298b3d8273d7",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "53e2a1e0-5d51-4f20-8b95-790d200b6f44"
        },
        "item": {
          "id": "780492e3-062b-4fc8-92bb-bb2dd0a8d865",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7738cd1c-deaf-4f31-b4eb-fb3d8a8bbb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a2bdad-3353-40ff-a943-f06275c02fdd",
        "cursor": {
          "ref": "60519acf-6357-4a60-b1b4-a83be2fd8a25",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "32a7beb7-861e-4d02-b0df-0270c314615c"
        },
        "item": {
          "id": "39a2bdad-3353-40ff-a943-f06275c02fdd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a3f0370c-883c-42d0-a032-d8b0503544e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e168ca8c-463d-4352-b0c9-818582075631",
        "cursor": {
          "ref": "61b3ebc0-bccf-46a2-8a02-57bb4ea4ac3b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "264073d0-efce-4f5b-b2fe-c23a2cdbe2e0"
        },
        "item": {
          "id": "e168ca8c-463d-4352-b0c9-818582075631",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9eb7c7e7-b900-4468-a459-5dc8b760b4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92838ec7-446c-4cd9-a824-38ee315dd852",
        "cursor": {
          "ref": "d18989f4-3fa2-424a-b85e-7209855bb852",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3510b901-1d2d-4f6a-8589-4f1453d8d50c"
        },
        "item": {
          "id": "92838ec7-446c-4cd9-a824-38ee315dd852",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0124939f-00c3-46b1-85c1-f78b67ae954e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c128e7c-791c-4f54-a9d1-8de8380bd31a",
        "cursor": {
          "ref": "90020091-9df2-4ffe-ae71-c2bfae330324",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "954ff9c1-5049-4da9-b19b-6f3b1639c66b"
        },
        "item": {
          "id": "1c128e7c-791c-4f54-a9d1-8de8380bd31a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7053d5c3-41fa-4fbd-bfcf-2ec98f75de50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a626a15c-6d97-4ac6-8ce4-50358cb616ae",
        "cursor": {
          "ref": "030eb38a-7246-48e6-8c22-d050f2bc7013",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "819d19ee-2f06-426e-ac2a-588cd2c355e5"
        },
        "item": {
          "id": "a626a15c-6d97-4ac6-8ce4-50358cb616ae",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3af28850-7ce7-4bd2-9ce2-bddeda505976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc75b9e-2be2-4df5-a4e4-ea7c50b3e712",
        "cursor": {
          "ref": "c08e5b15-0ba9-4a02-8df3-3794bd0e1a93",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "504184ce-25d8-4a2c-8f35-5d18185fc6e3"
        },
        "item": {
          "id": "4cc75b9e-2be2-4df5-a4e4-ea7c50b3e712",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a8fb952e-68a8-47ba-b016-57fd506bc3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88c2244-cea5-4d06-a584-8e57302031b5",
        "cursor": {
          "ref": "96dda02a-27b0-45c5-89fa-83f7fb8ca6d9",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c371b87b-effa-4398-b304-65e42cda5690"
        },
        "item": {
          "id": "e88c2244-cea5-4d06-a584-8e57302031b5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "49769081-5180-4daa-87ca-cd796f581696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357fa1e5-c287-41c7-ba2c-0b70b5fa2736",
        "cursor": {
          "ref": "8fe6888b-d5b9-49b4-bbae-aaf1640e5910",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "92b5d914-5d5c-4c1e-ad35-0cd578ac2225"
        },
        "item": {
          "id": "357fa1e5-c287-41c7-ba2c-0b70b5fa2736",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4dc7357e-ecd3-460c-aa03-d1e3fe0a7836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628e5371-d85c-4534-bf47-4d0cb2097eb8",
        "cursor": {
          "ref": "3220a6b6-a39c-4c34-b3d3-6c59324969ce",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5da5afa6-c9bb-43e3-b3da-87f6a53a44b4"
        },
        "item": {
          "id": "628e5371-d85c-4534-bf47-4d0cb2097eb8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cf230a69-86b0-41be-9849-5c04ed261e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdac7ed8-b710-4d24-986b-307eb75313f8",
        "cursor": {
          "ref": "2fe1bb58-9978-4303-a226-006b267225ac",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e0563bbc-fcde-4041-a84f-a10357a9b71e"
        },
        "item": {
          "id": "bdac7ed8-b710-4d24-986b-307eb75313f8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "608eb535-833f-4200-b571-1de293ba2bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01db0d58-6165-4c7a-90a6-42d0d7b81897",
        "cursor": {
          "ref": "4c6e6481-f8fb-47ef-b1db-2084d85b29d7",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6948769c-d802-4e11-be21-a11b714ec376"
        },
        "item": {
          "id": "01db0d58-6165-4c7a-90a6-42d0d7b81897",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ec6c053f-02a2-45b8-a440-321b1031773a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9034d3-da6e-485e-9b2d-cda3c8c52f6e",
        "cursor": {
          "ref": "601b25ea-ca2b-4269-b4a1-f16519b2d69b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "026d6ee1-5d33-4cc5-88fe-b0871f907b66"
        },
        "item": {
          "id": "3d9034d3-da6e-485e-9b2d-cda3c8c52f6e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "59061218-21c0-47cf-8657-37664bd3ae6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f9ab49-4d6c-4e68-a255-5d9d93f05eaf",
        "cursor": {
          "ref": "7417e208-10c4-4fdf-80b3-eb6cd4323b03",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "df113ef7-c40e-4ea3-8295-913954b922e0"
        },
        "item": {
          "id": "40f9ab49-4d6c-4e68-a255-5d9d93f05eaf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "369b1d5b-190e-4a53-8248-bffa346e68fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b73c51-94d8-4a8b-a668-69e2e5c7d801",
        "cursor": {
          "ref": "6f4d5826-5098-41a1-bc2e-d715fcf3ede5",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0cde1ff4-f735-4ff1-bd6a-a408dbcaee20"
        },
        "item": {
          "id": "75b73c51-94d8-4a8b-a668-69e2e5c7d801",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9ff6403b-f846-40fc-b5de-c5913d065b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1138b41e-c2f1-45d9-9708-53bf0ee49d0a",
        "cursor": {
          "ref": "f4bf3572-e358-477e-a231-3bc725455614",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dc92d4f1-750a-44b7-9da1-db0c8f612807"
        },
        "item": {
          "id": "1138b41e-c2f1-45d9-9708-53bf0ee49d0a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "777ebd53-aed3-4441-9cb2-a5d69cae9f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec03d0d-3148-4965-bbdc-07447d5264b7",
        "cursor": {
          "ref": "44b2d371-2a3f-4ec9-9f4e-70f02f65fd98",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c659eeaf-8a3b-4c7b-819f-b6fa0fa40b4f"
        },
        "item": {
          "id": "bec03d0d-3148-4965-bbdc-07447d5264b7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3dddb12e-4e65-4c8e-854f-29c722352b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae43db3-ae75-4273-bec5-efdac524f7e2",
        "cursor": {
          "ref": "23715f6c-1ef0-40bf-baff-ef84cfea192a",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4750efd5-e9a5-44e8-81ca-9b47542f32b6"
        },
        "item": {
          "id": "6ae43db3-ae75-4273-bec5-efdac524f7e2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8fbb0a63-b092-40f3-ac95-006d9742d9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e7b873-5991-4200-ac17-d23368b1f3fa",
        "cursor": {
          "ref": "dba93444-8c9a-4fae-a3c1-2d5cf3ca37ab",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "80d45b4f-b2e8-4c4b-b521-5912887af95a"
        },
        "item": {
          "id": "c0e7b873-5991-4200-ac17-d23368b1f3fa",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8b8f1eb8-bafe-4d91-95a1-23ceb00c3718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaa0877-12a2-46a1-8722-52911c6c6461",
        "cursor": {
          "ref": "96506f3e-5c01-4a46-b3db-22c9af9294eb",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8e5f1b60-9ef3-421e-bf43-59c50129377e"
        },
        "item": {
          "id": "abaa0877-12a2-46a1-8722-52911c6c6461",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "54099cc6-3d5c-4dff-a8c2-12c45eded72f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca02bd0b-fc1f-424e-965e-8c96eba12094",
        "cursor": {
          "ref": "6973adf0-422c-47f9-8953-9127347e5ac5",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "00453d2a-8347-40d8-afad-aaf6ab82446f"
        },
        "item": {
          "id": "ca02bd0b-fc1f-424e-965e-8c96eba12094",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "19f78e62-f119-47c4-96a4-2a8d6ce70326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe49e97-1d00-4389-bf57-dc471b535fc9",
        "cursor": {
          "ref": "79cf7c25-c318-4033-a4fd-e6e7ff972796",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "67f418a1-54c5-49ad-8461-bbf318fbb024"
        },
        "item": {
          "id": "afe49e97-1d00-4389-bf57-dc471b535fc9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "81c1235b-76e4-4f1e-acf7-fd8c2455c022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae7b0ff-9c6e-4b29-a4b4-0ee16828e91a",
        "cursor": {
          "ref": "08090098-6dc2-405b-99f8-3ae2dc08be57",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fb7e3ae6-7ef0-4d66-9795-1230f2798f34"
        },
        "item": {
          "id": "bae7b0ff-9c6e-4b29-a4b4-0ee16828e91a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "aa758efd-fa1f-4d96-8062-859959c66afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a6e2e1-b0d5-491d-b5c0-70132eb41825",
        "cursor": {
          "ref": "36bbbe55-7c1c-4fb2-b1f3-e4aab56597f0",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "05a8153f-82db-4c87-bd74-b084ea0bc898"
        },
        "item": {
          "id": "42a6e2e1-b0d5-491d-b5c0-70132eb41825",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6e1d96ea-fc08-4a9b-8887-e9b39cf9c2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e415014-6ddf-41ad-9f17-6b6c64d04109",
        "cursor": {
          "ref": "65be3339-de9f-404c-bf5d-29c254c2d953",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b69d2f5e-5fe9-4fec-87c8-9eca3a2c3ff1"
        },
        "item": {
          "id": "1e415014-6ddf-41ad-9f17-6b6c64d04109",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3694af61-2a4a-4f88-9f9b-7ddb5e781689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c918ddb8-75bd-4cb0-b6f0-92b5c1a33618",
        "cursor": {
          "ref": "ade765e3-dbbc-4dd1-be3b-4445e5e81d77",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7fef85e6-81cc-43ad-bf8e-4a59b1f81ac2"
        },
        "item": {
          "id": "c918ddb8-75bd-4cb0-b6f0-92b5c1a33618",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "35e8a104-5ed7-4373-9be9-cbb9052846cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a42e0e5-1d2b-4815-82ec-f1d225c64e3a",
        "cursor": {
          "ref": "742a32ec-83ba-428e-85c7-33ca7fc3a589",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "45642100-9cd5-4c0d-858b-e3db8e21dd8b"
        },
        "item": {
          "id": "7a42e0e5-1d2b-4815-82ec-f1d225c64e3a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b65a4534-62b4-4032-9972-746e620a5d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1828e2b3-58c2-4e15-a2ae-5fa8eb6bba96",
        "cursor": {
          "ref": "cf6c4df4-d0bf-4023-bc6f-50d6cef1ea2c",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6aa37af6-aeca-43d4-bc67-0eadbb59c915"
        },
        "item": {
          "id": "1828e2b3-58c2-4e15-a2ae-5fa8eb6bba96",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b048189d-0b30-4cae-acf6-ca540063d251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44a810a-7113-40ce-9491-4bf61b34ffd3",
        "cursor": {
          "ref": "f867e408-0795-4e75-bf22-6e6cb52cfc09",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e2be2bd1-699f-4a10-bd79-09f89562c33d"
        },
        "item": {
          "id": "a44a810a-7113-40ce-9491-4bf61b34ffd3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "646be6af-2609-4be3-9c30-6ac967f285c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267fde7e-fd19-4bf3-bc8c-da8b498c6d3a",
        "cursor": {
          "ref": "ccc3c115-afe7-4b0c-9bc1-3873d5b1072c",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cde902e7-c1d6-44bf-af3b-7d4c3c861aa9"
        },
        "item": {
          "id": "267fde7e-fd19-4bf3-bc8c-da8b498c6d3a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "86082641-2975-4353-9f4a-52db00f69a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864deb6f-95e6-4195-9e48-a01c846066fd",
        "cursor": {
          "ref": "2074e63c-60af-48be-94bc-9de927ddaaac",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4c6c56e4-94ae-492d-b398-19abd8368a91"
        },
        "item": {
          "id": "864deb6f-95e6-4195-9e48-a01c846066fd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2a4f90f3-6d2c-44af-b078-307e23440065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d4405c-0ed3-49f3-b7c7-f422ad22ea0f",
        "cursor": {
          "ref": "8014b357-f504-446f-bd01-3a04a741fb29",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7a705474-a7e1-4796-b2f4-d99f4c831fc6"
        },
        "item": {
          "id": "a0d4405c-0ed3-49f3-b7c7-f422ad22ea0f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a185f467-a0d7-4423-974e-3f0102e17ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c07d72-4d95-4469-a922-82b531b3c614",
        "cursor": {
          "ref": "57b743d7-7d54-4d64-b669-56cc19ce1e38",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "277469f4-ed91-453a-8dc1-be9b67411185"
        },
        "item": {
          "id": "64c07d72-4d95-4469-a922-82b531b3c614",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "82e12d62-af3e-4341-8b6e-7e65d0e7d9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296456a6-f567-4723-9ab7-3723e8368696",
        "cursor": {
          "ref": "d44cb322-5395-4b69-83a8-bdc86499224e",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e85138c7-6ddd-4534-8b21-7aae08ed4c3a"
        },
        "item": {
          "id": "296456a6-f567-4723-9ab7-3723e8368696",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "815f819d-6a6e-49aa-bb5c-9c1e278f9fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16e0e35-ff11-4562-a99b-ddfaffb8306a",
        "cursor": {
          "ref": "898dc40e-5da2-4e38-a423-97bb7c30dbfb",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5a73df7c-bf8c-4e1c-97d7-f5d5a9570111"
        },
        "item": {
          "id": "a16e0e35-ff11-4562-a99b-ddfaffb8306a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a8f1009a-cdc3-486b-a9e9-05a635060e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800bf1a1-d528-4595-99a0-71e3b88e91f0",
        "cursor": {
          "ref": "2a102af2-8952-4470-976a-aeef6d289851",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b2662955-7ff7-4adb-9134-ad5cfed97528"
        },
        "item": {
          "id": "800bf1a1-d528-4595-99a0-71e3b88e91f0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "094004d2-0ca2-4de4-8bb3-429a2536df76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deff1745-cec8-4349-ba80-ae36a059a889",
        "cursor": {
          "ref": "7b25f52b-d58f-4fb5-a7c7-9b05b534bc79",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d0b61f89-e902-4e2d-835b-5d8a3e97241d"
        },
        "item": {
          "id": "deff1745-cec8-4349-ba80-ae36a059a889",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4d8d274b-c4d8-445d-8fa1-ce8e8856bc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf356f5-ad3f-44f6-9615-a575cc1833ed",
        "cursor": {
          "ref": "516aa7c2-9204-4b93-9337-bd86b3b4e98d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cee032d1-3cd5-40f1-add1-a1941c8b37e0"
        },
        "item": {
          "id": "ebf356f5-ad3f-44f6-9615-a575cc1833ed",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ae77bff5-0ddc-4a29-951e-7475a06d88e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13337f20-74cd-48f7-a845-16b9cb1f28aa",
        "cursor": {
          "ref": "6baa7be6-2607-4b94-a8ba-a0843fd34899",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c193750d-f6c3-4bb5-bcf0-b1cce4d26959"
        },
        "item": {
          "id": "13337f20-74cd-48f7-a845-16b9cb1f28aa",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "659d9a28-3821-4ab5-b7dc-b0db0e70f6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3042ed-d5c6-4b91-9ff8-8f4095281d21",
        "cursor": {
          "ref": "59c9684c-a481-4965-9b5f-a7c68ca9c911",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2150565c-9aa3-495f-af45-be0363b14a69"
        },
        "item": {
          "id": "1a3042ed-d5c6-4b91-9ff8-8f4095281d21",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d839d640-0a99-493d-8372-941c699c431f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56abf914-b809-4240-9dd5-21b2e520ada3",
        "cursor": {
          "ref": "6374b800-1f99-47a3-b7b4-117bc7f03db3",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "685e5d02-5487-49b5-a477-78e278ce157b"
        },
        "item": {
          "id": "56abf914-b809-4240-9dd5-21b2e520ada3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "23cf7219-9cf7-4f82-908c-cf1706513843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64edea3c-15ee-4a7e-ae81-43720c0e7b6d",
        "cursor": {
          "ref": "7d058718-130d-4702-bad6-37ba41c352b4",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c94db7c0-cb13-47a4-86b2-a23b04be9096"
        },
        "item": {
          "id": "64edea3c-15ee-4a7e-ae81-43720c0e7b6d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2846ccdc-b3a8-44b6-86f0-abe090ba0799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e28bbe4-eb48-45bb-adfd-bceb681a84f4",
        "cursor": {
          "ref": "30dc0aa1-7b78-47bb-91e5-64ac49da5641",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "603fd9fb-f050-4851-ad64-5c259982c447"
        },
        "item": {
          "id": "3e28bbe4-eb48-45bb-adfd-bceb681a84f4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fdc17748-44cd-4b65-ba52-7fcd065e4592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acde75fe-734d-4b8a-b449-1071fc2ff2a5",
        "cursor": {
          "ref": "fbd3bc6b-d0a8-4dc5-97a4-2aef5aa2d213",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "89d5f05c-5b9a-4900-8e19-91b3f0c6169f"
        },
        "item": {
          "id": "acde75fe-734d-4b8a-b449-1071fc2ff2a5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "22d9534d-dbdc-4779-b50b-7a6d23ae9acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31aa8a3a-9ac9-4863-823d-07d339c180d0",
        "cursor": {
          "ref": "bfb7ef3d-51c4-4780-bd05-7a8453ceb9b3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a1bbe00d-3ed6-402e-9e2e-9e79d5682f35"
        },
        "item": {
          "id": "31aa8a3a-9ac9-4863-823d-07d339c180d0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "21555788-2aaf-45a9-9c65-0f8b1b9ac385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac948252-3f6d-4ab1-ba9f-e281b00c777d",
        "cursor": {
          "ref": "e9de7f4c-7459-4f42-8edd-81acc9d6204c",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d9050998-0d07-425a-9045-209b2939418c"
        },
        "item": {
          "id": "ac948252-3f6d-4ab1-ba9f-e281b00c777d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4d02503b-5e7e-481e-9ed0-5f0730ab5574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3044e1e-db85-4471-b413-2d3b0ad2501b",
        "cursor": {
          "ref": "6fe2adbd-9791-49b7-9558-334817355c60",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f0daf35d-188a-4779-8999-baa63cd569e5"
        },
        "item": {
          "id": "f3044e1e-db85-4471-b413-2d3b0ad2501b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "aebf0d24-26c0-4fcc-94fa-64213fa8dce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68946e68-b8d2-43cc-b766-aeadcabee4c4",
        "cursor": {
          "ref": "bb867fa0-0cdf-4527-b4f1-cf68f2f3f446",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "31643793-0293-43ce-808a-c0e5626434c0"
        },
        "item": {
          "id": "68946e68-b8d2-43cc-b766-aeadcabee4c4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9b756af3-bd8e-4db9-98c6-f8ffa6026666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca369e2-68c7-4320-9f06-589f31e0969a",
        "cursor": {
          "ref": "1864c727-cf37-475d-aae4-617dcc59b5be",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8605693f-e6b5-425c-bc0e-5fa73e325a18"
        },
        "item": {
          "id": "bca369e2-68c7-4320-9f06-589f31e0969a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "447be244-e098-43e6-82a7-dc0d4f87f518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc620a9-5aff-4798-9b33-34c455d2bf56",
        "cursor": {
          "ref": "6fbacec3-3437-4569-853a-40904acdabd2",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "52e656ac-be98-4e9d-ac34-0b0cb8e0cc40"
        },
        "item": {
          "id": "9cc620a9-5aff-4798-9b33-34c455d2bf56",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "34ccbf5c-66c0-4af3-a352-4ddb398a4189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b03d44-8835-4cc4-b9de-38aee2f0d63b",
        "cursor": {
          "ref": "80131371-aba7-4881-adbd-d0cc32577bab",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d3cc3bae-bf82-4356-bc75-36df7f3cc90c"
        },
        "item": {
          "id": "b8b03d44-8835-4cc4-b9de-38aee2f0d63b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2e5760ae-54f6-4001-b75b-38d029f652fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097575cd-8b85-49f5-9dbf-a1484c97ba39",
        "cursor": {
          "ref": "fa95f4e2-812e-4804-ab1d-6cc14b4ae2a5",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "45c33f1e-87d8-4abc-a044-328de70d306d"
        },
        "item": {
          "id": "097575cd-8b85-49f5-9dbf-a1484c97ba39",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a9e43e43-ed23-4529-8b2f-c511c875552d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51310040-b051-4c33-9ebc-2abea5caca53",
        "cursor": {
          "ref": "bbb40e69-0e1f-4bec-bd57-fb85cde1f28f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "10f8c225-d7a0-4cb8-bc8f-1fff66c6d039"
        },
        "item": {
          "id": "51310040-b051-4c33-9ebc-2abea5caca53",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "31326237-5623-448b-8e70-bde9fc1afdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4913505-492d-4e56-a550-d02448416489",
        "cursor": {
          "ref": "205d0127-0840-41bc-b43a-b68807d4e050",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "37792dcc-19f2-4aac-8b09-d5f07cfe00a1"
        },
        "item": {
          "id": "e4913505-492d-4e56-a550-d02448416489",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a046431a-1752-4753-bb74-15cf05f5faf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a3e986-e324-43e8-a0b6-54435062fb61",
        "cursor": {
          "ref": "3a1b9385-f442-499b-bc7f-0bfe831cc8b8",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6e288d43-e06f-4369-bbee-f0203dac62df"
        },
        "item": {
          "id": "65a3e986-e324-43e8-a0b6-54435062fb61",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9d716f66-72b4-40e2-a8ed-fa838119ab62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1696fe8-888d-45ea-b37e-02d097302d4c",
        "cursor": {
          "ref": "7245832f-aed8-4f61-ba3f-9d1069aa7579",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2fadda32-09e2-4e0f-8e10-e1ff049d92b6"
        },
        "item": {
          "id": "b1696fe8-888d-45ea-b37e-02d097302d4c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6edbd645-0c26-4c3b-b490-0257b900dd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de995d1c-3460-433d-9eb8-b7f72fda7065",
        "cursor": {
          "ref": "a76d537e-ffe7-4687-a187-c7719c50e9bc",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "53dfc970-1bbd-4245-bf03-c28310a903ea"
        },
        "item": {
          "id": "de995d1c-3460-433d-9eb8-b7f72fda7065",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3d560ff9-b5b5-4265-8af7-d8a02670e121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f59721-7438-440d-97c1-a080b0e51817",
        "cursor": {
          "ref": "662dfbe5-4ac6-4e96-861d-d0a4732a2f8f",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f5cc359d-214d-4ea5-b746-259f7b4b0752"
        },
        "item": {
          "id": "58f59721-7438-440d-97c1-a080b0e51817",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ad99b659-42c4-4f7f-b250-7ee2b21026a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb0dda3-000e-4af3-b7ca-b7b4296184e9",
        "cursor": {
          "ref": "f734401f-9c83-4ee1-b4c5-87e9c9390403",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7024fcc1-fc21-47a4-aa28-bf3f7a467585"
        },
        "item": {
          "id": "6eb0dda3-000e-4af3-b7ca-b7b4296184e9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1f3a75bf-99a8-4b23-adc2-1e14af99cf87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4158745d-be3d-41bf-98e5-b64b71ad3204",
        "cursor": {
          "ref": "cbc69a2e-24f0-4860-9114-8a563a4692ea",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "10b4c447-3d1b-4c41-81a0-d699f47164b4"
        },
        "item": {
          "id": "4158745d-be3d-41bf-98e5-b64b71ad3204",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "660a8356-a0f5-4b04-ab10-c41163305c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1b24cc-7209-4baa-b4a8-6461399cc380",
        "cursor": {
          "ref": "1bf40a03-a3fc-4984-8136-fcd165910a46",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "92e42d64-8f59-4495-98dc-4a444b888cdd"
        },
        "item": {
          "id": "0c1b24cc-7209-4baa-b4a8-6461399cc380",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6c8e54ae-f28c-4601-bf30-7454d2a308a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5d7900-d139-4383-a13c-625b15d5cca7",
        "cursor": {
          "ref": "a38520d3-4321-4d84-a9f5-a01317ef8cd9",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ae699aad-7f73-42d7-9f97-10455f43443c"
        },
        "item": {
          "id": "0b5d7900-d139-4383-a13c-625b15d5cca7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "786bd1fe-542b-4606-9a89-91f9fcd90208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea3b95b-6192-4398-be46-74dbe5bbba3b",
        "cursor": {
          "ref": "0c11082d-f320-4387-b740-e0b4c3b4ecb7",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "914a5150-b998-4492-8e35-105987d17b60"
        },
        "item": {
          "id": "8ea3b95b-6192-4398-be46-74dbe5bbba3b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9e6a63e0-2d8f-4623-b0a4-cd1bd0496bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be23e97e-cccf-4e30-9fc5-b161410c7af8",
        "cursor": {
          "ref": "288fe044-0600-438a-b098-1e5612612f90",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3cff353d-fedc-4b6f-86f1-a9be7de1bb5b"
        },
        "item": {
          "id": "be23e97e-cccf-4e30-9fc5-b161410c7af8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "01b8d4e2-b4b6-466a-a0a1-8c4f8d735a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bf13ff-1e11-4a55-a549-c2d9e70f6470",
        "cursor": {
          "ref": "01bf3981-14a0-47ce-b62e-1f467c023a54",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2737c25c-f5a9-4cde-95c8-22165365f668"
        },
        "item": {
          "id": "43bf13ff-1e11-4a55-a549-c2d9e70f6470",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "75fcd2c1-a2de-4597-bf06-4b8c40d57022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8696886-12a4-4e6c-946d-967b46585a81",
        "cursor": {
          "ref": "41ba243f-b1b1-4c25-9e37-8d4500b9b48d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ad54c694-7ed1-4bce-bf19-79919797672d"
        },
        "item": {
          "id": "d8696886-12a4-4e6c-946d-967b46585a81",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cf23cfbd-e919-4ad4-a5aa-574820d5d3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1c5ed1-6e8c-485b-960f-bd3d8a38937c",
        "cursor": {
          "ref": "d79c60ee-9f8b-404a-be2c-a022f0cad573",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9af6e4fd-7c4b-41c7-97e3-b30565fe45a6"
        },
        "item": {
          "id": "ce1c5ed1-6e8c-485b-960f-bd3d8a38937c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "46e4a5ed-5d68-4ea7-bd6f-0afd8b7b7d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ae1701-1d2e-4710-b6ae-6897168782a2",
        "cursor": {
          "ref": "f3f0d003-d336-49b5-a92b-d6276b7979f4",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9d627808-9ecc-4c48-9543-c9893d32b861"
        },
        "item": {
          "id": "e0ae1701-1d2e-4710-b6ae-6897168782a2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c1a26bbc-7a12-436c-8ff1-e6fb238e4d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37302fdd-3a33-4030-88e2-5b0d6ffa75e4",
        "cursor": {
          "ref": "0d46cec4-92be-4f92-9399-b1f594ddb052",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cedff481-3ec1-46dd-b2bf-a68842600cd2"
        },
        "item": {
          "id": "37302fdd-3a33-4030-88e2-5b0d6ffa75e4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f2fe023a-35e8-4613-b7cc-bed7e6de9f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8aa4245-d783-487e-82bf-aa67c1de64e2",
        "cursor": {
          "ref": "e5cf14dd-c642-45fa-b339-0c158615d1ce",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1dbeac9a-052f-4544-b0d5-c0ba6168b2e2"
        },
        "item": {
          "id": "b8aa4245-d783-487e-82bf-aa67c1de64e2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b0dd4bcd-d319-498f-a4ff-2069ad54fdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac981ab-0cde-4859-b75b-38b75533b8fc",
        "cursor": {
          "ref": "72222808-2447-4ae6-bd9e-40f07be34108",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "06d13a0e-685b-4589-ad48-9cad8bd62c80"
        },
        "item": {
          "id": "2ac981ab-0cde-4859-b75b-38b75533b8fc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "adccf867-a0d0-406a-b714-a2163f690f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4734c35-49b5-4f44-9574-47881d61158d",
        "cursor": {
          "ref": "21a9a7fc-dc43-4b73-814f-7be1cbedf4ed",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7a5c399b-92f7-4ae1-8088-e2b1aa686466"
        },
        "item": {
          "id": "c4734c35-49b5-4f44-9574-47881d61158d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "209e9a5f-b5a2-45df-a537-8bca9bc03af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a481abe-1857-4a29-b96d-de64974ea313",
        "cursor": {
          "ref": "e338fdc0-8776-4dad-ad4e-2e8544975e83",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6eff7df2-1d59-4cdd-b51e-14b119a08305"
        },
        "item": {
          "id": "9a481abe-1857-4a29-b96d-de64974ea313",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "45291644-4b53-4714-aa2a-6c22c4874366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051e9dfd-5895-4bd0-badf-f9fdbe9f40a6",
        "cursor": {
          "ref": "dfe9520d-ac3c-468b-88d7-4aea206c9d35",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0cdf040c-8ad8-4bec-a9bb-3444c2da97ea"
        },
        "item": {
          "id": "051e9dfd-5895-4bd0-badf-f9fdbe9f40a6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f02804d3-514f-4383-b235-a11487ff04cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675aad6c-b23e-4b0f-9805-c3bbf897162e",
        "cursor": {
          "ref": "e215b1fc-48f1-4878-9e0f-1cfdb92faf8f",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "abe0f194-8132-4af2-9143-0f19b1481355"
        },
        "item": {
          "id": "675aad6c-b23e-4b0f-9805-c3bbf897162e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c7a29f90-6cb4-43b2-bb54-3b2dc00849f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaeba5e-1009-478a-bf5d-39197d5ec793",
        "cursor": {
          "ref": "2fcbab5f-514c-4e86-962e-795c376cbcb5",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "33cec836-8382-4bfb-b95d-1ff80ade9168"
        },
        "item": {
          "id": "efaeba5e-1009-478a-bf5d-39197d5ec793",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "867b9820-4e67-4531-8bae-4f44ecbdeaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69467d0d-9fc0-4a13-91aa-f8ecc8ed5dfb",
        "cursor": {
          "ref": "47c3f17b-0ebf-445d-b663-fcd9548d6e63",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b263cbd8-9f6d-4daf-b973-cb41a31c26f0"
        },
        "item": {
          "id": "69467d0d-9fc0-4a13-91aa-f8ecc8ed5dfb",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9230f66d-396c-48b5-ab23-5d855b3ddbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78228d23-18e8-4e67-a35e-88b2cf256a69",
        "cursor": {
          "ref": "29b81478-d8a9-498d-8e32-94aa7bcfd473",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9ea6dcdb-a2f4-465c-a620-49c587f69a83"
        },
        "item": {
          "id": "78228d23-18e8-4e67-a35e-88b2cf256a69",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "732cedc1-436b-4a97-88ac-ca4de1292054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66962dc-833e-4e0e-85f2-61440b5de38c",
        "cursor": {
          "ref": "34bf0762-fd2e-4e60-9413-58ee8fcb7bd9",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4cfecb2d-4afd-487f-b4e5-b08bccc6fd07"
        },
        "item": {
          "id": "e66962dc-833e-4e0e-85f2-61440b5de38c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b29ca3f4-5b31-45f4-8d89-fdfdae82eb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1bc7e6-b64a-4c58-934e-001768de0939",
        "cursor": {
          "ref": "6fcf92d4-0051-4314-951e-e89d201c9475",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "62f188af-8354-4a0b-b4e5-7a5834da8f9a"
        },
        "item": {
          "id": "8e1bc7e6-b64a-4c58-934e-001768de0939",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6f2dc1c4-1459-44b8-9b04-f751e815b8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed895c5c-949e-4d7d-868a-914c71fc0a9d",
        "cursor": {
          "ref": "d766183a-0aca-4315-ace4-7b4b04067fed",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f2a2af65-8f43-4923-93a7-44323d1d6065"
        },
        "item": {
          "id": "ed895c5c-949e-4d7d-868a-914c71fc0a9d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b3c0fa99-cab4-4a9c-9b16-da976e636e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde4563b-b020-42c7-9602-f0a4015445fb",
        "cursor": {
          "ref": "9e114e45-d7ef-4d09-9e15-9502b07b1f2a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d538a503-5cf9-4d07-bfb0-3ec6ebd935bc"
        },
        "item": {
          "id": "cde4563b-b020-42c7-9602-f0a4015445fb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "89a4ed8e-ff64-4c79-b52a-c51eb68bd3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290c720e-83c1-41c8-b824-cdd9e66b4e01",
        "cursor": {
          "ref": "cfca4476-8bcb-4d61-8f60-a91a2ba7f83c",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3407a303-e39b-4b9b-8e87-a96b0e30c9ea"
        },
        "item": {
          "id": "290c720e-83c1-41c8-b824-cdd9e66b4e01",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8e6afd91-3dc1-486b-8dce-0535b26c4f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f857e981-59db-4e70-be11-c8abf7925790",
        "cursor": {
          "ref": "b4ead979-8dba-41dc-864c-8494832e1540",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "57664452-85b8-448a-ae3c-d052ecb4e09a"
        },
        "item": {
          "id": "f857e981-59db-4e70-be11-c8abf7925790",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "35727c45-6feb-4a16-bdfa-8f46dc129fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e32a5b-5c48-4154-93d8-3eb43c3f1a62",
        "cursor": {
          "ref": "f1de22f2-30dc-4553-98ab-c29a041639ca",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7e706663-1261-4062-803d-cd483f16c1cf"
        },
        "item": {
          "id": "80e32a5b-5c48-4154-93d8-3eb43c3f1a62",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6e8bf056-ed29-41a1-bc17-1cc6609c3916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70575dc-f4b8-4f1c-8288-f0f26a2ce759",
        "cursor": {
          "ref": "3178c265-72cf-4959-ad1c-3b5c794646fd",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4a531a93-0aaf-40d3-927f-7064b2de69a6"
        },
        "item": {
          "id": "c70575dc-f4b8-4f1c-8288-f0f26a2ce759",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ccc97c26-3082-421f-9218-ca47ec1f3fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b12a13c-7804-4984-86e6-6c90f1ea6380",
        "cursor": {
          "ref": "26bc33c1-3008-4d8c-8dee-64241b7fb2ad",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f079bc96-9e44-4d96-baf4-f33bb93b5688"
        },
        "item": {
          "id": "2b12a13c-7804-4984-86e6-6c90f1ea6380",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d8838842-bcaa-4cb9-b764-2e53de150d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2202c1ab-5b8d-4ee3-984e-fe54426cca41",
        "cursor": {
          "ref": "131101b8-00e6-4286-ba73-c1a5a5339b40",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e3bc396e-b2ba-43d7-86db-cca568187ef2"
        },
        "item": {
          "id": "2202c1ab-5b8d-4ee3-984e-fe54426cca41",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1c2cebba-2119-4cd8-9d97-532fe18c56f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0888119c-8d5a-4c05-b2d2-d78e4d2a32d9",
        "cursor": {
          "ref": "7c1bc2b5-dd91-404d-acbc-561f8a045a36",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "77aa523d-6dfb-4b53-b0b1-548be0ef9ee9"
        },
        "item": {
          "id": "0888119c-8d5a-4c05-b2d2-d78e4d2a32d9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d3e3dfe3-db41-4b84-b5c5-9eb8a67d2b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413b83dd-29b6-4cea-9a21-250796509cb3",
        "cursor": {
          "ref": "4961258d-2ee9-4b85-93e8-327b25e6408b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3bf54d62-a1ae-4322-8e5a-c2b57e57524f"
        },
        "item": {
          "id": "413b83dd-29b6-4cea-9a21-250796509cb3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fb956ff3-bf14-45bf-ba17-0d1071410be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ec06d3-a60d-48fd-8d3c-4cb3e52b05d7",
        "cursor": {
          "ref": "134f6abc-d4b6-41a7-89e6-78e769f1e63a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "74b75930-5a4a-4184-b5fc-f0265951d520"
        },
        "item": {
          "id": "58ec06d3-a60d-48fd-8d3c-4cb3e52b05d7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "962ab713-0652-4799-817b-edfb75b9c953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75fd1b9-b9ca-490b-bdb9-6b92cac92062",
        "cursor": {
          "ref": "5ee11fe1-bb4a-484d-919e-9393d74df8d8",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f523b8b9-5e98-4bee-acc6-fe56e4ccbde6"
        },
        "item": {
          "id": "a75fd1b9-b9ca-490b-bdb9-6b92cac92062",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a7dec1ff-c431-4711-8591-cd0cd9aac554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92ab5fa-f3fc-418e-bc79-ae683d8c0a64",
        "cursor": {
          "ref": "c5dcd59b-118d-437a-9846-314f78d52044",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9b84f866-184e-4172-a32a-ac6067343b5a"
        },
        "item": {
          "id": "e92ab5fa-f3fc-418e-bc79-ae683d8c0a64",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "81483b6a-fc01-47ee-acd8-3c210b5af83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd43bf2-408a-4823-9522-145ee4563e34",
        "cursor": {
          "ref": "59b20b67-7b94-410c-9fda-c0b8651be4ac",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "44891d69-6a46-4eea-a1ca-a7e4b0b87fcd"
        },
        "item": {
          "id": "0dd43bf2-408a-4823-9522-145ee4563e34",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5dc8be4b-67f8-48c6-a417-5228aee844bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c613ade-e081-46e5-b473-5b19b8ac0b98",
        "cursor": {
          "ref": "4fddbfdc-8692-4f60-8bdf-b74f6d9a5bd6",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "973f4bf5-82db-4e99-9619-7d9bf8c2b90b"
        },
        "item": {
          "id": "7c613ade-e081-46e5-b473-5b19b8ac0b98",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fb002cfb-ce55-4347-b965-20dd8a4e3075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db31872c-bba7-47bb-a433-5287dd0fcea1",
        "cursor": {
          "ref": "0ea66a7c-f2d3-4916-9a64-3648521b203f",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6348b3d0-d700-4097-be44-aa85e28a66e1"
        },
        "item": {
          "id": "db31872c-bba7-47bb-a433-5287dd0fcea1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "23f2e2df-f67b-4aa9-a815-54e8ebecbbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139fe920-bd71-4c5d-a590-657f5b7d300b",
        "cursor": {
          "ref": "db7c659b-e117-4006-8e4a-25d3fd310250",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ea1b35b1-0885-4aed-8769-5590eb341d68"
        },
        "item": {
          "id": "139fe920-bd71-4c5d-a590-657f5b7d300b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2bc04a4f-fe41-4a50-861c-f27d07a00422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ee37ed-4982-400a-99ac-1cd2d640263b",
        "cursor": {
          "ref": "62598c3e-6477-42b2-b26a-4b86876852af",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "cfae3200-2725-48dc-9285-a00c4da2595a"
        },
        "item": {
          "id": "13ee37ed-4982-400a-99ac-1cd2d640263b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "de5c4f3e-c8eb-4ab4-b05a-11e6be94917e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32305755-2cae-497d-9f6a-e776406e8d0b",
        "cursor": {
          "ref": "06afd4b9-b4c9-437b-9c36-9229f2263015",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "207925f1-dfdd-4154-a8a4-3d250c2ec572"
        },
        "item": {
          "id": "32305755-2cae-497d-9f6a-e776406e8d0b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a44595a1-0845-4b97-aa23-7fd1be32247a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9707ec-3dea-4f9f-8620-3ae23a962260",
        "cursor": {
          "ref": "afda6257-7206-4b15-9a11-028d5fa9a62a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "930a5097-76a5-46f2-9a52-a90ac5d85e96"
        },
        "item": {
          "id": "4d9707ec-3dea-4f9f-8620-3ae23a962260",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "53dcfa83-7b33-42a0-b4a1-67393fa9d89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12e85b2-6411-422a-995c-5a5f54dfef5e",
        "cursor": {
          "ref": "3a7f0590-6e8a-4421-8f55-a5287b8b182f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "6e0bd58c-0e53-450a-90b3-2b9096fa905b"
        },
        "item": {
          "id": "e12e85b2-6411-422a-995c-5a5f54dfef5e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5df6b762-ab15-4491-8e86-ed5ab33b8966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4124dd-8169-4e51-b30e-116737f31bcc",
        "cursor": {
          "ref": "b421509c-4ba9-4e11-8b6b-5903535db61c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "cb69b3d9-e9bc-4872-97f1-e88569dccab4"
        },
        "item": {
          "id": "3c4124dd-8169-4e51-b30e-116737f31bcc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cef80cc3-4967-486b-b57f-0a1fe3a2af96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a50419-3a6c-4dcc-8076-e7a423ea0d5e",
        "cursor": {
          "ref": "727e4af8-c720-45a7-8b0e-624630d0ab7d",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7c528d0c-67dc-428c-996d-7c7956f64e3b"
        },
        "item": {
          "id": "16a50419-3a6c-4dcc-8076-e7a423ea0d5e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6228751a-8658-46c2-bb4d-f06b482f5983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce11d77-6dd6-47af-a8de-1b99a30daf8d",
        "cursor": {
          "ref": "a1d495c4-02a5-4e36-9278-deaf6be44e59",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e0f3b8a1-32ab-4f76-ae31-355a7f93a640"
        },
        "item": {
          "id": "6ce11d77-6dd6-47af-a8de-1b99a30daf8d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "deb869d4-b0f8-4e09-837a-eba11c836b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f228b8c2-109f-425c-a291-e6d3a56e8995",
        "cursor": {
          "ref": "beae1e66-8eee-4ff2-99ff-5953c9a687b9",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "132126b6-03e7-4d77-b233-96a2f2c10761"
        },
        "item": {
          "id": "f228b8c2-109f-425c-a291-e6d3a56e8995",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a712aeb6-68f0-410f-ab1c-3bc13c62532f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2f2e5b-03b9-42f8-8b29-9589c0073cd9",
        "cursor": {
          "ref": "834bdd3c-e887-4c33-96a9-a5c4ab94dab9",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "14fb5521-cac1-443b-a20a-5b5432e800cd"
        },
        "item": {
          "id": "8a2f2e5b-03b9-42f8-8b29-9589c0073cd9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "88a62a16-1405-48c2-8374-9f32c1685a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e73cd5b-87a9-4fee-a908-bf8ad0856b83",
        "cursor": {
          "ref": "0e67650b-2aac-465f-93d3-6058c0f07e42",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0af7ffbb-bce8-431d-a034-d405157ec4a4"
        },
        "item": {
          "id": "6e73cd5b-87a9-4fee-a908-bf8ad0856b83",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8ca82a21-c552-4fd6-933e-3fc99c44d6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7844eb78-a1a9-42a3-b312-ebc40a5d2bc1",
        "cursor": {
          "ref": "1cda7c6a-b5eb-43e7-9877-d69be949a265",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0c66a75c-3991-4b66-aaf5-85069707dc08"
        },
        "item": {
          "id": "7844eb78-a1a9-42a3-b312-ebc40a5d2bc1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8f1d750d-a364-42db-8a0b-bed84c7cd55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae649914-4992-496e-9dfd-2282a9441d7c",
        "cursor": {
          "ref": "b5b6b45b-11c3-42f6-b078-1170f62e7c4d",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "742ff558-64da-4aad-ad8d-9f2225db9757"
        },
        "item": {
          "id": "ae649914-4992-496e-9dfd-2282a9441d7c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c2be1f46-6bb1-49ed-a370-c2838e30c9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd27f12-f1c5-418e-827c-711c5fe7e4dc",
        "cursor": {
          "ref": "3b28db4b-947f-464d-8a12-79bc21cd91b1",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1d4eb3ee-bffd-461f-a1e4-1f0831684b34"
        },
        "item": {
          "id": "cbd27f12-f1c5-418e-827c-711c5fe7e4dc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "28e7b496-8d7b-4835-b85b-92a16a982050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75a5dcc-0e2b-4e76-81e8-e7c08ae12715",
        "cursor": {
          "ref": "70a39df0-fab9-4e56-8a26-2776ceaa6432",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "25d524b2-a8cd-4d20-ba09-5f6d4198e07d"
        },
        "item": {
          "id": "d75a5dcc-0e2b-4e76-81e8-e7c08ae12715",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ac4ec832-5d15-4eeb-a327-d8f492e92d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7523574c-845d-4533-a01f-8fbe06df5aa3",
        "cursor": {
          "ref": "d3e39038-5a42-4b24-a7f0-fda4364900c4",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3d2d046c-6472-4e9a-b50e-4f2197c831ba"
        },
        "item": {
          "id": "7523574c-845d-4533-a01f-8fbe06df5aa3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1fc739e0-6d63-46cc-8a7f-c62d8b3769a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de69af40-8e3d-4272-bb05-4b9283b8c159",
        "cursor": {
          "ref": "8cc6e3c6-2ead-4173-91c5-d73dc882f970",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f6ec93d2-9e0a-41dc-916c-0daaf45e07a8"
        },
        "item": {
          "id": "de69af40-8e3d-4272-bb05-4b9283b8c159",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3def35a0-ca72-4ee2-8192-aa0a1c92691c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeca9f9e-49fe-4876-ba29-1b29df504c11",
        "cursor": {
          "ref": "d597b047-6437-4265-8cb2-91c9644f380f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "085e5171-dbb4-49ae-817c-cc84e2d12bf1"
        },
        "item": {
          "id": "aeca9f9e-49fe-4876-ba29-1b29df504c11",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b32b1e00-4312-4dbe-a590-3cae8b655682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb8851d-4d88-4e7f-a2b5-52a9c8f665df",
        "cursor": {
          "ref": "102887c9-b9cc-4154-a386-27c77e95050f",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4227eae3-6c23-4cae-bf70-6efbcbf8417e"
        },
        "item": {
          "id": "5bb8851d-4d88-4e7f-a2b5-52a9c8f665df",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "596ecb14-dc1b-4d2a-8cbc-8e9fe78ff184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48797f9-7871-448c-8a91-5e5aa5af7fa1",
        "cursor": {
          "ref": "1e1fbe00-29a5-430c-ae7f-4b58773a972f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1ec9d84c-6d04-4b87-ae5d-e0136217c1b7"
        },
        "item": {
          "id": "e48797f9-7871-448c-8a91-5e5aa5af7fa1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "147e727a-b008-4115-b314-0811a6d419b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2520cb1-0a9c-4870-9116-fe06245835ba",
        "cursor": {
          "ref": "3b56c8ca-c0cd-4379-af91-1fb6468da464",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3a00628b-89ce-467a-b3a1-8d23f68b4f8b"
        },
        "item": {
          "id": "f2520cb1-0a9c-4870-9116-fe06245835ba",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9ad9681e-cb3b-42da-8af4-1eb775d60509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6108b05-5168-4852-a737-e657cc855c1b",
        "cursor": {
          "ref": "6a76d93c-abcd-4835-a242-afd5e7c75622",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6125f30d-7ee3-4038-88b8-69dfd0a0efc5"
        },
        "item": {
          "id": "c6108b05-5168-4852-a737-e657cc855c1b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4496dfe4-53f7-42aa-a688-a3153f635f21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16321277-b4a9-438c-a126-c2c68174fbed",
        "cursor": {
          "ref": "b8a0ab68-dff7-4ab7-a01f-5c0803bd9be3",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "562aeb93-0dad-41b3-9fd4-9c43fa6e6204"
        },
        "item": {
          "id": "16321277-b4a9-438c-a126-c2c68174fbed",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "66c602ee-8ab4-4b10-9df7-08fbe48688f0",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f18fc9-2cf0-4b74-8c45-b3f0c32e609e",
        "cursor": {
          "ref": "feb1c4a5-adf7-4403-a69d-5651bc22a0db",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6cc01de4-b242-46ef-89ff-56a19195c7cc"
        },
        "item": {
          "id": "42f18fc9-2cf0-4b74-8c45-b3f0c32e609e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bc900284-85d3-40fd-95a2-712c9c478518",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d542d3ac-70f8-43c0-8ff2-c40bb7f9325a",
        "cursor": {
          "ref": "b48f0268-39c2-4246-8ec2-18e97210ad67",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6343b4ff-63fd-47eb-b770-61095f051f1f"
        },
        "item": {
          "id": "d542d3ac-70f8-43c0-8ff2-c40bb7f9325a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "86e932d3-fb6f-4f85-8c69-f1276ad14cbf",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e26503-775d-4122-9ac6-de3dfa96a4e7",
        "cursor": {
          "ref": "2fe7b465-450c-4fc5-85a5-8c82a9f46950",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ed2d36b1-a8ff-46e0-9800-b3c0896b2a62"
        },
        "item": {
          "id": "65e26503-775d-4122-9ac6-de3dfa96a4e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "04850e6d-c39c-4fa1-8c5a-641f2e0fd757",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e26503-775d-4122-9ac6-de3dfa96a4e7",
        "cursor": {
          "ref": "2fe7b465-450c-4fc5-85a5-8c82a9f46950",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ed2d36b1-a8ff-46e0-9800-b3c0896b2a62"
        },
        "item": {
          "id": "65e26503-775d-4122-9ac6-de3dfa96a4e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "04850e6d-c39c-4fa1-8c5a-641f2e0fd757",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605900ce-f2f3-4d06-8f75-d3f11ebbf651",
        "cursor": {
          "ref": "5eee74ab-6156-463e-80e3-b75eeb55dbce",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b15c26df-c38c-419f-98f6-f219dfe3c264"
        },
        "item": {
          "id": "605900ce-f2f3-4d06-8f75-d3f11ebbf651",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bbbb3504-3d27-48db-b7cf-94a86c1c41eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c39209-9939-44fa-bda2-3fe2c9b4ff17",
        "cursor": {
          "ref": "73231759-ac05-468a-943b-32926c3d83ff",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f67fc944-ff87-4e73-821a-fe4cb6729c2f"
        },
        "item": {
          "id": "43c39209-9939-44fa-bda2-3fe2c9b4ff17",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1e5f11aa-02df-4b58-883f-2dcc93fd9c99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}